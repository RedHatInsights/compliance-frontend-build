{"version":3,"sources":["webpack://compliance-frontend/./src/SmartComponents/CompliancePolicies/CompliancePolicies.js"],"names":["QUERY","gql","CompliancePolicies","policies","location","useLocation","createLink","to","Button","variant","useQuery","data","error","loading","refetch","useEffect","undefined","profiles","edges","map","profile","node","PageHeader","className","PageHeaderTitle","title","Main","stateValues","stateKey","length","Grid","hasGutter","mainButton"],"mappings":"6mCAmBA,IAAMA,EAAQC,IAAH,KAmCEC,EAAqB,WAC9B,IAMIC,EANEC,GAAWC,mBACXC,EAAa,kBAAC,KAAD,CAAgBC,GAAG,qBAClC,kBAAC,EAAAC,OAAD,CAAQC,QAAQ,WAAhB,sBAHgC,GAKIC,cAASV,GAA3CW,EAL8B,EAK9BA,KAAMC,EALwB,EAKxBA,MAAOC,EALiB,EAKjBA,QAASC,EALQ,EAKRA,QAS5B,OARAC,gBAAU,WAAQD,MAAc,CAACV,IAG7BO,IACAC,OAAQI,EAAWH,OAAUG,EAC7Bb,EAAWQ,EAAKM,SAASC,MAAMC,KAAI,SAAAC,GAAO,OAAIA,EAAQC,SAGnD,kBAAC,aAAD,KACH,kBAAC,EAAAC,WAAD,CAAYC,UAAU,eAClB,kBAAC,EAAAC,gBAAD,CAAiBC,MAAM,mBAE3B,kBAAC,EAAAC,KAAD,KACI,kBAAC,KAAD,CAAWC,YAAc,CAAEf,QAAOD,OAAME,YACpC,kBAAC,KAAD,CAAee,SAAS,SACpB,kBAAC,KAAD,CAAWhB,MAAOA,KAEtB,kBAAC,KAAD,CAAegB,SAAS,WACpB,kBAAC,KAAD,OAEJ,kBAAC,KAAD,CAAeA,SAAS,QAClBzB,GAAgC,IAApBA,EAAS0B,OACnB,kBAAC,EAAAC,KAAD,CAAMC,WAAS,GAAC,kBAAC,KAAD,CAAsBN,MAAM,cACxCO,WAAa1B,KACjB,kBAAC,KAAD,CAAeH,SAAWA,SAQlD","file":"js/CompliancePolicies.2502d2c46185309db452.js","sourcesContent":["import React, { useEffect } from 'react';\nimport gql from 'graphql-tag';\nimport { useLocation } from 'react-router-dom';\nimport { useQuery } from '@apollo/react-hooks';\nimport {\n    Button,\n    Grid\n} from '@patternfly/react-core';\nimport { PageHeader, PageHeaderTitle, Main } from '@redhat-cloud-services/frontend-components';\nimport { ComplianceEmptyState } from '@redhat-cloud-services/frontend-components-inventory-compliance/esm';\nimport {\n    BackgroundLink,\n    ErrorPage,\n    LoadingPoliciesTable,\n    PoliciesTable,\n    StateView,\n    StateViewPart\n} from 'PresentationalComponents';\n\nconst QUERY = gql`\n{\n    profiles(search: \"external = false and canonical = false\") {\n        edges {\n            node {\n                id\n                name\n                description\n                refId\n                complianceThreshold\n                totalHostCount\n                majorOsVersion\n                policyType\n                policy {\n                    id\n                    name\n                }\n                benchmark {\n                    id\n                    title\n                    version\n                }\n                hosts {\n                    id\n                }\n                businessObjective {\n                    id\n                    title\n                }\n            }\n        }\n    }\n}\n`;\n\nexport const CompliancePolicies = () => {\n    const location = useLocation();\n    const createLink = <BackgroundLink to='/scappolicies/new'>\n        <Button variant='primary'>Create new policy</Button>\n    </BackgroundLink>;\n    let { data, error, loading, refetch } = useQuery(QUERY);\n    useEffect(() => { refetch(); }, [location]);\n    let policies;\n\n    if (data) {\n        error = undefined; loading = undefined;\n        policies = data.profiles.edges.map(profile => profile.node);\n    }\n\n    return <React.Fragment>\n        <PageHeader className='page-header'>\n            <PageHeaderTitle title=\"SCAP policies\" />\n        </PageHeader>\n        <Main>\n            <StateView stateValues={ { error, data, loading } }>\n                <StateViewPart stateKey='error'>\n                    <ErrorPage error={error}/>\n                </StateViewPart>\n                <StateViewPart stateKey='loading'>\n                    <LoadingPoliciesTable />\n                </StateViewPart>\n                <StateViewPart stateKey='data'>\n                    { policies && policies.length === 0 ?\n                        <Grid hasGutter><ComplianceEmptyState title='No policies'\n                            mainButton={ createLink } /></Grid> :\n                        <PoliciesTable policies={ policies } />\n                    }\n                </StateViewPart>\n            </StateView>\n        </Main>\n    </React.Fragment>;\n};\n\nexport default CompliancePolicies;\n"],"sourceRoot":""}