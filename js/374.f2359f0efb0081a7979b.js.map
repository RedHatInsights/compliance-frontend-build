{"version":3,"sources":["webpack://compliance-frontend/./src/AppEntry.js"],"names":["client","ApolloClient","link","HttpLink","credentials","uri","COMPLIANCE_API_ROOT","cache","InMemoryCache","AppEntry","logger","Provider","store","init","getStore","locale","navigator","language","basename","getBaseName","window","location","pathname","ApolloProvider","propTypes","PropTypes"],"mappings":"2TAaMA,EAAS,IAAIC,KAAa,CAC5BC,KAAM,IAAIC,IAAS,CAAEC,YAAa,UAAWC,IAAKC,KAAsB,aACxEC,MAAO,IAAIC,OAGTC,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACb,kBAAC,EAAAC,SAAD,CAAUC,OAAQC,QAAKH,GAAQI,YAC3B,kBAAC,IAAD,CAAcC,OAASC,UAAUC,UAC7B,kBAAC,gBAAD,CAAQC,UAAWC,QAAYC,OAAOC,SAASC,WAC3C,kBAAC,EAAAC,eAAD,CAAgBvB,OAASA,GACrB,kBAAC,IAAD,WAOpBS,EAASe,UAAY,CACjBd,OAAQe,SAGZ","file":"js/374.f2359f0efb0081a7979b.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { IntlProvider } from 'react-intl';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport { ApolloClient, HttpLink, InMemoryCache } from 'apollo-boost';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { getBaseName } from '@redhat-cloud-services/frontend-components-utilities/helpers';\nimport { init } from 'Store';\nimport App from './App';\n\nimport { COMPLIANCE_API_ROOT } from '@/constants';\n\nconst client = new ApolloClient({\n    link: new HttpLink({ credentials: 'include', uri: COMPLIANCE_API_ROOT + '/graphql' }),\n    cache: new InMemoryCache()\n});\n\nconst AppEntry = ({ logger }) => (\n    <Provider store={ init(logger).getStore() }>\n        <IntlProvider locale={ navigator.language }>\n            <Router basename={ getBaseName(window.location.pathname) }>\n                <ApolloProvider client={ client }>\n                    <App />\n                </ApolloProvider>\n            </Router>\n        </IntlProvider>\n    </Provider>\n);\n\nAppEntry.propTypes = {\n    logger: PropTypes.any\n};\n\nexport default AppEntry;\n"],"sourceRoot":""}