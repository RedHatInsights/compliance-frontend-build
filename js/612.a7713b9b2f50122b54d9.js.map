{"version":3,"sources":["webpack://compliance-frontend/./src/Charts.scss","webpack://compliance-frontend/./src/PresentationalComponents/ReduxFormWrappers/ReduxFormWrappers.js","webpack://compliance-frontend/./src/PresentationalComponents/LoadingComplianceCards/LoadingComplianceCards.js","webpack://compliance-frontend/./src/PresentationalComponents/LoadingPoliciesTable/LoadingPoliciesTable.js","webpack://compliance-frontend/./src/PresentationalComponents/ReportCard/ReportCard.js","webpack://compliance-frontend/./src/PresentationalComponents/ReportCardGrid/ReportCardGrid.js","webpack://compliance-frontend/./src/PresentationalComponents/ErrorPage/ErrorPage.js","webpack://compliance-frontend/./src/PresentationalComponents/GreySmallText/GreySmallText.js","webpack://compliance-frontend/./src/PresentationalComponents/CheckboxGroup/CheckboxGroup.js","webpack://compliance-frontend/./src/PresentationalComponents/ProfileTypeSelect/ProfileTypeSelect.js","webpack://compliance-frontend/./src/PresentationalComponents/ComplianceScore/ComplianceScore.js","webpack://compliance-frontend/./src/PresentationalComponents/PolicyDetailsContentLoader/PolicyDetailsContentLoader.js","webpack://compliance-frontend/./src/PresentationalComponents/ReportDetailsContentLoader/ReportDetailsContentLoader.js","webpack://compliance-frontend/./src/PresentationalComponents/PolicyDetailsDescription/PolicyDetailsDescription.js","webpack://compliance-frontend/./src/PresentationalComponents/ReportDetailsDescription/ReportDetailsDescription.js","webpack://compliance-frontend/./src/PresentationalComponents/ProgressBar/ProgressBar.js","webpack://compliance-frontend/./src/PresentationalComponents/TabSwitcher/TabSwitcher.js","webpack://compliance-frontend/./src/PresentationalComponents/StateView/StateView.js","webpack://compliance-frontend/./src/PresentationalComponents/SystemsCountWarning/SystemsCountWarning.js","webpack://compliance-frontend/./src/PresentationalComponents/WarningText/WarningText.js","webpack://compliance-frontend/./src/PresentationalComponents/NoSystemsTableBody/NoSystemsTableBody.js","webpack://compliance-frontend/./src/PresentationalComponents/BackgroundLink/BackgroundLink.js","webpack://compliance-frontend/./src/PresentationalComponents/BreadcrumbLinkItem/BreadcrumbLinkItem.js","webpack://compliance-frontend/./src/Utilities/hooks/useTableSort.js","webpack://compliance-frontend/./src/PresentationalComponents/ReportsTable/Cells.js","webpack://compliance-frontend/./src/PresentationalComponents/ReportsTable/Filters.js","webpack://compliance-frontend/./src/PresentationalComponents/ReportsTable/ReportsTable.js","webpack://compliance-frontend/./src/PresentationalComponents/ReportsEmptyState/ReportsEmptyState.js","webpack://compliance-frontend/./src/PresentationalComponents/PolicyPopover/PolicyPopover.js","webpack://compliance-frontend/./src/PresentationalComponents/NoResultsTable/NoResultsTable.js","webpack://compliance-frontend/./src/PresentationalComponents/PoliciesTable/PoliciesTable.js","webpack://compliance-frontend/./src/PresentationalComponents/ProfileThresholdField/ProfileThresholdField.js","webpack://compliance-frontend/./src/PresentationalComponents/UnsupportedSSGVersion/UnsupportedSSGVersion.js","webpack://compliance-frontend/./src/PresentationalComponents/SubPageTitle/SubPageTitle.js","webpack://compliance-frontend/./src/PresentationalComponents/OperatingSystemBadge/OperatingSystemBadge.js","webpack://compliance-frontend/./src/PresentationalComponents/TabbedRules/OsVersionText.js","webpack://compliance-frontend/./src/PresentationalComponents/TabbedRules/ProfileTabContent.js","webpack://compliance-frontend/./src/PresentationalComponents/TabbedRules/TabbedRules.js","webpack://compliance-frontend/./src/SmartComponents/CreatePolicy/validate.js","webpack://compliance-frontend/./src/Utilities/TextHelper.js","webpack://compliance-frontend/./src/Utilities/helpers.js","webpack://compliance-frontend/./src/Utilities/hooks/useFilterConfig.js","webpack://compliance-frontend/./src/Charts.scss?8839"],"names":["exports","___CSS_LOADER_API_IMPORT___","push","module","id","ReduxFormTextInput","field","TextInput","value","input","defaultValue","onChange","ReduxFormTextArea","TextArea","Grid","hasGutter","map","_","key","GridItem","sm","md","lg","xl","Card","height","width","speed","primaryColor","secondaryColor","x","y","rx","ry","cx","cy","r","Table","aria-label","cells","title","rows","Array","RowLoader","colSpan","TableHeader","TableBody","ReportCard","cardTitleTruncated","setState","this","state","props","profile","policy","benchmark","majorOsVersion","compliantHostCount","testResultHostCount","refId","name","policyName","donutValues","compliancePercentage","fixedPercentage","Math","floor","widget-id","CardHeader","TextContent","span","Text","onMouseEnter","onMouseover","bind","onMouseLeave","onMouseout","style","fontWeight","component","TextVariants","Truncate","lines","version","className","display","fontSize","CardBody","textAlign","ChartDonut","data","identifier","replace","innerRadius","themeColor","ChartThemeColor","themeVariant","ChartThemeVariant","subTitle","CardFooter","Link","to","React","propTypes","ReportCardGrid","profiles","i","ErrorPage","error","networkError","statusCode","window","insights","chrome","auth","logout","NotAuthorized","serviceName","InvalidObject","size","opacity","Title","headingLevel","message","Button","variant","onClick","history","goBack","GreySmallText","children","color","CheckboxFieldArray","options","inputValue","index","label","defaultChecked","Checkbox","isChecked","includes","checked","arr","Set","splice","indexOf","handleChange","isRequired","InUseProfileLabel","Tooltip","position","content","Label","lineHeight","ProfileTypeSelect","description","disabled","rowSpan","Field","type","JSON","stringify","defaultProps","CompliantIcon","system","rulesPassed","rulesFailed","compliant","complianceScoreString","supported","score","viewBox","backgroundcolor","foregroundcolor","PolicyDetailsDescription","complianceThreshold","businessObjective","text","linkifyHtml","length","inline","policyType","PropTypes","Dt","TextListItem","TextListItemVariants","Dd","PolicyDescription","TextList","TextListVariants","ReportDetailsDescription","ProgressBar","percent","failed","ProgressVariant","Progress","ContentTab","useAnchorLevels","defaultAnchor","level","levels","useAnchor","split","currentAnchor","RoutedTabSwitcher","defaultTab","tab","eventKey","undefined","filter","c","RoutedTabs","useHistory","useLocation","pathname","Tabs","onSelect","e","preventDefault","tabToActivate","tabAnchor","hash","slice","join","activeKey","StateViewPart","stateValues","StateView","flatMap","child","stateKey","StateViewWithError","WARNING_TEXT","WithOptionalToolTip","showTooltip","TooltipPosition","SystemsCountWarning","count","WarningText","Bullseye","EmptyState","EmptyStateVariant","EmptyStateBody","BackgroundLink","desiredState","backgroundLocation","background","RouterLink","href","BreadcrumbLinkItem","BreadcrumbItem","getSortable","property","item","Name","marginRight","OperatingSystem","ssgVersion","unsupportedHostCount","CompliantSystems","measureLocation","tooltipText","marginLeft","policyNameFilter","conditionalFilterType","lowerCaseValue","toLowerCase","policyComplianceFilter","values","compliantHostsPercent","round","min","max","items","ReportsTable","columns","transforms","sortable","sortByProperty","fitContent","sortByFunction","policyTypes","uniq","operatingSystems","useFilterConfig","policyTypeFilter","operatingSystem","operatingSystemFilter","conditionalFilter","array","objects","direction","useState","sortBy","setSortBy","column","tableSort","onSort","sorted","sort","a","b","String","localeCompare","useTableSort","filtered","sortedProfiles","emptyRows","PrimaryToolbar","ComplianceEmptyState","mainButton","PolicyPopover","Popover","headerContent","footerContent","bodyContent","isInline","NoResultsTable","EmptyTable","PolicyNameCell","FILTER_CONFIGURATION","policies","PoliciesTable","FilterConfigBuilder","filterConfigBuilder","getChipBuilder","getFilterBuilder","page","itemsPerPage","activeFilters","_event","changePage","applyFilterToObjectArray","chips","removeFilterWithChip","initialDefaultState","clearAll","clearAllFilter","deleteFilter","_index","policyId","find","location","filteredPolicies","filterChips","chipBuilder","chipsFor","totalHostCount","policiesToRows","paginatedPolicies","filterConfig","buildConfiguration","onFilterUpdate","hideLabel","pagination","itemCount","dropDirection","onSetPage","setPage","onPerPageSelect","setPerPage","perPage","activeFiltersConfig","filters","onDelete","onFilterDelete","ToolbarItem","actionResolver","TableToolbar","isFooter","Pagination","PaginationVariant","withRouter","ProfileThresholdField","validThreshold","thresholdValid","previousThreshold","threshold","showTitle","explanation","titleHeader","popover","PopoverPosition","FormGroup","fieldId","validated","helperTextInvalid","helperText","handleThresholdChange","reduxForm","form","destroyOnUnmount","forceUnregisterOnUnmount","UNSUPPORTED_PLURAL_MESSAGE","marginBottom","WarningWithPopover","target","rel","supportedConfigsLink","maxWidth","WarningWithTooltip","TooltipOrPopover","tooltipProps","tooltip","Component","componentProps","showHeader","showPopupHeader","messageVariant","UnsupportedSSGVersion","showWarningIcon","showHelpIcon","iconProps","defaultStyle","cursor","SubPageTitle","OperatingSystemBadge","colorMap","default","7","8","newOsMinorVersion","osMajorVersion","osMinorVersion","ProfileSystemCount","Badge","isRead","pluralize","BENCHMARK_QUERY","gql","ProfileTabContent","handleSelect","systemCount","selectedRuleRefIds","rulesTableProps","useQuery","variables","skip","loading","rules","Spinner","SystemRulesTable","remediationsEnabled","profileRules","selectedRefIds","tabsData","profileId","TabbedRules","defaultProfileId","Tab","selectRulesTableColumns","validateBenchmarkPage","validateDetailsPage","validateRulesPage","validateSystemsPage","systemIds","fixed","withPercent","fixedValue","toFixed","singular","plural","collection","sortingByProp","propName","order","objA","objB","propA","propB","initialConfig","arrayToFilter","setActiveFilters","buildFilterString","update","hot","invalidate","oldLocals","accept","isNamedExport","p","isEqualLocals","dispose"],"mappings":"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","file":"js/612.a7713b9b2f50122b54d9.js","sourcesContent":["// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".pf-c-page__main .pf-c-page-header.pf-c-page__main-section.page-header-tabs{padding-bottom:0px !important}.pf-c-page__main .pf-c-page-header.pf-c-page__main-section .pf-l-tabs,.pf-c-page__main .pf-c-page-header.pf-c-page__main-section .pf-c-tabs{padding-top:22px}.policy-delete-header-text{padding-left:10px}.policy-delete-body-text{padding-bottom:18px}.upload-instructions{background:white}.policy-details-button{display:flex;justify-content:right}.chart-inline tspan{font-family:inherit !important}.wizard-progress-bar{text-align:left;width:var(--pf-global--breakpoint--sm)}.wizard-failed-message{color:var(--pf-global--danger-color--100);font-weight:bold;text-align:left;width:var(--pf-global--breakpoint--sm)}.wizard-failed-errors{color:var(--pf-global--danger-color--100);font-weight:normal;text-align:left;width:var(--pf-global--breakpoint--sm)}.grey-icon{color:var(--pf-global--Color--200)}button.pf-c-button.pf-m-tertiary.wizard-os-button{padding:30px;margin-right:15px;--pf-c-button--m-tertiary--focus--BorderColor: #06c;--pf-c-button--m-tertiary--hover--BorderColor: #06c}button.pf-c-button.pf-m-tertiary.active-wizard-os-button{font-weight:bold;color:#06c;--pf-c-button--m-tertiary--BorderColor: #06c;--pf-c-button--BorderWidth: 2px}.ins-c-warning-text{color:var(--pf-global--warning-color--200)}.ins-c-non-bold-h2{font-size:var(--pf-c-content--h2--FontSize);font-weight:normal}.ins-u-passed{color:var(--pf-global--success-color--200)}.ins-u-failed{color:var(--pf-global--danger-color--100)}.ins-u-warning{color:var(--pf-global--warning-color--100)}.chart-inline{display:inline-flex}.chart-container{width:462px}.card-chart-container{width:300px;height:300px;text-align:left}.VictoryContainer{bottom:100%}@media screen and (min-width: 1200px){.pf-l-grid>.pf-m-4-col-on-xl{--pf-l-grid__item--GridColumnEnd: span 6 !important}}@media screen and (min-width: 1388px){.pf-l-grid>.pf-m-4-col-on-xl{--pf-l-grid__item--GridColumnEnd: span 4 !important}}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","import React from 'react';\nimport { rawComponents } from '@data-driven-forms/pf4-component-mapper';\nimport { TextInput, TextArea } from '@patternfly/react-core';\n\nexport const ReduxFormTextInput = field => (\n    <TextInput\n        value={field.input.value || field.defaultValue}\n        onChange={field.input.onChange}\n        {...field} />\n);\n\nexport const ReduxFormTextArea = field => (\n    <TextArea\n        value={field.input.value || field.defaultValue}\n        onChange={field.input.onChange}\n        {...field} />\n);\n\nexport const ReduxFormCreatableSelectInput = field => (\n    <rawComponents.RawSelect selectVariant=\"createable\"\n        value={field.selected}\n        onChange={field.input.onChange}\n        {...field} />\n);\n","import React from 'react';\nimport {\n    Card,\n    Grid,\n    GridItem\n} from '@patternfly/react-core';\nimport ContentLoader from 'react-content-loader';\nimport _ from 'lodash';\n\nconst LoadingComplianceCards = () => (\n    <Grid hasGutter>\n        { _.range(3).map((_, key) => {\n            return <GridItem sm={12} md={12} lg={6} xl={4} key={key}>\n                <Card>\n                    <ContentLoader height={400} width={400} speed={2} primaryColor=\"#f3f3f3\" secondaryColor=\"#ecebeb\">\n                        <rect x=\"6\" y=\"31\" rx=\"4\" ry=\"4\" width=\"293\" height=\"15\" />\n                        <rect x=\"8\" y=\"15\" rx=\"3\" ry=\"3\" width=\"85\" height=\"6\" />\n                        <rect x=\"7\" y=\"112\" rx=\"3\" ry=\"3\" width=\"220\" height=\"10\" />\n                        <circle cx=\"190\" cy=\"256\" r=\"109\" />\n                        <rect x=\"8\" y=\"73\" rx=\"0\" ry=\"0\" width=\"69\" height=\"23\" />\n                        <rect x=\"47\" y=\"77\" rx=\"0\" ry=\"0\" width=\"0\" height=\"0\" />\n                        <rect x=\"36\" y=\"77\" rx=\"0\" ry=\"0\" width=\"16\" height=\"0\" />\n                    </ContentLoader>\n                </Card>\n            </GridItem>;\n        })}\n    </Grid>\n);\n\nexport default LoadingComplianceCards;\n","import React from 'react';\nimport { Table, TableHeader, TableBody } from '@patternfly/react-table';\nimport RowLoader from '@redhat-cloud-services/frontend-components-utilities/RowLoader';\n\nconst LoadingPoliciesTable = () => (\n    <Table\n        aria-label='policies-table'\n        cells={ [\n            { title: 'Policy name' },\n            { title: 'Operating system' },\n            { title: 'Systems' },\n            { title: 'Business initiative' },\n            { title: 'Compliance threshold' }\n        ] }\n        rows={ [...Array(5)].map(() => ({\n            cells: [{\n                title: <RowLoader />,\n                colSpan: 5\n            }]\n        })) }>\n        <TableHeader />\n        <TableBody />\n    </Table>\n);\n\nexport default LoadingPoliciesTable;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport {\n    Link\n} from 'react-router-dom';\nimport Truncate from 'react-truncate';\nimport {\n    Card,\n    CardHeader,\n    CardFooter,\n    CardBody,\n    Text,\n    TextContent,\n    TextVariants,\n    Grid,\n    GridItem\n} from '@patternfly/react-core';\nimport { PolicyPopover } from 'PresentationalComponents';\nimport {\n    ChartDonut,\n    ChartThemeColor,\n    ChartThemeVariant\n} from '@patternfly/react-charts';\nimport '@/Charts.scss';\nimport { fixedPercentage } from 'Utilities/TextHelper';\n\nclass ReportCard extends React.Component {\n    state = {\n        cardTitleTruncated: true\n    }\n\n    onMouseover = () => {\n        this.setState({\n            cardTitleTruncated: false\n        });\n    }\n\n    onMouseout = () => {\n        this.setState({\n            cardTitleTruncated: true\n        });\n    }\n\n    render() {\n        const { cardTitleTruncated } = this.state;\n        const {\n            policy, benchmark, majorOsVersion, compliantHostCount, testResultHostCount, refId, name, id\n        } = this.props.profile;\n        const policyName = policy ? policy.name : name;\n        let donutValues = [\n            { x: 'Compliant', y: compliantHostCount },\n            { x: 'Non-compliant', y: testResultHostCount - compliantHostCount }\n        ];\n        const compliancePercentage = fixedPercentage(Math.floor(100 *\n            (donutValues[0].y / (donutValues[0].y + donutValues[1].y))));\n\n        return (\n            <Card widget-id={refId}>\n                <CardHeader>\n                    <TextContent>\n                        <Grid>\n                            <GridItem span={11}>\n                                <Text onMouseEnter={this.onMouseover.bind(this)} onMouseLeave={this.onMouseout.bind(this)}\n                                    style={{ fontWeight: '500' }} component={TextVariants.h2}>\n                                    { cardTitleTruncated ? <Truncate lines={1}>{policyName}&nbsp;</Truncate> :\n                                        <React.Fragment>{policyName}&nbsp;</React.Fragment> }\n                                </Text>\n                            </GridItem>\n                            <GridItem span={1}>\n                                <Text style={{ fontWeight: '500' }} component={TextVariants.h2}>\n                                    { policy && <PolicyPopover profile={this.props.profile} />}\n                                </Text>\n                            </GridItem>\n                        </Grid>\n                        <Grid>\n                            <GridItem span={12}>\n                                <Text>\n                                    Operating system: RHEL { majorOsVersion }\n                                </Text>\n                            </GridItem>\n                            <GridItem span={12}>\n                                <Text>\n                                    SSG version: { benchmark.version }\n                                </Text>\n                            </GridItem>\n                            <GridItem className='pf-u-m-sm'/>\n                            <GridItem style={{ display: 'inline-flex' }} span={12}>\n                                <TextContent>\n                                    <span style={{ fontSize: '30px', fontWeight: 'bold' }}>\n                                        { compliantHostCount }\n                                    </span>\n                                    <span style={{ fontWeight: '500' }}>\n                                        {' '}of{' '}\n                                    </span>\n                                    <span style={{ fontSize: '30px', fontWeight: 'bold' }}>\n                                        { testResultHostCount }\n                                    </span>\n                                </TextContent>\n                            </GridItem>\n                            <GridItem span={12}>\n                                <Text>\n                                    Systems meet compliance threshold\n                                </Text>\n                            </GridItem>\n                        </Grid>\n                    </TextContent>\n                </CardHeader>\n                <CardBody>\n                    <Grid>\n                        <GridItem style={{ textAlign: 'center' }} span={12}>\n                            <div className='chart-inline'>\n                                <div className='card-chart-container'>\n                                    <ChartDonut data={donutValues}\n                                        identifier={name.replace(/ /g, '')}\n                                        innerRadius={122}\n                                        themeColor={ChartThemeColor.blue}\n                                        themeVariant={ChartThemeVariant.light}\n                                        title={compliancePercentage}\n                                        subTitle=\"Compliant\"\n                                        height={300}\n                                        width={300}\n                                    />\n                                </div>\n                            </div>\n                        </GridItem>\n                    </Grid>\n                </CardBody>\n                <CardFooter>\n                    <Grid>\n                        <GridItem span={6}>\n                            <TextContent>\n                                <Text component={TextVariants.small} style={{ fontSize: '16px' }} >\n                                    <Link to={'/reports/' + id} >\n                                        View report\n                                    </Link>\n                                </Text>\n                                <Text component={TextVariants.small} style={{ fontSize: '16px' }} >\n                                    <Link to={'/scappolicies/' + policy.id} >\n                                        View policy\n                                    </Link>\n                                </Text>\n                            </TextContent>\n                        </GridItem>\n                    </Grid>\n                </CardFooter>\n            </Card>\n        );\n    };\n};\n\nReportCard.propTypes = {\n    profile: propTypes.object\n};\n\nexport default ReportCard;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Grid, GridItem } from '@patternfly/react-core';\nimport { ReportCard } from 'PresentationalComponents';\n\nconst ReportCardGrid = ({ profiles }) => (\n    <Grid hasGutter>\n        { profiles.map((profile, i) => (\n            <GridItem sm={12} md={12} lg={6} xl={4} key={i}>\n                <ReportCard\n                    key={ `profile-report-card-${i}`}\n                    profile={ profile }\n                />\n            </GridItem>)) }\n    </Grid>\n);\n\nReportCardGrid.propTypes = {\n    profiles: propTypes.array\n};\n\nexport default ReportCardGrid;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport {\n    Title,\n    Button,\n    Text\n} from '@patternfly/react-core';\nimport {\n    WarningTriangleIcon\n} from '@patternfly/react-icons';\nimport InvalidObject from '@redhat-cloud-services/frontend-components/InvalidObject';\nimport NotAuthorized from '@redhat-cloud-services/frontend-components/NotAuthorized';\n\nconst ErrorPage = ({ error, ...props }) => {\n    if (error.networkError && error.networkError.statusCode === 401) {\n        window.insights.chrome.auth.logout(true);\n        return false;\n    }\n\n    if (error.networkError && error.networkError.statusCode === 403) {\n        return <NotAuthorized serviceName='Compliance' />;\n    }\n\n    if (error.networkError && error.networkError.statusCode === 404) {\n        return <InvalidObject />;\n    }\n\n    return <section {...props} className=\"pf-l-page__main-section pf-c-page__main-section ins-c-component_invalid-componet\">\n        <WarningTriangleIcon size=\"xl\" style={ { opacity: '0.5' } } />\n        <Title headingLevel='h1'>There was an error</Title>\n        <Text>\n            If you need to contact Red Hat Support about this, this is the exact error:\n            <Text>\n                { error.message }\n            </Text>\n        </Text>\n        <Button\n            variant=\"link\"\n            onClick={ history.goBack }>\n                Go back\n        </Button>\n    </section>;\n};\n\nErrorPage.propTypes = {\n    error: propTypes.object\n};\n\nexport default ErrorPage;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Text, TextVariants } from '@patternfly/react-core';\n\nexport const GreySmallText = ({ children }) => (\n    <Text\n        style={{ color: 'var(--pf-global--Color--200)' }}\n        component={ TextVariants.small }>{ children }</Text>\n);\n\nGreySmallText.propTypes = {\n    children: propTypes.node\n};\n\nexport default GreySmallText;\n","import React from 'react';\nimport { Field } from 'redux-form';\nimport propTypes from 'prop-types';\nimport { Checkbox } from '@patternfly/react-core';\n\nconst CheckboxFieldArray = ({ input, options }) => {\n    const { name, onChange } = input;\n    const inputValue = input.value;\n\n    const handleChange = (checked, value) => {\n        const arr = [...new Set(inputValue)];\n        if (checked) {\n            arr.push(value);\n        } else {\n            arr.splice(arr.indexOf(value), 1);\n        }\n\n        return onChange(arr);\n    };\n\n    return (\n        <React.Fragment>\n            {\n                options.map(({ label, value, defaultChecked }, index) => (\n                    <Checkbox key={value} id={value} label={label}\n                        name={`${name}[${index}]`} value={value}\n                        isChecked={inputValue === '' ? defaultChecked : inputValue.includes(value)}\n                        onChange={(checked) => handleChange(checked, value)}\n                    />\n                ))\n            }\n        </React.Fragment>\n    );\n};\n\nCheckboxFieldArray.propTypes = {\n    input: propTypes.shape({\n        name: propTypes.string.isRequired,\n        onChange: propTypes.func,\n        value: propTypes.string\n    }),\n    options: propTypes.arrayOf(propTypes.shape({\n        label: propTypes.string.isRequired,\n        value: propTypes.string.isRequired,\n        defaultChecked: propTypes.bool\n    })).isRequired\n};\n\nconst CheckboxGroup = (props) => (\n    <Field {...props} type=\"checkbox\" component={CheckboxFieldArray} />\n);\n\nCheckboxGroup.propTypes = {\n    options: propTypes.arrayOf(propTypes.shape({\n        label: propTypes.string.isRequired,\n        value: propTypes.string.isRequired,\n        defaultChecked: propTypes.bool\n    })).isRequired\n};\n\nexport { CheckboxFieldArray };\nexport default CheckboxGroup;\n","import React from 'react';\nimport { Field } from 'redux-form';\nimport propTypes from 'prop-types';\nimport Truncate from 'react-truncate';\nimport {\n    Grid,\n    GridItem,\n    Label,\n    TextContent,\n    TextVariants,\n    Text,\n    Tooltip\n} from '@patternfly/react-core';\n\nconst InUseProfileLabel = () => (\n    <Tooltip\n        position=\"right\"\n        content=\"A policy of this type is already in use.\n        Only one policy per policy type can be created for a major release of RHEL.\"\n    >\n        <Label style={ { lineHeight: '1.5em' } }>In use</Label>\n    </Tooltip>\n);\n\nconst ProfileTypeSelect  = ({ profiles, onClick }) => (\n    <React.Fragment>\n        <Grid hasGutter>\n            { profiles.map((profile) => {\n                const { description, name, id, disabled } = profile;\n                return (\n                    <React.Fragment key={`profile-select-${id}`}>\n                        <GridItem span={8} rowSpan={2}>\n                            <TextContent\n                                style={ {\n                                    lineHeight: '2em',\n                                    color: disabled ? 'var(--pf-c-content--blockquote--Color)' : ''\n                                } }>\n                                <Text >\n                                    <Field component='input'\n                                        type='radio'\n                                        name='profile'\n                                        value={JSON.stringify(profile)}\n                                        onClick={ () => onClick(JSON.stringify(profile)) }\n                                        disabled={ disabled }\n                                    />\n                                    { ` ${name} ` }\n                                    { disabled && <InUseProfileLabel /> }\n                                </Text>\n                            </TextContent>\n                            <TextContent style={ { color: 'var(--pf-c-content--blockquote--Color)' } }>\n                                <Text component={ TextVariants.p }>\n                                    <Truncate\n                                        key={`profile-select-text-${id}`}\n                                        lines={3}>\n                                        { description }\n                                    </Truncate>\n                                </Text>\n                            </TextContent>\n                        </GridItem>\n                    </React.Fragment>);\n            })}\n        </Grid>\n    </React.Fragment>\n);\n\nProfileTypeSelect.propTypes = {\n    profiles: propTypes.array,\n    onClick: propTypes.func\n};\n\nProfileTypeSelect.defaultProps = {\n    profiles: [],\n    onClick: () => ({})\n};\n\nexport default ProfileTypeSelect;\n","import React from 'react';\nimport {\n    QuestionCircleIcon,\n    CheckCircleIcon,\n    ExclamationCircleIcon\n} from '@patternfly/react-icons';\nimport { Tooltip } from '@patternfly/react-core';\nimport { fixedPercentage } from 'Utilities/TextHelper';\n\nconst CompliantIcon = (system) => {\n    if ((system.rulesPassed + system.rulesFailed) === 0) {\n        return <QuestionCircleIcon style={{ color: 'var(--pf-global--disabled-color--100)' }}/>;\n    } else {\n        return system.compliant ?\n            <CheckCircleIcon style={{ color: 'var(--pf-global--success-color--200)' }}/> :\n            <ExclamationCircleIcon style={{ color: 'var(--pf-global--danger-color--100)' }}/>;\n    }\n};\n\nexport const complianceScoreString = (system) => {\n    if (system.supported === false) {\n        return ' Unsupported';\n    } else if ((system.rulesPassed + system.rulesFailed) === 0) {\n        return ' N/A';\n    }\n\n    return ' ' + fixedPercentage(system.score);\n};\n\nconst ComplianceScore = (system) => (\n    <React.Fragment>\n        { system.supported ?\n            <Tooltip content={\n                'The system compliance score is calculated by OpenSCAP and ' +\n                'is a normalized weighted sum of rules selected for this policy.'\n            }>\n                <CompliantIcon key={ `system-compliance-icon-${system.id}` } { ...system } />\n                { complianceScoreString(system) }\n            </Tooltip>\n            :\n            complianceScoreString(system) }\n    </React.Fragment>\n);\n\nexport default ComplianceScore;\n","import React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nconst PolicyDetailsContentLoader = () => (\n    <ContentLoader\n        speed={2}\n        width={1000}\n        height={400}\n        viewBox='0 0 1000 400'\n        backgroundcolor='#f3f3f3'\n        foregroundcolor='#ecebeb'\n    >\n        <rect x='-3' y='7' rx='3' ry='3' width='760' height='19' />\n        <rect x='823' y='3' rx='3' ry='3' width='67' height='29' />\n        <rect x='910' y='3' rx='3' ry='3' width='67' height='29' />\n        <rect x='6' y='54' rx='0' ry='0' width='46' height='19' />\n        <rect x='68' y='54' rx='0' ry='0' width='46' height='19' />\n        <rect x='133' y='54' rx='0' ry='0' width='46' height='19' />\n        <rect x='3' y='110' rx='0' ry='0' width='255' height='17' />\n        <rect x='1' y='149' rx='0' ry='0' width='47' height='16' />\n        <rect x='1' y='185' rx='0' ry='0' width='255' height='17' />\n        <rect x='-1' y='224' rx='0' ry='0' width='187' height='16' />\n        <rect x='-4' y='267' rx='0' ry='0' width='255' height='17' />\n        <rect x='-6' y='306' rx='0' ry='0' width='47' height='16' />\n        <rect x='-6' y='342' rx='0' ry='0' width='255' height='17' />\n        <rect x='-8' y='381' rx='0' ry='0' width='187' height='16' />\n    </ContentLoader>\n);\n\nexport default PolicyDetailsContentLoader;\n","import React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nconst ReportDetailsContentLoader = () => (\n    <ContentLoader\n        height={320}\n        width={1550}\n        speed={2}\n        primaryColor=\"#f3f3f3\"\n        secondaryColor=\"#ecebeb\">\n        <rect x=\"18\" y=\"50\" rx=\"4\" ry=\"4\" width=\"478\" height=\"15\" />\n        <rect x=\"19\" y=\"18\" rx=\"3\" ry=\"3\" width=\"220\" height=\"9\" />\n        <circle cx=\"118\" cy=\"156\" r=\"73\" />\n        <rect x=\"1002\" y=\"40\" rx=\"0\" ry=\"0\" width=\"69\" height=\"23\" />\n        <rect x=\"47\" y=\"77\" rx=\"0\" ry=\"0\" width=\"0\" height=\"0\" />\n        <rect x=\"36\" y=\"77\" rx=\"0\" ry=\"0\" width=\"16\" height=\"0\" />\n        <rect x=\"409\" y=\"149\" rx=\"0\" ry=\"0\" width=\"0\" height=\"0\" />\n        <rect x=\"214\" y=\"145\" rx=\"0\" ry=\"0\" width=\"205\" height=\"9\" />\n        <rect x=\"216\" y=\"119\" rx=\"0\" ry=\"0\" width=\"205\" height=\"9\" />\n        <rect x=\"526\" y=\"100\" rx=\"0\" ry=\"0\" width=\"431\" height=\"8\" />\n        <rect x=\"526\" y=\"122\" rx=\"0\" ry=\"0\" width=\"431\" height=\"8\" />\n        <rect x=\"526\" y=\"146\" rx=\"0\" ry=\"0\" width=\"431\" height=\"8\" />\n        <rect x=\"527\" y=\"170\" rx=\"0\" ry=\"0\" width=\"431\" height=\"8\" />\n        <rect x=\"527\" y=\"194\" rx=\"0\" ry=\"0\" width=\"431\" height=\"8\" />\n        <rect x=\"527\" y=\"218\" rx=\"0\" ry=\"0\" width=\"431\" height=\"8\" />\n        <rect x=\"529\" y=\"275\" rx=\"0\" ry=\"0\" width=\"231\" height=\"7\" />\n    </ContentLoader>\n);\n\nexport default ReportDetailsContentLoader;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport { fixedPercentage } from 'Utilities/TextHelper';\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n    TextContent,\n    TextVariants,\n    Text,\n    Tooltip\n} from '@patternfly/react-core';\nimport Truncate from '@redhat-cloud-services/frontend-components/Truncate';\nimport linkifyHtml from 'linkifyjs/html';\n\nconst PolicyDetailsDescription = ({ policy }) => (\n    <Card>\n        <CardHeader>\n            <Text style={ { fontSize: 20 } }>\n                <b>Policy details</b>\n            </Text>\n        </CardHeader>\n        <CardBody>\n            <TextContent>\n                <Text component={TextVariants.h5}>\n                    Compliance threshold\n                    <Tooltip\n                        position='right'\n                        content={\n                            <React.Fragment>\n                                The compliance threshold defines what percentage of rules must be\n                                met in order for a system to be determined &quot;compliant&quot;.\n                            </React.Fragment>\n                        }\n                    >\n                        <span>\n                            &nbsp;<OutlinedQuestionCircleIcon className='grey-icon'/>\n                        </span>\n                    </Tooltip>\n                </Text>\n                <Text className='threshold-tooltip' component={TextVariants.p}>\n                    { fixedPercentage(policy.complianceThreshold, 1) }\n                </Text>\n                <Text component={TextVariants.h5}>\n                    Business objective\n                    <Tooltip\n                        position='right'\n                        content={\n                            <React.Fragment>\n                                This is an optional field that can be used to label policies that\n                                are related to specific business objectives.\n                            </React.Fragment>\n                        }\n                    >\n                        <span>\n                            &nbsp;<OutlinedQuestionCircleIcon className='grey-icon'/>\n                        </span>\n                    </Tooltip>\n                </Text>\n                <Text component={TextVariants.p}>\n                    { policy.businessObjective && policy.businessObjective.title || '-' }\n                </Text>\n                <Text component={TextVariants.h5}>Policy description</Text>\n                <Text component={TextVariants.p}>\n                    <Truncate text={linkifyHtml(policy.description || '')} length={380} inline={true} />\n                </Text>\n                <Text component={TextVariants.h5}>\n                    Operating system\n                </Text>\n                <Text component={TextVariants.p}>\n                    RHEL { policy.majorOsVersion }\n                </Text>\n                <Text component={TextVariants.h5}>Policy type </Text>\n                <Text component={TextVariants.p}>{ policy.policyType }</Text>\n                <Text component={TextVariants.h5}>Reference ID</Text>\n                <Text component={TextVariants.p}>{ policy.refId }</Text>\n            </TextContent>\n        </CardBody>\n    </Card>\n);\n\nPolicyDetailsDescription.propTypes = {\n    policy: propTypes.object\n};\n\nexport default PolicyDetailsDescription;\n","import React from 'react';\nimport { fixedPercentage } from 'Utilities/TextHelper';\nimport propTypes from 'prop-types';\nimport {\n    Text,\n    TextContent,\n    TextList,\n    TextListVariants,\n    TextListItem,\n    TextListItemVariants\n} from '@patternfly/react-core';\nimport {\n    Link\n} from 'react-router-dom';\n\nconst PropTypes = {\n    children: propTypes.node\n};\n\nconst Dt = ({ children, ...props }) => (\n    <TextListItem { ...props } component={ TextListItemVariants.dt }>\n        { children }\n    </TextListItem>\n);\nDt.propTypes = PropTypes;\n\nconst Dd = ({ children, ...props }) => (\n    <TextListItem { ...props } component={ TextListItemVariants.dd }>\n        { children }\n    </TextListItem>\n);\nDd.propTypes = PropTypes;\n\nconst PolicyDescription = ({ profile }) => (\n    <React.Fragment>\n        <TextList component={TextListVariants.dl}>\n            <Dt>\n                <Text className='ins-c-non-bold-h2'>\n                    Policy details\n                </Text>\n            </Dt>\n            <Dt>\n                Operating system\n            </Dt>\n            <Dd>\n                RHEL { profile.majorOsVersion }\n            </Dd>\n            <Dt>\n                Compliance threshold\n            </Dt>\n            <Dd>\n                { fixedPercentage(profile.complianceThreshold, 1) }\n            </Dd>\n            <Dt>\n                Business objective\n            </Dt>\n            <Dd>\n                { profile.businessObjective ? profile.businessObjective.title : '--' }\n            </Dd>\n        </TextList>\n        <Link to={'/scappolicies/' + profile.policy.id} >\n            View policy\n        </Link>\n    </React.Fragment>\n);\n\nPolicyDescription.propTypes = {\n    profile: propTypes.shape({\n        id: propTypes.string,\n        complianceThreshold: propTypes.number,\n        businessObjective: propTypes.object,\n        majorOsVersion: propTypes.number,\n        policy: propTypes.shape({\n            id: propTypes.string\n        }),\n        benchmark: propTypes.shape({\n            version: propTypes.string\n        })\n    })\n};\n\nconst ReportDetailsDescription = ({ profile }) => (\n    <TextContent className='policy-details'>\n        <PolicyDescription { ...{ profile }} />\n    </TextContent>\n);\n\nReportDetailsDescription.propTypes = {\n    profile: propTypes.object\n};\n\nexport default ReportDetailsDescription;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport {\n    Progress, ProgressVariant\n} from '@patternfly/react-core/dist/js/components/Progress';\n\nconst ProgressBar = ({ percent, failed }) => {\n    let variant;\n    let title;\n\n    if (percent === 100) {\n        title = 'Success';\n        variant = ProgressVariant.success;\n    } else if (failed) {\n        title = 'Error';\n        variant = ProgressVariant.danger;\n    } else {\n        title = 'Progress';\n        variant = ProgressVariant.info;\n    }\n\n    return <Progress\n        id={'finished-create-policy'}\n        value={percent}\n        title={title}\n        variant={variant}\n        className='wizard-progress-bar'\n    />;\n};\n\nProgressBar.propTypes = {\n    percent: propTypes.number,\n    failed: propTypes.bool\n};\n\nexport default ProgressBar;\n","import React from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport propTypes from 'prop-types';\nimport { Tabs } from '@patternfly/react-core';\nimport { useAnchor } from 'Utilities/Router';\n\nexport const ContentTab = ({ children }) => (children);\n\nconst useAnchorLevels = (defaultAnchor, level) => {\n    const anchor = useAnchor(defaultAnchor);\n    const levels = anchor.split('|');\n    const currentAnchor = levels[level] || defaultAnchor;\n\n    return {\n        levels,\n        currentAnchor\n    };\n};\n\nconst TabSwitcher = (props) => (\n    props.children.map((tab) => (\n        tab.props.eventKey === props.activeKey ? tab : undefined\n    )).filter((c) => (!!c))\n);\n\nTabSwitcher.propTypes = {\n    activeTab: propTypes.number,\n    children: propTypes.node\n};\n\nexport const RoutedTabSwitcher = ({ children, defaultTab, level }) => {\n    const { currentAnchor } = useAnchorLevels(defaultTab, level);\n\n    return children.map((tab) => (\n        tab.props.eventKey === currentAnchor ? tab : undefined\n    )).filter((c) => (!!c));\n};\n\nRoutedTabSwitcher.propTypes = {\n    children: propTypes.node,\n    defaultTab: propTypes.string,\n    level: propTypes.number\n};\n\nRoutedTabSwitcher.defaultProps = {\n    level: 0\n};\n\nexport const RoutedTabs = ({ children, defaultTab, level, ...props }) => {\n    const { push } = useHistory();\n    const { pathname, state } = useLocation();\n    const { currentAnchor, levels } = useAnchorLevels(defaultTab, level);\n    const handleTabSelect = (e, eventKey) => {\n        e.preventDefault();\n        const tabToActivate = eventKey.replace('#', '');\n        let tabAnchor = levels;\n        tabAnchor[level] = tabToActivate;\n\n        push({\n            state,\n            to: pathname,\n            hash: tabAnchor.slice(0, (level + 1)).join('|')\n        });\n    };\n\n    return <Tabs\n        { ...props }\n        onSelect={ handleTabSelect }\n        activeKey={ currentAnchor }>\n        { children }\n    </Tabs>;\n};\n\nRoutedTabs.defaultProps = {\n    level: 0\n};\n\nRoutedTabs.propTypes = {\n    children: propTypes.node,\n    defaultTab: propTypes.string,\n    level: propTypes.number\n};\n\nexport default TabSwitcher;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport {\n    ErrorPage\n} from 'PresentationalComponents';\n\nexport const StateViewPart = ({ children }) => (children);\n\nconst props = {\n    stateValues: propTypes.object,\n    children: propTypes.node\n};\n\nexport const StateView = ({ stateValues, children }) => (\n    children.flatMap((c) => (c)).filter((child) => (\n        stateValues[child.props.stateKey]\n    ))\n);\n\nStateView.propTypes = props;\n\nexport const StateViewWithError = ({ stateValues, children }) => (\n    <StateView stateValues={ stateValues }>\n        <StateViewPart key='error-state' stateKey='error'>\n            <ErrorPage error={ stateValues.error } />\n        </StateViewPart>\n        { children }\n    </StateView>\n);\n\nStateViewWithError.propTypes = props;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport {\n    Tooltip,\n    TooltipPosition\n} from '@patternfly/react-core';\nimport {\n    WarningText\n} from 'PresentationalComponents';\n\nconst WARNING_TEXT = 'Policies without systems will not have reports.';\n\nconst WithOptionalToolTip = ({ showTooltip, children }) => (\n    showTooltip ? <Tooltip\n        position={ TooltipPosition.bottom }\n        content={ WARNING_TEXT }>\n        { children }\n    </Tooltip> : children\n);\n\nWithOptionalToolTip.propTypes = {\n    showTooltip: propTypes.bool,\n    children: propTypes.node\n};\n\nconst SystemsCountWarning = ({ count, variant }) => {\n    let text;\n\n    switch (variant) {\n        case 'count':\n            text = count;\n            break;\n        case 'compact':\n            text = 'No Systems';\n            break;\n        case 'full':\n            text = WARNING_TEXT;\n            break;\n        default:\n            text = count;\n    }\n\n    return <WithOptionalToolTip showTooltip={ variant === 'count' || variant === 'compact' }>\n        <WarningText>\n            { text }\n        </WarningText>\n    </WithOptionalToolTip>;\n};\n\nSystemsCountWarning.defaultProps = {\n    variant: 'compact'\n};\n\nSystemsCountWarning.propTypes = {\n    count: propTypes.number.isRequired,\n    variant: propTypes.string\n};\n\nexport { WARNING_TEXT };\nexport default SystemsCountWarning;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport {\n    Text\n} from '@patternfly/react-core';\nimport {\n    ExclamationTriangleIcon\n} from '@patternfly/react-icons';\n\nconst WarningText = ({ children }) => (\n    <React.Fragment>\n        <ExclamationTriangleIcon className='ins-u-warning'/>\n        <Text component=\"span\" className='ins-c-warning-text'>\n            &nbsp;{ children }\n        </Text>\n    </React.Fragment>\n);\n\nWarningText.propTypes = {\n    children: propTypes.node\n};\n\nexport default WarningText;\n","import React from 'react';\nimport {\n    EmptyStateBody, EmptyState, EmptyStateVariant, Text, TextContent, TextVariants, Title, Bullseye\n} from '@patternfly/react-core';\nimport {\n    ExclamationTriangleIcon\n} from '@patternfly/react-icons';\nimport {\n    WARNING_TEXT\n} from 'PresentationalComponents';\n\nconst NoSystemsTableBody = () => (\n    <Bullseye>\n        <EmptyState variant={ EmptyStateVariant.full }>\n            <Title headingLevel=\"h2\" size='lg' style={ { fontWeight: 'bold' }}>\n                No systems on this policy\n            </Title>\n            <EmptyStateBody>\n                <TextContent>\n                    <Text component={ TextVariants.p }>\n                        Add systems to this policy from the systems page\n                    </Text>\n                    <Text style={ { color: 'var(--pf-global--warning-color--100)' }}>\n                        <ExclamationTriangleIcon /> { WARNING_TEXT }\n                    </Text>\n                </TextContent>\n            </EmptyStateBody>\n        </EmptyState>\n    </Bullseye>\n);\n\nexport default NoSystemsTableBody;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst BackgroundLink = ({\n    to, hash, children, state: desiredState, backgroundLocation, ...props\n}) => {\n    const currentLocation = useLocation();\n    const background = { ...currentLocation, ...backgroundLocation };\n    const state = { ...desiredState, background };\n\n    return <Link\n        to={{ pathname: to, state, hash }}\n        { ...props }>\n        { children }\n    </Link>;\n};\n\nBackgroundLink.propTypes = {\n    backgroundLocation: propTypes.object,\n    children: propTypes.node,\n    hash: propTypes.string,\n    state: propTypes.object,\n    to: propTypes.string.isRequired\n};\n\nexport default BackgroundLink;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Link as ReactRouterLink } from 'react-router-dom';\nimport { BreadcrumbItem } from '@patternfly/react-core';\n\nconst RouterLink = ({ href, ...props }) => (\n    <ReactRouterLink { ...props } to={ href } />\n);\n\nRouterLink.propTypes = {\n    href: propTypes.string\n};\n\nconst BreadcrumbLinkItem = ({ children, ...props }) => (\n    <BreadcrumbItem { ...props } component={ RouterLink }>\n        { children}\n    </BreadcrumbItem>\n);\n\nBreadcrumbLinkItem.propTypes = {\n    children: propTypes.node\n};\n\nexport default BreadcrumbLinkItem;\n","import { useState } from 'react';\n\nconst getSortable = (property, item) => {\n    if (typeof(property) === 'function') {\n        return property(item);\n    } else {\n        return item[property];\n    }\n};\n\nexport const orderArrayByProp = (property, objects, direction) => (\n    objects.sort((a, b) => {\n        if (direction === 'asc') {\n            return String(getSortable(property, a)).localeCompare(String(getSortable(property, b)));\n        } else {\n            return -String(getSortable(property, a)).localeCompare(String(getSortable(property, b)));\n        }\n    })\n);\n\nexport const orderByArray = (objectArray, orderProp, orderArray, direction) => (\n    (direction !== 'asc' ? orderArray.reverse() : orderArray).flatMap((orderKey) => (\n        objectArray.filter((item) => (item[orderProp] === orderKey))\n    ))\n);\n\nconst useTableSort = (array, columns) => {\n    const [sortBy, setSortBy] = useState({\n        index: 0,\n        direction: 'desc'\n    });\n    const column = columns[sortBy.index];\n    const onSort = (_, index, direction) => (\n        setSortBy({\n            index,\n            direction\n        })\n    );\n\n    return {\n        tableSort: {\n            onSort,\n            sortBy\n        },\n        sorted: orderArrayByProp(\n            (column?.sortByProperty || column?.sortByFunction), array, sortBy.direction\n        )\n    };\n};\n\nexport default useTableSort;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { TextContent, Text, Progress } from '@patternfly/react-core';\nimport { Link } from 'react-router-dom';\nimport { PolicyPopover, GreySmallText, UnsupportedSSGVersion, OperatingSystemBadge } from 'PresentationalComponents';\n\nexport const Name = (profile) => (\n    <TextContent>\n        <Link to={'/reports/' + profile.id} style={ { marginRight: '.5rem' }}>\n            { profile.policy.name }\n        </Link>\n        <React.Fragment>\n            <PolicyPopover { ...{ profile, position: 'right' } } />\n            <GreySmallText>{ profile.policyType }</GreySmallText>\n        </React.Fragment>\n    </TextContent>\n);\n\nName.propTypes = {\n    profile: propTypes.object\n};\n\nexport const OperatingSystem = ({ majorOsVersion, ssgVersion, unsupportedHostCount, policy }) => {\n    const supported = unsupportedHostCount === 0;\n    ssgVersion = 'SSG: ' + ssgVersion;\n\n    return <React.Fragment>\n        <OperatingSystemBadge { ...{ majorOsVersion } } />\n        { policy === null && ssgVersion && <Text>\n            <GreySmallText>\n                { supported ? ssgVersion : <UnsupportedSSGVersion>{ ssgVersion }</UnsupportedSSGVersion> }\n            </GreySmallText>\n        </Text> }\n    </React.Fragment>;\n};\n\nOperatingSystem.propTypes = {\n    majorOsVersion: propTypes.number,\n    ssgVersion: propTypes.string,\n    unsupportedHostCount: propTypes.number,\n    policy: propTypes.object\n};\n\nexport const CompliantSystems = ({ testResultHostCount = 0, compliantHostCount = 0, unsupportedHostCount = 0 }) => {\n    const tooltipText = 'Insights cannot provide a compliance score for systems running an unsupported ' +\n        'version of the SSG at the time this report was created, as the SSG version was not supported by RHEL.';\n    return <React.Fragment>\n        <Progress\n            measureLocation={ 'outside' }\n            value={ testResultHostCount ? (100 / testResultHostCount) * compliantHostCount : 0 } />\n        <GreySmallText>\n            { `${ compliantHostCount } of ${ testResultHostCount } systems ` }\n\n            { unsupportedHostCount > 0 && <UnsupportedSSGVersion { ...{ tooltipText } } style={ { marginLeft: '.5em' } }>\n                <strong className='ins-c-warning-text'>{ unsupportedHostCount } unsupported</strong>\n            </UnsupportedSSGVersion> }\n        </GreySmallText>\n    </React.Fragment>;\n};\n\nCompliantSystems.propTypes = {\n    testResultHostCount: propTypes.number,\n    compliantHostCount: propTypes.number,\n    unsupportedHostCount: propTypes.number\n};\n","import { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\n\nexport const policyNameFilter = [{\n    type: conditionalFilterType.text,\n    label: 'Policy name',\n    filter: (profiles, value) => {\n        const lowerCaseValue = value.toLowerCase();\n        return profiles.filter((profile) => (\n            [\n                profile.name,\n                profile.policy.name\n            ].join().toLowerCase().includes(lowerCaseValue)\n        ));\n    }\n}];\n\nexport const policyTypeFilter = (policyTypes) => ([{\n    type: conditionalFilterType.checkbox,\n    label: 'Policy type',\n    filter: (profiles, values) => (\n        profiles.filter(({ policyType }) => values.includes(policyType))\n    ),\n    items: policyTypes.map((policyType) => ({\n        label: policyType,\n        value: policyType\n    }))\n}]);\n\nexport const operatingSystemFilter = (operatingSystems) => ([{\n    type: conditionalFilterType.checkbox,\n    label: 'Operating system',\n    filter: (profiles, values) => (\n        profiles.filter(({ majorOsVersion }) => (\n            values.includes(majorOsVersion)\n        ))\n    ),\n    items: operatingSystems.map((operatingSystem) => ({\n        label: `RHEL ${operatingSystem}`,\n        value: operatingSystem\n    }))\n}]);\n\nexport const policyComplianceFilter = [{\n    type: conditionalFilterType.checkbox,\n    label: 'Systems meeting compliance',\n    filter: (profiles, values) => (\n        profiles.filter(({ testResultHostCount, compliantHostCount }) => {\n            const compliantHostsPercent = Math.round((100 / testResultHostCount) * compliantHostCount);\n            const matching = values.map((value) => {\n                const [min, max] = value.split('-');\n                return compliantHostsPercent >= min && compliantHostsPercent <= max;\n            }).filter((i) => (!!i));\n            return matching.length > 0;\n        })\n    ),\n    items: [\n        { label: '90 - 100%', value: '90-100' },\n        { label: '70 - 89%', value: '70-89' },\n        { label: '50 - 69%', value: '50-69' },\n        { label: 'Less than 50%', value: '0-49' }\n    ]\n}];\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Table, TableBody, TableHeader, sortable, fitContent } from '@patternfly/react-table';\nimport PrimaryToolbar from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport { emptyRows } from 'PresentationalComponents';\nimport useFilterConfig from 'Utilities/hooks/useFilterConfig';\nimport useTableSort from 'Utilities/hooks/useTableSort';\nimport { Name, OperatingSystem, CompliantSystems } from './Cells';\nimport { uniq } from 'Utilities/helpers';\nimport {\n    policyNameFilter, policyTypeFilter, operatingSystemFilter, policyComplianceFilter\n} from './Filters';\n\nconst ReportsTable = ({ profiles }) => {\n    const columns = [\n        {\n            title: 'Policy',\n            transforms: [sortable],\n            sortByProperty: 'name',\n            props: {\n                width: 55\n            }\n        },\n        {\n            title: 'Operating system',\n            transforms: [sortable, fitContent],\n            sortByProperty: 'majorOsVersion',\n            props: {\n                width: 20\n            }\n        },\n        {\n            title: 'Systems meeting compliance',\n            transforms: [sortable, fitContent],\n            sortByFunction: ({ testResultHostCount, compliantHostCount }) => (\n                (100 / testResultHostCount) * compliantHostCount\n            ),\n            props: {\n                width: 25\n            }\n        }\n    ];\n    const policyTypes = uniq(profiles.map(({ policyType }) => (policyType)).filter((i) => (!!i)));\n    const operatingSystems = uniq(profiles.map(({ majorOsVersion }) => (majorOsVersion)).filter((i) => (!!i)));\n    const { conditionalFilter, filtered: filteredProfiles } = useFilterConfig([\n        ...policyNameFilter,\n        ...policyTypes.length > 0 && policyTypeFilter(policyTypes) || [],\n        ...operatingSystems.length > 0 && operatingSystemFilter(operatingSystems) || [],\n        ...policyComplianceFilter\n    ], profiles);\n    const { tableSort, sorted: sortedProfiles } = useTableSort(filteredProfiles, columns);\n    const rows = sortedProfiles.length > 0 ? sortedProfiles.map((profile) => ({\n        cells: [\n            { title: <Name { ...profile } /> },\n            { title: <OperatingSystem { ...profile } /> },\n            { title: <CompliantSystems { ...profile } /> }\n        ]\n    })) : emptyRows;\n\n    return <React.Fragment>\n        <PrimaryToolbar { ...conditionalFilter } />\n        <Table\n            aria-label='Reports'\n            cells={ columns }\n            rows={ rows }\n            { ...tableSort }>\n            <TableHeader />\n            <TableBody />\n        </Table>\n    </React.Fragment>;\n};\n\nReportsTable.propTypes = {\n    profiles: propTypes.array\n};\n\nexport default ReportsTable;\n","import React from 'react';\nimport { Button } from '@patternfly/react-core';\nimport ComplianceEmptyState from '@redhat-cloud-services/frontend-components-inventory-compliance/ComplianceEmptyState';\nimport { BackgroundLink } from 'PresentationalComponents';\n\nconst ReportsEmptyState = () => (\n    <ComplianceEmptyState\n        title={ 'No policies are reporting' }\n        mainButton={ <BackgroundLink to='/scappolicies/new'>\n            <Button variant='primary'>Create new policy</Button>\n        </BackgroundLink> }\n    />\n);\n\nexport default ReportsEmptyState;\n","import React from 'react';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport {\n    Button,\n    Popover,\n    Text,\n    TextList,\n    TextListVariants,\n    TextListItem,\n    TextListItemVariants,\n    TextContent,\n    TextVariants\n} from '@patternfly/react-core';\nimport { fixedPercentage } from 'Utilities/TextHelper';\nimport {\n    Link\n} from 'react-router-dom';\nimport propTypes from 'prop-types';\n\nconst PolicyPopover = ({ profile, position = 'top' }) => {\n    const { policy, policyType, complianceThreshold, majorOsVersion, businessObjective } = profile;\n    return (\n        <Popover\n            { ...{ position } }\n            headerContent={\n                <TextContent>\n                    { policy.name }\n                    <Text component={ TextVariants.small }>{ policyType }</Text>\n                </TextContent>\n            }\n            footerContent={\n                <Link to={'/scappolicies/' + policy.id} >\n                    View policy\n                </Link>\n            }\n            bodyContent={\n                <TextContent className='policy-details'>\n                    <TextList component={TextListVariants.dl}>\n                        <TextListItem component={TextListItemVariants.dt}>\n                            Operating system\n                        </TextListItem>\n                        <TextListItem component={TextListItemVariants.dd}>\n                            RHEL { majorOsVersion }\n                        </TextListItem>\n                        <TextListItem component={TextListItemVariants.dt}>\n                            Policy SSG version\n                        </TextListItem>\n                        <TextListItem component={TextListItemVariants.dd}>\n                            { policy && policy.benchmark && policy.benchmark.version }\n                        </TextListItem>\n                        <TextListItem component={TextListItemVariants.dt}>\n                            Compliance threshold\n                        </TextListItem>\n                        <TextListItem component={TextListItemVariants.dd}>\n                            { fixedPercentage(complianceThreshold, 1) }\n                        </TextListItem>\n                        { businessObjective &&\n                        <React.Fragment>\n                            <TextListItem component={TextListItemVariants.dt}>\n                                Business objective\n                            </TextListItem>\n                            <TextListItem component={TextListItemVariants.dd}>\n                                { businessObjective.title }\n                            </TextListItem>\n                        </React.Fragment> }\n                    </TextList>\n                </TextContent>\n            }\n        >\n            <Button variant=\"link\" isInline>\n                <OutlinedQuestionCircleIcon className='grey-icon'/>\n            </Button>\n        </Popover>\n    );\n};\n\nPolicyPopover.propTypes = {\n    profile: propTypes.object,\n    position: propTypes.string\n};\n\nexport default PolicyPopover;\n","import React from 'react';\nimport {\n    Bullseye, EmptyState, EmptyStateBody, EmptyStateVariant, Title\n} from '@patternfly/react-core';\nimport EmptyTable from '@redhat-cloud-services/frontend-components/EmptyTable';\n\nconst NoResultsTable = () => (\n    <EmptyTable>\n        <Bullseye>\n            <EmptyState variant={ EmptyStateVariant.full }>\n                <Title headingLevel=\"h5\" size=\"lg\">\n                    No matching policies found\n                </Title>\n                <EmptyStateBody>\n                    This filter criteria matches no policies. <br /> Try changing your filter settings.\n                </EmptyStateBody>\n            </EmptyState>\n        </Bullseye>\n    </EmptyTable>\n);\n\nexport const emptyRows = [{\n    cells: [\n        {\n            title: () => (<NoResultsTable />),  // eslint-disable-line\n            props: {\n                colSpan: 3\n            }\n        }\n    ]\n}];\n\nexport default NoResultsTable;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Table, TableHeader, TableBody, fitContent } from '@patternfly/react-table';\nimport { Button, Pagination, PaginationVariant, ToolbarItem, TextContent } from '@patternfly/react-core';\nimport PrimaryToolbar from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport TableToolbar from '@redhat-cloud-services/frontend-components/TableToolbar';\nimport { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\nimport { FilterConfigBuilder } from '@redhat-cloud-services/frontend-components-inventory-compliance/Utilities';\nimport {\n    BackgroundLink, GreySmallText, SystemsCountWarning, emptyRows, OperatingSystemBadge\n} from 'PresentationalComponents';\n\nexport const PolicyNameCell = ({ profile }) => (\n    <TextContent>\n        <Link to={'/scappolicies/' + profile.id}>{ profile.policy.name }</Link>\n        <GreySmallText>{ profile.policyType }</GreySmallText>\n    </TextContent>\n);\n\nPolicyNameCell.propTypes = {\n    profile: propTypes.object\n};\n\nconst policiesToRows = (policies) => (\n    policies.map((policy) => (\n        {\n            policyId: policy.id,\n            cells: [\n                { title: <PolicyNameCell profile={policy} /> },\n                { title: <OperatingSystemBadge majorOsVersion={ policy.majorOsVersion } /> },\n                { title: policy.totalHostCount > 0 ? policy.totalHostCount :\n                    <SystemsCountWarning count={ policy.totalHostCount } variant='count' /> },\n                policy.businessObjective && policy.businessObjective.title || '--',\n                `${policy.complianceThreshold}%`\n            ]\n        }\n    ))\n);\n\nconst FILTER_CONFIGURATION = [\n    {\n        type: conditionalFilterType.text,\n        label: 'Name',\n        filter: (policies, value) => (\n            policies.filter((policy) => policy.name.includes(value))\n        )\n    }\n];\n\nexport class PoliciesTable extends React.Component {\n    filterConfigBuilder = new FilterConfigBuilder(FILTER_CONFIGURATION);\n    chipBuilder = this.filterConfigBuilder.getChipBuilder();\n    filterBuilder = this.filterConfigBuilder.getFilterBuilder();\n    columns = [\n        { title: 'Name' },\n        { title: 'Operating system' },\n        { title: 'Systems' },\n        { title: 'Business objective', transforms: [fitContent] },\n        { title: 'Compliance threshold', transforms: [fitContent] }\n    ]\n    state = {\n        page: 1,\n        itemsPerPage: 10,\n        activeFilters: {}\n    }\n\n    setPage = (_event, page) => (\n        this.changePage(page, this.state.itemsPerPage)\n    )\n\n    setPerPage = (_event, itemsPerPage) => (\n        this.changePage(1, itemsPerPage)\n    )\n\n    changePage = (page, itemsPerPage) => (\n        this.setState({\n            page,\n            itemsPerPage\n        })\n    )\n\n    paginatedPolicies = (policies) => (\n        policies.slice(\n            (this.state.page - 1) * this.state.itemsPerPage,\n            this.state.page * this.state.itemsPerPage\n        )\n    )\n\n    filteredPolicies = () => (\n        this.filterConfigBuilder.applyFilterToObjectArray(\n            this.props.policies, this.state.activeFilters\n        )\n    )\n\n    onFilterUpdate = (filter, value) => {\n        this.setState({\n            page: 1,\n            activeFilters: {\n                ...this.state.activeFilters,\n                [filter]: value\n            }\n        });\n    }\n\n    deleteFilter = (chips) => {\n        const activeFilters =  this.filterConfigBuilder.removeFilterWithChip(\n            chips, this.state.activeFilters\n        );\n        this.setState({\n            activeFilters\n        });\n    }\n\n    clearAllFilter = () => (\n        this.setState({\n            activeFilters: this.filterConfigBuilder.initialDefaultState()\n        })\n    )\n\n    onFilterDelete = (_event, chips, clearAll = false) => (\n        clearAll ? this.clearAllFilter() : this.deleteFilter(chips[0])\n    )\n\n    actionResolver = () => ([\n        {\n            title: 'Delete policy',\n            onClick: (_event, _index, { policyId }) => {\n                const policy = this.props.policies.find((policy) => (\n                    policy.id === policyId\n                ));\n                this.props.history.push(`/scappolicies/${ policyId }/delete`, {\n                    policy,\n                    background: this.props.location\n                });\n            }\n        },\n        {\n            title: 'Edit policy',\n            onClick: (_event, _index, { policyId }) => {\n                const policy = this.props.policies.find((policy) => (\n                    policy.id === policyId\n                ));\n                this.props.history.push(`/scappolicies/${ policyId }/edit`, {\n                    policy,\n                    background: this.props.location,\n                    state: { policy }\n                });\n            }\n        }\n    ]);\n\n    render() {\n        const { page, itemsPerPage } = this.state;\n        const policies = this.filteredPolicies();\n        const filterChips = this.chipBuilder.chipsFor(this.state.activeFilters);\n        const rows = policiesToRows(this.paginatedPolicies(policies));\n        const filterConfig = this.filterConfigBuilder.buildConfiguration(\n            this.onFilterUpdate,\n            this.state.activeFilters,\n            { hideLabel: true }\n        );\n        const pagination = {\n            page,\n            itemCount: policies.length,\n            dropDirection: 'down',\n            onSetPage: this.setPage,\n            onPerPageSelect: this.setPerPage,\n            perPage: itemsPerPage\n        };\n\n        return <React.Fragment>\n            <PrimaryToolbar\n                filterConfig={ filterConfig }\n                activeFiltersConfig={{\n                    filters: filterChips,\n                    onDelete: this.onFilterDelete\n                }}\n                pagination={{\n                    ...pagination,\n                    dropDirection: 'down'\n                }}>\n                <ToolbarItem>\n                    <BackgroundLink to='/scappolicies/new'>\n                        <Button variant='primary'>Create new policy</Button>\n                    </BackgroundLink>\n                </ToolbarItem>\n                <ToolbarItem>\n                    { policies.length } results\n                </ToolbarItem>\n            </PrimaryToolbar>\n            <Table\n                aria-label='policies'\n                className='compliance-policies-table'\n                cells={ this.columns }\n                actionResolver={ rows.length > 0 && this.actionResolver }\n                rows={ (rows.length === 0) ? emptyRows : rows }>\n                <TableHeader />\n                <TableBody />\n            </Table>\n            <TableToolbar isFooter className=\"ins-c-inventory__table--toolbar\">\n                <Pagination\n                    { ...pagination }\n                    dropDirection='up'\n                    variant={ PaginationVariant.bottom }\n                />\n            </TableToolbar>\n        </React.Fragment>;\n    }\n}\n\nPoliciesTable.propTypes = {\n    policies: propTypes.array.isRequired,\n    history: propTypes.object.isRequired,\n    location: propTypes.object.isRequired\n};\n\nPoliciesTable.defaultProps = {\n    policies: []\n};\n\nexport { policiesToRows };\n\nexport default withRouter(PoliciesTable);\n","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { FormGroup, Title, Popover, PopoverPosition } from '@patternfly/react-core';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport { ReduxFormTextInput } from 'PresentationalComponents/ReduxFormWrappers/ReduxFormWrappers';\nimport propTypes from 'prop-types';\nimport round from 'lodash/round';\nimport { thresholdValid } from '../../SmartComponents/CreatePolicy/validate';\n\nexport class ProfileThresholdField extends React.Component {\n    state = {\n        validThreshold: thresholdValid(this.props.previousThreshold),\n        threshold: round(this.props.previousThreshold || 100, 1)\n    };\n\n    handleThresholdChange = (threshold) => (\n        this.setState({\n            validThreshold: thresholdValid(threshold),\n            threshold: round(threshold, 1)\n        })\n    )\n\n    render() {\n        const { threshold, validThreshold } = this.state;\n        const { showTitle } = this.props;\n        const explanation = <React.Fragment>The compliance threshold defines what percentage of rules\n            must be met in order for a system to be determined &quot;compliant&quot;.</React.Fragment>;\n        const titleHeader = <Title headingLevel=\"h3\" size=\"xl\">Compliance threshold</Title>;\n        const title = <React.Fragment>\n            { titleHeader }\n            { explanation }\n        </React.Fragment>;\n        const popover = <Popover\n            position={PopoverPosition.top}\n            headerContent={titleHeader}\n            bodyContent={explanation}\n        >\n            <OutlinedQuestionCircleIcon />\n        </Popover>;\n\n        return (\n            <React.Fragment>\n                { showTitle && title }\n                <FormGroup fieldId='policy-threshold'\n                    validated={ validThreshold ? 'default' : 'error' }\n                    helperTextInvalid='Threshold has to be a number between 0 and 100'\n                    helperText=\"A value of 95% or higher is recommended\"\n                    label={<React.Fragment>Compliance threshold (%) {!showTitle && popover}</React.Fragment>}>\n                    <Field name='complianceThreshold' id='complianceThreshold' isRequired={true}\n                        onChange={this.handleThresholdChange}\n                        validated={ validThreshold ? 'default' : 'error' }\n                        defaultValue={threshold}\n                        aria-label=\"compliance threshold\"\n                        component={ReduxFormTextInput} type='number'\n                        style={ { width: '60%', display: 'block' } } />\n                </FormGroup>\n            </React.Fragment>\n        );\n    }\n}\n\nProfileThresholdField.propTypes = {\n    previousThreshold: propTypes.number,\n    showTitle: propTypes.bool\n};\n\nexport default reduxForm({\n    form: 'policyForm',\n    destroyOnUnmount: false,\n    forceUnregisterOnUnmount: true\n})(ProfileThresholdField);\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Popover, Tooltip, Text } from '@patternfly/react-core';\nimport { ExclamationTriangleIcon, OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport { supportedConfigsLink } from '@redhat-cloud-services/frontend-components-inventory-compliance';\n\nconst UNSUPPORTED_SINGULAR_MESSAGE =\n    'This system was using an incompatible version of the SSG at the time this report was generated. ' +\n    'Assessment of rules failed/passed on this system is a best-guess effort and may not be accurate.';\nconst UNSUPPORTED_PLURAL_MESSAGE = <React.Fragment>\n    <Text variant='p' style={ { marginBottom: '1rem' } }>\n        These systems are running unsupported versions of the SCAP Security Guide (SSG) for the version of RHEL installed on them.\n        Assessment of rules failed/passed on these systems is a best-guess effort and may not be accurate.\n    </Text>\n    <Text variant='p'>\n        The policy&apos;s compliance score excludes these systems.\n    </Text>\n</React.Fragment>;\n\nconst WarningWithPopover = ({ children, variant = 'plural' }) => {\n    const headerContent = 'Unsupported SSG versions';\n    const bodyContent = variant === 'plural' ? UNSUPPORTED_PLURAL_MESSAGE : UNSUPPORTED_SINGULAR_MESSAGE;\n    const footerContent = <a target='_blank' rel='noopener noreferrer' href={ supportedConfigsLink }>Supported SSG versions</a>;\n\n    return <Popover id='unsupported-popover' maxWidth='25rem'\n        { ...{ headerContent, bodyContent, footerContent } } >\n        { children }\n    </Popover>;\n};\n\nWarningWithPopover.propTypes = {\n    children: propTypes.node,\n    variant: propTypes.oneOf(['singular', 'plural'])\n};\n\nconst WarningWithTooltip = ({ children, content }) => (\n    <Tooltip content={ content } position='bottom'>\n        { children }\n    </Tooltip>\n);\n\nWarningWithTooltip.propTypes = {\n    content: propTypes.string,\n    children: propTypes.node\n};;\n\nconst TooltipOrPopover = ({ variant, children, tooltipProps }) => {\n    const { Component, componentProps } = {\n        tooltip: {\n            Component: WarningWithTooltip,\n            componentProps: tooltipProps\n        },\n        popover: {\n            Component: WarningWithPopover,\n            componentProps: {\n                showHeader: tooltipProps.showPopupHeader,\n                variant: tooltipProps.messageVariant\n            }\n        }\n    }[variant];\n\n    return <Component { ...componentProps }>\n        { children }\n    </Component>;\n};\n\nTooltipOrPopover.propTypes = {\n    children: propTypes.node,\n    variant: propTypes.oneOf(['tooltip', 'popover']),\n    tooltipProps: propTypes.object\n};\n\nconst UnsupportedSSGVersion = ({\n    children, showWarningIcon = true, showHelpIcon = false, style, tooltipText, messageVariant\n}) => {\n    const tooltipProps = {\n        ...tooltipText && { content: <div>{ tooltipText }</div> },\n        messageVariant\n    };\n    const variant = tooltipText ? 'tooltip' : 'popover';\n    const iconProps = {\n        variant,\n        tooltipProps\n    };\n    const defaultStyle = !tooltipText ? { cursor: 'pointer' } : {};\n\n    return <span style={ { ...style, display: 'inline-block' } }>\n        { showWarningIcon && <TooltipOrPopover { ...iconProps }>\n            <ExclamationTriangleIcon\n                className='ins-u-warning'\n                style={ {\n                    ...defaultStyle,\n                    marginRight: '.25em'\n                } }\n            />\n        </TooltipOrPopover> }\n\n        { children }\n\n        { showHelpIcon &&  <TooltipOrPopover { ...iconProps }>\n            <OutlinedQuestionCircleIcon\n                style={ {\n                    ...defaultStyle,\n                    marginLeft: '.25em'\n                } }\n            />\n        </TooltipOrPopover> }\n    </span>;\n};\n\nUnsupportedSSGVersion.propTypes = {\n    showWarningIcon: propTypes.bool,\n    showHelpIcon: propTypes.bool,\n    style: propTypes.object,\n    tooltipText: propTypes.string,\n    children: propTypes.node,\n    variant: propTypes.string,\n    messageVariant: propTypes.string,\n    showPopupHeader: propTypes.bool\n};\n\nexport default UnsupportedSSGVersion;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Text } from '@patternfly/react-core';\n\nconst SubPageTitle = ({ children }) => (\n    <Text\n        component='h2'\n        style={ {\n            color: 'var(--pf-global--Color--200)',\n            lineHeight: '2rem'\n        } }>\n        { children }\n    </Text>\n);\n\nSubPageTitle.propTypes = {\n    children: propTypes.node\n};\n\nexport default SubPageTitle;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Label } from '@patternfly/react-core';\n\nconst OperatingSystemBadge = ({ majorOsVersion }) => {\n    const colorMap = {\n        default: 'var(--pf-global--disabled-color--200)',\n        7: 'cyan',\n        8: 'purple'\n    };\n    const color = colorMap[majorOsVersion] || colorMap.default;\n\n    return <Label { ...{ color } }>\n        RHEL { majorOsVersion }\n    </Label>;\n};\n\nOperatingSystemBadge.propTypes = {\n    majorOsVersion: propTypes.string\n};\n\nexport default OperatingSystemBadge;\n","const OsVersionText = ({ profile, newOsMinorVersion }) => (\n    `RHEL ${ profile.osMajorVersion }.${ (profile.osMinorVersion || newOsMinorVersion) }`\n);\n\nexport default OsVersionText;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport {\n    Text, TextVariants, TextContent, Grid, Spinner, Badge\n} from '@patternfly/react-core';\nimport SystemRulesTable from '@redhat-cloud-services/frontend-components-inventory-compliance/SystemRulesTable';\nimport { StateViewWithError, StateViewPart } from 'PresentationalComponents';\nimport { pluralize } from 'Utilities/TextHelper';\nimport OsVersionText from './OsVersionText';\n\nconst ProfileSystemCount = ({ count = 0 }) => (\n    <Badge isRead>\n        { `${count} ${ pluralize(count, 'system')}` }\n    </Badge>\n);\n\nProfileSystemCount.propTypes = {\n    profile: propTypes.object,\n    count: propTypes.number\n};\n\nconst BENCHMARK_QUERY = gql`\nquery benchmarkQuery($id: String!) {\n    benchmark(id: $id) {\n        id\n        osMajorVersion\n        rules {\n            id\n            title\n            severity\n            rationale\n            refId\n            description\n            remediationAvailable\n            identifier\n        }\n    }\n}\n`;\n\nconst ProfileTabContent = ({\n    profile, columns, handleSelect, systemCount, selectedRuleRefIds, rulesTableProps, newOsMinorVersion\n}) => {\n    const { data: benchmark, error, loading } = useQuery(BENCHMARK_QUERY, {\n        variables: {\n            id: profile.benchmark.id\n        },\n        skip: !handleSelect || !profile.benchmark?.id\n    });\n    const rules = handleSelect ? benchmark?.benchmark?.rules : profile?.rules;\n\n    return <React.Fragment>\n        <Grid>\n            <TextContent className=\"pf-u-mt-md\">\n                <Text component={ TextVariants.h3 } >\n                    <OsVersionText profile={ profile } newOsMinorVersion={ newOsMinorVersion} />\n                    {' '}\n                    <ProfileSystemCount count={ systemCount } />\n                </Text>\n                <Text component={ TextVariants.p }>\n                    SSG version { profile.ssgVersion }\n                </Text>\n            </TextContent>\n        </Grid>\n        <StateViewWithError stateValues={ { error, loading, rules } }>\n            <StateViewPart stateKey=\"loading\">\n                <Spinner />\n            </StateViewPart>\n            <StateViewPart stateKey=\"rules\">\n\n                <SystemRulesTable\n                    remediationsEnabled={false}\n                    columns={ columns }\n                    profileRules={ [{ profile, rules: (rules || []) }] }\n                    selectedRefIds={ selectedRuleRefIds }\n                    handleSelect={\n                        handleSelect\n                        && ((selectedRuleRefIds) => handleSelect(profile, selectedRuleRefIds))\n                    }\n                    { ...rulesTableProps } />\n\n            </StateViewPart>\n        </StateViewWithError>\n    </React.Fragment>;\n};\n\nProfileTabContent.propTypes = {\n    profile: propTypes.object,\n    newOsMinorVersion: propTypes.string,\n    columns: propTypes.array,\n    handleSelect: propTypes.func,\n    systemCount: propTypes.object,\n    selectedRuleRefIds: propTypes.object,\n    rulesTableProps: propTypes.object\n};\n\nexport default ProfileTabContent;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Tab, Badge } from '@patternfly/react-core';\nimport {\n    selectColumns as selectRulesTableColumns\n} from '@redhat-cloud-services/frontend-components-inventory-compliance/SystemRulesTable';\nimport { RoutedTabs } from 'PresentationalComponents';\nimport ProfileTabContent from './ProfileTabContent';\nimport OsVersionText from './OsVersionText';\n\nconst eventKey = (id) => (\n    `rules-${id}`\n);\n\nconst defaultTab = (tabsData, profileId) => {\n    if (tabsData && tabsData.length > 0) {\n        return eventKey(profileId || tabsData[0].profile.id);\n    }\n};\n\nconst TabbedRules = ({\n    tabsData, defaultProfileId, columns, level, handleSelect, ...rulesTableProps\n}) => {\n    return <RoutedTabs level={ level } defaultTab={ defaultTab(tabsData, defaultProfileId) }>\n        {\n            tabsData?.map(({ profile, selectedRuleRefIds, newOsMinorVersion, systemCount }) => (\n                <Tab\n                    key={ eventKey(profile.id) }\n                    eventKey={ eventKey(profile.id) }\n                    title={\n                        <span>\n                            <OsVersionText profile={ profile } newOsMinorVersion={newOsMinorVersion} />\n                            {' '}\n                            <Badge isRead>{ systemCount }</Badge>\n                        </span>\n                    }>\n                    <ProfileTabContent\n                        { ...{\n                            profile,\n                            newOsMinorVersion,\n                            columns,\n                            handleSelect,\n                            rulesTableProps,\n                            systemCount,\n                            selectedRuleRefIds: (selectedRuleRefIds || [])\n                        } } />\n                </Tab>\n            ))\n        }\n    </RoutedTabs>;\n};\n\nTabbedRules.propTypes = {\n    tabsData: propTypes.arrayOf(\n        propTypes.shape(\n            {\n                profile: propTypes.object.isRequired,\n                selectedRuleRefIds: propTypes.arrayOf(propTypes.string),\n                newOsMinorVersion: propTypes.string,\n                systemCount: propTypes.number\n            }\n        )\n    ).isRequired,\n    columns: propTypes.arrayOf(propTypes.object),\n    defaultProfileId: propTypes.string,\n    handleSelect: propTypes.func,\n    level: propTypes.number\n};\n\nTabbedRules.defaultProps = {\n    columns: selectRulesTableColumns(['Name', 'Severity', 'Ansible']),\n    level: 0\n};\n\nexport default TabbedRules;\n","export const validateBenchmarkPage = (benchmark, osMajorVersion, profile) => {\n    if (benchmark && osMajorVersion && profile) {\n        return true;\n    } else {\n        return false;\n    }\n};\n\nexport const thresholdValid = (threshold) => (\n    threshold < 101 && threshold >= 0\n);\n\nexport const validateDetailsPage = (name, refId, complianceThreshold) => (\n    !name || !refId  || !complianceThreshold || !thresholdValid(complianceThreshold) ? false : true\n);\n\nexport const validateRulesPage = (selectedRuleRefIds) => {\n    if (!selectedRuleRefIds) {\n        return false;\n    } else {\n        return true;\n    }\n};\n\nexport const validateSystemsPage = (systemIds) => {\n    if (systemIds) {\n        return systemIds.length > 0;\n    } else {\n        return false;\n    }\n};\n","export const isNumberRange = (value) => value && !!value.match(/\\d\\d*-\\d\\d*/);\n\nexport const fixedPercentage = (value, fixed = 0, withPercent = true) => {\n    const fixedValue = (value)?.toFixed(fixed);\n    return fixedValue ? (fixedValue + (withPercent ? '%' : '')) : 'N/A';\n};\n\nexport const pluralize = (value, singular, plural) => {\n    if (!plural) {\n        plural = singular + 's';\n    }\n\n    return (value > 1 || value === 0 ? plural : singular);\n};\n\nexport const stringToId = (string) => (\n    string.replace(' ', '').toLowerCase()\n);\n","export const uniq = (collection) => [...new Set(collection)];\n\nexport const sortingByProp = (propName, order = 'asc') => (\n    (objA, objB) => {\n        const propA = (objA && objA[propName]) || '';\n        const propB = (objB && objB[propName]) || '';\n        if (propA === propB) {\n            return 0;\n        } else if (order === 'asc') {\n            return propA < propB ? -1 : 1;\n        } else {\n            return propA < propB ? 1 : -1;\n        }\n    }\n);\n","import { useState } from 'react';\nimport { FilterConfigBuilder } from '@redhat-cloud-services/frontend-components-inventory-compliance/Utilities';\n\nconst useFilterConfig = (initialConfig, arrayToFilter) => {\n    const filterConfigBuilder = new FilterConfigBuilder(initialConfig);\n    const [activeFilters, setActiveFilters] = useState(filterConfigBuilder.initialDefaultState());\n    const onFilterUpdate = (filter, value) => (\n        setActiveFilters({\n            ...activeFilters,\n            [filter]: value\n        })\n    );\n    const clearAllFilter = () => (\n        setActiveFilters(filterConfigBuilder.initialDefaultState())\n    );\n    const deleteFilter = (chips) => (\n        setActiveFilters(filterConfigBuilder.removeFilterWithChip(\n            chips, activeFilters\n        ))\n    );\n    const onFilterDelete = (_event, chips, clearAll = false) => (\n        clearAll ? clearAllFilter() : deleteFilter(chips[0])\n    );\n    const chipBuilder = filterConfigBuilder.getChipBuilder();\n    const filterConfig = filterConfigBuilder.buildConfiguration(\n        onFilterUpdate,\n        activeFilters\n    );\n    const filterChips = chipBuilder.chipsFor(activeFilters);\n    const filteredArray = arrayToFilter ? filterConfigBuilder.applyFilterToObjectArray(\n        arrayToFilter, activeFilters\n    ) : undefined;\n\n    return {\n        conditionalFilter: {\n            filterConfig,\n            activeFiltersConfig: {\n                filters: filterChips,\n                onDelete: onFilterDelete\n            }\n        },\n        filtered: filteredArray,\n        activeFilters,\n        buildFilterString: () => filterConfigBuilder.getFilterBuilder().buildFilterString(activeFilters)\n    };\n};\n\nexport default useFilterConfig;\n","import api from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../node_modules/css-loader/dist/cjs.js!../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../node_modules/sass-loader/dist/cjs.js!./Charts.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../node_modules/css-loader/dist/cjs.js!../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../node_modules/sass-loader/dist/cjs.js!./Charts.scss\",\n      function () {\n        if (!isEqualLocals(oldLocals, content.locals, undefined)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nexport default content.locals || {};"],"sourceRoot":""}