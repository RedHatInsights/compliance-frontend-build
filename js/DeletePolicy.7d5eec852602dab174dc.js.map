{"version":3,"sources":["webpack://compliance-frontend/./src/SmartComponents/DeletePolicy/DeletePolicy.js"],"names":["DeletePolicy","location","useLocation","history","useHistory","state","policy","name","id","onClose","push","useMutation","DELETE_PROFILE","onCompleted","dispatchAction","addNotification","variant","title","onError","error","description","message","deletePolicy","Modal","ModalVariant","isOpen","actions","Button","key","aria-label","onClick","variables","input","TextContent","propTypes"],"mappings":"uRAcMA,EAAe,WACjB,IAAMC,GAAWC,mBACXC,GAAUC,kBAFO,EAGFH,EAASI,MAAMC,OAA5BC,EAHe,EAGfA,KAAMC,EAHS,EAGTA,GACRC,EAAU,WACZN,EAAQO,KAAK,kBALM,GAQAC,iBAAYC,KAAgB,CAC/CC,YAAa,YACTC,QAAeC,QAAgB,CAC3BC,QAAS,UACTC,MAAO,kBAAF,OAAqBV,MAE9BE,KAEJS,QAAS,SAACC,IACNL,QAAeC,QAAgB,CAC3BC,QAAS,SACTC,MAAO,wBACPG,YAAaD,EAAME,WAEvBZ,OAdDa,EARgB,YA0BvB,OACI,kBAAC,EAAAC,MAAD,CACIP,QAAUQ,qBACVP,MAAM,gBACNQ,QAAM,EACNhB,QAAUA,EACViB,QAAS,CACL,kBAAC,EAAAC,OAAD,CAAQC,IAAI,UACRC,aAAW,SACXb,QAAQ,SACRc,QAAS,kBAAMR,EAAa,CAAES,UAAW,CAAEC,MAAO,CAAExB,WAHxD,iBAMA,kBAAC,EAAAmB,OAAD,CAAQC,IAAI,SAASZ,QAAQ,YAAYc,QAAUrB,GAAnD,YAKJ,kBAAC,EAAAwB,YAAD,wCACoC,2BAAK1B,GADzC,8BAQZP,EAAakC,UAAY,CACrB5B,OAAQ4B,YAGZ","file":"js/DeletePolicy.7d5eec852602dab174dc.js","sourcesContent":["import {\n    Button,\n    Modal,\n    ModalVariant,\n    TextContent\n} from '@patternfly/react-core';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { useMutation } from '@apollo/react-hooks';\nimport { DELETE_PROFILE } from 'Utilities/graphql/mutations';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport { dispatchAction } from 'Utilities/Dispatcher';\n\nconst DeletePolicy = () => {\n    const location = useLocation();\n    const history = useHistory();\n    const { name, id } = location.state.policy;\n    const onClose = () => {\n        history.push('/scappolicies');\n    };\n\n    const [deletePolicy] = useMutation(DELETE_PROFILE, {\n        onCompleted: () => {\n            dispatchAction(addNotification({\n                variant: 'success',\n                title: `Removed policy ${ name }`\n            }));\n            onClose();\n        },\n        onError: (error) => {\n            dispatchAction(addNotification({\n                variant: 'danger',\n                title: 'Error removing policy',\n                description: error.message\n            }));\n            onClose();\n        }\n    });\n\n    return (\n        <Modal\n            variant={ ModalVariant.small }\n            title='Delete policy'\n            isOpen\n            onClose={ onClose }\n            actions={[\n                <Button key='destroy'\n                    aria-label=\"delete\"\n                    variant='danger'\n                    onClick={() => deletePolicy({ variables: { input: { id } } })}>\n                    Delete policy\n                </Button>,\n                <Button key='cancel' variant='secondary' onClick={ onClose }>\n                    Cancel\n                </Button>\n            ]}\n        >\n            <TextContent>\n                Are you sure you want to delete <b>{ name }</b>?\n                This cannot be undone.\n            </TextContent>\n        </Modal>\n    );\n};\n\nDeletePolicy.propTypes = {\n    policy: propTypes.object\n};\n\nexport default DeletePolicy;\n"],"sourceRoot":""}