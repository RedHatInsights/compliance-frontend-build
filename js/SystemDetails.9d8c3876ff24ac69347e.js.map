{"version":3,"sources":["webpack://compliance-frontend/./src/SmartComponents/SystemDetails/SystemDetails.js"],"names":["QUERY","gql","SystemDetails","route","inventoryId","useParams","useQuery","variables","data","error","loading","systemName","system","name","useTitleEntity","stateValues","stateKey","PageHeader","Breadcrumb","to","BreadcrumbItem","isActive","Main","hidePassed","Skeleton","size","SkeletonSize","propTypes"],"mappings":"igBA4BA,IAAMA,EAAQC,IAAH,KASEC,EAAgB,SAAC,GAAc,MAAZC,EAAY,EAAZA,MACpBC,GAAgBC,iBAAhBD,YADgC,GAEPE,cAASN,EAAO,CAC7CO,UAAW,CAAEH,iBADTI,EAFgC,EAEhCA,KAAMC,EAF0B,EAE1BA,MAAOC,EAFmB,EAEnBA,QAGfC,EAAaH,SAAH,UAAGA,EAAMI,cAAT,aAAG,EAAcC,KAIjC,OAFAC,OAAeX,EAAOQ,GAEf,kBAAC,KAAD,CAAoBI,YAAc,CAAEN,QAAOD,OAAME,YACpD,kBAAC,KAAD,CAAeM,SAAS,QACpB,kBAAC,EAAAC,WAAD,KACI,kBAAC,EAAAC,WAAD,KACI,kBAAC,KAAD,CAAoBC,GAAG,KAAvB,cAGA,kBAAC,KAAD,CAAoBA,GAAG,YAAvB,WAGA,kBAAC,EAAAC,eAAD,CAAgBC,UAAQ,GAAGV,IAE/B,kBAAC,KAAD,MACA,8BAEJ,kBAAC,EAAAW,KAAD,KACI,kBAAC,KAAD,CAAyBC,YAAU,EAACnB,YAAcA,MAG1D,kBAAC,KAAD,CAAeY,SAAS,WACpB,kBAAC,EAAAC,WAAD,KACI,kBAAC,EAAAO,SAAD,CAAUC,KAAOC,wBAMjCxB,EAAcyB,UAAY,CACtBxB,MAAOwB,YAGX","file":"js/SystemDetails.9d8c3876ff24ac69347e.js","sourcesContent":["import React from 'react';\nimport propTypes from 'prop-types';\nimport gql from 'graphql-tag';\nimport {\n    useQuery\n} from '@apollo/react-hooks';\nimport {\n    useParams\n} from 'react-router-dom';\nimport {\n    PageHeader,\n    Main,\n    Skeleton,\n    SkeletonSize\n} from '@redhat-cloud-services/frontend-components';\nimport {\n    Breadcrumb,\n    BreadcrumbItem\n} from '@patternfly/react-core';\nimport ComplianceSystemDetails from '@redhat-cloud-services/frontend-components-inventory-compliance/esm';\nimport {\n    BreadcrumbLinkItem,\n    StateViewWithError,\n    StateViewPart\n} from 'PresentationalComponents';\nimport { InventoryDetails } from 'SmartComponents';\nimport { useTitleEntity } from 'Utilities/hooks/useDocumentTitle';\n\nconst QUERY = gql`\nquery System($inventoryId: String!){\n    system(id: $inventoryId) {\n        id\n        name\n    }\n}\n`;\n\nexport const SystemDetails = ({ route }) => {\n    const { inventoryId } = useParams();\n    const { data, error, loading } = useQuery(QUERY, {\n        variables: { inventoryId }\n    });\n    const systemName = data?.system?.name;\n\n    useTitleEntity(route, systemName);\n\n    return <StateViewWithError stateValues={ { error, data, loading } }>\n        <StateViewPart stateKey='data'>\n            <PageHeader>\n                <Breadcrumb>\n                    <BreadcrumbLinkItem to='/'>\n                        Compliance\n                    </BreadcrumbLinkItem>\n                    <BreadcrumbLinkItem to='/systems'>\n                        Systems\n                    </BreadcrumbLinkItem>\n                    <BreadcrumbItem isActive>{ systemName }</BreadcrumbItem>\n                </Breadcrumb>\n                <InventoryDetails />\n                <br/>\n            </PageHeader>\n            <Main>\n                <ComplianceSystemDetails hidePassed inventoryId={ inventoryId } />\n            </Main>\n        </StateViewPart>\n        <StateViewPart stateKey='loading'>\n            <PageHeader>\n                <Skeleton size={ SkeletonSize.md } />\n            </PageHeader>\n        </StateViewPart>\n    </StateViewWithError>;\n};\n\nSystemDetails.propTypes = {\n    route: propTypes.object\n};\n\nexport default SystemDetails;\n"],"sourceRoot":""}