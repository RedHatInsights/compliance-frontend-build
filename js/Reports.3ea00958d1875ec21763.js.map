{"version":3,"sources":["webpack://compliance-frontend/./src/SmartComponents/Reports/Reports.js"],"names":["QUERY","gql","LoadingView","showTableView","colSize","rowSize","propTypes","ReportsHeader","title","className","Alert","variant","isInline","actionLinks","href","Text","Reports","profiles","showView","location","useLocation","useFeature","View","ReportsTable","ReportCardGrid","useQuery","variables","filter","data","error","loading","refetch","useEffect","undefined","edges","map","profile","node","profilesFromEdges","length","stateValues","stateKey"],"mappings":"s0CAcA,IAAMA,EAAQC,IAAH,KA8CLC,EAAc,SAAC,GAAD,SAAGC,cACH,kBAAC,IAAD,CAAeC,QAAU,EAAIC,QAAU,KAAU,kBAAC,KAAD,OAGrEH,EAAYI,UAAY,CACpBH,cAAeG,UAGnB,IAAMC,EAAgB,kBAClB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAiBC,MAAM,UAAUC,UAAU,eAC3C,kBAAC,EAAAC,MAAD,CACIC,QAAQ,OACRC,UAAQ,EACRJ,MAAM,iDACNK,YACI,uBAAGC,KAAK,+CAAR,eAEJ,kBAAC,EAAAC,KAAD,CAAMJ,QAAQ,KAAd,6PASCK,EAAU,WACnB,IAAIC,EAAW,GACXC,GAAW,EACTC,GAAWC,mBACXjB,GAAgBkB,OAAW,oBAC3BC,EAAOnB,EAAgBoB,KAAeC,KALnB,GASeC,cAASzB,EAAO,CACpD0B,UAAW,CAAEC,OAJF,oIAGTC,EATmB,EASnBA,KAAMC,EATa,EASbA,MAAOC,EATM,EASNA,QAASC,EATH,EASGA,QAe5B,OAXAC,gBAAU,WACND,MACD,CAACZ,IAEAS,IAEAC,OAAQI,EACRH,OAAUG,EACVf,GAHAD,EAnDkB,SAACW,GAAD,cACrBA,SAAA,UAAAA,EAAMX,gBAAN,eAAgBiB,QAAS,IAAIC,KAAI,SAACC,GAAD,OAC9BA,EAAQC,QAiDGC,CAAkBV,KAGNX,EAASsB,OAAS,GAGtC,kBAAC,KAAD,CAAoBC,YAAc,CAAEX,QAAOD,OAAME,YACpD,kBAAC,KAAD,CAAeW,SAAS,WACpB,kBAAClC,EAAD,MACA,kBAAC,IAAD,KACI,kBAACL,EAAiB,CAAEC,oBAG5B,kBAAC,KAAD,CAAesC,SAAS,QACpB,kBAAClC,EAAD,MACA,kBAAC,IAAD,KACMW,EAAW,kBAACI,EAAU,CAAEL,aAAkB,kBAAC,KAAD,UAM5D","file":"js/Reports.3ea00958d1875ec21763.js","sourcesContent":["import React, { useEffect } from 'react';\nimport propTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport { Alert, Text } from '@patternfly/react-core';\nimport PageHeader, { PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport SkeletonTable from '@redhat-cloud-services/frontend-components/SkeletonTable';\nimport {\n    ReportCardGrid, ReportsTable, StateViewPart, StateViewWithError, ReportsEmptyState, LoadingComplianceCards\n} from 'PresentationalComponents';\nimport useFeature from 'Utilities/hooks/useFeature';\n\nconst QUERY = gql`\nquery Profiles($filter: String!) {\n    profiles(search: $filter, limit: 1000){\n        edges {\n            node {\n                id\n                name\n                refId\n                description\n                policyType\n                totalHostCount\n                testResultHostCount\n                compliantHostCount\n                unsupportedHostCount\n                majorOsVersion\n                ssgVersion\n                complianceThreshold\n                businessObjective {\n                    id\n                    title\n                }\n                policy {\n                    id\n                    name\n                    benchmark {\n                        id\n                        version\n                    }\n                }\n                benchmark {\n                    id\n                    version\n                }\n            }\n        }\n\n    }\n}\n`;\n\nconst profilesFromEdges = (data) => (\n    (data?.profiles?.edges || []).map((profile) => (\n        profile.node\n    ))\n);\n\nconst LoadingView = ({ showTableView }) => (\n    showTableView ? <SkeletonTable colSize={ 3 } rowSize={ 10 } /> : <LoadingComplianceCards />\n);\n\nLoadingView.propTypes = {\n    showTableView: propTypes.bool\n};\n\nconst ReportsHeader = () => (\n    <PageHeader>\n        <PageHeaderTitle title=\"Reports\" className=\"pad-bottom\" />\n        <Alert\n            variant=\"info\"\n            isInline\n            title=\"Support for external reports has been removed.\"\n            actionLinks={\n                <a href=\"https://access.redhat.com/solutions/5249481\">Learn more</a>\n            }>\n            <Text variant=\"p\">\n                Support for SCAP policies not defined within Compliance has been removed. The associated reports for\n                these policies have also been removed from Insights as of Jan 11th, 2021. Create a policy within the\n                Compliance service for compliance reporting.\n            </Text>\n        </Alert>\n    </PageHeader>\n);\n\nexport const Reports = () => {\n    let profiles = [];\n    let showView = false;\n    const location = useLocation();\n    const showTableView = useFeature('reportsTableView');\n    const View = showTableView ? ReportsTable : ReportCardGrid;\n    const filter = `(has_policy_test_results = true AND external = false)\n                    OR (has_policy = false AND has_test_results = true)`;\n\n    let { data, error, loading, refetch } = useQuery(QUERY, {\n        variables: { filter }\n    });\n\n    useEffect(() => {\n        refetch();\n    }, [location]);\n\n    if (data) {\n        profiles = profilesFromEdges(data);\n        error = undefined;\n        loading = undefined;\n        showView = profiles && profiles.length > 0;\n    }\n\n    return <StateViewWithError stateValues={ { error, data, loading } }>\n        <StateViewPart stateKey='loading'>\n            <ReportsHeader />\n            <Main>\n                <LoadingView { ...{ showTableView } } />\n            </Main>\n        </StateViewPart>\n        <StateViewPart stateKey='data'>\n            <ReportsHeader />\n            <Main>\n                { showView ? <View { ...{ profiles } } /> : <ReportsEmptyState /> }\n            </Main>\n        </StateViewPart>\n    </StateViewWithError>;\n};\n\nexport default Reports;\n"],"sourceRoot":""}