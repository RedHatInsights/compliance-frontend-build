{"version":3,"sources":["webpack://compliance-frontend/./src/SmartComponents/ReportDetails/ReportDetails.scss","webpack://compliance-frontend/./src/SmartComponents/ReportDetails/ReportDetails.js","webpack://compliance-frontend/./src/SmartComponents/ReportDetails/ReportDetails.scss?9a2a"],"names":["exports","___CSS_LOADER_API_IMPORT___","push","module","id","QUERY","gql","ReportDetails","showSsgVersions","chartColorScale","policyName","legendData","compliancePercentage","pageTitle","route","showSsgVersionsFeature","useFeature","newInventory","policyId","useParams","report_id","useQuery","variables","data","error","loading","dispatch","useDispatch","donutValues","donutId","profile","policy","name","compliantHostCount","testResultHostCount","replace","x","y","black300","blue300","blue200","pluralize","fixedPercentage","Math","floor","columns","key","title","props","width","renderFunc","systemName","realProfile","supported","ssgVersion","ssg_version","Link","to","pathname","_score","_id","system","complianceScore","lastScanned","Date","date","parse","type","useLayoutEffect","payload","ids","InvCmp","InventoryTable","SystemsTable","useTitleEntity","stateValues","stateKey","Breadcrumb","BreadcrumbItem","isActive","Grid","hasGutter","GridItem","sm","md","lg","xl","policyType","className","state","Button","variant","isInline","identifier","subTitle","themeVariant","ChartThemeVariant","colorScale","style","fontSize","innerRadius","legendPosition","legendOrientation","padding","bottom","left","right","top","unsupportedHostCount","Text","showHelpIcon","span","query","GET_SYSTEMS","showOnlySystemsWithTestResults","compliantFilter","defaultFilter","propTypes","update","hot","invalidate","oldLocals","accept","a","b","isNamedExport","p","isEqualLocals","dispose"],"mappings":"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","file":"js/ReportDetails.0f3dce586ae8e30615a2.js","sourcesContent":["// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".threshold-tooltip{margin-bottom:var(--pf-global--spacer--md)}.grey-icon{color:var(--pf-global--Color--200)}.policy-details{padding-top:10px}.report-details-button{text-align:right}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","/* eslint-disable react/display-name */\nimport React, { useLayoutEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport black300 from '@patternfly/react-tokens/dist/esm/global_palette_black_300';\nimport blue200 from '@patternfly/react-tokens/dist/esm/chart_color_blue_200';\nimport blue300 from '@patternfly/react-tokens/dist/esm/chart_color_blue_300';\nimport propTypes from 'prop-types';\nimport { useParams, Link } from 'react-router-dom';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\n\nimport { ChartDonut, ChartThemeVariant } from '@patternfly/react-charts';\nimport { Breadcrumb, BreadcrumbItem, Button, Grid, GridItem, Text } from '@patternfly/react-core';\n\nimport PageHeader, { PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport EmptyTable from '@redhat-cloud-services/frontend-components/EmptyTable';\nimport Spinner from '@redhat-cloud-services/frontend-components/Spinner';\nimport DateFormat from '@redhat-cloud-services/frontend-components/DateFormat';\n\nimport { fixedPercentage, pluralize } from 'Utilities/TextHelper';\nimport useFeature from 'Utilities/hooks/useFeature';\nimport {\n    BackgroundLink, BreadcrumbLinkItem, ReportDetailsContentLoader, ReportDetailsDescription,\n    StateViewWithError, StateViewPart, UnsupportedSSGVersion, SubPageTitle\n} from 'PresentationalComponents';\nimport { Cells } from '@/SmartComponents/SystemsTable/SystemsTable';\nimport { useTitleEntity } from 'Utilities/hooks/useDocumentTitle';\nimport { InventoryTable, SystemsTable } from 'SmartComponents';\nimport '@/Charts.scss';\nimport './ReportDetails.scss';\nimport { GET_SYSTEMS } from '../SystemsTable/constants';\nimport { systemName } from 'Store/Reducers/SystemStore';\nimport { ComplianceScore as complianceScore } from 'PresentationalComponents';\n\nexport const QUERY = gql`\nquery Profile($policyId: String!){\n    profile(id: $policyId) {\n        id\n        name\n        refId\n        testResultHostCount\n        compliantHostCount\n        unsupportedHostCount\n        complianceThreshold\n        majorOsVersion\n        lastScanned\n        policyType\n        policy {\n            id\n            name\n        }\n        benchmark {\n            id\n            version\n        }\n        businessObjective {\n            id\n            title\n        }\n    }\n}\n`;\n\nexport const ReportDetails = ({ route }) => {\n    let showSsgVersions;\n    let showSsgVersionsFeature = useFeature('showSsgVersions');\n    const newInventory = useFeature('newInventory');\n    const { report_id: policyId } = useParams();\n    const { data, error, loading } = useQuery(QUERY, {\n        variables: { policyId }\n    });\n    const dispatch = useDispatch();\n    let donutValues = [];\n    let donutId = 'loading-donut';\n    let chartColorScale;\n    let profile = {};\n    let policyName;\n    let legendData;\n    let compliancePercentage;\n    let pageTitle;\n\n    if (!loading && data) {\n        profile = data.profile;\n        policyName = profile.policy.name;\n        showSsgVersions = showSsgVersionsFeature;\n        pageTitle = `Report: ${ policyName }`;\n        const compliantHostCount = profile.compliantHostCount;\n        const testResultHostCount = profile.testResultHostCount;\n        donutId = profile.name.replace(/ /g, '');\n        donutValues = [\n            { x: 'Compliant', y: testResultHostCount ? compliantHostCount : '0' },\n            { x: 'Non-compliant', y: testResultHostCount - compliantHostCount }\n        ];\n        chartColorScale = testResultHostCount === 0 && [black300.value] ||\n            [blue300.value, blue200.value];\n        legendData = [\n            { name: donutValues[0].y + ' ' + pluralize(donutValues[0].y, 'system') + ' compliant' },\n            { name: donutValues[1].y + ' ' + pluralize(donutValues[1].y, 'system') + ' non-compliant' }\n        ];\n        compliancePercentage = testResultHostCount ? fixedPercentage(Math.floor(100 *\n                (donutValues[0].y / (donutValues[0].y + donutValues[1].y)))) : 0;\n    }\n\n    const columns = [{\n        key: 'facts.compliance.display_name',\n        title: 'Name',\n        props: {\n            width: 30\n        },\n        ...newInventory && {\n            key: 'display_name',\n            renderFunc: systemName\n        }\n    }, ...showSsgVersions ? [{\n        key: 'ssgVersion',\n        title: 'SSG version',\n        props: {\n            width: 5\n        },\n        renderFunc: (profile, ...rest) => {\n            let realProfile = profile;\n            if (typeof profile === 'string') {\n                realProfile = rest[1];\n            }\n\n            return realProfile && <Cells.SSGVersion\n                supported={ realProfile.supported }\n                ssgVersion={ realProfile?.ssg_version || realProfile?.ssgVersion } />;\n        }\n    }] : [], {\n        key: 'facts.compliance.rules_failed',\n        title: 'Failed rules',\n        props: {\n            width: 5\n        },\n        ...newInventory && {\n            key: 'rulesFailed',\n            renderFunc: (name, id) => <Link to={{ pathname: `/systems/${id}` }}> {name} </Link>\n        }\n    }, {\n        key: 'facts.compliance.compliance_score',\n        title: 'Compliance score',\n        props: {\n            width: 5\n        },\n        ...newInventory && {\n            key: 'score',\n            renderFunc: (_score, _id, system) => complianceScore(system)\n        }\n    }, {\n        key: 'facts.compliance.last_scanned',\n        title: 'Last scanned',\n        props: {\n            width: 10\n        },\n        ...newInventory && {\n            key: 'lastScanned',\n            renderFunc: (lastScanned) => (lastScanned instanceof Date) ?\n                <DateFormat date={Date.parse(lastScanned)} type='relative' />\n                : lastScanned\n        }\n    }];\n\n    useLayoutEffect(() => { dispatch({ type: 'SELECT_ENTITIES', payload: { ids: [] } }); }, []);\n\n    const InvCmp = newInventory ? InventoryTable : SystemsTable;\n    useTitleEntity(route, policyName);\n\n    return <StateViewWithError stateValues={ { error, data, loading } }>\n        <StateViewPart stateKey='loading'>\n            <PageHeader><ReportDetailsContentLoader/></PageHeader>\n            <Main><EmptyTable><Spinner/></EmptyTable></Main>\n        </StateViewPart>\n        <StateViewPart stateKey='data'>\n            <PageHeader>\n                <Breadcrumb>\n                    <BreadcrumbLinkItem to='/'>\n                        Compliance\n                    </BreadcrumbLinkItem>\n                    <BreadcrumbLinkItem to='/reports'>\n                        Reports\n                    </BreadcrumbLinkItem>\n                    <BreadcrumbItem isActive>{ pageTitle }</BreadcrumbItem>\n                </Breadcrumb>\n                <Grid hasGutter>\n                    <GridItem sm={9} md={9} lg={9} xl={9}>\n                        <PageHeaderTitle title={ pageTitle } />\n                        <SubPageTitle>\n                            { profile.policyType }\n                        </SubPageTitle>\n                    </GridItem>\n                    <GridItem className='report-details-button' sm={3} md={3} lg={3} xl={3}>\n                        <BackgroundLink\n                            state={ { profile } }\n                            to={ `/reports/${ profile.id }/delete` }>\n                            <Button variant='link' isInline>Delete report</Button>\n                        </BackgroundLink>\n                    </GridItem>\n                </Grid>\n                <Grid hasGutter>\n                    <GridItem sm={12} md={12} lg={12} xl={6}>\n                        <div className='chart-inline'>\n                            <div className='chart-container'>\n                                <ChartDonut data={donutValues}\n                                    identifier={donutId}\n                                    title={compliancePercentage}\n                                    subTitle=\"Compliant\"\n                                    themeVariant={ChartThemeVariant.light}\n                                    colorScale={chartColorScale}\n                                    style={{ fontSize: 20 }}\n                                    innerRadius={88}\n                                    width={462}\n                                    legendPosition='right'\n                                    legendData={legendData}\n                                    legendOrientation='vertical'\n                                    padding={{\n                                        bottom: 20,\n                                        left: 0,\n                                        right: 250,\n                                        top: 20\n                                    }}\n                                />\n                            </div>\n                        </div>\n                        {  profile.unsupportedHostCount > 0 && <Text>\n                            <UnsupportedSSGVersion showHelpIcon>\n                                <strong className='ins-c-warning-text'>\n                                    { profile.unsupportedHostCount } systems not supported\n                                </strong>\n                            </UnsupportedSSGVersion>\n                        </Text> }\n                    </GridItem>\n                    <GridItem sm={12} md={12} lg={12} xl={6}>\n                        <ReportDetailsDescription profile={profile} />\n                    </GridItem>\n                </Grid>\n            </PageHeader>\n            <Main>\n                <Grid hasGutter>\n                    <GridItem span={12}>\n                        <InvCmp\n                            query={GET_SYSTEMS}\n                            showOnlySystemsWithTestResults\n                            compliantFilter\n                            defaultFilter={`with_results_for_policy_id = ${profile.id}`}\n                            policyId={profile.id}\n                            columns={columns} />\n                    </GridItem>\n                </Grid>\n            </Main>\n        </StateViewPart>\n    </StateViewWithError>;\n};\n\nReportDetails.propTypes = {\n    route: propTypes.object\n};\n\nexport default ReportDetails;\n","import api from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./ReportDetails.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (module.hot) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\n  if (!a && b || a && !b) {\n    return false;\n  }\n\n  var p;\n\n  for (p in a) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (a[p] !== b[p]) {\n      return false;\n    }\n  }\n\n  for (p in b) {\n    if (isNamedExport && p === 'default') {\n      // eslint-disable-next-line no-continue\n      continue;\n    }\n\n    if (!a[p]) {\n      return false;\n    }\n  }\n\n  return true;\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ruleSet[1].rules[3].use[2]!../../../node_modules/sass-loader/dist/cjs.js!./ReportDetails.scss\",\n      function () {\n        if (!isEqualLocals(oldLocals, content.locals, undefined)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nexport default content.locals || {};"],"sourceRoot":""}