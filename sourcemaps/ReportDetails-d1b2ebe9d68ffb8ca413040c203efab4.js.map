{"version":3,"sources":["webpack:///./src/SmartComponents/ReportDetails/ReportDetails.scss","webpack:///./node_modules/@patternfly/react-tokens/dist/esm/global_palette_black_300.js","webpack:///./src/SmartComponents/ReportDetails/ReportDetails.scss?d617","webpack:///./src/SmartComponents/ReportDetails/ReportDetails.js","webpack:///./node_modules/@patternfly/react-core/dist/js/components/Breadcrumb/Breadcrumb.js"],"names":["exports","___CSS_LOADER_API_IMPORT___","push","module","i","global_palette_black_300","options","locals","QUERY","gql","ReportDetails","showSsgVersions","chartColorScale","policyName","legendData","compliancePercentage","pageTitle","route","showSsgVersionsFeature","useFeature","newInventory","policyId","useParams","report_id","useQuery","variables","data","error","loading","donutValues","donutId","profile","policy","name","compliantHostCount","testResultHostCount","replace","x","y","black300","value","blue300","blue200","pluralize","fixedPercentage","Math","floor","columns","key","title","props","width","renderFunc","systemName","_name","_id","SSGVersion","id","to","pathname","_score","system","complianceScore","lastScanned","Date","DateFormat","date","parse","type","InvCmp","InventoryTable","SystemsTable","useTitleEntity","stateValues","stateKey","PageHeader","Main","EmptyTable","Spinner","Breadcrumb","BreadcrumbItem","isActive","Grid","hasGutter","GridItem","sm","md","lg","xl","policyType","className","state","Button","variant","isInline","ChartDonut","identifier","subTitle","themeVariant","ChartThemeVariant","light","colorScale","style","fontSize","innerRadius","legendPosition","legendOrientation","padding","bottom","left","right","top","unsupportedHostCount","Text","showHelpIcon","span","query","GET_SYSTEMS","showOnlySystemsWithTestResults","compliantFilter","defaultFilter","propTypes","object","Object","defineProperty","tslib_1","React","__importStar","breadcrumb_1","__importDefault","react_styles_1","helpers_1","_a","children","ariaLabel","ouiaId","ouiaSafe","__rest","ouiaProps","useOUIAProps","displayName","createElement","assign","css","default","breadcrumb","breadcrumbList","Children","map","child","index","showDivider","isValidElement","cloneElement"],"mappings":"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","file":"js/ReportDetails-58b2f3de0ab8a25ebb49.js","sourcesContent":["// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".threshold-tooltip {\\n  margin-bottom: var(--pf-global--spacer--md); }\\n\\n.grey-icon {\\n  color: var(--pf-global--Color--200); }\\n\\n.policy-details {\\n  padding-top: 10px; }\\n\\n.report-details-button {\\n  text-align: right; }\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","export const global_palette_black_300 = {\n  \"name\": \"--pf-global--palette--black-300\",\n  \"value\": \"#d2d2d2\",\n  \"var\": \"var(--pf-global--palette--black-300)\"\n};\nexport default global_palette_black_300;","import api from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./ReportDetails.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","/* eslint-disable react/display-name */\nimport React from 'react';\nimport {\n    global_palette_black_300 as black300,\n    chart_color_blue_200 as blue200,\n    chart_color_blue_300 as blue300\n} from '@patternfly/react-tokens';\nimport propTypes from 'prop-types';\nimport { useParams, Link } from 'react-router-dom';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\n\nimport { ChartDonut, ChartThemeVariant } from '@patternfly/react-charts';\nimport { Breadcrumb, BreadcrumbItem, Button, Grid, GridItem, Text } from '@patternfly/react-core';\n\nimport {\n    PageHeader, PageHeaderTitle, Main, EmptyTable, Spinner\n} from '@redhat-cloud-services/frontend-components';\n\nimport { fixedPercentage, pluralize } from 'Utilities/TextHelper';\nimport useFeature from 'Utilities/hooks/useFeature';\nimport {\n    BackgroundLink, BreadcrumbLinkItem, ReportDetailsContentLoader, ReportDetailsDescription,\n    StateViewWithError, StateViewPart, UnsupportedSSGVersion, SubPageTitle\n} from 'PresentationalComponents';\nimport { Cells } from '@/SmartComponents/SystemsTable/SystemsTable';\nimport { useTitleEntity } from 'Utilities/hooks/useDocumentTitle';\nimport { InventoryTable, SystemsTable } from 'SmartComponents';\nimport '@/Charts.scss';\nimport './ReportDetails.scss';\nimport { GET_SYSTEMS } from '../SystemsTable/constants';\nimport { systemName } from 'Store/Reducers/SystemStore';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components';\nimport { ComplianceScore as complianceScore } from 'PresentationalComponents';\n\nexport const QUERY = gql`\nquery Profile($policyId: String!){\n    profile(id: $policyId) {\n        id\n        name\n        refId\n        testResultHostCount\n        compliantHostCount\n        unsupportedHostCount\n        complianceThreshold\n        majorOsVersion\n        lastScanned\n        policyType\n        policy {\n            id\n            name\n        }\n        benchmark {\n            id\n            version\n        }\n        businessObjective {\n            id\n            title\n        }\n    }\n}\n`;\n\nexport const ReportDetails = ({ route }) => {\n    let showSsgVersions;\n    let showSsgVersionsFeature = useFeature('showSsgVersions');\n    const newInventory = useFeature('newInventory');\n    const { report_id: policyId } = useParams();\n    const { data, error, loading } = useQuery(QUERY, {\n        variables: { policyId }\n    });\n    let donutValues = [];\n    let donutId = 'loading-donut';\n    let chartColorScale;\n    let profile = {};\n    let policyName;\n    let legendData;\n    let compliancePercentage;\n    let pageTitle;\n\n    if (!loading && data) {\n        profile = data.profile;\n        policyName = profile.policy ? profile.policy.name : profile.name;\n        showSsgVersions = !!profile?.policy && showSsgVersionsFeature;\n        pageTitle = `Report: ${ policyName }`;\n        const compliantHostCount = profile.compliantHostCount;\n        const testResultHostCount = profile.testResultHostCount;\n        donutId = profile.name.replace(/ /g, '');\n        donutValues = [\n            { x: 'Compliant', y: testResultHostCount ? compliantHostCount : '0' },\n            { x: 'Non-compliant', y: testResultHostCount - compliantHostCount }\n        ];\n        chartColorScale = testResultHostCount === 0 && [black300.value] ||\n            [blue300.value, blue200.value];\n        legendData = [\n            { name: donutValues[0].y + ' ' + pluralize(donutValues[0].y, 'system') + ' compliant' },\n            { name: donutValues[1].y + ' ' + pluralize(donutValues[1].y, 'system') + ' non-compliant' }\n        ];\n        compliancePercentage = testResultHostCount ? fixedPercentage(Math.floor(100 *\n                (donutValues[0].y / (donutValues[0].y + donutValues[1].y)))) : 0;\n    }\n\n    const columns = [{\n        key: 'facts.compliance.display_name',\n        title: 'System name',\n        props: {\n            width: 30\n        },\n        ...newInventory && {\n            key: 'display_name',\n            renderFunc: systemName\n        }\n    }, ...showSsgVersions ? [{\n        key: 'facts.compliance',\n        title: 'SSG version',\n        props: {\n            width: 5\n        },\n        renderFunc: (_name, _id, profile) => (\n            profile && <Cells.SSGVersion { ...{ profile } } />\n        )\n    }] : [], {\n        key: 'facts.compliance.rules_failed',\n        title: 'Failed rules',\n        props: {\n            width: 5\n        },\n        ...newInventory && {\n            key: 'rulesFailed',\n            renderFunc: (name, id) => <Link to={{ pathname: `/systems/${id}` }}> {name} </Link>\n        }\n    }, {\n        key: 'facts.compliance.compliance_score',\n        title: 'Compliance score',\n        props: {\n            width: 5\n        },\n        ...newInventory && {\n            key: 'score',\n            renderFunc: (_score, _id, system) => complianceScore(system)\n        }\n    }, {\n        key: 'facts.compliance.last_scanned',\n        title: 'Last scanned',\n        props: {\n            width: 10\n        },\n        ...newInventory && {\n            key: 'lastScanned',\n            renderFunc: (lastScanned) => (lastScanned instanceof Date) ?\n                <DateFormat date={Date.parse(lastScanned)} type='relative' />\n                : lastScanned\n        }\n    }];\n\n    const InvCmp = newInventory ? InventoryTable : SystemsTable;\n    useTitleEntity(route, policyName);\n\n    return <StateViewWithError stateValues={ { error, data, loading } }>\n        <StateViewPart stateKey='loading'>\n            <PageHeader><ReportDetailsContentLoader/></PageHeader>\n            <Main><EmptyTable><Spinner/></EmptyTable></Main>\n        </StateViewPart>\n        <StateViewPart stateKey='data'>\n            <PageHeader>\n                <Breadcrumb>\n                    <BreadcrumbLinkItem to='/reports'>\n                        Reports\n                    </BreadcrumbLinkItem>\n                    <BreadcrumbItem isActive>{ pageTitle }</BreadcrumbItem>\n                </Breadcrumb>\n                <Grid hasGutter>\n                    <GridItem sm={9} md={9} lg={9} xl={9}>\n                        <PageHeaderTitle title={ pageTitle } />\n                        <SubPageTitle>\n                            { profile.policyType }\n                        </SubPageTitle>\n                    </GridItem>\n                    <GridItem className='report-details-button' sm={3} md={3} lg={3} xl={3}>\n                        <BackgroundLink\n                            state={ { profile } }\n                            to={ `/reports/${ profile.id }/delete` }>\n                            <Button variant='link' isInline>Delete report</Button>\n                        </BackgroundLink>\n                    </GridItem>\n                </Grid>\n                <Grid hasGutter>\n                    <GridItem sm={12} md={12} lg={12} xl={6}>\n                        <div className='chart-inline'>\n                            <div className='chart-container'>\n                                <ChartDonut data={donutValues}\n                                    identifier={donutId}\n                                    title={compliancePercentage}\n                                    subTitle=\"Compliant\"\n                                    themeVariant={ChartThemeVariant.light}\n                                    colorScale={chartColorScale}\n                                    style={{ fontSize: 20 }}\n                                    innerRadius={88}\n                                    width={462}\n                                    legendPosition='right'\n                                    legendData={legendData}\n                                    legendOrientation='vertical'\n                                    padding={{\n                                        bottom: 20,\n                                        left: 0,\n                                        right: 250,\n                                        top: 20\n                                    }}\n                                />\n                            </div>\n                        </div>\n                        {  profile.unsupportedHostCount > 0 && <Text>\n                            <UnsupportedSSGVersion showHelpIcon>\n                                <strong className='ins-c-warning-text'>\n                                    { profile.unsupportedHostCount } systems not supported\n                                </strong>\n                            </UnsupportedSSGVersion>\n                        </Text> }\n                    </GridItem>\n                    <GridItem sm={12} md={12} lg={12} xl={6}>\n                        <ReportDetailsDescription profile={profile} />\n                    </GridItem>\n                </Grid>\n            </PageHeader>\n            <Main>\n                <Grid hasGutter>\n                    <GridItem span={12}>\n                        <InvCmp\n                            query={GET_SYSTEMS}\n                            showOnlySystemsWithTestResults\n                            compliantFilter\n                            defaultFilter={`with_results_for_policy_id = ${profile.id}`}\n                            policyId={profile.id}\n                            columns={columns} />\n                    </GridItem>\n                </Grid>\n            </Main>\n        </StateViewPart>\n    </StateViewWithError>;\n};\n\nReportDetails.propTypes = {\n    route: propTypes.object\n};\n\nexport default ReportDetails;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Breadcrumb = void 0;\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nconst breadcrumb_1 = tslib_1.__importDefault(require(\"@patternfly/react-styles/css/components/Breadcrumb/breadcrumb\"));\nconst react_styles_1 = require(\"@patternfly/react-styles\");\nconst helpers_1 = require(\"../../helpers\");\nexports.Breadcrumb = (_a) => {\n    var { children = null, className = '', 'aria-label': ariaLabel = 'Breadcrumb', ouiaId, ouiaSafe = true } = _a, props = tslib_1.__rest(_a, [\"children\", \"className\", 'aria-label', \"ouiaId\", \"ouiaSafe\"]);\n    const ouiaProps = helpers_1.useOUIAProps(exports.Breadcrumb.displayName, ouiaId, ouiaSafe);\n    return (React.createElement(\"nav\", Object.assign({}, props, { \"aria-label\": ariaLabel, className: react_styles_1.css(breadcrumb_1.default.breadcrumb, className) }, ouiaProps),\n        React.createElement(\"ol\", { className: breadcrumb_1.default.breadcrumbList }, React.Children.map(children, (child, index) => {\n            const showDivider = index > 0;\n            if (React.isValidElement(child)) {\n                return React.cloneElement(child, { showDivider });\n            }\n            return child;\n        }))));\n};\nexports.Breadcrumb.displayName = 'Breadcrumb';\n//# sourceMappingURL=Breadcrumb.js.map"],"sourceRoot":""}