{"version":3,"file":"js/ReportDetails.2c56cc0920ea8c49079e.js","mappings":"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","sources":["webpack:///./src/SmartComponents/ReportDetails/Components/ReportedSystemRow.js","webpack:///./src/SmartComponents/ReportDetails/ReportDetailsWithNotReportedSystems.js","webpack:///./src/SmartComponents/ReportDetails/ReportDetails.js","webpack:///./src/SmartComponents/ReportDownload/constants.js","webpack:///./src/SmartComponents/ReportDownload/Components/ExportPDFForm.js","webpack:///./src/SmartComponents/ReportDownload/hooks/helpers.js","webpack:///./src/SmartComponents/ReportDownload/hooks/useQueryExportData.js","webpack:///./src/SmartComponents/ReportDownload/Components/ReportPDF/StyleSheet.js","webpack:///./src/SmartComponents/ReportDownload/Components/ReportPDF/SystemsTable.js","webpack:///./src/SmartComponents/ReportDownload/Components/ReportPDF/UnsupportedSystemsTable.js","webpack:///./src/SmartComponents/ReportDownload/Components/ReportPDF/NonReportedSystemsTable.js","webpack:///./src/SmartComponents/ReportDownload/Components/ReportPDF/RulesTable.js","webpack:///./src/SmartComponents/ReportDownload/Components/ReportPDF/PanelItem.js","webpack:///./src/SmartComponents/ReportDownload/Components/ReportPDF/SubSection.js","webpack:///./src/SmartComponents/ReportDownload/Components/ReportPDF/ComplianceChart.js","webpack:///./src/SmartComponents/ReportDownload/Components/ReportPDF.js","webpack:///./src/Utilities/hooks/api/utils/ApiClient.js","webpack:///./src/Utilities/hooks/api/useApi.js","webpack:///./src/Utilities/hooks/api/useCollection.js","webpack:///./src/SmartComponents/ReportDownload/hooks/useSupportedSsgFinder.js","webpack:///./src/SmartComponents/ReportDownload/hooks/usePDFExport.js","webpack:///./src/SmartComponents/ReportDownload/hooks/usePDFBuilder.js","webpack:///./src/SmartComponents/ReportDownload/ReportDownload.js","webpack:///./src/SmartComponents/ReportDownload/hooks/useExportSettings.js"],"sourcesContent":["import React from 'react';\nimport propTypes from 'prop-types';\nimport { RowWrapper } from '@patternfly/react-table';\n\nconst ReportedSystemRow = ({ row, children }) => (\n  <RowWrapper\n    style={\n      row.testResultProfiles?.length === 0\n        ? {\n            background: '#F0F0F0',\n            borderLeft:\n              'var(--pf-c-table--border-width--base) solid var(--pf-c-table--BorderColor)',\n            borderRight:\n              'var(--pf-c-table--border-width--base) solid var(--pf-c-table--BorderColor)',\n          }\n        : {}\n    }\n  >\n    {children}\n  </RowWrapper>\n);\n\nReportedSystemRow.propTypes = {\n  row: propTypes.node,\n  children: propTypes.node,\n};\n\nexport default ReportedSystemRow;\n","/* eslint-disable react/display-name */\nimport React from 'react';\nimport propTypes from 'prop-types';\nimport { useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Grid,\n  GridItem,\n} from '@patternfly/react-core';\nimport PageHeader, {\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport EmptyTable from '@redhat-cloud-services/frontend-components/EmptyTable';\nimport Spinner from '@redhat-cloud-services/frontend-components/Spinner';\nimport {\n  BackgroundLink,\n  BreadcrumbLinkItem,\n  ReportDetailsContentLoader,\n  ReportDetailsDescription,\n  StateViewWithError,\n  StateViewPart,\n  SubPageTitle,\n  LinkButton,\n} from 'PresentationalComponents';\nimport { useTitleEntity } from 'Utilities/hooks/useDocumentTitle';\nimport useFeature from 'Utilities/hooks/useFeature';\nimport { SystemsTable } from 'SmartComponents';\nimport '@/Charts.scss';\nimport './ReportDetails.scss';\nimport * as Columns from '../SystemsTable/Columns';\nimport ReportedSystemRow from './Components/ReportedSystemRow';\nimport ReportChart from './Components/ReportChart';\n\nexport const QUERY = gql`\n  query Profile($policyId: String!) {\n    profile(id: $policyId) {\n      id\n      name\n      refId\n      totalHostCount\n      testResultHostCount\n      compliantHostCount\n      unsupportedHostCount\n      complianceThreshold\n      osMajorVersion\n      lastScanned\n      policyType\n      policy {\n        id\n        name\n        profiles {\n          benchmark {\n            version\n          }\n        }\n      }\n      businessObjective {\n        id\n        title\n      }\n    }\n  }\n`;\n\nexport const ReportDetails = ({ route }) => {\n  const { report_id: policyId } = useParams();\n  const pdfReportEnabled = useFeature('pdfReport');\n  const { data, error, loading } = useQuery(QUERY, {\n    variables: { policyId },\n    fetchPolicy: 'no-cache',\n  });\n  let profile = {};\n  let policyName;\n  let pageTitle;\n  let ssgVersions = [];\n\n  if (!loading && data) {\n    profile = data.profile;\n    policyName = profile.policy.name;\n    pageTitle = `Report: ${policyName}`;\n    ssgVersions = [\n      ...new Set(\n        profile.policy.profiles.flatMap(({ benchmark: { version } }) => version)\n      ),\n    ];\n  }\n\n  useTitleEntity(route, policyName);\n\n  return (\n    <StateViewWithError stateValues={{ error, data, loading }}>\n      <StateViewPart stateKey=\"loading\">\n        <PageHeader>\n          <ReportDetailsContentLoader />\n        </PageHeader>\n        <Main>\n          <EmptyTable>\n            <Spinner />\n          </EmptyTable>\n        </Main>\n      </StateViewPart>\n      <StateViewPart stateKey=\"data\">\n        <PageHeader>\n          <Breadcrumb ouiaId=\"ReportDetailsPathBreadcrumb\">\n            <BreadcrumbLinkItem to=\"/\">Compliance</BreadcrumbLinkItem>\n            <BreadcrumbLinkItem to=\"/reports\">Reports</BreadcrumbLinkItem>\n            <BreadcrumbItem isActive>{pageTitle}</BreadcrumbItem>\n          </Breadcrumb>\n          <Grid hasGutter>\n            <GridItem sm={9} md={9} lg={9} xl={9}>\n              <PageHeaderTitle title={pageTitle} />\n              <SubPageTitle>{profile.policyType}</SubPageTitle>\n            </GridItem>\n            <GridItem\n              className=\"report-details-button\"\n              sm={3}\n              md={3}\n              lg={3}\n              xl={3}\n            >\n              {pdfReportEnabled && (\n                <BackgroundLink\n                  state={{ profile }}\n                  to={`/reports/${profile.id}/pdf`}\n                  component={LinkButton}\n                  ouiaId=\"ReportDetailsDownloadReportPDFLink\"\n                  variant=\"primary\"\n                  className=\"pf-u-mr-md\"\n                >\n                  Download PDF\n                </BackgroundLink>\n              )}\n              <BackgroundLink\n                state={{ profile }}\n                to={`/reports/${profile.id}/delete`}\n                component={LinkButton}\n                variant=\"link\"\n                ouiaId=\"ReportDetailsDeleteReportLink\"\n                isInline\n              >\n                Delete report\n              </BackgroundLink>\n            </GridItem>\n          </Grid>\n          <Grid hasGutter>\n            <GridItem sm={12} md={12} lg={12} xl={6}>\n              <ReportChart\n                profile={profile}\n                hasLegend={true}\n                chartClass=\"report-details-chart-container\"\n              />\n            </GridItem>\n            <GridItem sm={12} md={12} lg={12} xl={6}>\n              <ReportDetailsDescription profile={profile} />\n            </GridItem>\n          </Grid>\n        </PageHeader>\n        <Main>\n          <Grid hasGutter>\n            <GridItem span={12}>\n              <SystemsTable\n                showOsMinorVersionFilter={[profile.osMajorVersion]}\n                ssgVersions={ssgVersions}\n                columns={[\n                  Columns.customName({\n                    showLink: true,\n                    showOsInfo: true,\n                  }),\n                  Columns.inventoryColumn('tags'),\n                  Columns.SsgVersion,\n                  Columns.FailedRules,\n                  Columns.ComplianceScore,\n                  Columns.LastScanned,\n                ]}\n                compliantFilter\n                defaultFilter={`policy_id = ${profile.id}`}\n                policyId={profile.id}\n                tableProps={{\n                  rowWrapper: ReportedSystemRow,\n                }}\n              />\n            </GridItem>\n          </Grid>\n        </Main>\n      </StateViewPart>\n    </StateViewWithError>\n  );\n};\n\nReportDetails.propTypes = {\n  route: propTypes.object,\n};\n\nexport default ReportDetails;\n","/* eslint-disable react/display-name */\nimport React from 'react';\nimport propTypes from 'prop-types';\nimport { useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Grid,\n  GridItem,\n} from '@patternfly/react-core';\nimport PageHeader, {\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport EmptyTable from '@redhat-cloud-services/frontend-components/EmptyTable';\nimport Spinner from '@redhat-cloud-services/frontend-components/Spinner';\nimport {\n  BackgroundLink,\n  BreadcrumbLinkItem,\n  ReportDetailsContentLoader,\n  ReportDetailsDescription,\n  StateViewWithError,\n  StateViewPart,\n  SubPageTitle,\n  LinkButton,\n} from 'PresentationalComponents';\nimport { useTitleEntity } from 'Utilities/hooks/useDocumentTitle';\nimport useFeature from 'Utilities/hooks/useFeature';\nimport { SystemsTable } from 'SmartComponents';\nimport '@/Charts.scss';\nimport './ReportDetails.scss';\nimport * as Columns from '../SystemsTable/Columns';\nimport { default as ReportDetailsWithNotReportedSystems } from './ReportDetailsWithNotReportedSystems';\nimport ReportChart from './Components/ReportChart';\n\nexport const QUERY = gql`\n  query Profile($policyId: String!) {\n    profile(id: $policyId) {\n      id\n      name\n      refId\n      testResultHostCount\n      compliantHostCount\n      unsupportedHostCount\n      complianceThreshold\n      osMajorVersion\n      lastScanned\n      policyType\n      policy {\n        id\n        name\n      }\n      businessObjective {\n        id\n        title\n      }\n    }\n  }\n`;\n\nexport const ReportDetails = ({ route }) => {\n  const { report_id: policyId } = useParams();\n  const pdfReportEnabled = useFeature('pdfReport');\n  const { data, error, loading } = useQuery(QUERY, {\n    variables: { policyId },\n    fetchPolicy: 'no-cache',\n  });\n  let profile = {};\n  let policyName;\n  let pageTitle;\n\n  if (!loading && data) {\n    profile = data.profile;\n    policyName = profile.policy.name;\n    pageTitle = `Report: ${policyName}`;\n  }\n\n  useTitleEntity(route, policyName);\n\n  return (\n    <StateViewWithError stateValues={{ error, data, loading }}>\n      <StateViewPart stateKey=\"loading\">\n        <PageHeader>\n          <ReportDetailsContentLoader />\n        </PageHeader>\n        <Main>\n          <EmptyTable>\n            <Spinner />\n          </EmptyTable>\n        </Main>\n      </StateViewPart>\n      <StateViewPart stateKey=\"data\">\n        <PageHeader>\n          <Breadcrumb ouiaId=\"ReportDetailsPathBreadcrumb\">\n            <BreadcrumbLinkItem to=\"/\">Compliance</BreadcrumbLinkItem>\n            <BreadcrumbLinkItem to=\"/reports\">Reports</BreadcrumbLinkItem>\n            <BreadcrumbItem isActive>{pageTitle}</BreadcrumbItem>\n          </Breadcrumb>\n          <Grid hasGutter>\n            <GridItem sm={9} md={9} lg={9} xl={9}>\n              <PageHeaderTitle title={pageTitle} />\n              <SubPageTitle>{profile.policyType}</SubPageTitle>\n            </GridItem>\n            <GridItem\n              className=\"report-details-button\"\n              sm={3}\n              md={3}\n              lg={3}\n              xl={3}\n            >\n              {pdfReportEnabled && (\n                <BackgroundLink\n                  state={{ profile }}\n                  to={`/reports/${profile.id}/pdf`}\n                  component={LinkButton}\n                  ouiaId=\"ReportDetailsDownloadReportPDFLink\"\n                  variant=\"plain\"\n                  className=\"pf-u-mr-md\"\n                >\n                  Download PDF\n                </BackgroundLink>\n              )}\n              <BackgroundLink\n                state={{ profile }}\n                to={`/reports/${profile.id}/delete`}\n                component={LinkButton}\n                variant=\"link\"\n                ouiaId=\"ReportDetailsDeleteReportLink\"\n                isInline\n              >\n                Delete report\n              </BackgroundLink>\n            </GridItem>\n          </Grid>\n          <Grid hasGutter>\n            <GridItem sm={12} md={12} lg={12} xl={6}>\n              <div className=\"chart-inline\">\n                <div className=\"chart-container\">\n                  <ReportChart\n                    profile={profile}\n                    hasLegend={true}\n                    chartClass=\"report-details-chart-container\"\n                  />\n                </div>\n              </div>\n            </GridItem>\n            <GridItem sm={12} md={12} lg={12} xl={6}>\n              <ReportDetailsDescription profile={profile} />\n            </GridItem>\n          </Grid>\n        </PageHeader>\n        <Main>\n          <Grid hasGutter>\n            <GridItem span={12}>\n              <SystemsTable\n                showOsMinorVersionFilter={[profile.osMajorVersion]}\n                columns={[\n                  Columns.customName({\n                    showLink: true,\n                    showOsInfo: true,\n                  }),\n                  Columns.inventoryColumn('tags'),\n                  Columns.SsgVersion,\n                  Columns.FailedRules,\n                  Columns.ComplianceScore,\n                  Columns.LastScanned,\n                ]}\n                showOnlySystemsWithTestResults\n                compliantFilter\n                defaultFilter={`with_results_for_policy_id = ${profile.id}`}\n                policyId={profile.id}\n              />\n            </GridItem>\n          </Grid>\n        </Main>\n      </StateViewPart>\n    </StateViewWithError>\n  );\n};\n\nReportDetails.propTypes = {\n  route: propTypes.object,\n};\n\nconst ReportDetailsFeatureWrapper = (props) => {\n  const systemsNotReporting = useFeature('systemsNotReporting');\n\n  return systemsNotReporting ? (\n    <ReportDetailsWithNotReportedSystems {...props} />\n  ) : (\n    <ReportDetails {...props} />\n  );\n};\n\nexport default ReportDetailsFeatureWrapper;\n","import gql from 'graphql-tag';\n\nexport const DEFAULT_EXPORT_SETTINGS = {\n  compliantSystems: false,\n  nonCompliantSystems: true,\n  unsupportedSystems: true,\n  nonReportingSystems: true,\n  topTenFailedRules: true,\n  userNotes: undefined,\n};\n\nexport const GET_SYSTEMS = gql`\n  query getSystems(\n    $filter: String!\n    $policyId: ID\n    $perPage: Int\n    $page: Int\n    $sortBy: [String!]\n    $tags: [String!]\n  ) {\n    systems(\n      search: $filter\n      limit: $perPage\n      offset: $page\n      sortBy: $sortBy\n      tags: $tags\n    ) {\n      totalCount\n      edges {\n        node {\n          id\n          name\n          osMajorVersion\n          osMinorVersion\n          insightsId\n          testResultProfiles(policyId: $policyId) {\n            lastScanned\n            compliant\n            score\n            supported\n            benchmark {\n              version\n            }\n            rulesFailed\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport const GET_PROFILE = gql`\n  query Profile($policyId: String!) {\n    profile(id: $policyId) {\n      id\n      name\n      refId\n      testResultHostCount\n      compliantHostCount\n      unsupportedHostCount\n      complianceThreshold\n      osMajorVersion\n      lastScanned\n      policyType\n      totalHostCount\n      policy {\n        id\n        name\n      }\n      benchmark {\n        id\n      }\n      businessObjective {\n        id\n        title\n      }\n    }\n  }\n`;\n\nexport const GET_RULES = gql`\n  query getProfiles($filter: String!, $policyId: ID!) {\n    profiles(search: $filter) {\n      totalCount\n      edges {\n        node {\n          topFailedRules(policyId: $policyId) {\n            refId\n            title\n            remediationAvailable\n            severity\n            identifier\n            failedCount\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport {\n  Form,\n  FormGroup,\n  Text,\n  TextArea,\n  Checkbox,\n} from '@patternfly/react-core';\nimport useFeature from 'Utilities/hooks/useFeature';\n\nconst ExportPDFForm = ({ policy, setExportSetting, exportSettings }) => {\n  const systemsNotReporting = useFeature('systemsNotReporting');\n\n  return (\n    <Form>\n      <FormGroup isInline fieldId=\"simple-form-checkbox-group\" label=\"Policy\">\n        <Text>{policy.name}</Text>\n      </FormGroup>\n\n      <FormGroup\n        fieldId=\"simple-form-checkbox-group\"\n        label=\"System data to include\"\n      >\n        <Checkbox\n          label=\"Non-compliant systems\"\n          id=\"non-compliant-systems-export-setting\"\n          aria-label=\"Non-compliant systems\"\n          onChange={setExportSetting('nonCompliantSystems')}\n          isChecked={exportSettings.nonCompliantSystems}\n        />\n        <Checkbox\n          label=\"Systems with unsupported configuration\"\n          id=\"unsupported-systems-export-setting\"\n          aria-label=\"Systems with unsupported configuration\"\n          onChange={setExportSetting('unsupportedSystems')}\n          isChecked={exportSettings.unsupportedSystems}\n        />\n        {systemsNotReporting && (\n          <Checkbox\n            label=\"Systems with no reports\"\n            id=\"nonreporting-systems-export-setting\"\n            aria-label=\"Systems never reported\"\n            onChange={setExportSetting('nonReportingSystems')}\n            isChecked={exportSettings.nonReportingSystems}\n          />\n        )}\n        <Checkbox\n          id=\"compliant-systems-export-setting\"\n          onChange={setExportSetting('compliantSystems')}\n          isChecked={exportSettings.compliantSystems}\n          label=\"Compliant systems\"\n          aria-label=\"Compliant systems\"\n        />\n      </FormGroup>\n\n      <FormGroup label=\"Rule data to include\" fieldId=\"checkbox01\">\n        <Checkbox\n          id=\"failed-rules-export-setting\"\n          label=\"Top failed rules (Up to 10)\"\n          aria-label=\"Rule data to include\"\n          onChange={setExportSetting('topTenFailedRules')}\n          isChecked={exportSettings.topTenFailedRules}\n        />\n      </FormGroup>\n\n      <FormGroup label=\"User notes (optional)\" fieldId=\"checkbox01\">\n        <TextArea\n          aria-label=\"User notes (optional)\"\n          onChange={setExportSetting('userNotes')}\n          value={exportSettings.userNotes}\n        />\n      </FormGroup>\n    </Form>\n  );\n};\n\nExportPDFForm.propTypes = {\n  policy: propTypes.object,\n  exportSettings: propTypes.object,\n  setExportSetting: propTypes.func,\n};\n\nexport default ExportPDFForm;\n","// TODO move to utilities\n// to make these helpers available elsewhere and then use where needed\n\nconst scannedProfiles = (profiles) =>\n  profiles?.filter((profile) => profile.lastScanned != 'Never') || [];\n\nconst isSystemCompliant = (system) => {\n  const hasScannedProfiles =\n    scannedProfiles(system.testResultProfiles).length > 0;\n  const hasOnlyCompliantScannedProfiles = scannedProfiles(\n    system.testResultProfiles\n  ).every((profile) => profile.compliant);\n\n  return hasScannedProfiles && hasOnlyCompliantScannedProfiles;\n};\n\nconst isSystemNonCompliant = (system) => {\n  const hasScannedProfiles =\n    scannedProfiles(system.testResultProfiles).length > 0;\n  const hasNonCompliantProfiles =\n    scannedProfiles(system.testResultProfiles).filter(\n      (profile) => !profile.compliant\n    ).length > 0;\n\n  return hasScannedProfiles && hasNonCompliantProfiles;\n};\n\nconst hasProfiles = ({ testResultProfiles }) =>\n  scannedProfiles(testResultProfiles).length > 0;\n\nconst isSystemSupported = (system) =>\n  hasProfiles(system) &&\n  scannedProfiles(system.testResultProfiles).every(\n    (profile) => profile.supported\n  );\n\nconst isSystemUnsupported = (system) =>\n  hasProfiles(system) &&\n  scannedProfiles(system.testResultProfiles).every(\n    (profile) => !profile.supported\n  );\n\nexport const compliantSystemsData = (systems) =>\n  systems.filter(\n    (system) => isSystemSupported(system) && isSystemCompliant(system)\n  );\n\nexport const nonCompliantSystemsData = (systems) =>\n  systems.filter(\n    (system) => isSystemSupported(system) && isSystemNonCompliant(system)\n  );\n\nexport const unsupportedSystemsData = (systems) =>\n  systems.filter((system) => isSystemUnsupported(system));\n\nexport const supportedSystemsData = (systems) =>\n  systems.filter((system) => isSystemSupported(system));\n\nexport const nonReportingSystemsData = (systems) => {\n  const reportingSystemIds = [\n    ...compliantSystemsData(systems),\n    ...nonCompliantSystemsData(systems),\n    ...unsupportedSystemsData(systems),\n  ].map((system) => system.id);\n\n  return systems.filter((system) => !reportingSystemIds.includes(system.id));\n};\n\nexport const prepareForExport = (\n  exportSettings,\n  systems,\n  topTenFailedRules\n) => {\n  const compliantSystems = compliantSystemsData(systems);\n  const nonCompliantSystems = nonCompliantSystemsData(systems);\n  const unsupportedSystems = unsupportedSystemsData(systems);\n  const nonReportingSystems = nonReportingSystemsData(systems);\n\n  return {\n    totalHostCount: systems.length,\n\n    compliantSystemCount: compliantSystems.length,\n    ...(exportSettings.compliantSystems && {\n      compliantSystems: compliantSystems,\n    }),\n\n    nonCompliantSystemCount: nonCompliantSystems.length,\n    ...(exportSettings.nonCompliantSystems && {\n      nonCompliantSystems: nonCompliantSystems,\n    }),\n\n    unsupportedSystemCount: unsupportedSystems.length,\n    ...(exportSettings.unsupportedSystems && {\n      unsupportedSystems: unsupportedSystems,\n    }),\n\n    ...(exportSettings.topTenFailedRules && {\n      topTenFailedRules,\n    }),\n    nonReportingSystemCount: nonReportingSystems.length,\n    ...(exportSettings.nonReportingSystems && {\n      nonReportingSystems: nonReportingSystems,\n    }),\n    ...(exportSettings.userNotes && { userNotes: exportSettings.userNotes }),\n  };\n};\n","import { useApolloClient } from '@apollo/client';\nimport { GET_SYSTEMS, GET_RULES } from '../constants';\nimport { prepareForExport } from './helpers';\nimport usePromiseQueue from 'Utilities/hooks/usePromiseQueue';\n\nconst useFetchBatched = () => {\n  const { isResolving: isLoading, resolve } = usePromiseQueue();\n\n  return {\n    isLoading,\n    fetchBatched: (fetchFunction, total, filter, batchSize = 50) => {\n      const pages = Math.ceil(total / batchSize) || 1;\n\n      const results = resolve(\n        [...new Array(pages)].map(\n          (_, pageIdx) => () => fetchFunction(batchSize, pageIdx + 1, filter)\n        )\n      );\n\n      return results;\n    },\n  };\n};\n\nconst useSystemsFetch = ({ id: policyId, totalHostCount } = {}) => {\n  const client = useApolloClient();\n  const { fetchBatched } = useFetchBatched();\n\n  const fetchFunction = (perPage, page) =>\n    client.query({\n      query: GET_SYSTEMS,\n      fetchResults: true,\n      fetchPolicy: 'no-cache',\n      variables: {\n        perPage,\n        page,\n        filter: `policy_id = ${policyId}`,\n        policyId,\n      },\n    });\n\n  return async () =>\n    (await fetchBatched(fetchFunction, totalHostCount)).flatMap(\n      ({\n        data: {\n          systems: { edges },\n        },\n      }) => edges.map(({ node }) => node)\n    );\n};\n\nconst useFetchRules = ({ id: policyId } = {}) => {\n  const client = useApolloClient();\n\n  const fetchFunction = (perPage = 10, page = 1) =>\n    client.query({\n      query: GET_RULES,\n      fetchResults: true,\n      fetchPolicy: 'no-cache',\n      variables: {\n        perPage,\n        page,\n        filter: `policy_id = ${policyId}`,\n        policyId,\n      },\n    });\n\n  return async () =>\n    (await fetchFunction()).data.profiles?.edges.flatMap(\n      (edge) => edge.node.topFailedRules\n    );\n};\n\n// Hook that provides a wrapper function for a preconfigured GraphQL client to fetch export data\nconst useQueryExportData = (\n  exportSettings,\n  policy,\n  { onComplete, onError } = {\n    onComplete: () => undefined,\n    onError: () => undefined,\n  }\n) => {\n  const fetchSystems = useSystemsFetch(policy);\n  const fetchRules = useFetchRules(policy);\n\n  return async () => {\n    try {\n      const systems = await fetchSystems();\n      const rules = await fetchRules();\n      const exportData = prepareForExport(exportSettings, systems, rules);\n      onComplete?.(exportData);\n      return exportData;\n    } catch (error) {\n      if (onError) {\n        onError?.(error);\n        return [];\n      } else {\n        throw error;\n      }\n    }\n  };\n};\n\nexport default useQueryExportData;\n","import { StyleSheet } from '@react-pdf/renderer';\n\n// Supported style properties see: https://react-pdf.org/styling\nexport default StyleSheet.create({\n  // TODO: bold rendering in PDF does not appear to work\n  bold: {\n    fontWeight: 'bold',\n  },\n  italic: {\n    fontStyle: 'italic',\n  },\n\n  metaTitle: {\n    color: '#C9190B',\n    marginBottom: '20px',\n  },\n\n  userNotes: {\n    backgroundColor: '#F0F0F0',\n    padding: '8px',\n  },\n  userNotesTitle: {\n    marginBottom: '4px',\n  },\n\n  sectionTitle: {\n    color: '#C9190B',\n    fontWeight: 'bold',\n    fontSize: 14,\n  },\n\n  subSectionTitle: {\n    color: '#C9190B',\n    fontWeight: 'bold',\n    fontSize: 10,\n    marginBottom: '10pt',\n  },\n});\n","import React from 'react';\nimport propTypes from 'prop-types';\n// eslint-disable-next-line rulesdir/disallow-fec-relative-imports\nimport { Table } from '@redhat-cloud-services/frontend-components-pdf-generator/dist/esm/index';\nimport { fixedPercentage } from 'Utilities/TextHelper';\n\nconst SystemsTable = ({ systems }) => {\n  const headerRow = ['System name', 'OS', 'Failed rules', 'Compliance score'];\n  const rows = systems.map((system) => [\n    system.name,\n    `RHEL ${system.osMajorVersion}.${system.osMinorVersion}`,\n    `${system.testResultProfiles[0].rulesFailed || ''}`,\n    fixedPercentage(system.testResultProfiles[0].score),\n  ]);\n\n  return <Table withHeader rows={[headerRow, ...rows]} />;\n};\n\nSystemsTable.propTypes = {\n  systems: propTypes.array,\n};\n\nexport default SystemsTable;\n","import React from 'react';\nimport propTypes from 'prop-types';\n// eslint-disable-next-line rulesdir/disallow-fec-relative-imports\nimport { Table } from '@redhat-cloud-services/frontend-components-pdf-generator/dist/esm/index';\n\nconst UnsupportedSystemsTable = ({ systems, ssgFinder }) => {\n  const headerRow = [\n    'System name',\n    'OS',\n    'Running SSG version',\n    'Expected SSG version',\n  ];\n  const rows = systems.map((system) => [\n    system.name,\n    `RHEL ${system.osMajorVersion}.${system.osMinorVersion}`,\n    system.testResultProfiles[0]?.benchmark.version,\n    ssgFinder(system.osMajorVersion, system.osMinorVersion),\n  ]);\n\n  return <Table withHeader rows={[headerRow, ...rows]} />;\n};\n\nUnsupportedSystemsTable.propTypes = {\n  systems: propTypes.array,\n  ssgFinder: propTypes.func,\n};\n\nexport default UnsupportedSystemsTable;\n","import React from 'react';\nimport propTypes from 'prop-types';\n// eslint-disable-next-line rulesdir/disallow-fec-relative-imports\nimport { Table } from '@redhat-cloud-services/frontend-components-pdf-generator/dist/esm/index';\n\nconst NonReportedSystemsTable = ({ systems }) => {\n  const headerRow = ['System name', 'OS'];\n  const rows = systems.map((system) => [\n    system.name,\n    `RHEL ${system.osMajorVersion}.${system.osMinorVersion}`,\n  ]);\n\n  return <Table withHeader rows={[headerRow, ...rows]} />;\n};\n\nNonReportedSystemsTable.propTypes = {\n  systems: propTypes.array,\n  ssgFinder: propTypes.func,\n};\n\nexport default NonReportedSystemsTable;\n","import React from 'react';\nimport propTypes from 'prop-types';\n// eslint-disable-next-line rulesdir/disallow-fec-relative-imports\nimport { Table } from '@redhat-cloud-services/frontend-components-pdf-generator/dist/esm/index';\n\nconst identifierLabel = ({ identifier }) => (identifier || '{}').label || '';\n\nconst capitalize = (str = '') => str.charAt(0).toUpperCase() + str.slice(1);\n\nconst RulesTable = ({ rules }) => {\n  const headerRow = ['Rule name', 'ID', 'Severity', 'Failed systems'];\n  const failedRuleRows = rules.slice(0, 10).map((rule) => [\n    rule.title,\n    identifierLabel(rule),\n    // TODO: Add icon svg for severity\n    capitalize(rule?.severity),\n    `${rule.failedCount}`,\n  ]);\n\n  return <Table withHeader rows={[headerRow, ...failedRuleRows]} />;\n};\n\nRulesTable.propTypes = {\n  rules: propTypes.array,\n};\n\nexport default RulesTable;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Text, View } from '@react-pdf/renderer';\n\n// TODO: Move into pdf-generator components as option to render title at the bottom\nconst PanelItem = (props) => {\n  const { children, title } = props;\n  return (\n    <View\n      style={{\n        justifyContent: 'space-evenly',\n        width: '24%',\n        paddingRight: '1%',\n      }}\n    >\n      <View>\n        <Text style={{ color: '#C9190B', fontSize: 20 }}>{children}</Text>\n      </View>\n      <Text>{title}</Text>\n    </View>\n  );\n};\n\nPanelItem.propTypes = {\n  children: propTypes.node,\n  title: propTypes.string,\n};\n\nexport default PanelItem;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Text, View } from '@react-pdf/renderer';\nimport styles from './StyleSheet';\n\nconst SubSection = ({ children, metaTitle, title }) => {\n  return (\n    <View\n      style={{\n        marginBottom: '20pt',\n      }}\n    >\n      <View\n        style={{\n          justifyContent: 'start',\n        }}\n      >\n        <Text\n          style={{\n            ...styles.subSectionTitle,\n            width: '70%',\n          }}\n        >\n          {title}\n        </Text>\n        <Text>{metaTitle}</Text>\n      </View>\n\n      {children}\n    </View>\n  );\n};\n\nSubSection.propTypes = {\n  children: propTypes.node,\n  metaTitle: propTypes.string,\n  title: propTypes.string,\n};\n\nexport default SubSection;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { paletteColors } from '../../../../constants';\n// eslint-disable-next-line rulesdir/disallow-fec-relative-imports\nimport { Chart } from '@redhat-cloud-services/frontend-components-pdf-generator/dist/esm/index';\nimport { fixedPercentage } from 'Utilities/TextHelper';\n\n// TODO Legend table style need to be disablable\nconst ComplianceChart = ({\n  policy: { percentCompliant = 0 },\n  compliantSystemCount,\n  nonCompliantSystemCount,\n  unsupportedSystemCount,\n  nonReportingSystemCount,\n}) => {\n  const compliantSystemsChartData = [\n    {\n      x: `${compliantSystemCount} systems compliant`,\n      y: compliantSystemCount,\n    },\n    {\n      x: `${nonCompliantSystemCount} systems non-compliant`,\n      y: nonCompliantSystemCount,\n    },\n    ...(unsupportedSystemCount > 0\n      ? [\n          {\n            x: `${unsupportedSystemCount} systems not supported`,\n            y: unsupportedSystemCount,\n            color: paletteColors.gold300,\n          },\n        ]\n      : []),\n    ...(nonReportingSystemCount > 0\n      ? [\n          {\n            x: `${nonReportingSystemCount} systems never reported`,\n            y: nonReportingSystemCount,\n          },\n        ]\n      : []),\n  ];\n  const compliancePercentage = fixedPercentage(percentCompliant);\n\n  return (\n    <Chart\n      legendHeader={''}\n      chartType=\"donut\"\n      subTitle=\"Compliant\"\n      colorSchema=\"multi\"\n      title={compliancePercentage}\n      data={compliantSystemsChartData}\n    />\n  );\n};\n\nComplianceChart.propTypes = {\n  policy: propTypes.object,\n  compliantSystemCount: propTypes.number,\n  nonCompliantSystemCount: propTypes.number,\n  unsupportedSystemCount: propTypes.number,\n  nonReportingSystemCount: propTypes.number,\n};\n\nexport default ComplianceChart;\n","import React, { Fragment } from 'react';\nimport propTypes from 'prop-types';\nimport { Text, View } from '@react-pdf/renderer';\n// eslint-disable-next-line rulesdir/disallow-fec-relative-imports\nimport {\n  Panel,\n  Table,\n  Column,\n  Section,\n} from '@redhat-cloud-services/frontend-components-pdf-generator';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { fixedPercentage } from 'Utilities/TextHelper';\nimport styles from './ReportPDF/StyleSheet';\nimport SystemsTable from './ReportPDF/SystemsTable';\nimport UnsupportedSystemsTable from './ReportPDF/UnsupportedSystemsTable';\nimport NonReportedSystemsTable from './ReportPDF/NonReportedSystemsTable';\nimport RulesTable from './ReportPDF/RulesTable';\nimport PanelItem from './ReportPDF/PanelItem';\nimport SubSection from './ReportPDF/SubSection';\nimport ComplianceChart from './ReportPDF/ComplianceChart';\n\nconst ReportPDF = ({ data, ssgFinder }) => {\n  const {\n    totalHostCount,\n    compliantSystems,\n    compliantSystemCount,\n    nonCompliantSystems,\n    nonCompliantSystemCount,\n    topTenFailedRules,\n    unsupportedSystems,\n    unsupportedSystemCount,\n    nonReportingSystems,\n    nonReportingSystemCount,\n    userNotes,\n    policy,\n  } = data;\n  const { testResultHostCount = 0, compliantHostCount = 0 } = policy;\n  const percentCompliant =\n    testResultHostCount != 0\n      ? fixedPercentage(Math.floor(100 * (compliantHostCount / totalHostCount)))\n      : 0;\n\n  return (\n    <Fragment>\n      <Text style={styles.subSectionTitle}>{`Report prepared ${\n        DateFormat({ date: new Date(), type: 'exact' }).props.children\n      }`}</Text>\n\n      {userNotes && (\n        <View style={styles.userNotes}>\n          <View style={styles.userNotesTitle}>\n            <Text>User notes</Text>\n          </View>\n          <View>\n            <Text>{userNotes}</Text>\n          </View>\n        </View>\n      )}\n\n      <Section\n        title=\"Policy Details\"\n        titleProps={{\n          style: styles.sectionTitle,\n        }}\n      >\n        <Column style={{ width: '150px' }}>\n          <Table\n            // TODO: correct left side styling\n            rows={[\n              ['Policy type', policy.policyType],\n              ['Operating system', `RHEL ${policy.osMajorVersion}`],\n              ['Compliance threshold', `${policy.complianceThreshold}%`],\n              ['Business Objective', policy.businessObjective?.title || '--'],\n            ]}\n          />\n        </Column>\n        <Column>\n          <ComplianceChart\n            policy={{\n              ...policy,\n              percentCompliant,\n            }}\n            {...{\n              compliantSystemCount,\n              nonCompliantSystemCount,\n              unsupportedSystemCount,\n              nonReportingSystemCount,\n            }}\n          />\n        </Column>\n      </Section>\n\n      <Section\n        title=\"Systems\"\n        withColumn={false}\n        titleProps={{\n          style: styles.sectionTitle,\n        }}\n      >\n        <Panel withColumn={false} style={{ marginBottom: '20px' }}>\n          <PanelItem title=\"Non-compliant systems\">\n            {nonCompliantSystemCount}\n          </PanelItem>\n\n          {unsupportedSystemCount ? (\n            <PanelItem title=\"Systems with unsupported configuration\">\n              {unsupportedSystemCount}\n            </PanelItem>\n          ) : null}\n\n          {nonReportingSystemCount ? (\n            <PanelItem title=\"Systems never reported\">\n              {nonReportingSystemCount}\n            </PanelItem>\n          ) : null}\n\n          <PanelItem title=\"Compliant systems\">\n            {compliantSystemCount}\n          </PanelItem>\n        </Panel>\n\n        {nonCompliantSystems && nonCompliantSystemCount ? (\n          <SubSection title=\"Non-compliant systems\">\n            <SystemsTable systems={nonCompliantSystems} />\n          </SubSection>\n        ) : null}\n\n        {unsupportedSystems && unsupportedSystemCount ? (\n          <SubSection title=\"Systems with unsupported configuration\">\n            <UnsupportedSystemsTable\n              systems={unsupportedSystems}\n              ssgFinder={ssgFinder}\n            />\n          </SubSection>\n        ) : null}\n\n        {nonReportingSystems && nonReportingSystemCount ? (\n          <SubSection title=\"Systems never reported\">\n            <NonReportedSystemsTable systems={nonReportingSystems} />\n          </SubSection>\n        ) : null}\n\n        {compliantSystems && compliantSystemCount ? (\n          <SubSection title=\"Compliant systems\">\n            <SystemsTable systems={compliantSystems} />\n          </SubSection>\n        ) : null}\n      </Section>\n\n      {topTenFailedRules ? (\n        <Section\n          title=\"Rules\"\n          withColumn={false}\n          titleProps={{\n            style: styles.sectionTitle,\n          }}\n        >\n          <SubSection title=\"Top failed rules\">\n            <RulesTable rules={topTenFailedRules} />\n          </SubSection>\n        </Section>\n      ) : null}\n    </Fragment>\n  );\n};\n\nReportPDF.propTypes = {\n  data: propTypes.object,\n  ssgFinder: propTypes.func,\n};\n\nexport default ReportPDF;\n","class ApiClient {\n  DEFAULT_API_HEADERS = {\n    'Content-Type': 'application/vnd.api+json',\n    Accept: 'application/json',\n  };\n\n  constructor(options = {}) {\n    this.apiBase = options.apiBase || '/api';\n    this.path = options.path || '';\n    this.authenticate = options.authenticate || (() => Promise.resolve({}));\n    this.onUnauthorised = options.onUnauthorised || (() => Promise.resolve({}));\n    this.defaultHeaders = options.headers || this.DEFAULT_API_HEADERS;\n  }\n\n  async request(path, apiProps, method, options = {}) {\n    return await this.callAuthenticate()\n      .then(() => this.fetch(path, apiProps, method, options))\n      .then(this.checkForEmptyResponse)\n      .then((response) => this.checkForErrors(response, options))\n      .then((response) => response.json())\n      .catch(this.finalCatch);\n  }\n\n  finalCatch(promise) {\n    if (promise.errors === undefined) {\n      return Promise.reject({ title: 'Error parsing' });\n    } else {\n      return Promise.reject({ ...promise });\n    }\n  }\n\n  fetch(path, apiProps, method, options) {\n    let params = {\n      method: method || 'get',\n      headers: this.defaultHeaders,\n      credentials: 'include',\n    };\n    const fullPath = `${this.apiBase}${this.path ? this.path : ''}${\n      path ? path : ''\n    }`;\n    let url = new URL(fullPath, window.location.origin);\n    if (options.params) {\n      const params = Object.keys(options.params)\n        .map(\n          (key) =>\n            encodeURIComponent(key) +\n            '=' +\n            encodeURIComponent(options.params[key])\n        )\n        .join('&');\n      url.search = new URLSearchParams(params);\n    }\n\n    if (apiProps) {\n      params.body = JSON.stringify(apiProps);\n    }\n\n    return fetch(url, params);\n  }\n\n  checkForEmptyResponse(response) {\n    return response.status === 204 ? { json: () => ({}) } : response;\n  }\n\n  checkForErrors(response, options = {}) {\n    if (response.status === 404 && options.ignore404) {\n      return { json: () => ({}) };\n    }\n\n    if (response.status === 401) {\n      return this.onUnauthorised();\n    }\n\n    const responseCloneJson = response.clone\n      ? response.clone().json()\n      : response;\n\n    if (response.status === 422) {\n      return responseCloneJson.then((json) =>\n        Promise.reject({ ...json, title: 'Validation error' })\n      );\n    }\n\n    if (response.status >= 400 && response.status <= 600) {\n      return responseCloneJson.then((json) => Promise.reject(json.errors[0]));\n    }\n\n    return response;\n  }\n\n  callAuthenticate() {\n    return Promise.resolve(this.authenticate() || true);\n  }\n\n  create(path, apiProps) {\n    return this.request(path, apiProps, 'post');\n  }\n\n  update(path, apiProps) {\n    return this.request(path, apiProps, 'put');\n  }\n\n  get(path, options = {}) {\n    return this.request(path, null, 'get', options);\n  }\n\n  destroy(path) {\n    return this.request(path, null, 'delete');\n  }\n}\n\nexport default ApiClient;\n","import ApiClient from './utils/ApiClient';\n\nconst useApi = (options) => {\n  const apiClient = new ApiClient({\n    ...options,\n  });\n\n  return apiClient;\n};\n\nexport default useApi;\n","import { useEffect, useState } from 'react';\nimport { COMPLIANCE_API_ROOT } from '@/constants';\nimport normalize from 'json-api-normalizer';\nimport useApi from './useApi';\n\nconst includePropAndDelete = (entity, prop) => {\n  const attributes = entity[prop];\n  let newEntity = entity;\n  delete newEntity[prop];\n  return { ...newEntity, ...attributes };\n};\n\nconst includeAttributes = (entity) =>\n  entity && includePropAndDelete(entity, 'attributes');\n\nconst includeRelationship = (entity, normalizedJson) => {\n  let relationships = {};\n  Object.entries(entity?.relationships || []).forEach((item) => {\n    const [relationship, relationshipData] = item;\n    relationships[relationship] = relationshipData?.data\n      .map((entity) =>\n        includeAttributes(normalizedJson?.[entity.type]?.[entity.id])\n      )\n      .filter((v) => !!v);\n  });\n  delete entity.relationships;\n  return { ...entity, ...relationships };\n};\n\nconst normalizeData = (json, type) => {\n  const jsonNormalized = normalize(json);\n  return Object.values(jsonNormalized[type] || {})?.map((entity) =>\n    includeRelationship(includeAttributes(entity), jsonNormalized)\n  );\n};\n\nconst fetchCollection = async (\n  apiClient,\n  collection,\n  params = {},\n  options = {}\n) => {\n  const json = await apiClient.get(`/${collection}`, { params });\n  const normalized = await normalizeData(json, options?.type || collection);\n\n  return {\n    collection: normalized,\n    meta: json.meta,\n    total: json.meta.total,\n    json,\n  };\n};\n\nconst useCollection = (collection, options = {}, dependencies = []) => {\n  const [collectionState, setCollectionState] = useState({\n    data: undefined,\n    loading: false,\n    error: undefined,\n  });\n  const apiClient = useApi({\n    apiBase: COMPLIANCE_API_ROOT,\n  });\n  const params = {\n    ...(options?.params || {}),\n    include: options?.include || [],\n  };\n\n  useEffect(() => {\n    if (!options?.skip) {\n      setCollectionState({\n        data: undefined,\n        loading: true,\n        error: undefined,\n      });\n\n      fetchCollection(apiClient, collection, params, options).then((data) => {\n        setCollectionState({\n          data,\n          loading: false,\n          error: undefined,\n        });\n      });\n    }\n  }, [...dependencies, options?.skip]);\n\n  return collectionState;\n};\n\nexport default useCollection;\n","import useCollection from 'Utilities/hooks/api/useCollection';\n\nconst compareAsIntegers = (firstString, secondString) =>\n  parseInt(firstString) === parseInt(secondString);\n\nconst useSupportedSsgFinder = (skip) => {\n  const { data: supportedSsgs } = useCollection('supported_ssgs', {\n    type: 'supportedSsg',\n    skip,\n  });\n  return (majorVersion, minorVersion) => {\n    const matchingVersion = (supportedSsgs || {}).collection?.find(\n      (profile) =>\n        compareAsIntegers(profile.osMajorVersion, majorVersion) &&\n        compareAsIntegers(profile.osMinorVersion, minorVersion)\n    );\n\n    return matchingVersion?.version || 'N/A';\n  };\n};\n\nexport default useSupportedSsgFinder;\n","import { dispatchNotification } from 'Utilities/Dispatcher';\nimport useQueryExportData from './useQueryExportData';\nimport usePDFBuilder from './usePDFBuilder';\nimport useSupportedSsgFinder from './useSupportedSsgFinder';\n\n// Hook to provide a function that fetches the necessary data to export\n// and compile it into pages for the pdf-generator DownloadButton\nconst usePDFExport = (exportSettings, policy) => {\n  const ssgFinder = useSupportedSsgFinder();\n  const queryExportData = useQueryExportData(exportSettings, policy, {\n    onError: () => {\n      dispatchNotification({\n        variant: 'danger',\n        title: 'Couldn’t download export',\n        description: 'Reinitiate this export to try again.',\n      });\n    },\n    onComplete: () => {\n      dispatchNotification({\n        variant: 'success',\n        title: 'Downloading export',\n      });\n    },\n  });\n  const buildPDFPages = usePDFBuilder(policy);\n\n  const exportPDF = async () => {\n    dispatchNotification({\n      variant: 'info',\n      title: 'Preparing export',\n      description: 'Once complete, your download will start automatically.',\n    });\n    const data = await queryExportData();\n    return await buildPDFPages(data, ssgFinder);\n  };\n\n  return exportPDF;\n};\n\nexport default usePDFExport;\n","import React from 'react';\nimport ReportPDF from '../Components/ReportPDF';\n\n// (Eventually) responsible for rendering sections and splitting into pages\nconst usePDFBuilder = (policy) => async (data, ssgFinder) =>\n  [\n    <ReportPDF\n      key=\"pdf-page-1\"\n      data={{ ...data, policy }}\n      ssgFinder={ssgFinder}\n    />,\n  ];\n\nexport default usePDFBuilder;\n","import React from 'react';\nimport { Button, Spinner } from '@patternfly/react-core';\nimport { useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n// eslint-disable-next-line\nimport { DownloadButton } from '@redhat-cloud-services/frontend-components-pdf-generator/dist/esm/index';\nimport {\n  ComplianceModal,\n  StateViewWithError,\n  StateViewPart,\n} from 'PresentationalComponents';\nimport { useLinkToBackground } from 'Utilities/Router';\nimport { GET_PROFILE } from './constants';\nimport ExportPDFForm from './Components/ExportPDFForm';\nimport usePDFExport from './hooks/usePDFExport';\nimport useExportSettings from './hooks/useExportSettings';\n\n// Provides that export settings modal accessible in the report details\nexport const ReportDownload = () => {\n  const { report_id: policyId } = useParams();\n  const linkToReport = useLinkToBackground('/reports/' + policyId);\n  const { data, loading, error } = useQuery(GET_PROFILE, {\n    variables: { policyId },\n  });\n  const policy = data?.profile;\n  const {\n    exportSettings,\n    setExportSetting,\n    isValid: settingsValid,\n  } = useExportSettings();\n\n  const exportPDF = usePDFExport(exportSettings, policy);\n  const exportFileName = `compliance-report--${\n    new Date().toISOString().split('T')[0]\n  }`;\n  const buttonLabel = 'Export report';\n  const buttonProps = {\n    ouiaId: 'ExportReportButton',\n    variant: 'primary',\n    isDisabled: !settingsValid,\n  };\n\n  const FallbackButton = () => <Button {...buttonProps}>{buttonLabel}</Button>;\n\n  const actions = [\n    <DownloadButton\n      groupName=\"Red Hat Insights\"\n      key=\"export\"\n      label={buttonLabel}\n      reportName={`Compliance:`}\n      type={policy && policy.name}\n      fileName={exportFileName}\n      asyncFunction={exportPDF}\n      buttonProps={buttonProps}\n      fallback={<FallbackButton />}\n      className=\"pf-u-mr-sm\"\n    />,\n    <Button\n      variant=\"secondary\"\n      key=\"cancel\"\n      ouiaId=\"ExportReportCancelButton\"\n      onClick={(event) => {\n        event.preventDefault();\n        window.history.back();\n      }}\n    >\n      Cancel\n    </Button>,\n  ];\n\n  return (\n    <ComplianceModal\n      isOpen\n      width=\"440px\"\n      ouiaId=\"DownloadReportModal\"\n      title=\"Compliance report\"\n      onClose={() => linkToReport()}\n      actions={actions}\n    >\n      <StateViewWithError stateValues={{ error, data, loading }}>\n        <StateViewPart stateKey=\"loading\">\n          <Spinner />\n        </StateViewPart>\n        <StateViewPart stateKey=\"data\">\n          <ExportPDFForm {...{ policy, setExportSetting, exportSettings }} />\n        </StateViewPart>\n      </StateViewWithError>\n    </ComplianceModal>\n  );\n};\n\nexport default ReportDownload;\n","import { useState } from 'react';\nimport pickBy from 'lodash/pickBy';\nimport useFeature from 'Utilities/hooks/useFeature';\nimport { DEFAULT_EXPORT_SETTINGS } from '../constants';\n\nconst preparedSettings = (withReporting) =>\n  pickBy(\n    DEFAULT_EXPORT_SETTINGS,\n    (_value, key) => !(key === 'nonReportingSystems' && !withReporting)\n  );\n\nconst useExportSettings = () => {\n  const systemsNotReporting = useFeature('systemsNotReporting');\n  const [exportSettings, setExportSettings] = useState(\n    preparedSettings(systemsNotReporting)\n  );\n\n  const setExportSetting = (setting) => (value) =>\n    setExportSettings({\n      ...exportSettings,\n      [setting]: value,\n    });\n\n  const isValid = () =>\n    Object.keys(exportSettings).some(\n      (key) => (key !== 'userNotes' && !!exportSettings[key]) === true\n    );\n\n  return {\n    exportSettings,\n    setExportSetting,\n    isValid: isValid(),\n  };\n};\n\nexport default useExportSettings;\n"],"names":["ReportedSystemRow","_ref","_row$testResultProfil","row","children","React","RowWrapper","style","testResultProfiles","length","background","borderLeft","borderRight","propTypes","QUERY","gql","_templateObject","_taggedTemplateLiteral","ReportDetails","policyName","pageTitle","route","policyId","useParams","report_id","pdfReportEnabled","useFeature","_useQuery","useQuery","variables","fetchPolicy","data","error","loading","profile","ssgVersions","policy","name","concat","_toConsumableArray","Set","profiles","flatMap","_ref2","benchmark","version","useTitleEntity","StateViewWithError","stateValues","StateViewPart","stateKey","PageHeader","ReportDetailsContentLoader","Main","EmptyTable","Spinner","Breadcrumb","ouiaId","BreadcrumbLinkItem","to","BreadcrumbItem","isActive","Grid","hasGutter","GridItem","sm","md","lg","xl","PageHeaderTitle","title","SubPageTitle","policyType","className","BackgroundLink","state","id","component","LinkButton","variant","isInline","ReportChart","hasLegend","chartClass","ReportDetailsDescription","span","SystemsTable","showOsMinorVersionFilter","osMajorVersion","columns","Columns","showLink","showOsInfo","compliantFilter","defaultFilter","tableProps","rowWrapper","showOnlySystemsWithTestResults","props","ReportDetailsWithNotReportedSystems","DEFAULT_EXPORT_SETTINGS","compliantSystems","nonCompliantSystems","unsupportedSystems","nonReportingSystems","topTenFailedRules","userNotes","undefined","GET_SYSTEMS","GET_PROFILE","_templateObject2","GET_RULES","_templateObject3","ExportPDFForm","setExportSetting","exportSettings","systemsNotReporting","Form","FormGroup","fieldId","label","Text","Checkbox","onChange","isChecked","TextArea","value","scannedProfiles","filter","lastScanned","hasProfiles","isSystemSupported","system","every","supported","compliantSystemsData","systems","hasScannedProfiles","hasOnlyCompliantScannedProfiles","compliant","isSystemCompliant","nonCompliantSystemsData","hasNonCompliantProfiles","isSystemNonCompliant","unsupportedSystemsData","isSystemUnsupported","prepareForExport","reportingSystemIds","map","includes","nonReportingSystemsData","_objectSpread","totalHostCount","compliantSystemCount","nonCompliantSystemCount","unsupportedSystemCount","nonReportingSystemCount","useFetchBatched","_usePromiseQueue","usePromiseQueue","isLoading","isResolving","resolve","fetchBatched","fetchFunction","total","batchSize","arguments","pages","Math","ceil","Array","_","pageIdx","useSystemsFetch","client","useApolloClient","perPage","page","query","fetchResults","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","abrupt","sent","_ref3","edges","_ref4","node","stop","useFetchRules","_callee2","_yield$fetchFunction$","_context2","t1","t0","t2","edge","topFailedRules","StyleSheet","bold","fontWeight","italic","fontStyle","metaTitle","color","marginBottom","backgroundColor","padding","userNotesTitle","sectionTitle","fontSize","subSectionTitle","rows","osMinorVersion","rulesFailed","fixedPercentage","score","Table","withHeader","UnsupportedSystemsTable","ssgFinder","_system$testResultPro","NonReportedSystemsTable","capitalize","str","charAt","toUpperCase","slice","RulesTable","failedRuleRows","rules","rule","identifier","severity","failedCount","PanelItem","View","justifyContent","width","paddingRight","SubSection","styles","ComplianceChart","_ref$policy$percentCo","percentCompliant","compliantSystemsChartData","x","y","paletteColors","compliancePercentage","Chart","legendHeader","chartType","subTitle","colorSchema","ReportPDF","_policy$businessObjec","_policy$testResultHos","testResultHostCount","_policy$compliantHost","compliantHostCount","floor","Fragment","DateFormat","date","Date","type","Section","titleProps","Column","complianceThreshold","businessObjective","withColumn","Panel","ApiClient","options","_classCallCheck","_defineProperty","Accept","this","apiBase","path","authenticate","Promise","onUnauthorised","defaultHeaders","headers","DEFAULT_API_HEADERS","_request","_createClass","key","apiProps","method","_this","_args","callAuthenticate","then","fetch","checkForEmptyResponse","response","checkForErrors","json","catch","finalCatch","_x5","_x6","_x7","apply","promise","errors","reject","_fetch","_x","_x2","_x3","_x4","toString","params","credentials","fullPath","url","URL","window","location","origin","Object","keys","encodeURIComponent","join","search","URLSearchParams","body","JSON","stringify","status","ignore404","responseCloneJson","clone","request","apiClient","includeAttributes","entity","prop","attributes","newEntity","includePropAndDelete","normalizeData","_Object$values","jsonNormalized","normalize","values","normalizedJson","relationships","entries","forEach","item","_item","_slicedToArray","relationship","relationshipData","_normalizedJson$entit","v","includeRelationship","fetchCollection","collection","normalized","get","meta","compareAsIntegers","firstString","secondString","parseInt","skip","supportedSsgs","dependencies","_useState","useState","_useState2","collectionState","setCollectionState","useApi","COMPLIANCE_API_ROOT","include","useEffect","useCollection","majorVersion","minorVersion","_collection","matchingVersion","find","useSupportedSsgFinder","queryExportData","_ref7","onComplete","onError","fetchSystems","fetchRules","_callee3","exportData","_context3","useQueryExportData","dispatchNotification","description","buildPDFPages","usePDFBuilder","exportPDF","ReportDownload","linkToReport","useLinkToBackground","_useExportSettings","withReporting","pickBy","_value","setExportSettings","setting","isValid","some","useExportSettings","settingsValid","usePDFExport","exportFileName","toISOString","split","buttonLabel","buttonProps","isDisabled","FallbackButton","Button","actions","DownloadButton","groupName","reportName","fileName","asyncFunction","fallback","onClick","event","preventDefault","history","back","ComplianceModal","isOpen","onClose"],"sourceRoot":""}