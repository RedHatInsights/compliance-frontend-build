{"version":3,"sources":["webpack:///./src/SmartComponents/SystemDetails/SystemDetails.js"],"names":["QUERY","gql","SystemDetails","route","inventoryId","useParams","useQuery","variables","data","error","loading","systemName","system","name","useTitleEntity","stateValues","stateKey","Breadcrumb","ouiaId","to","BreadcrumbItem","isActive","hidePassed","size","SkeletonSize","propTypes"],"mappings":"2VAuBMA,GAAQC,QAAH,kIASEC,EAAgB,SAAC,GAAc,MAAZC,EAAY,EAAZA,MACpBC,GAAgBC,iBAAhBD,YACR,GAAiCE,cAASN,EAAO,CAC7CO,UAAW,CAAEH,iBADTI,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAAOC,EAArB,EAAqBA,QAGfC,EAAaH,SAAH,UAAGA,EAAMI,cAAT,aAAG,EAAcC,KAIjC,OAFAC,OAAeX,EAAOQ,GAEf,kBAAC,KAAD,CAAoBI,YAAc,CAAEN,QAAOD,OAAME,YACpD,kBAAC,KAAD,CAAeM,SAAS,QACpB,kBAAC,IAAD,KACI,kBAAC,EAAAC,WAAD,CAAYC,OAAO,+BACf,kBAAC,KAAD,CAAoBC,GAAG,KAAvB,cAGA,kBAAC,KAAD,CAAoBA,GAAG,YAAvB,WAGA,kBAAC,EAAAC,eAAD,CAAgBC,UAAQ,GAAGV,IAE/B,kBAAC,KAAD,MACA,8BAEJ,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAyBW,YAAU,EAAClB,YAAcA,MAG1D,kBAAC,KAAD,CAAeY,SAAS,WACpB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAUO,KAAOC,aAMjCtB,EAAcuB,UAAY,CACtBtB,MAAOsB,YAGX","file":"js/SystemDetails.f4e1a453d9925ade189a.js","sourcesContent":["import React from 'react';\nimport propTypes from 'prop-types';\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/client';\nimport {\n    useParams\n} from 'react-router-dom';\nimport PageHeader from '@redhat-cloud-services/frontend-components/PageHeader';\nimport Skeleton, { SkeletonSize } from '@redhat-cloud-services/frontend-components/Skeleton';\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport {\n    Breadcrumb,\n    BreadcrumbItem\n} from '@patternfly/react-core';\nimport ComplianceSystemDetails from '@redhat-cloud-services/frontend-components-inventory-compliance/Compliance';\nimport {\n    BreadcrumbLinkItem,\n    StateViewWithError,\n    StateViewPart\n} from 'PresentationalComponents';\nimport { InventoryDetails } from 'SmartComponents';\nimport { useTitleEntity } from 'Utilities/hooks/useDocumentTitle';\n\nconst QUERY = gql`\nquery System($inventoryId: String!){\n    system(id: $inventoryId) {\n        id\n        name\n    }\n}\n`;\n\nexport const SystemDetails = ({ route }) => {\n    const { inventoryId } = useParams();\n    const { data, error, loading } = useQuery(QUERY, {\n        variables: { inventoryId }\n    });\n    const systemName = data?.system?.name;\n\n    useTitleEntity(route, systemName);\n\n    return <StateViewWithError stateValues={ { error, data, loading } }>\n        <StateViewPart stateKey='data'>\n            <PageHeader>\n                <Breadcrumb ouiaId=\"SystemDetailsPathBreadcrumb\">\n                    <BreadcrumbLinkItem to='/'>\n                        Compliance\n                    </BreadcrumbLinkItem>\n                    <BreadcrumbLinkItem to='/systems'>\n                        Systems\n                    </BreadcrumbLinkItem>\n                    <BreadcrumbItem isActive>{ systemName }</BreadcrumbItem>\n                </Breadcrumb>\n                <InventoryDetails />\n                <br/>\n            </PageHeader>\n            <Main>\n                <ComplianceSystemDetails hidePassed inventoryId={ inventoryId } />\n            </Main>\n        </StateViewPart>\n        <StateViewPart stateKey='loading'>\n            <PageHeader>\n                <Skeleton size={ SkeletonSize.md } />\n            </PageHeader>\n        </StateViewPart>\n    </StateViewWithError>;\n};\n\nSystemDetails.propTypes = {\n    route: propTypes.object\n};\n\nexport default SystemDetails;\n"],"sourceRoot":""}