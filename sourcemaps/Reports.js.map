{"version":3,"sources":["webpack:///./src/SmartComponents/Reports/Reports.js"],"names":["QUERY","gql","Reports","reportCards","pageHeader","useQuery","data","error","loading","policies","allProfiles","filter","profile","totalHostCount","beta","window","location","pathname","split","length","className","title","map","policy","i","sm","md","lg","xl","key","style","paddingBottom","stateValues","stateKey","gutter","routerParams"],"mappings":"ilBAmBA,IAAMA,EAAQC,IAAH,KAmBEC,EAAU,WAAM,IAErBC,EACAC,EAHqB,EACQC,YAASL,GAAlCM,EADiB,EACjBA,KAAMC,EADW,EACXA,MAAOC,EADI,EACJA,QAIrB,IAAKA,GAAWF,EAAM,CAClB,IAAMG,EAAWH,EAAKI,YAAYC,QAAO,SAACC,GAAD,OAAaA,EAAQC,eAAiB,KACzEC,EAAkD,SAA3CC,OAAOC,SAASC,SAASC,MAAM,KAAK,GAE7CT,EAASU,QACTf,EAAa,kBAAC,aAAD,CAAYgB,UAAYN,EAAO,mBAAqB,sBAC7D,kBAAC,kBAAD,CAAiBO,MAAM,uBACrBP,EAAO,kBAAC,IAAD,MAAgB,kBAAC,IAAD,OAG7BX,EAAcM,EAASa,KACnB,SAACC,EAAQC,GAAT,OACI,kBAAC,IAAD,CAAUC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,IAAKL,GACzC,kBAAC,IAAD,CACIK,IAAKL,EACLD,OAAQA,UAKxBnB,EAAa,kBAAC,aAAD,CAAY0B,MAAO,CAAEC,cAAe,KAAM,kBAAC,kBAAD,CAAiBV,MAAM,gBAC9ElB,EAAc,kBAAC,IAAD,OAItB,OAAO,kBAAC,IAAD,CAAoB6B,YAAc,CAAEzB,QAAOD,OAAME,YACpD,kBAAC,IAAD,CAAeyB,SAAS,WACpB,kBAAC,aAAD,KACI,kBAAC,kBAAD,CAAiBZ,MAAM,gBAE3B,kBAAC,OAAD,KACI,yBAAKD,UAAU,mBACX,kBAAC,IAAD,CAAMc,OAAO,MACT,kBAAC,IAAD,UAKhB,kBAAC,IAAD,CAAeD,SAAS,QAClB7B,EACF,kBAAC,OAAD,KACI,yBAAKgB,UAAU,mBACX,kBAAC,IAAD,CAAMc,OAAO,MACP/B,QAQXgC,cAAajC","file":"js/Reports.js","sourcesContent":["import React from 'react';\nimport {\n    ComplianceTabs,\n    ReportTabs,\n    LoadingComplianceCards,\n    ReportCard,\n    CompliancePoliciesEmptyState,\n    StateViewWithError,\n    StateViewPart\n} from 'PresentationalComponents';\nimport { PageHeader, PageHeaderTitle, Main } from '@redhat-cloud-services/frontend-components';\nimport routerParams from '@redhat-cloud-services/frontend-components-utilities/files/RouterParams';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport {\n    Grid,\n    GridItem\n} from '@patternfly/react-core';\n\nconst QUERY = gql`\n{\n    allProfiles {\n        id\n        name\n        refId\n        description\n        totalHostCount\n        compliantHostCount\n        majorOsVersion\n        complianceThreshold\n        businessObjective {\n            id\n            title\n        }\n    }\n}\n`;\n\nexport const Reports = () => {\n    const { data, error, loading } = useQuery(QUERY);\n    let reportCards;\n    let pageHeader;\n\n    if (!loading && data) {\n        const policies = data.allProfiles.filter((profile) => profile.totalHostCount > 0);\n        const beta = window.location.pathname.split('/')[1] === 'beta';\n\n        if (policies.length) {\n            pageHeader = <PageHeader className={ beta ? 'beta-page-header' : 'stable-page-header' }>\n                <PageHeaderTitle title=\"Compliance reports\" />\n                { beta ? <ReportTabs/> : <ComplianceTabs/> }\n\n            </PageHeader>;\n            reportCards = policies.map(\n                (policy, i) =>\n                    <GridItem sm={12} md={12} lg={6} xl={4} key={i}>\n                        <ReportCard\n                            key={i}\n                            policy={policy}\n                        />\n                    </GridItem>\n            );\n        } else {\n            pageHeader = <PageHeader style={{ paddingBottom: 22 }}><PageHeaderTitle title=\"Compliance\" /></PageHeader>;\n            reportCards = <CompliancePoliciesEmptyState />;\n        }\n    }\n\n    return <StateViewWithError stateValues={ { error, data, loading } }>\n        <StateViewPart stateKey='loading'>\n            <PageHeader>\n                <PageHeaderTitle title=\"Compliance\" />\n            </PageHeader>\n            <Main>\n                <div className=\"policies-donuts\">\n                    <Grid gutter='md'>\n                        <LoadingComplianceCards/>\n                    </Grid>\n                </div>\n            </Main>\n        </StateViewPart>\n        <StateViewPart stateKey='data'>\n            { pageHeader }\n            <Main>\n                <div className=\"policies-donuts\">\n                    <Grid gutter='md'>\n                        { reportCards }\n                    </Grid>\n                </div>\n            </Main>\n        </StateViewPart>\n    </StateViewWithError>;\n};\n\nexport default routerParams(Reports);\n"],"sourceRoot":""}