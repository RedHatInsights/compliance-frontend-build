{"version":3,"sources":["webpack:///./src/SmartComponents/ErrorPage/ErrorPage.js","webpack:///./src/SmartComponents/ComplianceTabs/ComplianceTabs.js","webpack:///./node_modules/lodash/invert.js","webpack:///./node_modules/lodash/constant.js","webpack:///./node_modules/lodash/_createInverter.js","webpack:///./node_modules/lodash/_baseInverter.js","webpack:///./node_modules/lodash/_baseForOwn.js","webpack:///./node_modules/@patternfly/patternfly/components/EmptyState/empty-state.css?e907","webpack:///./node_modules/@patternfly/patternfly/components/EmptyState/empty-state.css","webpack:///./node_modules/react-truncate/lib/Truncate.js","webpack:///./src/SmartComponents/CompliancePolicyCard/CompliancePolicyCard.js","webpack:///./src/SmartComponents/CompliancePoliciesCards/CompliancePoliciesCards.js","webpack:///./src/SmartComponents/CompliancePolicies/CompliancePolicies.js"],"names":["ErrorPage","props","_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default","this","_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default","_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default","call","error","networkError","statusCode","window","insights","chrome","auth","logout","message","react__WEBPACK_IMPORTED_MODULE_5__","propTypes","prop_types__WEBPACK_IMPORTED_MODULE_6___default","a","object","__webpack_exports__","ComplianceTabs","state","tabPaths","0","_Routes__WEBPACK_IMPORTED_MODULE_8__","compliancePolicies","1","complianceSystems","redirect","_","tabIndex","_this","history","push","path","match","currentKey","Number","lodash_invert__WEBPACK_IMPORTED_MODULE_11___default","tabs","react__WEBPACK_IMPORTED_MODULE_7___default","createElement","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_9__","title","key","eventKey","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_10__","activeKey","onSelect","aria-label","react__WEBPACK_IMPORTED_MODULE_7__","_redhat_cloud_services_frontend_components_utilities_files_RouterParams__WEBPACK_IMPORTED_MODULE_5___default","constant","__webpack_require__","createInverter","identity","nativeObjectToString","Object","prototype","toString","invert","result","value","module","exports","baseInverter","setter","toIteratee","iteratee","baseForOwn","accumulator","baseFor","keys","content","i","options","hmr","transform","insertInto","undefined","locals","r","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","_extends","assign","target","arguments","length","source","hasOwnProperty","_createClass","defineProperties","descriptor","enumerable","configurable","writable","defineProperty","Constructor","protoProps","staticProps","Truncate","_Component","_ref","instance","TypeError","_classCallCheck","_len","args","Array","_key","self","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","apply","concat","styles","ellipsis","position","visibility","top","left","elements","onResize","bind","onTruncate","calcTargetWidth","measureWidth","getLines","renderLine","subClass","superClass","create","constructor","setPrototypeOf","_inherits","text","canvas","document","canvasContext","getContext","parentNode","removeChild","addEventListener","prevProps","children","forceUpdate","width","timeout","removeEventListener","cancelAnimationFrame","node","div","contentKey","HTMLElement","innerHTML","replace","test","didTruncate","requestAnimationFrame","callback","targetWidth","Math","floor","getBoundingClientRect","style","getComputedStyle","font","join","setState","measureText","offsetWidth","_props","numLines","lines","trimWhitespace","innerText","trimRight","textLines","split","map","line","ellipsisWidth","textWords","resultLine","textRest","lower","upper","middle","slice","lastLineText","pop","_lower","_upper","_middle","splice","shift","arr","br","_this2","_props2","spanProps","obj","indexOf","_objectWithoutProperties","ref","targetEl","textEl","ellipsisEl","oneOfType","oneOf","number","bool","func","defaultProps","SmartComponents_CompliancePolicyCard_CompliancePolicyCard","CompliancePolicyCard","policy","classCallCheck_default","possibleConstructorReturn_default","getPrototypeOf_default","onMouseover","cardTitle","name","onMouseout","react_default","compliantHostCount","compliant_host_count","totalHostCount","total_host_count","donutValues","x","y","compliancePercentage","label","className","height","ChartLabel","fontSize","textAnchor","verticalAnchor","fill","Card","widget-id","ref_id","CardBody","Text","fontWeight","color","component","small","TextContent","onMouseEnter","onMouseLeave","h4","Grid","GridItem","display","span","textAlign","ChartDonut","data","identifier","theme","ChartTheme","light","blue","Link","to","id","Component","QUERY","src_default","_templateObject","CompliancePoliciesCards_LoadingComplianceCard","react_content_loader_es","speed","primaryColor","secondaryColor","rx","ry","cx","cy","CompliancePoliciesCards_LoadingComplianceCards","gutter","sm","md","lg","xl","SmartComponents_CompliancePoliciesCards_CompliancePoliciesCards","RouterParams_default","react_apollo_browser_umd","query","loading","policies","allProfiles","policyCards","Bullseye","EmptyState","EmptyStateIcon","size","icon","cloudServer_icon","Title","empty_state_default","emptyStateBody","blockquote","Button","variant","href","Fragment","frontend_components"],"mappings":"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","file":"js/CompliancePolicies.js","sourcesContent":["import { Component } from 'react';\nimport propTypes from 'prop-types';\n\nclass ErrorPage extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { error } = this.props;\n        if (error.networkError && error.networkError.statusCode === 401) {\n            window.insights.chrome.auth.logout();\n        }\n\n        return 'Oops! There was an error loading Compliance data. If you need to contact ' +\n            'Red Hat Support about this, this is the exact error: ' + ' ' + error.message;\n    }\n}\n\nErrorPage.propTypes = {\n    error: propTypes.object\n};\n\nexport default ErrorPage;\n","import routerParams from '@redhat-cloud-services/frontend-components-utilities/files/RouterParams';\nimport propTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { paths } from '../../Routes';\nimport { Tabs, Tab } from '@patternfly/react-core';\nimport invert from 'lodash/invert';\n\nclass ComplianceTabs extends Component {\n    state = {\n        tabPaths: {\n            0: paths.compliancePolicies,\n            1: paths.complianceSystems\n        }\n    };\n\n    redirect = (_, tabIndex) => {\n        const { tabPaths } = this.state;\n        this.props.history.push(tabPaths[tabIndex]);\n    }\n\n    render() {\n        const { match: { path } } = this.props;\n        const { tabPaths } = this.state;\n        let currentKey = Number(invert(tabPaths)[path]);\n\n        const tabs = [\n            <Tab title={'Policies'} key={0} eventKey={0}></Tab>,\n            <Tab title={'Systems'} key={1} eventKey={1}></Tab>\n        ];\n\n        return (\n            <Tabs activeKey={currentKey} onSelect={this.redirect} aria-label=\"Compliance Tabs\">\n                { tabs }\n            </Tabs>\n        );\n    }\n}\n\nComplianceTabs.propTypes = {\n    history: propTypes.object,\n    match: propTypes.object\n};\n\nexport default routerParams(ComplianceTabs);\n","var constant = require('./constant'),\n    createInverter = require('./_createInverter'),\n    identity = require('./identity');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Creates an object composed of the inverted keys and values of `object`.\n * If `object` contains duplicate values, subsequent values overwrite\n * property assignments of previous values.\n *\n * @static\n * @memberOf _\n * @since 0.7.0\n * @category Object\n * @param {Object} object The object to invert.\n * @returns {Object} Returns the new inverted object.\n * @example\n *\n * var object = { 'a': 1, 'b': 2, 'c': 1 };\n *\n * _.invert(object);\n * // => { '1': 'c', '2': 'b' }\n */\nvar invert = createInverter(function(result, value, key) {\n  if (value != null &&\n      typeof value.toString != 'function') {\n    value = nativeObjectToString.call(value);\n  }\n\n  result[value] = key;\n}, constant(identity));\n\nmodule.exports = invert;\n","/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\nmodule.exports = constant;\n","var baseInverter = require('./_baseInverter');\n\n/**\n * Creates a function like `_.invertBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} toIteratee The function to resolve iteratees.\n * @returns {Function} Returns the new inverter function.\n */\nfunction createInverter(setter, toIteratee) {\n  return function(object, iteratee) {\n    return baseInverter(object, setter, toIteratee(iteratee), {});\n  };\n}\n\nmodule.exports = createInverter;\n","var baseForOwn = require('./_baseForOwn');\n\n/**\n * The base implementation of `_.invert` and `_.invertBy` which inverts\n * `object` with values transformed by `iteratee` and set by `setter`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform values.\n * @param {Object} accumulator The initial inverted object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction baseInverter(object, setter, iteratee, accumulator) {\n  baseForOwn(object, function(value, key, object) {\n    setter(accumulator, iteratee(value), key, object);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseInverter;\n","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;\n","\nvar content = require(\"!!../../../../css-loader/index.js!../../../../sass-loader/lib/loader.js??ref--5-2!./empty-state.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../css-loader/index.js!../../../../sass-loader/lib/loader.js??ref--5-2!./empty-state.css\", function() {\n\t\tvar newContent = require(\"!!../../../../css-loader/index.js!../../../../sass-loader/lib/loader.js??ref--5-2!./empty-state.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/* stylelint-enable */\\n.pf-c-empty-state {\\n  --pf-c-empty-state--Padding: var(--pf-global--spacer--xl);\\n  --pf-c-empty-state__icon--MarginBottom: var(--pf-global--spacer--lg);\\n  --pf-c-empty-state__icon--FontSize: var(--pf-global--icon--FontSize--xl);\\n  --pf-c-empty-state__icon--Color: var(--pf-global--icon--Color--light);\\n  --pf-c-empty-state__body--MarginTop: var(--pf-global--spacer--md);\\n  --pf-c-empty-state__body--Color: var(--pf-global--Color--200);\\n  --pf-c-empty-state--c-button--MarginTop: var(--pf-global--spacer--xl);\\n  --pf-c-empty-state--c-button__secondary--MarginTop: var(--pf-global--spacer--sm);\\n  --pf-c-empty-state__secondary--MarginTop: var(--pf-global--spacer--xl);\\n  --pf-c-empty-state__secondary--MarginRight: calc(var(--pf-global--spacer--xs) * -1);\\n  --pf-c-empty-state__secondary--MarginBottom: calc(var(--pf-global--spacer--xs) * -1);\\n  --pf-c-empty-state__secondary--c-button--MarginRight: var(--pf-global--spacer--xs);\\n  --pf-c-empty-state__secondary--c-button--MarginBottom: var(--pf-global--spacer--xs);\\n  --pf-c-empty-state--m-sm--MaxWidth: 25rem;\\n  --pf-c-empty-state--m-lg--MaxWidth: 37.5rem;\\n  padding: var(--pf-c-empty-state--Padding);\\n  text-align: center; }\\n\\n.pf-c-empty-state > .pf-c-button.pf-m-primary {\\n  margin-top: var(--pf-c-empty-state--c-button--MarginTop); }\\n\\n.pf-c-empty-state > .pf-c-button.pf-m-primary + .pf-c-empty-state__secondary {\\n  margin-top: var(--pf-c-empty-state--c-button__secondary--MarginTop); }\\n\\n.pf-c-empty-state.pf-m-sm {\\n  max-width: var(--pf-c-empty-state--m-sm--MaxWidth); }\\n\\n.pf-c-empty-state.pf-m-lg {\\n  max-width: var(--pf-c-empty-state--m-lg--MaxWidth); }\\n\\n.pf-c-empty-state__icon {\\n  margin-bottom: var(--pf-c-empty-state__icon--MarginBottom);\\n  font-size: var(--pf-c-empty-state__icon--FontSize);\\n  color: var(--pf-c-empty-state__icon--Color); }\\n\\n.pf-c-empty-state__body {\\n  margin-top: var(--pf-c-empty-state__body--MarginTop);\\n  color: var(--pf-c-empty-state__body--Color); }\\n\\n.pf-c-empty-state__secondary {\\n  display: flex;\\n  flex-wrap: wrap;\\n  justify-content: center;\\n  margin-top: var(--pf-c-empty-state__secondary--MarginTop);\\n  margin-right: var(--pf-c-empty-state__secondary--MarginRight);\\n  margin-bottom: var(--pf-c-empty-state__secondary--MarginBottom); }\\n\\n.pf-c-empty-state__secondary > .pf-c-button {\\n  margin-right: var(--pf-c-empty-state__secondary--c-button--MarginRight);\\n  margin-bottom: var(--pf-c-empty-state__secondary--c-button--MarginBottom); }\\n\", \"\"]);\n\n// exports\n","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nvar Truncate = function (_Component) {\n    _inherits(Truncate, _Component);\n\n    function Truncate() {\n        var _ref;\n\n        _classCallCheck(this, Truncate);\n\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n        }\n\n        var _this = _possibleConstructorReturn(this, (_ref = Truncate.__proto__ || Object.getPrototypeOf(Truncate)).call.apply(_ref, [this].concat(args)));\n\n        _this.state = {};\n        _this.styles = {\n            ellipsis: {\n                position: 'fixed',\n                visibility: 'hidden',\n                top: 0,\n                left: 0\n            }\n        };\n\n\n        _this.elements = {};\n\n        _this.onResize = _this.onResize.bind(_this);\n        _this.onTruncate = _this.onTruncate.bind(_this);\n        _this.calcTargetWidth = _this.calcTargetWidth.bind(_this);\n        _this.measureWidth = _this.measureWidth.bind(_this);\n        _this.getLines = _this.getLines.bind(_this);\n        _this.renderLine = _this.renderLine.bind(_this);\n        return _this;\n    }\n\n    _createClass(Truncate, [{\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n            var text = this.elements.text,\n                calcTargetWidth = this.calcTargetWidth,\n                onResize = this.onResize;\n\n\n            var canvas = document.createElement('canvas');\n            this.canvasContext = canvas.getContext('2d');\n\n            calcTargetWidth(function () {\n                // Node not needed in document tree to read its content\n                if (text) {\n                    text.parentNode.removeChild(text);\n                }\n            });\n\n            window.addEventListener('resize', onResize);\n        }\n    }, {\n        key: 'componentDidUpdate',\n        value: function componentDidUpdate(prevProps) {\n            // Render was based on outdated refs and needs to be rerun\n            if (this.props.children !== prevProps.children) {\n                this.forceUpdate();\n            }\n\n            // If the width prop has changed, recalculate size of contents\n            if (this.props.width !== prevProps.width) {\n                this.calcTargetWidth();\n            }\n        }\n    }, {\n        key: 'componentWillUnmount',\n        value: function componentWillUnmount() {\n            var ellipsis = this.elements.ellipsis,\n                onResize = this.onResize,\n                timeout = this.timeout;\n\n\n            ellipsis.parentNode.removeChild(ellipsis);\n\n            window.removeEventListener('resize', onResize);\n\n            window.cancelAnimationFrame(timeout);\n        }\n\n        // Shim innerText to consistently break lines at <br/> but not at \\n\n\n    }, {\n        key: 'innerText',\n        value: function innerText(node) {\n            var div = document.createElement('div');\n            var contentKey = 'innerText' in window.HTMLElement.prototype ? 'innerText' : 'textContent';\n\n            div.innerHTML = node.innerHTML.replace(/\\r\\n|\\r|\\n/g, ' ');\n\n            var text = div[contentKey];\n\n            var test = document.createElement('div');\n            test.innerHTML = 'foo<br/>bar';\n\n            if (test[contentKey].replace(/\\r\\n|\\r/g, '\\n') !== 'foo\\nbar') {\n                div.innerHTML = div.innerHTML.replace(/<br.*?[\\/]?>/gi, '\\n');\n                text = div[contentKey];\n            }\n\n            return text;\n        }\n    }, {\n        key: 'onResize',\n        value: function onResize() {\n            this.calcTargetWidth();\n        }\n    }, {\n        key: 'onTruncate',\n        value: function onTruncate(didTruncate) {\n            var onTruncate = this.props.onTruncate;\n\n\n            if (typeof onTruncate === 'function') {\n                this.timeout = window.requestAnimationFrame(function () {\n                    onTruncate(didTruncate);\n                });\n            }\n        }\n    }, {\n        key: 'calcTargetWidth',\n        value: function calcTargetWidth(callback) {\n            var target = this.elements.target,\n                calcTargetWidth = this.calcTargetWidth,\n                canvasContext = this.canvasContext,\n                width = this.props.width;\n\n            // Calculation is no longer relevant, since node has been removed\n\n            if (!target) {\n                return;\n            }\n\n            var targetWidth = width ||\n            // Floor the result to deal with browser subpixel precision\n            Math.floor(target.parentNode.getBoundingClientRect().width);\n\n            // Delay calculation until parent node is inserted to the document\n            // Mounting order in React is ChildComponent, ParentComponent\n            if (!targetWidth) {\n                return window.requestAnimationFrame(function () {\n                    return calcTargetWidth(callback);\n                });\n            }\n\n            var style = window.getComputedStyle(target);\n\n            var font = [style['font-weight'], style['font-style'], style['font-size'], style['font-family']].join(' ');\n\n            canvasContext.font = font;\n\n            this.setState({\n                targetWidth: targetWidth\n            }, callback);\n        }\n    }, {\n        key: 'measureWidth',\n        value: function measureWidth(text) {\n            return this.canvasContext.measureText(text).width;\n        }\n    }, {\n        key: 'ellipsisWidth',\n        value: function ellipsisWidth(node) {\n            return node.offsetWidth;\n        }\n    }, {\n        key: 'trimRight',\n        value: function trimRight(text) {\n            return text.replace(/\\s+$/, '');\n        }\n    }, {\n        key: 'getLines',\n        value: function getLines() {\n            var elements = this.elements,\n                _props = this.props,\n                numLines = _props.lines,\n                ellipsis = _props.ellipsis,\n                trimWhitespace = _props.trimWhitespace,\n                targetWidth = this.state.targetWidth,\n                innerText = this.innerText,\n                measureWidth = this.measureWidth,\n                onTruncate = this.onTruncate,\n                trimRight = this.trimRight;\n\n\n            var lines = [];\n            var text = innerText(elements.text);\n            var textLines = text.split('\\n').map(function (line) {\n                return line.split(' ');\n            });\n            var didTruncate = true;\n            var ellipsisWidth = this.ellipsisWidth(this.elements.ellipsis);\n\n            for (var line = 1; line <= numLines; line++) {\n                var textWords = textLines[0];\n\n                // Handle newline\n                if (textWords.length === 0) {\n                    lines.push();\n                    textLines.shift();\n                    line--;\n                    continue;\n                }\n\n                var resultLine = textWords.join(' ');\n\n                if (measureWidth(resultLine) <= targetWidth) {\n                    if (textLines.length === 1) {\n                        // Line is end of text and fits without truncating\n                        didTruncate = false;\n\n                        lines.push(resultLine);\n                        break;\n                    }\n                }\n\n                if (line === numLines) {\n                    // Binary search determining the longest possible line inluding truncate string\n                    var textRest = textWords.join(' ');\n\n                    var lower = 0;\n                    var upper = textRest.length - 1;\n\n                    while (lower <= upper) {\n                        var middle = Math.floor((lower + upper) / 2);\n\n                        var testLine = textRest.slice(0, middle + 1);\n\n                        if (measureWidth(testLine) + ellipsisWidth <= targetWidth) {\n                            lower = middle + 1;\n                        } else {\n                            upper = middle - 1;\n                        }\n                    }\n\n                    var lastLineText = textRest.slice(0, lower);\n\n                    if (trimWhitespace) {\n                        lastLineText = trimRight(lastLineText);\n\n                        // Remove blank lines from the end of text\n                        while (!lastLineText.length && lines.length) {\n                            var prevLine = lines.pop();\n\n                            lastLineText = trimRight(prevLine);\n                        }\n                    }\n\n                    resultLine = React.createElement(\n                        'span',\n                        null,\n                        lastLineText,\n                        ellipsis\n                    );\n                } else {\n                    // Binary search determining when the line breaks\n                    var _lower = 0;\n                    var _upper = textWords.length - 1;\n\n                    while (_lower <= _upper) {\n                        var _middle = Math.floor((_lower + _upper) / 2);\n\n                        var _testLine = textWords.slice(0, _middle + 1).join(' ');\n\n                        if (measureWidth(_testLine) <= targetWidth) {\n                            _lower = _middle + 1;\n                        } else {\n                            _upper = _middle - 1;\n                        }\n                    }\n\n                    // The first word of this line is too long to fit it\n                    if (_lower === 0) {\n                        // Jump to processing of last line\n                        line = numLines - 1;\n                        continue;\n                    }\n\n                    resultLine = textWords.slice(0, _lower).join(' ');\n                    textLines[0].splice(0, _lower);\n                }\n\n                lines.push(resultLine);\n            }\n\n            onTruncate(didTruncate);\n\n            return lines;\n        }\n    }, {\n        key: 'renderLine',\n        value: function renderLine(line, i, arr) {\n            if (i === arr.length - 1) {\n                return React.createElement(\n                    'span',\n                    { key: i },\n                    line\n                );\n            } else {\n                var br = React.createElement('br', { key: i + 'br' });\n\n                if (line) {\n                    return [React.createElement(\n                        'span',\n                        { key: i },\n                        line\n                    ), br];\n                } else {\n                    return br;\n                }\n            }\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var _this2 = this;\n\n            var target = this.elements.target,\n                _props2 = this.props,\n                children = _props2.children,\n                ellipsis = _props2.ellipsis,\n                lines = _props2.lines,\n                spanProps = _objectWithoutProperties(_props2, ['children', 'ellipsis', 'lines']),\n                targetWidth = this.state.targetWidth,\n                getLines = this.getLines,\n                renderLine = this.renderLine,\n                onTruncate = this.onTruncate;\n\n            var text = void 0;\n\n            var mounted = !!(target && targetWidth);\n\n            if (typeof window !== 'undefined' && mounted) {\n                if (lines > 0) {\n                    text = getLines().map(renderLine);\n                } else {\n                    text = children;\n\n                    onTruncate(false);\n                }\n            }\n\n            delete spanProps.onTruncate;\n            delete spanProps.trimWhitespace;\n\n            return React.createElement(\n                'span',\n                _extends({}, spanProps, { ref: function ref(targetEl) {\n                        _this2.elements.target = targetEl;\n                    } }),\n                React.createElement(\n                    'span',\n                    null,\n                    text\n                ),\n                React.createElement(\n                    'span',\n                    { ref: function ref(textEl) {\n                            _this2.elements.text = textEl;\n                        } },\n                    children\n                ),\n                React.createElement(\n                    'span',\n                    { ref: function ref(ellipsisEl) {\n                            _this2.elements.ellipsis = ellipsisEl;\n                        }, style: this.styles.ellipsis },\n                    ellipsis\n                )\n            );\n        }\n    }]);\n\n    return Truncate;\n}(Component);\n\nTruncate.propTypes = {\n    children: PropTypes.node,\n    ellipsis: PropTypes.node,\n    lines: PropTypes.oneOfType([PropTypes.oneOf([false]), PropTypes.number]),\n    trimWhitespace: PropTypes.bool,\n    width: PropTypes.number,\n    onTruncate: PropTypes.func\n};\nTruncate.defaultProps = {\n    children: '',\n    ellipsis: '…',\n    lines: 1,\n    trimWhitespace: false,\n    width: 0\n};\nexport default Truncate;\n;\n","import React from 'react';\nimport {\n    Link\n} from 'react-router-dom';\nimport Truncate from 'react-truncate';\nimport {\n    Card,\n    CardBody,\n    Text,\n    TextContent,\n    TextVariants,\n    Grid,\n    GridItem\n} from '@patternfly/react-core';\nimport {\n    ChartDonut,\n    ChartLabel,\n    ChartTheme\n} from '@patternfly/react-charts';\nimport '../../Charts.scss';\n\nclass CompliancePolicyCard extends React.Component {\n    constructor(policy) {\n        super(policy);\n        this.policy = policy.policy;\n        this.state = { cardTitle: <Truncate lines={1}>{this.policy.name}</Truncate> };\n    }\n\n    onMouseover = () => {\n        this.setState({ cardTitle: this.policy.name });\n    }\n\n    onMouseout = () => {\n        this.setState({ cardTitle: <Truncate lines={1}>{this.policy.name}</Truncate> });\n    }\n\n    render() {\n        const compliantHostCount = this.policy.compliant_host_count;\n        const totalHostCount = this.policy.total_host_count;\n        let donutValues = [\n            { x: 'Compliant', y: compliantHostCount },\n            { x: 'Non-compliant', y: totalHostCount - compliantHostCount }\n        ];\n        const compliancePercentage = Math.floor(100 *\n            (donutValues[0].y / (donutValues[0].y + donutValues[1].y))) + '%';\n        const label = (\n            <svg\n                className=\"chart-label\"\n                height={300}\n                width={300}\n            >\n                <ChartLabel\n                    style={{ fontSize: 26 }}\n                    text={compliancePercentage}\n                    textAnchor=\"middle\"\n                    verticalAnchor=\"middle\"\n                    x={150}\n                    y={135}\n                />\n                <ChartLabel\n                    style={{ fill: 'var(--pf-global--Color--200)' }}\n                    text=\"Systems above threshold\"\n                    textAnchor=\"middle\"\n                    verticalAnchor=\"middle\"\n                    x={150}\n                    y={165}\n                />\n            </svg>\n        );\n\n        return (\n            <Card widget-id={this.policy.ref_id}>\n                <CardBody>\n                    <Text style={{ fontWeight: '500', color: 'var(--pf-global--Color--200)' }} component={TextVariants.small}>\n                        External Policy\n                    </Text>\n                    <TextContent>\n                        <Text onMouseEnter={this.onMouseover.bind(this)} onMouseLeave={this.onMouseout.bind(this)}\n                            style={{ fontWeight: '500' }} component={TextVariants.h4}>\n                            {this.state.cardTitle}\n                        </Text>\n                    </TextContent>\n                    <TextContent className=\"chart-title\">\n                        <Grid>\n                            <GridItem style={{ display: 'inline-flex' }} span={12}>\n                                <TextContent>\n                                    <span style={{ fontSize: '30px', fontWeight: '500' }}>\n                                        { compliantHostCount }\n                                    </span>\n                                    <span style={{ fontWeight: '500', color: 'var(--pf-global--Color--200)' }}>\n                                        {' '}of{' '}\n                                    </span>\n                                    <span style={{ fontSize: '30px', fontWeight: '500' }}>\n                                        { totalHostCount }\n                                    </span>\n                                </TextContent>\n                            </GridItem>\n                            <GridItem span={8}>\n                                <Text\n                                    style={{ fontWeight: '500', color: 'var(--pf-global--Color--200)' }}\n                                    component={TextVariants.small}\n                                >\n                                    Systems above compliance threshold\n                                </Text>\n                            </GridItem>\n                        </Grid>\n                    </TextContent>\n                </CardBody>\n                <hr/>\n                <CardBody>\n                    <Grid>\n                        <GridItem style={{ textAlign: 'center' }} span={12}>\n                            <div className='chart-inline'>\n                                <div className='card-chart-container'>\n                                    {label}\n                                    <ChartDonut data={donutValues}\n                                        identifier={this.policy.name.replace(/ /g, '')}\n                                        theme={ChartTheme.light.blue}\n                                        height={205}\n                                        width={205}\n                                    />\n                                </div>\n                            </div>\n                        </GridItem>\n                    </Grid>\n                    <TextContent style={{ textAlign: 'right' }}>\n                        <Text component={TextVariants.small} style={{ fontSize: '16px' }} >\n                            <Link to={'/policies/' + this.policy.id} >\n                                More details\n                            </Link>\n                        </Text>\n                    </TextContent>\n                </CardBody>\n            </Card>\n        );\n    };\n};\n\nexport default CompliancePolicyCard;\n","import React from 'react';\nimport {\n    Card,\n    Grid,\n    GridItem,\n    Title,\n    Text,\n    TextContent,\n    TextVariants,\n    Button,\n    Bullseye,\n    EmptyState,\n    EmptyStateIcon\n} from '@patternfly/react-core';\nimport emptyStateStyles from '@patternfly/patternfly/components/EmptyState/empty-state.css';\nimport { CloudServerIcon } from '@patternfly/react-icons';\nimport routerParams from '@redhat-cloud-services/frontend-components-utilities/files/RouterParams';\nimport CompliancePolicyCard from '../CompliancePolicyCard/CompliancePolicyCard';\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport ErrorPage from '../ErrorPage/ErrorPage';\nimport ContentLoader from 'react-content-loader';\n\nconst QUERY = gql`\n{\n    allProfiles {\n        id\n        name\n        ref_id\n        description\n        total_host_count\n        compliant_host_count\n    }\n}\n`;\n\nconst LoadingComplianceCard = () => (\n    <Card>\n        <ContentLoader\n            height={400}\n            width={400}\n            speed={2}\n            primaryColor=\"#f3f3f3\"\n            secondaryColor=\"#ecebeb\"\n        >\n            <rect x=\"6\" y=\"31\" rx=\"4\" ry=\"4\" width=\"293\" height=\"15\" />\n            <rect x=\"8\" y=\"15\" rx=\"3\" ry=\"3\" width=\"85\" height=\"6\" />\n            <rect x=\"7\" y=\"112\" rx=\"3\" ry=\"3\" width=\"220\" height=\"10\" />\n            <circle cx=\"190\" cy=\"256\" r=\"109\" />\n            <rect x=\"8\" y=\"73\" rx=\"0\" ry=\"0\" width=\"69\" height=\"23\" />\n            <rect x=\"47\" y=\"77\" rx=\"0\" ry=\"0\" width=\"0\" height=\"0\" />\n            <rect x=\"36\" y=\"77\" rx=\"0\" ry=\"0\" width=\"16\" height=\"0\" />\n        </ContentLoader>\n    </Card>\n);\n\nconst LoadingComplianceCards = () => (\n    <Grid gutter='md'>\n        <GridItem sm={12} md={12} lg={6} xl={4}>\n            <LoadingComplianceCard/>\n        </GridItem>\n        <GridItem sm={12} md={12} lg={6} xl={4}>\n            <LoadingComplianceCard/>\n        </GridItem>\n        <GridItem sm={12} md={12} lg={6} xl={4}>\n            <LoadingComplianceCard/>\n        </GridItem>\n    </Grid>\n);\n\nconst CompliancePoliciesCards = () => (\n    <Query query={QUERY}>\n        {({ data, error, loading }) => {\n            if (error) { return <ErrorPage error={error}/>; }\n\n            if (loading) { return <LoadingComplianceCards/>; }\n\n            const policies = data.allProfiles;\n            let policyCards = [];\n            if (policies.length) {\n                policyCards = policies.map(\n                    (policy, i) =>\n                        <GridItem sm={12} md={12} lg={6} xl={4} key={i}>\n                            <CompliancePolicyCard\n                                key={i}\n                                policy={policy}\n                            />\n                        </GridItem>\n                );\n            } else {\n                policyCards = <Bullseye>\n                    <EmptyState>\n                        <EmptyStateIcon style={{ fontWeight: '500', color: 'var(--pf-global--primary-color--100)' }}\n                            size=\"xl\" title=\"Compliance\" icon={CloudServerIcon} />\n                        <br/>\n                        <Title size=\"lg\">Connect with OpenSCAP to do more with Red Hat Enterprise Linux</Title>\n                        <br/>\n                        <span className={emptyStateStyles.emptyStateBody}>\n                            <TextContent>\n                                Scan and upload a report on a system with OpenSCAP to see information\n                                about your system&#39;s compliance to policies.\n                                <br/>\n                                Generate a report with OpenSCAP with the following command:\n                                <Text component={TextVariants.blockquote}>\n                                    oscap xccdf eval --profile xccdf_org.ssgproject.content_profile_standard\n                                    --results scan.xml /usr/share/xml/scap/ssg/content/ssg-rhel7-ds.xml\n                                </Text>\n                                And upload it using the following command:\n                                <Text component={TextVariants.blockquote}>\n                                    sudo insights-client --verbose --payload scan.xml\n                                    --content-type application/vnd.redhat.compliance.something+tgz\n                                </Text>\n                            </TextContent>\n                        </span>\n\n                        <Button\n                            variant=\"primary\"\n                            component=\"a\"\n                            target=\"_blank\"\n                            href=\"https://www.open-scap.org/getting-started/\">\n                            Get started with OpenSCAP\n                        </Button>\n                    </EmptyState>\n                </Bullseye>;\n\n            }\n\n            return (\n                <div className=\"policies-donuts\">\n                    <Grid gutter='md'>\n                        {policyCards}\n                    </Grid>\n                </div>\n            );\n        }}\n    </Query>\n);\n\nexport default routerParams(CompliancePoliciesCards);\n","import React from 'react';\nimport CompliancePoliciesCards from '../CompliancePoliciesCards/CompliancePoliciesCards';\nimport ComplianceTabs from '../ComplianceTabs/ComplianceTabs';\nimport { PageHeader, PageHeaderTitle, Main } from '@redhat-cloud-services/frontend-components';\n\nconst CompliancePolicies = () => {\n    return (\n        <React.Fragment>\n            <PageHeader>\n                <PageHeaderTitle title=\"Compliance\" />\n                <ComplianceTabs/>\n            </PageHeader>\n            <Main>\n                <CompliancePoliciesCards />\n            </Main>\n        </React.Fragment>\n    );\n};\n\nexport default CompliancePolicies;\n"],"sourceRoot":""}