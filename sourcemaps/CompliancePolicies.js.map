{"version":3,"sources":["webpack:///./src/SmartComponents/ComplianceTabs/ComplianceTabs.js","webpack:///./node_modules/lodash/invert.js","webpack:///./node_modules/lodash/constant.js","webpack:///./node_modules/lodash/_createInverter.js","webpack:///./node_modules/lodash/_baseInverter.js","webpack:///./src/SmartComponents/ErrorPage/ErrorPage.js","webpack:///./node_modules/lodash/isEqual.js","webpack:///./node_modules/@patternfly/patternfly/components/EmptyState/empty-state.css?07fa","webpack:///./node_modules/@patternfly/patternfly/components/EmptyState/empty-state.css","webpack:///./node_modules/react-truncate/lib/Truncate.js","webpack:///./src/SmartComponents/CompliancePolicyCard/CompliancePolicyCard.js","webpack:///./src/SmartComponents/CompliancePolicies/CompliancePolicies.js"],"names":["ComplianceTabs","state","tabPaths","0","paths","compliancePolicies","1","complianceSystems","redirect","_","tabIndex","props","history","push","path","this","match","currentKey","Number","invert","tabs","title","key","eventKey","activeKey","onSelect","aria-label","Component","propTypes","object","routerParams","constant","createInverter","identity","nativeObjectToString","Object","prototype","toString","result","value","call","module","exports","baseInverter","setter","toIteratee","iteratee","baseForOwn","accumulator","ErrorPage","error","networkError","statusCode","window","insights","chrome","auth","logout","message","baseIsEqual","other","content","i","options","transform","undefined","locals","_extends","assign","target","arguments","length","source","hasOwnProperty","_createClass","defineProperties","descriptor","enumerable","configurable","writable","defineProperty","Constructor","protoProps","staticProps","Truncate","_Component","_ref","instance","TypeError","_classCallCheck","_len","args","Array","_key","_this","self","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","apply","concat","styles","ellipsis","position","visibility","top","left","elements","onResize","bind","onTruncate","calcTargetWidth","measureWidth","getLines","renderLine","subClass","superClass","create","constructor","setPrototypeOf","_inherits","text","canvas","document","createElement","canvasContext","getContext","parentNode","removeChild","addEventListener","prevProps","children","forceUpdate","width","timeout","removeEventListener","cancelAnimationFrame","node","div","contentKey","HTMLElement","innerHTML","replace","test","didTruncate","requestAnimationFrame","callback","targetWidth","Math","floor","getBoundingClientRect","style","getComputedStyle","font","join","setState","measureText","offsetWidth","_props","numLines","lines","trimWhitespace","innerText","trimRight","textLines","split","map","line","ellipsisWidth","textWords","resultLine","textRest","lower","upper","middle","slice","lastLineText","pop","_lower","_upper","_middle","splice","shift","arr","br","_this2","_props2","spanProps","obj","keys","indexOf","_objectWithoutProperties","ref","targetEl","textEl","ellipsisEl","oneOfType","oneOf","number","bool","func","defaultProps","CompliancePolicyCard","policy","onMouseover","cardTitle","name","onMouseout","compliantHostCount","totalHostCount","donutValues","x","y","compliancePercentage","fixedPercentage","Card","widget-id","refId","CardBody","Text","fontWeight","color","component","TextVariants","small","TextContent","onMouseEnter","onMouseLeave","h4","className","Grid","GridItem","display","span","fontSize","Link","to","id","textAlign","businessObjective","Chip","isReadOnly","ChartDonut","data","identifier","innerRadius","themeColor","ChartThemeColor","blue","themeVariant","ChartThemeVariant","light","subTitle","height","React","QUERY","gql","LoadingComplianceCard","speed","primaryColor","secondaryColor","rx","ry","cx","cy","r","LoadingComplianceCards","gutter","sm","md","lg","xl","useQuery","loading","Fragment","pageHeader","policies","allProfiles","policyCards","paddingBottom","Bullseye","EmptyState","EmptyStateIcon","size","icon","CloudServerIcon","Title","emptyStateStyles","emptyStateBody","ClipboardCopy","variant","ClipboardCopyVariant","expansion","Button","href"],"mappings":"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","file":"js/CompliancePolicies.js","sourcesContent":["import routerParams from '@redhat-cloud-services/frontend-components-utilities/files/RouterParams';\nimport propTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { paths } from '../../Routes';\nimport { Tabs, Tab } from '@patternfly/react-core';\nimport invert from 'lodash/invert';\n\nclass ComplianceTabs extends Component {\n    state = {\n        tabPaths: {\n            0: paths.compliancePolicies,\n            1: paths.complianceSystems\n        }\n    };\n\n    redirect = (_, tabIndex) => {\n        const { tabPaths } = this.state;\n        this.props.history.push(tabPaths[tabIndex]);\n    }\n\n    render() {\n        const { match: { path } } = this.props;\n        const { tabPaths } = this.state;\n        let currentKey = Number(invert(tabPaths)[path]);\n\n        const tabs = [\n            <Tab title={'Policies'} key={0} eventKey={0}></Tab>,\n            <Tab title={'Systems'} key={1} eventKey={1}></Tab>\n        ];\n\n        return (\n            <Tabs activeKey={currentKey} onSelect={this.redirect} aria-label=\"Compliance Tabs\">\n                { tabs }\n            </Tabs>\n        );\n    }\n}\n\nComplianceTabs.propTypes = {\n    history: propTypes.object,\n    match: propTypes.object\n};\n\nexport default routerParams(ComplianceTabs);\n","var constant = require('./constant'),\n    createInverter = require('./_createInverter'),\n    identity = require('./identity');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Creates an object composed of the inverted keys and values of `object`.\n * If `object` contains duplicate values, subsequent values overwrite\n * property assignments of previous values.\n *\n * @static\n * @memberOf _\n * @since 0.7.0\n * @category Object\n * @param {Object} object The object to invert.\n * @returns {Object} Returns the new inverted object.\n * @example\n *\n * var object = { 'a': 1, 'b': 2, 'c': 1 };\n *\n * _.invert(object);\n * // => { '1': 'c', '2': 'b' }\n */\nvar invert = createInverter(function(result, value, key) {\n  if (value != null &&\n      typeof value.toString != 'function') {\n    value = nativeObjectToString.call(value);\n  }\n\n  result[value] = key;\n}, constant(identity));\n\nmodule.exports = invert;\n","/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\nmodule.exports = constant;\n","var baseInverter = require('./_baseInverter');\n\n/**\n * Creates a function like `_.invertBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} toIteratee The function to resolve iteratees.\n * @returns {Function} Returns the new inverter function.\n */\nfunction createInverter(setter, toIteratee) {\n  return function(object, iteratee) {\n    return baseInverter(object, setter, toIteratee(iteratee), {});\n  };\n}\n\nmodule.exports = createInverter;\n","var baseForOwn = require('./_baseForOwn');\n\n/**\n * The base implementation of `_.invert` and `_.invertBy` which inverts\n * `object` with values transformed by `iteratee` and set by `setter`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform values.\n * @param {Object} accumulator The initial inverted object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction baseInverter(object, setter, iteratee, accumulator) {\n  baseForOwn(object, function(value, key, object) {\n    setter(accumulator, iteratee(value), key, object);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseInverter;\n","import { Component } from 'react';\nimport propTypes from 'prop-types';\n\nclass ErrorPage extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { error } = this.props;\n        if (error.networkError && error.networkError.statusCode === 401) {\n            window.insights.chrome.auth.logout();\n        }\n\n        return 'Oops! There was an error loading Compliance data. If you need to contact ' +\n            'Red Hat Support about this, this is the exact error: ' + ' ' + error.message;\n    }\n}\n\nErrorPage.propTypes = {\n    error: propTypes.object\n};\n\nexport default ErrorPage;\n","var baseIsEqual = require('./_baseIsEqual');\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;\n","\nvar content = require(\"!!../../../../css-loader/index.js!../../../../sass-loader/dist/cjs.js??ref--5-2!./empty-state.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../css-loader/index.js!../../../../sass-loader/dist/cjs.js??ref--5-2!./empty-state.css\", function() {\n\t\tvar newContent = require(\"!!../../../../css-loader/index.js!../../../../sass-loader/dist/cjs.js??ref--5-2!./empty-state.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".pf-c-empty-state{--pf-c-empty-state--Padding: var(--pf-global--spacer--xl);--pf-c-empty-state__icon--MarginBottom: var(--pf-global--spacer--lg);--pf-c-empty-state__icon--FontSize: var(--pf-global--icon--FontSize--xl);--pf-c-empty-state__icon--Color: var(--pf-global--icon--Color--light);--pf-c-empty-state__body--MarginTop: var(--pf-global--spacer--md);--pf-c-empty-state__body--Color: var(--pf-global--Color--200);--pf-c-empty-state--c-button--MarginTop: var(--pf-global--spacer--xl);--pf-c-empty-state--c-button__secondary--MarginTop: var(--pf-global--spacer--sm);--pf-c-empty-state__secondary--MarginTop: var(--pf-global--spacer--xl);--pf-c-empty-state__secondary--MarginRight: calc(var(--pf-global--spacer--xs) * -1);--pf-c-empty-state__secondary--MarginBottom: calc(var(--pf-global--spacer--xs) * -1);--pf-c-empty-state__secondary--c-button--MarginRight: var(--pf-global--spacer--xs);--pf-c-empty-state__secondary--c-button--MarginBottom: var(--pf-global--spacer--xs);--pf-c-empty-state--m-sm--MaxWidth: 25rem;--pf-c-empty-state--m-lg--MaxWidth: 37.5rem;padding:var(--pf-c-empty-state--Padding);text-align:center}.pf-c-empty-state>.pf-c-button.pf-m-primary{margin-top:var(--pf-c-empty-state--c-button--MarginTop)}.pf-c-empty-state>.pf-c-button.pf-m-primary+.pf-c-empty-state__secondary{margin-top:var(--pf-c-empty-state--c-button__secondary--MarginTop)}.pf-c-empty-state.pf-m-sm{max-width:var(--pf-c-empty-state--m-sm--MaxWidth)}.pf-c-empty-state.pf-m-lg{max-width:var(--pf-c-empty-state--m-lg--MaxWidth)}.pf-c-empty-state__icon{margin-bottom:var(--pf-c-empty-state__icon--MarginBottom);font-size:var(--pf-c-empty-state__icon--FontSize);color:var(--pf-c-empty-state__icon--Color)}.pf-c-empty-state__body{margin-top:var(--pf-c-empty-state__body--MarginTop);color:var(--pf-c-empty-state__body--Color)}.pf-c-empty-state__secondary{display:flex;flex-wrap:wrap;justify-content:center;margin-top:var(--pf-c-empty-state__secondary--MarginTop);margin-right:var(--pf-c-empty-state__secondary--MarginRight);margin-bottom:var(--pf-c-empty-state__secondary--MarginBottom)}.pf-c-empty-state__secondary>.pf-c-button{margin-right:var(--pf-c-empty-state__secondary--c-button--MarginRight);margin-bottom:var(--pf-c-empty-state__secondary--c-button--MarginBottom)}\\n\", \"\"]);\n\n// exports\n","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nvar Truncate = function (_Component) {\n    _inherits(Truncate, _Component);\n\n    function Truncate() {\n        var _ref;\n\n        _classCallCheck(this, Truncate);\n\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n        }\n\n        var _this = _possibleConstructorReturn(this, (_ref = Truncate.__proto__ || Object.getPrototypeOf(Truncate)).call.apply(_ref, [this].concat(args)));\n\n        _this.state = {};\n        _this.styles = {\n            ellipsis: {\n                position: 'fixed',\n                visibility: 'hidden',\n                top: 0,\n                left: 0\n            }\n        };\n\n\n        _this.elements = {};\n\n        _this.onResize = _this.onResize.bind(_this);\n        _this.onTruncate = _this.onTruncate.bind(_this);\n        _this.calcTargetWidth = _this.calcTargetWidth.bind(_this);\n        _this.measureWidth = _this.measureWidth.bind(_this);\n        _this.getLines = _this.getLines.bind(_this);\n        _this.renderLine = _this.renderLine.bind(_this);\n        return _this;\n    }\n\n    _createClass(Truncate, [{\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n            var text = this.elements.text,\n                calcTargetWidth = this.calcTargetWidth,\n                onResize = this.onResize;\n\n\n            var canvas = document.createElement('canvas');\n            this.canvasContext = canvas.getContext('2d');\n\n            calcTargetWidth(function () {\n                // Node not needed in document tree to read its content\n                if (text) {\n                    text.parentNode.removeChild(text);\n                }\n            });\n\n            window.addEventListener('resize', onResize);\n        }\n    }, {\n        key: 'componentDidUpdate',\n        value: function componentDidUpdate(prevProps) {\n            // Render was based on outdated refs and needs to be rerun\n            if (this.props.children !== prevProps.children) {\n                this.forceUpdate();\n            }\n\n            // If the width prop has changed, recalculate size of contents\n            if (this.props.width !== prevProps.width) {\n                this.calcTargetWidth();\n            }\n        }\n    }, {\n        key: 'componentWillUnmount',\n        value: function componentWillUnmount() {\n            var ellipsis = this.elements.ellipsis,\n                onResize = this.onResize,\n                timeout = this.timeout;\n\n\n            ellipsis.parentNode.removeChild(ellipsis);\n\n            window.removeEventListener('resize', onResize);\n\n            window.cancelAnimationFrame(timeout);\n        }\n\n        // Shim innerText to consistently break lines at <br/> but not at \\n\n\n    }, {\n        key: 'innerText',\n        value: function innerText(node) {\n            var div = document.createElement('div');\n            var contentKey = 'innerText' in window.HTMLElement.prototype ? 'innerText' : 'textContent';\n\n            div.innerHTML = node.innerHTML.replace(/\\r\\n|\\r|\\n/g, ' ');\n\n            var text = div[contentKey];\n\n            var test = document.createElement('div');\n            test.innerHTML = 'foo<br/>bar';\n\n            if (test[contentKey].replace(/\\r\\n|\\r/g, '\\n') !== 'foo\\nbar') {\n                div.innerHTML = div.innerHTML.replace(/<br.*?[\\/]?>/gi, '\\n');\n                text = div[contentKey];\n            }\n\n            return text;\n        }\n    }, {\n        key: 'onResize',\n        value: function onResize() {\n            this.calcTargetWidth();\n        }\n    }, {\n        key: 'onTruncate',\n        value: function onTruncate(didTruncate) {\n            var onTruncate = this.props.onTruncate;\n\n\n            if (typeof onTruncate === 'function') {\n                this.timeout = window.requestAnimationFrame(function () {\n                    onTruncate(didTruncate);\n                });\n            }\n        }\n    }, {\n        key: 'calcTargetWidth',\n        value: function calcTargetWidth(callback) {\n            var target = this.elements.target,\n                calcTargetWidth = this.calcTargetWidth,\n                canvasContext = this.canvasContext,\n                width = this.props.width;\n\n            // Calculation is no longer relevant, since node has been removed\n\n            if (!target) {\n                return;\n            }\n\n            var targetWidth = width ||\n            // Floor the result to deal with browser subpixel precision\n            Math.floor(target.parentNode.getBoundingClientRect().width);\n\n            // Delay calculation until parent node is inserted to the document\n            // Mounting order in React is ChildComponent, ParentComponent\n            if (!targetWidth) {\n                return window.requestAnimationFrame(function () {\n                    return calcTargetWidth(callback);\n                });\n            }\n\n            var style = window.getComputedStyle(target);\n\n            var font = [style['font-weight'], style['font-style'], style['font-size'], style['font-family']].join(' ');\n\n            canvasContext.font = font;\n\n            this.setState({\n                targetWidth: targetWidth\n            }, callback);\n        }\n    }, {\n        key: 'measureWidth',\n        value: function measureWidth(text) {\n            return this.canvasContext.measureText(text).width;\n        }\n    }, {\n        key: 'ellipsisWidth',\n        value: function ellipsisWidth(node) {\n            return node.offsetWidth;\n        }\n    }, {\n        key: 'trimRight',\n        value: function trimRight(text) {\n            return text.replace(/\\s+$/, '');\n        }\n    }, {\n        key: 'getLines',\n        value: function getLines() {\n            var elements = this.elements,\n                _props = this.props,\n                numLines = _props.lines,\n                ellipsis = _props.ellipsis,\n                trimWhitespace = _props.trimWhitespace,\n                targetWidth = this.state.targetWidth,\n                innerText = this.innerText,\n                measureWidth = this.measureWidth,\n                onTruncate = this.onTruncate,\n                trimRight = this.trimRight;\n\n\n            var lines = [];\n            var text = innerText(elements.text);\n            var textLines = text.split('\\n').map(function (line) {\n                return line.split(' ');\n            });\n            var didTruncate = true;\n            var ellipsisWidth = this.ellipsisWidth(this.elements.ellipsis);\n\n            for (var line = 1; line <= numLines; line++) {\n                var textWords = textLines[0];\n\n                // Handle newline\n                if (textWords.length === 0) {\n                    lines.push();\n                    textLines.shift();\n                    line--;\n                    continue;\n                }\n\n                var resultLine = textWords.join(' ');\n\n                if (measureWidth(resultLine) <= targetWidth) {\n                    if (textLines.length === 1) {\n                        // Line is end of text and fits without truncating\n                        didTruncate = false;\n\n                        lines.push(resultLine);\n                        break;\n                    }\n                }\n\n                if (line === numLines) {\n                    // Binary search determining the longest possible line inluding truncate string\n                    var textRest = textWords.join(' ');\n\n                    var lower = 0;\n                    var upper = textRest.length - 1;\n\n                    while (lower <= upper) {\n                        var middle = Math.floor((lower + upper) / 2);\n\n                        var testLine = textRest.slice(0, middle + 1);\n\n                        if (measureWidth(testLine) + ellipsisWidth <= targetWidth) {\n                            lower = middle + 1;\n                        } else {\n                            upper = middle - 1;\n                        }\n                    }\n\n                    var lastLineText = textRest.slice(0, lower);\n\n                    if (trimWhitespace) {\n                        lastLineText = trimRight(lastLineText);\n\n                        // Remove blank lines from the end of text\n                        while (!lastLineText.length && lines.length) {\n                            var prevLine = lines.pop();\n\n                            lastLineText = trimRight(prevLine);\n                        }\n                    }\n\n                    resultLine = React.createElement(\n                        'span',\n                        null,\n                        lastLineText,\n                        ellipsis\n                    );\n                } else {\n                    // Binary search determining when the line breaks\n                    var _lower = 0;\n                    var _upper = textWords.length - 1;\n\n                    while (_lower <= _upper) {\n                        var _middle = Math.floor((_lower + _upper) / 2);\n\n                        var _testLine = textWords.slice(0, _middle + 1).join(' ');\n\n                        if (measureWidth(_testLine) <= targetWidth) {\n                            _lower = _middle + 1;\n                        } else {\n                            _upper = _middle - 1;\n                        }\n                    }\n\n                    // The first word of this line is too long to fit it\n                    if (_lower === 0) {\n                        // Jump to processing of last line\n                        line = numLines - 1;\n                        continue;\n                    }\n\n                    resultLine = textWords.slice(0, _lower).join(' ');\n                    textLines[0].splice(0, _lower);\n                }\n\n                lines.push(resultLine);\n            }\n\n            onTruncate(didTruncate);\n\n            return lines;\n        }\n    }, {\n        key: 'renderLine',\n        value: function renderLine(line, i, arr) {\n            if (i === arr.length - 1) {\n                return React.createElement(\n                    'span',\n                    { key: i },\n                    line\n                );\n            } else {\n                var br = React.createElement('br', { key: i + 'br' });\n\n                if (line) {\n                    return [React.createElement(\n                        'span',\n                        { key: i },\n                        line\n                    ), br];\n                } else {\n                    return br;\n                }\n            }\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var _this2 = this;\n\n            var target = this.elements.target,\n                _props2 = this.props,\n                children = _props2.children,\n                ellipsis = _props2.ellipsis,\n                lines = _props2.lines,\n                spanProps = _objectWithoutProperties(_props2, ['children', 'ellipsis', 'lines']),\n                targetWidth = this.state.targetWidth,\n                getLines = this.getLines,\n                renderLine = this.renderLine,\n                onTruncate = this.onTruncate;\n\n            var text = void 0;\n\n            var mounted = !!(target && targetWidth);\n\n            if (typeof window !== 'undefined' && mounted) {\n                if (lines > 0) {\n                    text = getLines().map(renderLine);\n                } else {\n                    text = children;\n\n                    onTruncate(false);\n                }\n            }\n\n            delete spanProps.onTruncate;\n            delete spanProps.trimWhitespace;\n\n            return React.createElement(\n                'span',\n                _extends({}, spanProps, { ref: function ref(targetEl) {\n                        _this2.elements.target = targetEl;\n                    } }),\n                React.createElement(\n                    'span',\n                    null,\n                    text\n                ),\n                React.createElement(\n                    'span',\n                    { ref: function ref(textEl) {\n                            _this2.elements.text = textEl;\n                        } },\n                    children\n                ),\n                React.createElement(\n                    'span',\n                    { ref: function ref(ellipsisEl) {\n                            _this2.elements.ellipsis = ellipsisEl;\n                        }, style: this.styles.ellipsis },\n                    ellipsis\n                )\n            );\n        }\n    }]);\n\n    return Truncate;\n}(Component);\n\nTruncate.propTypes = {\n    children: PropTypes.node,\n    ellipsis: PropTypes.node,\n    lines: PropTypes.oneOfType([PropTypes.oneOf([false]), PropTypes.number]),\n    trimWhitespace: PropTypes.bool,\n    width: PropTypes.number,\n    onTruncate: PropTypes.func\n};\nTruncate.defaultProps = {\n    children: '',\n    ellipsis: '…',\n    lines: 1,\n    trimWhitespace: false,\n    width: 0\n};\nexport default Truncate;\n;\n","import React from 'react';\nimport {\n    Link\n} from 'react-router-dom';\nimport Truncate from 'react-truncate';\nimport {\n    Chip,\n    Card,\n    CardBody,\n    Text,\n    TextContent,\n    TextVariants,\n    Grid,\n    GridItem\n} from '@patternfly/react-core';\nimport {\n    ChartDonut,\n    ChartThemeColor,\n    ChartThemeVariant\n} from '@patternfly/react-charts';\nimport '../../Charts.scss';\nimport { fixedPercentage } from '../../Utilities/TextHelper';\n\nclass CompliancePolicyCard extends React.Component {\n    constructor(policy) {\n        super(policy);\n        this.policy = policy.policy;\n        this.state = { cardTitle: <Truncate lines={1}>{this.policy.name}</Truncate> };\n    }\n\n    onMouseover = () => {\n        this.setState({ cardTitle: this.policy.name });\n    }\n\n    onMouseout = () => {\n        this.setState({ cardTitle: <Truncate lines={1}>{this.policy.name}</Truncate> });\n    }\n\n    render() {\n        const compliantHostCount = this.policy.compliantHostCount;\n        const totalHostCount = this.policy.totalHostCount;\n        let donutValues = [\n            { x: 'Compliant', y: compliantHostCount },\n            { x: 'Non-compliant', y: totalHostCount - compliantHostCount }\n        ];\n        const compliancePercentage = fixedPercentage(Math.floor(100 *\n            (donutValues[0].y / (donutValues[0].y + donutValues[1].y))));\n\n        return (\n            <Card widget-id={this.policy.refId}>\n                <CardBody>\n                    <Text style={{ fontWeight: '500', color: 'var(--pf-global--Color--200)' }} component={TextVariants.small}>\n                        External policy\n                    </Text>\n                    <TextContent>\n                        <Text onMouseEnter={this.onMouseover.bind(this)} onMouseLeave={this.onMouseout.bind(this)}\n                            style={{ fontWeight: '500' }} component={TextVariants.h4}>\n                            {this.state.cardTitle}\n                        </Text>\n                    </TextContent>\n                    <TextContent className=\"chart-title\">\n                        <Grid>\n                            <GridItem style={{ display: 'inline-flex' }} span={12}>\n                                <TextContent>\n                                    <span style={{ fontSize: '30px', fontWeight: '500' }}>\n                                        { compliantHostCount }\n                                    </span>\n                                    <span style={{ fontWeight: '500', color: 'var(--pf-global--Color--200)' }}>\n                                        {' '}of{' '}\n                                    </span>\n                                    <span style={{ fontSize: '30px', fontWeight: '500' }}>\n                                        { totalHostCount }\n                                    </span>\n                                </TextContent>\n                            </GridItem>\n                            <GridItem span={12}>\n                                <Text\n                                    style={{ fontWeight: '500', color: 'var(--pf-global--Color--200)' }}\n                                    component={TextVariants.small}\n                                >\n                                    Systems meet compliance threshold\n                                </Text>\n                            </GridItem>\n                            <GridItem span={6}>\n                                <TextContent>\n                                    <Text component={TextVariants.small} style={{ fontSize: '16px' }} >\n                                        <Link to={'/policies/' + this.policy.id} >\n                                                More details\n                                        </Link>\n                                    </Text>\n                                </TextContent>\n                            </GridItem>\n                            <GridItem span={6} style={{ textAlign: 'right' }}>\n                                { this.policy.businessObjective &&\n                                    <Chip isReadOnly>\n                                        { this.policy.businessObjective.title }\n                                    </Chip>\n                                }\n                            </GridItem>\n                        </Grid>\n                    </TextContent>\n                </CardBody>\n                <hr/>\n                <CardBody>\n                    <Grid>\n                        <GridItem style={{ textAlign: 'center' }} span={12}>\n                            <div className='chart-inline'>\n                                <div className='card-chart-container'>\n                                    <ChartDonut data={donutValues}\n                                        identifier={this.policy.name.replace(/ /g, '')}\n                                        innerRadius={122}\n                                        themeColor={ChartThemeColor.blue}\n                                        themeVariant={ChartThemeVariant.light}\n                                        title={compliancePercentage}\n                                        subTitle=\"Systems above threshold\"\n                                        height={300}\n                                        width={300}\n                                    />\n                                </div>\n                            </div>\n                        </GridItem>\n                    </Grid>\n                </CardBody>\n            </Card>\n        );\n    };\n};\n\nexport default CompliancePolicyCard;\n","import React from 'react';\nimport ComplianceTabs from '../ComplianceTabs/ComplianceTabs';\nimport { PageHeader, PageHeaderTitle, Main } from '@redhat-cloud-services/frontend-components';\nimport emptyStateStyles from '@patternfly/patternfly/components/EmptyState/empty-state.css';\nimport { CloudServerIcon } from '@patternfly/react-icons';\nimport routerParams from '@redhat-cloud-services/frontend-components-utilities/files/RouterParams';\nimport CompliancePolicyCard from '../CompliancePolicyCard/CompliancePolicyCard';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport ErrorPage from '../ErrorPage/ErrorPage';\nimport ContentLoader from 'react-content-loader';\nimport {\n    Card,\n    Grid,\n    GridItem,\n    Title,\n    TextContent,\n    Button,\n    Bullseye,\n    EmptyState,\n    EmptyStateIcon,\n    ClipboardCopy,\n    ClipboardCopyVariant\n} from '@patternfly/react-core';\n\nconst QUERY = gql`\n{\n    allProfiles {\n        id\n        name\n        refId\n        description\n        totalHostCount\n        compliantHostCount\n        businessObjective {\n            id\n            title\n        }\n    }\n}\n`;\n\nconst LoadingComplianceCard = () => (\n    <Card>\n        <ContentLoader\n            height={400}\n            width={400}\n            speed={2}\n            primaryColor=\"#f3f3f3\"\n            secondaryColor=\"#ecebeb\"\n        >\n            <rect x=\"6\" y=\"31\" rx=\"4\" ry=\"4\" width=\"293\" height=\"15\" />\n            <rect x=\"8\" y=\"15\" rx=\"3\" ry=\"3\" width=\"85\" height=\"6\" />\n            <rect x=\"7\" y=\"112\" rx=\"3\" ry=\"3\" width=\"220\" height=\"10\" />\n            <circle cx=\"190\" cy=\"256\" r=\"109\" />\n            <rect x=\"8\" y=\"73\" rx=\"0\" ry=\"0\" width=\"69\" height=\"23\" />\n            <rect x=\"47\" y=\"77\" rx=\"0\" ry=\"0\" width=\"0\" height=\"0\" />\n            <rect x=\"36\" y=\"77\" rx=\"0\" ry=\"0\" width=\"16\" height=\"0\" />\n        </ContentLoader>\n    </Card>\n);\n\nconst LoadingComplianceCards = () => (\n    <Grid gutter='md'>\n        <GridItem sm={12} md={12} lg={6} xl={4}>\n            <LoadingComplianceCard/>\n        </GridItem>\n        <GridItem sm={12} md={12} lg={6} xl={4}>\n            <LoadingComplianceCard/>\n        </GridItem>\n        <GridItem sm={12} md={12} lg={6} xl={4}>\n            <LoadingComplianceCard/>\n        </GridItem>\n    </Grid>\n);\n\nconst CompliancePolicies = () => {\n    const { data, error, loading } = useQuery(QUERY);\n\n    if (error) { return <ErrorPage error={error}/>; }\n\n    if (loading) {\n        return (\n            <React.Fragment>\n                <PageHeader>\n                    <PageHeaderTitle title=\"Compliance\" />\n                </PageHeader>\n                <Main>\n                    <div className=\"policies-donuts\">\n                        <Grid gutter='md'>\n                            <LoadingComplianceCards/>\n                        </Grid>\n                    </div>\n                </Main>\n            </React.Fragment>\n        );\n    }\n\n    const policies = data.allProfiles;\n    let policyCards = [];\n    let pageHeader;\n    if (policies.length) {\n        pageHeader = <PageHeader>\n            <PageHeaderTitle title=\"Compliance\" />\n            <ComplianceTabs/>\n        </PageHeader>;\n        policyCards = policies.map(\n            (policy, i) =>\n                <GridItem sm={12} md={12} lg={6} xl={4} key={i}>\n                    <CompliancePolicyCard\n                        key={i}\n                        policy={policy}\n                    />\n                </GridItem>\n        );\n    } else {\n        pageHeader = <PageHeader style={{ paddingBottom: 22 }}><PageHeaderTitle title=\"Compliance\" /></PageHeader>;\n        policyCards = <Bullseye>\n            <EmptyState>\n                <EmptyStateIcon style={{ fontWeight: '500', color: 'var(--pf-global--primary-color--100)' }}\n                    size=\"xl\" title=\"Compliance\" icon={CloudServerIcon} />\n                <br/>\n                <Title size=\"lg\">Connect with OpenSCAP to do more with Red Hat Enterprise Linux</Title>\n                <br/>\n                <span className={emptyStateStyles.emptyStateBody}>\n                    <TextContent>\n                        Scan and upload a report on a system with OpenSCAP to see information\n                        about your system&#39;s compliance to policies.\n                        <br/>\n                        Generate a report with OpenSCAP with the following command:\n                        <ClipboardCopy className='upload-instructions'\n                            variant={ClipboardCopyVariant.expansion}>\n                            oscap xccdf eval --profile xccdf_org.ssgproject.content_profile_standard\n                            --results scan.xml /usr/share/xml/scap/ssg/content/ssg-rhel7-ds.xml\n                        </ClipboardCopy>\n                        And upload it using the following command:\n                        <ClipboardCopy className='upload-instructions'\n                            variant={ClipboardCopyVariant.expansion}>\n                            sudo insights-client --verbose --payload scan.xml\n                            --content-type application/vnd.redhat.compliance.something+tgz\n                        </ClipboardCopy>\n                    </TextContent>\n                </span>\n\n                <Button\n                    variant=\"primary\"\n                    component=\"a\"\n                    target=\"_blank\"\n                    href=\"https://www.open-scap.org/getting-started/\">\n                    Get started with OpenSCAP\n                </Button>\n            </EmptyState>\n        </Bullseye>;\n    }\n\n    return (\n        <React.Fragment>\n            { pageHeader }\n            <Main>\n                <div className=\"policies-donuts\">\n                    <Grid gutter='md'>\n                        {policyCards}\n                    </Grid>\n                </div>\n            </Main>\n        </React.Fragment>\n    );\n};\n\nexport default routerParams(CompliancePolicies);\n"],"sourceRoot":""}