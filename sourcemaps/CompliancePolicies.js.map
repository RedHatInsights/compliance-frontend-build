{"version":3,"sources":["webpack:///./src/SmartComponents/ComplianceTabs/ComplianceTabs.js","webpack:///./node_modules/lodash/invert.js","webpack:///./node_modules/lodash/constant.js","webpack:///./node_modules/lodash/_createInverter.js","webpack:///./node_modules/lodash/_baseInverter.js","webpack:///./src/SmartComponents/ErrorPage/ErrorPage.js","webpack:///./node_modules/lodash/isEqual.js","webpack:///./node_modules/@patternfly/patternfly/components/EmptyState/empty-state.css?e907","webpack:///./node_modules/@patternfly/patternfly/components/EmptyState/empty-state.css","webpack:///./node_modules/react-truncate/lib/Truncate.js","webpack:///./src/SmartComponents/CompliancePolicyCard/CompliancePolicyCard.js","webpack:///./src/SmartComponents/CompliancePolicies/CompliancePolicies.js"],"names":["ComplianceTabs","state","tabPaths","0","paths","compliancePolicies","1","complianceSystems","redirect","_","tabIndex","_this","props","history","push","path","this","match","currentKey","Number","invert","tabs","react__WEBPACK_IMPORTED_MODULE_7___default","a","createElement","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_9__","title","key","eventKey","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_10__","activeKey","onSelect","aria-label","Component","propTypes","object","routerParams","constant","__webpack_require__","createInverter","identity","nativeObjectToString","Object","prototype","toString","result","value","call","module","exports","baseInverter","setter","toIteratee","iteratee","baseForOwn","accumulator","ErrorPage","_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default","_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default","_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default","error","networkError","statusCode","window","insights","chrome","auth","logout","message","baseIsEqual","other","content","i","options","hmr","transform","insertInto","undefined","locals","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","_extends","assign","target","arguments","length","source","hasOwnProperty","_createClass","defineProperties","descriptor","enumerable","configurable","writable","defineProperty","Constructor","protoProps","staticProps","Truncate","_Component","_ref","instance","TypeError","_classCallCheck","_len","args","Array","_key","self","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","apply","concat","styles","ellipsis","position","visibility","top","left","elements","onResize","bind","onTruncate","calcTargetWidth","measureWidth","getLines","renderLine","subClass","superClass","create","constructor","setPrototypeOf","_inherits","text","canvas","document","canvasContext","getContext","parentNode","removeChild","addEventListener","prevProps","children","forceUpdate","width","timeout","removeEventListener","cancelAnimationFrame","node","div","contentKey","HTMLElement","innerHTML","replace","test","didTruncate","requestAnimationFrame","callback","targetWidth","Math","floor","getBoundingClientRect","style","getComputedStyle","font","join","setState","measureText","offsetWidth","_props","numLines","lines","trimWhitespace","innerText","trimRight","textLines","split","map","line","ellipsisWidth","textWords","resultLine","textRest","lower","upper","middle","slice","lastLineText","pop","_lower","_upper","_middle","splice","shift","arr","br","_this2","_props2","spanProps","obj","keys","indexOf","_objectWithoutProperties","ref","targetEl","textEl","ellipsisEl","oneOfType","oneOf","number","bool","func","defaultProps","CompliancePolicyCard","policy","classCallCheck_default","possibleConstructorReturn_default","getPrototypeOf_default","onMouseover","cardTitle","name","onMouseout","react_default","compliantHostCount","totalHostCount","donutValues","x","y","compliancePercentage","label","className","height","ChartLabel","fontSize","textAnchor","verticalAnchor","fill","Card","widget-id","refId","CardBody","Text","fontWeight","color","component","TextVariants","small","TextContent","onMouseEnter","onMouseLeave","h4","Grid","GridItem","display","span","Link","to","id","textAlign","businessObjective","Chip","isReadOnly","ChartDonut","data","identifier","theme","ChartTheme","light","blue","React","QUERY","gql","_templateObject","LoadingComplianceCard","react_content_loader_es","speed","primaryColor","secondaryColor","rx","ry","cx","cy","LoadingComplianceCards","gutter","sm","md","lg","xl","CompliancePolicies_LoadingComplianceCard","react_apollo_esm","query","loading","Fragment","frontend_components","CompliancePolicies_LoadingComplianceCards","pageHeader","policies","allProfiles","policyCards","SmartComponents_CompliancePolicyCard_CompliancePolicyCard","paddingBottom","Bullseye","EmptyState","EmptyStateIcon","size","icon","CloudServerIcon","Title","emptyStateStyles","emptyStateBody","ClipboardCopy","variant","ClipboardCopyVariant","expansion","Button","href"],"mappings":"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","file":"js/CompliancePolicies.js","sourcesContent":["import routerParams from '@redhat-cloud-services/frontend-components-utilities/files/RouterParams';\nimport propTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { paths } from '../../Routes';\nimport { Tabs, Tab } from '@patternfly/react-core';\nimport invert from 'lodash/invert';\n\nclass ComplianceTabs extends Component {\n    state = {\n        tabPaths: {\n            0: paths.compliancePolicies,\n            1: paths.complianceSystems\n        }\n    };\n\n    redirect = (_, tabIndex) => {\n        const { tabPaths } = this.state;\n        this.props.history.push(tabPaths[tabIndex]);\n    }\n\n    render() {\n        const { match: { path } } = this.props;\n        const { tabPaths } = this.state;\n        let currentKey = Number(invert(tabPaths)[path]);\n\n        const tabs = [\n            <Tab title={'Policies'} key={0} eventKey={0}></Tab>,\n            <Tab title={'Systems'} key={1} eventKey={1}></Tab>\n        ];\n\n        return (\n            <Tabs activeKey={currentKey} onSelect={this.redirect} aria-label=\"Compliance Tabs\">\n                { tabs }\n            </Tabs>\n        );\n    }\n}\n\nComplianceTabs.propTypes = {\n    history: propTypes.object,\n    match: propTypes.object\n};\n\nexport default routerParams(ComplianceTabs);\n","var constant = require('./constant'),\n    createInverter = require('./_createInverter'),\n    identity = require('./identity');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Creates an object composed of the inverted keys and values of `object`.\n * If `object` contains duplicate values, subsequent values overwrite\n * property assignments of previous values.\n *\n * @static\n * @memberOf _\n * @since 0.7.0\n * @category Object\n * @param {Object} object The object to invert.\n * @returns {Object} Returns the new inverted object.\n * @example\n *\n * var object = { 'a': 1, 'b': 2, 'c': 1 };\n *\n * _.invert(object);\n * // => { '1': 'c', '2': 'b' }\n */\nvar invert = createInverter(function(result, value, key) {\n  if (value != null &&\n      typeof value.toString != 'function') {\n    value = nativeObjectToString.call(value);\n  }\n\n  result[value] = key;\n}, constant(identity));\n\nmodule.exports = invert;\n","/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\nmodule.exports = constant;\n","var baseInverter = require('./_baseInverter');\n\n/**\n * Creates a function like `_.invertBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} toIteratee The function to resolve iteratees.\n * @returns {Function} Returns the new inverter function.\n */\nfunction createInverter(setter, toIteratee) {\n  return function(object, iteratee) {\n    return baseInverter(object, setter, toIteratee(iteratee), {});\n  };\n}\n\nmodule.exports = createInverter;\n","var baseForOwn = require('./_baseForOwn');\n\n/**\n * The base implementation of `_.invert` and `_.invertBy` which inverts\n * `object` with values transformed by `iteratee` and set by `setter`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform values.\n * @param {Object} accumulator The initial inverted object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction baseInverter(object, setter, iteratee, accumulator) {\n  baseForOwn(object, function(value, key, object) {\n    setter(accumulator, iteratee(value), key, object);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseInverter;\n","import { Component } from 'react';\nimport propTypes from 'prop-types';\n\nclass ErrorPage extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { error } = this.props;\n        if (error.networkError && error.networkError.statusCode === 401) {\n            window.insights.chrome.auth.logout();\n        }\n\n        return 'Oops! There was an error loading Compliance data. If you need to contact ' +\n            'Red Hat Support about this, this is the exact error: ' + ' ' + error.message;\n    }\n}\n\nErrorPage.propTypes = {\n    error: propTypes.object\n};\n\nexport default ErrorPage;\n","var baseIsEqual = require('./_baseIsEqual');\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;\n","\nvar content = require(\"!!../../../../css-loader/index.js!../../../../sass-loader/lib/loader.js??ref--5-2!./empty-state.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../css-loader/index.js!../../../../sass-loader/lib/loader.js??ref--5-2!./empty-state.css\", function() {\n\t\tvar newContent = require(\"!!../../../../css-loader/index.js!../../../../sass-loader/lib/loader.js??ref--5-2!./empty-state.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/* stylelint-enable */\\n/* stylelint-disable */\\n/* stylelint-enable */\\n.pf-c-empty-state {\\n  --pf-c-empty-state--Padding: var(--pf-global--spacer--xl);\\n  --pf-c-empty-state__icon--MarginBottom: var(--pf-global--spacer--lg);\\n  --pf-c-empty-state__icon--FontSize: var(--pf-global--icon--FontSize--xl);\\n  --pf-c-empty-state__icon--Color: var(--pf-global--icon--Color--light);\\n  --pf-c-empty-state__body--MarginTop: var(--pf-global--spacer--md);\\n  --pf-c-empty-state__body--Color: var(--pf-global--Color--200);\\n  --pf-c-empty-state--c-button--MarginTop: var(--pf-global--spacer--xl);\\n  --pf-c-empty-state--c-button__secondary--MarginTop: var(--pf-global--spacer--sm);\\n  --pf-c-empty-state__secondary--MarginTop: var(--pf-global--spacer--xl);\\n  --pf-c-empty-state__secondary--MarginRight: calc(var(--pf-global--spacer--xs) * -1);\\n  --pf-c-empty-state__secondary--MarginBottom: calc(var(--pf-global--spacer--xs) * -1);\\n  --pf-c-empty-state__secondary--c-button--MarginRight: var(--pf-global--spacer--xs);\\n  --pf-c-empty-state__secondary--c-button--MarginBottom: var(--pf-global--spacer--xs);\\n  --pf-c-empty-state--m-sm--MaxWidth: 25rem;\\n  --pf-c-empty-state--m-lg--MaxWidth: 37.5rem;\\n  padding: var(--pf-c-empty-state--Padding);\\n  text-align: center; }\\n\\n.pf-c-empty-state > .pf-c-button.pf-m-primary {\\n  margin-top: var(--pf-c-empty-state--c-button--MarginTop); }\\n\\n.pf-c-empty-state > .pf-c-button.pf-m-primary + .pf-c-empty-state__secondary {\\n  margin-top: var(--pf-c-empty-state--c-button__secondary--MarginTop); }\\n\\n.pf-c-empty-state.pf-m-sm {\\n  max-width: var(--pf-c-empty-state--m-sm--MaxWidth); }\\n\\n.pf-c-empty-state.pf-m-lg {\\n  max-width: var(--pf-c-empty-state--m-lg--MaxWidth); }\\n\\n.pf-c-empty-state__icon {\\n  margin-bottom: var(--pf-c-empty-state__icon--MarginBottom);\\n  font-size: var(--pf-c-empty-state__icon--FontSize);\\n  color: var(--pf-c-empty-state__icon--Color); }\\n\\n.pf-c-empty-state__body {\\n  margin-top: var(--pf-c-empty-state__body--MarginTop);\\n  color: var(--pf-c-empty-state__body--Color); }\\n\\n.pf-c-empty-state__secondary {\\n  display: flex;\\n  flex-wrap: wrap;\\n  justify-content: center;\\n  margin-top: var(--pf-c-empty-state__secondary--MarginTop);\\n  margin-right: var(--pf-c-empty-state__secondary--MarginRight);\\n  margin-bottom: var(--pf-c-empty-state__secondary--MarginBottom); }\\n\\n.pf-c-empty-state__secondary > .pf-c-button {\\n  margin-right: var(--pf-c-empty-state__secondary--c-button--MarginRight);\\n  margin-bottom: var(--pf-c-empty-state__secondary--c-button--MarginBottom); }\\n\\n.pf-m-redhat-font .pf-c-empty-state > .pf-c-title {\\n  font-size: var(--pf-global--FontSize--xl); }\\n\", \"\"]);\n\n// exports\n","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nvar Truncate = function (_Component) {\n    _inherits(Truncate, _Component);\n\n    function Truncate() {\n        var _ref;\n\n        _classCallCheck(this, Truncate);\n\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n        }\n\n        var _this = _possibleConstructorReturn(this, (_ref = Truncate.__proto__ || Object.getPrototypeOf(Truncate)).call.apply(_ref, [this].concat(args)));\n\n        _this.state = {};\n        _this.styles = {\n            ellipsis: {\n                position: 'fixed',\n                visibility: 'hidden',\n                top: 0,\n                left: 0\n            }\n        };\n\n\n        _this.elements = {};\n\n        _this.onResize = _this.onResize.bind(_this);\n        _this.onTruncate = _this.onTruncate.bind(_this);\n        _this.calcTargetWidth = _this.calcTargetWidth.bind(_this);\n        _this.measureWidth = _this.measureWidth.bind(_this);\n        _this.getLines = _this.getLines.bind(_this);\n        _this.renderLine = _this.renderLine.bind(_this);\n        return _this;\n    }\n\n    _createClass(Truncate, [{\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n            var text = this.elements.text,\n                calcTargetWidth = this.calcTargetWidth,\n                onResize = this.onResize;\n\n\n            var canvas = document.createElement('canvas');\n            this.canvasContext = canvas.getContext('2d');\n\n            calcTargetWidth(function () {\n                // Node not needed in document tree to read its content\n                if (text) {\n                    text.parentNode.removeChild(text);\n                }\n            });\n\n            window.addEventListener('resize', onResize);\n        }\n    }, {\n        key: 'componentDidUpdate',\n        value: function componentDidUpdate(prevProps) {\n            // Render was based on outdated refs and needs to be rerun\n            if (this.props.children !== prevProps.children) {\n                this.forceUpdate();\n            }\n\n            // If the width prop has changed, recalculate size of contents\n            if (this.props.width !== prevProps.width) {\n                this.calcTargetWidth();\n            }\n        }\n    }, {\n        key: 'componentWillUnmount',\n        value: function componentWillUnmount() {\n            var ellipsis = this.elements.ellipsis,\n                onResize = this.onResize,\n                timeout = this.timeout;\n\n\n            ellipsis.parentNode.removeChild(ellipsis);\n\n            window.removeEventListener('resize', onResize);\n\n            window.cancelAnimationFrame(timeout);\n        }\n\n        // Shim innerText to consistently break lines at <br/> but not at \\n\n\n    }, {\n        key: 'innerText',\n        value: function innerText(node) {\n            var div = document.createElement('div');\n            var contentKey = 'innerText' in window.HTMLElement.prototype ? 'innerText' : 'textContent';\n\n            div.innerHTML = node.innerHTML.replace(/\\r\\n|\\r|\\n/g, ' ');\n\n            var text = div[contentKey];\n\n            var test = document.createElement('div');\n            test.innerHTML = 'foo<br/>bar';\n\n            if (test[contentKey].replace(/\\r\\n|\\r/g, '\\n') !== 'foo\\nbar') {\n                div.innerHTML = div.innerHTML.replace(/<br.*?[\\/]?>/gi, '\\n');\n                text = div[contentKey];\n            }\n\n            return text;\n        }\n    }, {\n        key: 'onResize',\n        value: function onResize() {\n            this.calcTargetWidth();\n        }\n    }, {\n        key: 'onTruncate',\n        value: function onTruncate(didTruncate) {\n            var onTruncate = this.props.onTruncate;\n\n\n            if (typeof onTruncate === 'function') {\n                this.timeout = window.requestAnimationFrame(function () {\n                    onTruncate(didTruncate);\n                });\n            }\n        }\n    }, {\n        key: 'calcTargetWidth',\n        value: function calcTargetWidth(callback) {\n            var target = this.elements.target,\n                calcTargetWidth = this.calcTargetWidth,\n                canvasContext = this.canvasContext,\n                width = this.props.width;\n\n            // Calculation is no longer relevant, since node has been removed\n\n            if (!target) {\n                return;\n            }\n\n            var targetWidth = width ||\n            // Floor the result to deal with browser subpixel precision\n            Math.floor(target.parentNode.getBoundingClientRect().width);\n\n            // Delay calculation until parent node is inserted to the document\n            // Mounting order in React is ChildComponent, ParentComponent\n            if (!targetWidth) {\n                return window.requestAnimationFrame(function () {\n                    return calcTargetWidth(callback);\n                });\n            }\n\n            var style = window.getComputedStyle(target);\n\n            var font = [style['font-weight'], style['font-style'], style['font-size'], style['font-family']].join(' ');\n\n            canvasContext.font = font;\n\n            this.setState({\n                targetWidth: targetWidth\n            }, callback);\n        }\n    }, {\n        key: 'measureWidth',\n        value: function measureWidth(text) {\n            return this.canvasContext.measureText(text).width;\n        }\n    }, {\n        key: 'ellipsisWidth',\n        value: function ellipsisWidth(node) {\n            return node.offsetWidth;\n        }\n    }, {\n        key: 'trimRight',\n        value: function trimRight(text) {\n            return text.replace(/\\s+$/, '');\n        }\n    }, {\n        key: 'getLines',\n        value: function getLines() {\n            var elements = this.elements,\n                _props = this.props,\n                numLines = _props.lines,\n                ellipsis = _props.ellipsis,\n                trimWhitespace = _props.trimWhitespace,\n                targetWidth = this.state.targetWidth,\n                innerText = this.innerText,\n                measureWidth = this.measureWidth,\n                onTruncate = this.onTruncate,\n                trimRight = this.trimRight;\n\n\n            var lines = [];\n            var text = innerText(elements.text);\n            var textLines = text.split('\\n').map(function (line) {\n                return line.split(' ');\n            });\n            var didTruncate = true;\n            var ellipsisWidth = this.ellipsisWidth(this.elements.ellipsis);\n\n            for (var line = 1; line <= numLines; line++) {\n                var textWords = textLines[0];\n\n                // Handle newline\n                if (textWords.length === 0) {\n                    lines.push();\n                    textLines.shift();\n                    line--;\n                    continue;\n                }\n\n                var resultLine = textWords.join(' ');\n\n                if (measureWidth(resultLine) <= targetWidth) {\n                    if (textLines.length === 1) {\n                        // Line is end of text and fits without truncating\n                        didTruncate = false;\n\n                        lines.push(resultLine);\n                        break;\n                    }\n                }\n\n                if (line === numLines) {\n                    // Binary search determining the longest possible line inluding truncate string\n                    var textRest = textWords.join(' ');\n\n                    var lower = 0;\n                    var upper = textRest.length - 1;\n\n                    while (lower <= upper) {\n                        var middle = Math.floor((lower + upper) / 2);\n\n                        var testLine = textRest.slice(0, middle + 1);\n\n                        if (measureWidth(testLine) + ellipsisWidth <= targetWidth) {\n                            lower = middle + 1;\n                        } else {\n                            upper = middle - 1;\n                        }\n                    }\n\n                    var lastLineText = textRest.slice(0, lower);\n\n                    if (trimWhitespace) {\n                        lastLineText = trimRight(lastLineText);\n\n                        // Remove blank lines from the end of text\n                        while (!lastLineText.length && lines.length) {\n                            var prevLine = lines.pop();\n\n                            lastLineText = trimRight(prevLine);\n                        }\n                    }\n\n                    resultLine = React.createElement(\n                        'span',\n                        null,\n                        lastLineText,\n                        ellipsis\n                    );\n                } else {\n                    // Binary search determining when the line breaks\n                    var _lower = 0;\n                    var _upper = textWords.length - 1;\n\n                    while (_lower <= _upper) {\n                        var _middle = Math.floor((_lower + _upper) / 2);\n\n                        var _testLine = textWords.slice(0, _middle + 1).join(' ');\n\n                        if (measureWidth(_testLine) <= targetWidth) {\n                            _lower = _middle + 1;\n                        } else {\n                            _upper = _middle - 1;\n                        }\n                    }\n\n                    // The first word of this line is too long to fit it\n                    if (_lower === 0) {\n                        // Jump to processing of last line\n                        line = numLines - 1;\n                        continue;\n                    }\n\n                    resultLine = textWords.slice(0, _lower).join(' ');\n                    textLines[0].splice(0, _lower);\n                }\n\n                lines.push(resultLine);\n            }\n\n            onTruncate(didTruncate);\n\n            return lines;\n        }\n    }, {\n        key: 'renderLine',\n        value: function renderLine(line, i, arr) {\n            if (i === arr.length - 1) {\n                return React.createElement(\n                    'span',\n                    { key: i },\n                    line\n                );\n            } else {\n                var br = React.createElement('br', { key: i + 'br' });\n\n                if (line) {\n                    return [React.createElement(\n                        'span',\n                        { key: i },\n                        line\n                    ), br];\n                } else {\n                    return br;\n                }\n            }\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var _this2 = this;\n\n            var target = this.elements.target,\n                _props2 = this.props,\n                children = _props2.children,\n                ellipsis = _props2.ellipsis,\n                lines = _props2.lines,\n                spanProps = _objectWithoutProperties(_props2, ['children', 'ellipsis', 'lines']),\n                targetWidth = this.state.targetWidth,\n                getLines = this.getLines,\n                renderLine = this.renderLine,\n                onTruncate = this.onTruncate;\n\n            var text = void 0;\n\n            var mounted = !!(target && targetWidth);\n\n            if (typeof window !== 'undefined' && mounted) {\n                if (lines > 0) {\n                    text = getLines().map(renderLine);\n                } else {\n                    text = children;\n\n                    onTruncate(false);\n                }\n            }\n\n            delete spanProps.onTruncate;\n            delete spanProps.trimWhitespace;\n\n            return React.createElement(\n                'span',\n                _extends({}, spanProps, { ref: function ref(targetEl) {\n                        _this2.elements.target = targetEl;\n                    } }),\n                React.createElement(\n                    'span',\n                    null,\n                    text\n                ),\n                React.createElement(\n                    'span',\n                    { ref: function ref(textEl) {\n                            _this2.elements.text = textEl;\n                        } },\n                    children\n                ),\n                React.createElement(\n                    'span',\n                    { ref: function ref(ellipsisEl) {\n                            _this2.elements.ellipsis = ellipsisEl;\n                        }, style: this.styles.ellipsis },\n                    ellipsis\n                )\n            );\n        }\n    }]);\n\n    return Truncate;\n}(Component);\n\nTruncate.propTypes = {\n    children: PropTypes.node,\n    ellipsis: PropTypes.node,\n    lines: PropTypes.oneOfType([PropTypes.oneOf([false]), PropTypes.number]),\n    trimWhitespace: PropTypes.bool,\n    width: PropTypes.number,\n    onTruncate: PropTypes.func\n};\nTruncate.defaultProps = {\n    children: '',\n    ellipsis: '…',\n    lines: 1,\n    trimWhitespace: false,\n    width: 0\n};\nexport default Truncate;\n;\n","import React from 'react';\nimport {\n    Link\n} from 'react-router-dom';\nimport Truncate from 'react-truncate';\nimport {\n    Chip,\n    Card,\n    CardBody,\n    Text,\n    TextContent,\n    TextVariants,\n    Grid,\n    GridItem\n} from '@patternfly/react-core';\nimport {\n    ChartDonut,\n    ChartLabel,\n    ChartTheme\n} from '@patternfly/react-charts';\nimport '../../Charts.scss';\n\nclass CompliancePolicyCard extends React.Component {\n    constructor(policy) {\n        super(policy);\n        this.policy = policy.policy;\n        this.state = { cardTitle: <Truncate lines={1}>{this.policy.name}</Truncate> };\n    }\n\n    onMouseover = () => {\n        this.setState({ cardTitle: this.policy.name });\n    }\n\n    onMouseout = () => {\n        this.setState({ cardTitle: <Truncate lines={1}>{this.policy.name}</Truncate> });\n    }\n\n    render() {\n        const compliantHostCount = this.policy.compliantHostCount;\n        const totalHostCount = this.policy.totalHostCount;\n        let donutValues = [\n            { x: 'Compliant', y: compliantHostCount },\n            { x: 'Non-compliant', y: totalHostCount - compliantHostCount }\n        ];\n        const compliancePercentage = Math.floor(100 *\n            (donutValues[0].y / (donutValues[0].y + donutValues[1].y))) + '%';\n        const label = (\n            <svg\n                className=\"chart-label\"\n                height={300}\n                width={300}\n            >\n                <ChartLabel\n                    style={{ fontSize: 26 }}\n                    text={compliancePercentage}\n                    textAnchor=\"middle\"\n                    verticalAnchor=\"middle\"\n                    x={150}\n                    y={135}\n                />\n                <ChartLabel\n                    style={{ fill: 'var(--pf-global--Color--200)' }}\n                    text=\"Systems above threshold\"\n                    textAnchor=\"middle\"\n                    verticalAnchor=\"middle\"\n                    x={150}\n                    y={165}\n                />\n            </svg>\n        );\n\n        return (\n            <Card widget-id={this.policy.refId}>\n                <CardBody>\n                    <Text style={{ fontWeight: '500', color: 'var(--pf-global--Color--200)' }} component={TextVariants.small}>\n                        External Policy\n                    </Text>\n                    <TextContent>\n                        <Text onMouseEnter={this.onMouseover.bind(this)} onMouseLeave={this.onMouseout.bind(this)}\n                            style={{ fontWeight: '500' }} component={TextVariants.h4}>\n                            {this.state.cardTitle}\n                        </Text>\n                    </TextContent>\n                    <TextContent className=\"chart-title\">\n                        <Grid>\n                            <GridItem style={{ display: 'inline-flex' }} span={12}>\n                                <TextContent>\n                                    <span style={{ fontSize: '30px', fontWeight: '500' }}>\n                                        { compliantHostCount }\n                                    </span>\n                                    <span style={{ fontWeight: '500', color: 'var(--pf-global--Color--200)' }}>\n                                        {' '}of{' '}\n                                    </span>\n                                    <span style={{ fontSize: '30px', fontWeight: '500' }}>\n                                        { totalHostCount }\n                                    </span>\n                                </TextContent>\n                            </GridItem>\n                            <GridItem span={8}>\n                                <Text\n                                    style={{ fontWeight: '500', color: 'var(--pf-global--Color--200)' }}\n                                    component={TextVariants.small}\n                                >\n                                    Systems meet compliance threshold\n                                </Text>\n                            </GridItem>\n                            <GridItem span={6}>\n                                <TextContent>\n                                    <Text component={TextVariants.small} style={{ fontSize: '16px' }} >\n                                        <Link to={'/policies/' + this.policy.id} >\n                                                More details\n                                        </Link>\n                                    </Text>\n                                </TextContent>\n                            </GridItem>\n                            <GridItem span={6} style={{ textAlign: 'right' }}>\n                                { this.policy.businessObjective &&\n                                    <Chip isReadOnly>\n                                        { this.policy.businessObjective.title }\n                                    </Chip>\n                                }\n                            </GridItem>\n                        </Grid>\n                    </TextContent>\n                </CardBody>\n                <hr/>\n                <CardBody>\n                    <Grid>\n                        <GridItem style={{ textAlign: 'center' }} span={12}>\n                            <div className='chart-inline'>\n                                <div className='card-chart-container'>\n                                    {label}\n                                    <ChartDonut data={donutValues}\n                                        identifier={this.policy.name.replace(/ /g, '')}\n                                        theme={ChartTheme.light.blue}\n                                        height={205}\n                                        width={205}\n                                    />\n                                </div>\n                            </div>\n                        </GridItem>\n                    </Grid>\n                </CardBody>\n            </Card>\n        );\n    };\n};\n\nexport default CompliancePolicyCard;\n","import React from 'react';\nimport ComplianceTabs from '../ComplianceTabs/ComplianceTabs';\nimport { PageHeader, PageHeaderTitle, Main } from '@redhat-cloud-services/frontend-components';\nimport emptyStateStyles from '@patternfly/patternfly/components/EmptyState/empty-state.css';\nimport { CloudServerIcon } from '@patternfly/react-icons';\nimport routerParams from '@redhat-cloud-services/frontend-components-utilities/files/RouterParams';\nimport CompliancePolicyCard from '../CompliancePolicyCard/CompliancePolicyCard';\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport ErrorPage from '../ErrorPage/ErrorPage';\nimport ContentLoader from 'react-content-loader';\nimport {\n    Card,\n    Grid,\n    GridItem,\n    Title,\n    TextContent,\n    Button,\n    Bullseye,\n    EmptyState,\n    EmptyStateIcon,\n    ClipboardCopy,\n    ClipboardCopyVariant\n} from '@patternfly/react-core';\n\nconst QUERY = gql`\n{\n    allProfiles {\n        id\n        name\n        refId\n        description\n        totalHostCount\n        compliantHostCount\n        businessObjective {\n            title\n        }\n    }\n}\n`;\n\nconst LoadingComplianceCard = () => (\n    <Card>\n        <ContentLoader\n            height={400}\n            width={400}\n            speed={2}\n            primaryColor=\"#f3f3f3\"\n            secondaryColor=\"#ecebeb\"\n        >\n            <rect x=\"6\" y=\"31\" rx=\"4\" ry=\"4\" width=\"293\" height=\"15\" />\n            <rect x=\"8\" y=\"15\" rx=\"3\" ry=\"3\" width=\"85\" height=\"6\" />\n            <rect x=\"7\" y=\"112\" rx=\"3\" ry=\"3\" width=\"220\" height=\"10\" />\n            <circle cx=\"190\" cy=\"256\" r=\"109\" />\n            <rect x=\"8\" y=\"73\" rx=\"0\" ry=\"0\" width=\"69\" height=\"23\" />\n            <rect x=\"47\" y=\"77\" rx=\"0\" ry=\"0\" width=\"0\" height=\"0\" />\n            <rect x=\"36\" y=\"77\" rx=\"0\" ry=\"0\" width=\"16\" height=\"0\" />\n        </ContentLoader>\n    </Card>\n);\n\nconst LoadingComplianceCards = () => (\n    <Grid gutter='md'>\n        <GridItem sm={12} md={12} lg={6} xl={4}>\n            <LoadingComplianceCard/>\n        </GridItem>\n        <GridItem sm={12} md={12} lg={6} xl={4}>\n            <LoadingComplianceCard/>\n        </GridItem>\n        <GridItem sm={12} md={12} lg={6} xl={4}>\n            <LoadingComplianceCard/>\n        </GridItem>\n    </Grid>\n);\n\nconst CompliancePolicies = () => (\n    <Query query={QUERY}>\n        {({ data, error, loading }) => {\n            if (error) { return <ErrorPage error={error}/>; }\n\n            if (loading) {\n                return (\n                    <React.Fragment>\n                        <PageHeader>\n                            <PageHeaderTitle title=\"Compliance\" />\n                        </PageHeader>\n                        <Main>\n                            <div className=\"policies-donuts\">\n                                <Grid gutter='md'>\n                                    <LoadingComplianceCards/>;\n                                </Grid>\n                            </div>\n                        </Main>\n                    </React.Fragment>\n                );\n            }\n\n            const policies = data.allProfiles;\n            let policyCards = [];\n            let pageHeader;\n            if (policies.length) {\n                pageHeader = <PageHeader>\n                    <PageHeaderTitle title=\"Compliance\" />\n                    <ComplianceTabs/>\n                </PageHeader>;\n                policyCards = policies.map(\n                    (policy, i) =>\n                        <GridItem sm={12} md={12} lg={6} xl={4} key={i}>\n                            <CompliancePolicyCard\n                                key={i}\n                                policy={policy}\n                            />\n                        </GridItem>\n                );\n            } else {\n                pageHeader = <PageHeader style={{ paddingBottom: 22 }}><PageHeaderTitle title=\"Compliance\" /></PageHeader>;\n                policyCards = <Bullseye>\n                    <EmptyState>\n                        <EmptyStateIcon style={{ fontWeight: '500', color: 'var(--pf-global--primary-color--100)' }}\n                            size=\"xl\" title=\"Compliance\" icon={CloudServerIcon} />\n                        <br/>\n                        <Title size=\"lg\">Connect with OpenSCAP to do more with Red Hat Enterprise Linux</Title>\n                        <br/>\n                        <span className={emptyStateStyles.emptyStateBody}>\n                            <TextContent>\n                                Scan and upload a report on a system with OpenSCAP to see information\n                                about your system&#39;s compliance to policies.\n                                <br/>\n                                Generate a report with OpenSCAP with the following command:\n                                <ClipboardCopy className='upload-instructions'\n                                    variant={ClipboardCopyVariant.expansion}>\n                                    oscap xccdf eval --profile xccdf_org.ssgproject.content_profile_standard\n                                    --results scan.xml /usr/share/xml/scap/ssg/content/ssg-rhel7-ds.xml\n                                </ClipboardCopy>\n                                And upload it using the following command:\n                                <ClipboardCopy className='upload-instructions'\n                                    variant={ClipboardCopyVariant.expansion}>\n                                    sudo insights-client --verbose --payload scan.xml\n                                    --content-type application/vnd.redhat.compliance.something+tgz\n                                </ClipboardCopy>\n                            </TextContent>\n                        </span>\n\n                        <Button\n                            variant=\"primary\"\n                            component=\"a\"\n                            target=\"_blank\"\n                            href=\"https://www.open-scap.org/getting-started/\">\n                            Get started with OpenSCAP\n                        </Button>\n                    </EmptyState>\n                </Bullseye>;\n            }\n\n            return (\n                <React.Fragment>\n                    { pageHeader }\n                    <Main>\n                        <div className=\"policies-donuts\">\n                            <Grid gutter='md'>\n                                {policyCards}\n                            </Grid>\n                        </div>\n                    </Main>\n                </React.Fragment>\n            );\n        }}\n    </Query>\n);\n\nexport default routerParams(CompliancePolicies);\n"],"sourceRoot":""}