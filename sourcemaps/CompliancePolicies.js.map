{"version":3,"sources":["webpack:///./src/SmartComponents/ComplianceTabs/ComplianceTabs.js","webpack:///./src/SmartComponents/CompliancePolicyCard/CompliancePolicyCard.js","webpack:///./src/SmartComponents/CompliancePoliciesCards/CompliancePoliciesCards.js","webpack:///./src/SmartComponents/CompliancePolicies/CompliancePolicies.js"],"names":["ComplianceTabs","props","_this","_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default","this","_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default","_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default","call","redirect","bind","_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5___default","tab","history","push","itemId","react__WEBPACK_IMPORTED_MODULE_8___default","a","createElement","Fragment","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_10__","onSelect","aria-label","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_11__","variant","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_12__","horizontal","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_13__","preventDefault","_Routes__WEBPACK_IMPORTED_MODULE_9__","compliancePolicies","complianceSystems","react__WEBPACK_IMPORTED_MODULE_8__","propTypes","prop_types__WEBPACK_IMPORTED_MODULE_7___default","object","__webpack_exports__","Object","_red_hat_insights_insights_frontend_components__WEBPACK_IMPORTED_MODULE_6__","SmartComponents_CompliancePolicyCard_CompliancePolicyCard","CompliancePolicyCard","policy","classCallCheck_default","possibleConstructorReturn_default","getPrototypeOf_default","compliantHostCount","compliant_host_count","totalHostCount","total_host_count","donutValues","x","y","compliancePercentage","label","react_default","className","height","width","ChartLabel","style","fontSize","text","textAnchor","verticalAnchor","fill","Card","CardBody","Text","fontWeight","color","component","small","TextContent","h4","name","Grid","GridItem","display","span","textAlign","ChartDonut","data","identifier","replace","theme","ChartTheme","light","blue","Link","to","id","Component","QUERY","src_default","_templateObject","SmartComponents_CompliancePoliciesCards_CompliancePoliciesCards","insights_frontend_components","react_apollo_browser_umd","query","_ref","error","loading","policies","allProfiles","policyCards","length","map","i","key","gutter","title"],"mappings":"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","file":"js/CompliancePolicies.js","sourcesContent":["import { routerParams } from '@red-hat-insights/insights-frontend-components';\nimport propTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { paths } from '../../Routes';\nimport { Nav, NavList, NavItem, NavVariants } from '@patternfly/react-core';\n\nclass ComplianceTabs extends Component {\n    constructor(props) {\n        super(props);\n        this.redirect = this.redirect.bind(this);\n    }\n    redirect(tab) {\n        this.props.history.push(tab.itemId);\n    }\n    render() {\n        return (\n            <React.Fragment>\n                <Nav onSelect={this.redirect} aria-label=\"Compliance Tabs\">\n                    <NavList variant={NavVariants.horizontal}>\n                        <NavItem preventDefault={true} itemId={paths.compliancePolicies}>\n                            Policies\n                        </NavItem>\n                        <NavItem preventDefault={true} itemId={paths.complianceSystems}>\n                            Systems\n                        </NavItem>\n                    </NavList>\n                </Nav>\n            </React.Fragment>\n        );\n    }\n}\n\nComplianceTabs.propTypes = {\n    history: propTypes.object\n};\n\nexport default routerParams(ComplianceTabs);\n","import React from 'react';\nimport {\n    Link\n} from 'react-router-dom';\nimport {\n    Card,\n    CardBody,\n    Text,\n    TextContent,\n    TextVariants,\n    Grid,\n    GridItem\n} from '@patternfly/react-core';\nimport {\n    ChartDonut,\n    ChartLabel,\n    ChartTheme\n} from '@patternfly/react-charts';\nimport '../../Charts.scss';\n\nclass CompliancePolicyCard extends React.Component {\n    constructor(policy) {\n        super();\n        this.policy = policy.policy;\n    }\n\n    render() {\n        const compliantHostCount = this.policy.compliant_host_count;\n        const totalHostCount = this.policy.total_host_count;\n        let donutValues = [\n            { x: 'Compliant', y: compliantHostCount },\n            { x: 'Non-compliant', y: totalHostCount - compliantHostCount }\n        ];\n        const compliancePercentage = (donutValues[0].y / donutValues[1].y) || '0' + '%';\n        const label = (\n            <svg\n                className=\"chart-label\"\n                height={300}\n                width={300}\n            >\n                <ChartLabel\n                    style={{ fontSize: 26 }}\n                    text={compliancePercentage}\n                    textAnchor=\"middle\"\n                    verticalAnchor=\"middle\"\n                    x={150}\n                    y={135}\n                />\n                <ChartLabel\n                    style={{ fill: '#bbb' }}\n                    text=\"Compliant\"\n                    textAnchor=\"middle\"\n                    verticalAnchor=\"middle\"\n                    x={150}\n                    y={165}\n                />\n            </svg>\n        );\n\n        return (\n            <Card>\n                <CardBody>\n                    <Text style={{ fontWeight: '500', color: '#bbb' }} component={TextVariants.small}>External Policy</Text>\n                    <TextContent>\n                        <Text style={{ fontWeight: '500' }} component={TextVariants.h4}>{this.policy.name}</Text>\n                    </TextContent>\n                    <TextContent className=\"chart-title\">\n                        <Grid>\n                            <GridItem style={{ display: 'inline-flex' }} span={12}>\n                                <TextContent>\n                                    <span style={{ fontSize: '30px', fontWeight: '500' }}>\n                                        { compliantHostCount }\n                                    </span>\n                                    <span style={{ fontWeight: '500', color: '#bbb' }}>\n                                        {' '}of{' '}\n                                    </span>\n                                    <span style={{ fontSize: '30px', fontWeight: '500' }}>\n                                        { totalHostCount }\n                                    </span>\n                                </TextContent>\n                            </GridItem>\n                            <GridItem span={8}>\n                                <Text style={{ fontWeight: '500', color: '#bbb' }} component={TextVariants.small}>\n                                    Systems Compliant\n                                </Text>\n                            </GridItem>\n                        </Grid>\n                    </TextContent>\n                    <hr/>\n                    <Grid>\n                        <GridItem style={{ textAlign: 'center' }} span={12}>\n                            <div className='chart-inline'>\n                                <div className='card-chart-container'>\n                                    {label}\n                                    <ChartDonut data={donutValues}\n                                        identifier={this.policy.name.replace(/ /g, '')}\n                                        theme={ChartTheme.light.blue}\n                                        height={205}\n                                        width={205}\n                                    />\n                                </div>\n                            </div>\n                        </GridItem>\n                    </Grid>\n                    <TextContent style={{ textAlign: 'right' }}>\n                        <Text component={TextVariants.small}>\n                            <Link to={'/policies/' + this.policy.id} >\n                                More Details\n                            </Link>\n                        </Text>\n                    </TextContent>\n                </CardBody>\n            </Card>\n        );\n    };\n};\n\nexport default CompliancePolicyCard;\n","import React from 'react';\nimport { Grid, GridItem } from '@patternfly/react-core';\nimport { routerParams } from '@red-hat-insights/insights-frontend-components';\nimport CompliancePolicyCard from '../CompliancePolicyCard/CompliancePolicyCard';\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\n\nconst QUERY = gql`\n{\n    allProfiles {\n        id\n        name\n        ref_id\n        description\n        total_host_count\n        compliant_host_count\n    }\n}\n`;\n\nconst CompliancePoliciesCards = () => (\n    <Query query={QUERY}>\n        {({ data, error, loading }) => {\n            if (error) { return 'Oops! Error loading Policy data: ' + error; }\n\n            if (loading) { return 'Loading Policies...'; }\n\n            const policies = data.allProfiles;\n            let policyCards = [];\n            if (policies.length) {\n                policyCards = policies.map(\n                    (policy, i) =>\n                        <GridItem span={3} key={i}>\n                            <CompliancePolicyCard\n                                key={i}\n                                policy={policy}\n                            />\n                        </GridItem>\n                );\n            }\n\n            return (\n                <div className=\"policies-donuts\">\n                    <Grid gutter='md'>\n                        {policyCards}\n                    </Grid>\n                </div>\n            );\n        }}\n    </Query>\n);\n\nexport default routerParams(CompliancePoliciesCards);\n","import React from 'react';\nimport CompliancePoliciesCards from '../CompliancePoliciesCards/CompliancePoliciesCards';\nimport ComplianceTabs from '../ComplianceTabs/ComplianceTabs';\nimport { PageHeader, PageHeaderTitle, Main } from '@red-hat-insights/insights-frontend-components';\n\nconst CompliancePolicies = () => {\n    return (\n        <React.Fragment>\n            <PageHeader>\n                <PageHeaderTitle title=\"Compliance\" />\n                <ComplianceTabs/>\n            </PageHeader>\n            <Main>\n                <CompliancePoliciesCards />\n            </Main>\n        </React.Fragment>\n    );\n};\n\nexport default CompliancePolicies;\n"],"sourceRoot":""}