{"version":3,"sources":["webpack:///./src/SmartComponents/ErrorPage/ErrorPage.js","webpack:///./src/SmartComponents/ComplianceTabs/ComplianceTabs.js","webpack:///./node_modules/lodash/invert.js","webpack:///./node_modules/lodash/constant.js","webpack:///./node_modules/lodash/_createInverter.js","webpack:///./node_modules/lodash/_baseInverter.js","webpack:///./node_modules/lodash/_baseForOwn.js","webpack:///./node_modules/lodash/_baseFor.js","webpack:///./node_modules/lodash/_createBaseFor.js","webpack:///./node_modules/react-truncate/lib/Truncate.js","webpack:///./src/SmartComponents/CompliancePolicyCard/CompliancePolicyCard.js","webpack:///./src/SmartComponents/CompliancePoliciesCards/CompliancePoliciesCards.js","webpack:///./src/SmartComponents/CompliancePolicies/CompliancePolicies.js"],"names":["ErrorPage","props","_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default","this","_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default","_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default","call","error","networkError","statusCode","window","insights","chrome","auth","logout","react__WEBPACK_IMPORTED_MODULE_5__","propTypes","prop_types__WEBPACK_IMPORTED_MODULE_6___default","a","object","__webpack_exports__","ComplianceTabs","_this","tabPaths","0","_Routes__WEBPACK_IMPORTED_MODULE_9__","compliancePolicies","1","complianceSystems","redirect","bind","_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5___default","_","tabIndex","history","push","path","match","currentKey","Number","lodash_invert__WEBPACK_IMPORTED_MODULE_12___default","react__WEBPACK_IMPORTED_MODULE_8___default","createElement","Fragment","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_10__","activeKey","onSelect","aria-label","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_11__","title","eventKey","react__WEBPACK_IMPORTED_MODULE_8__","prop_types__WEBPACK_IMPORTED_MODULE_7___default","Object","_red_hat_insights_insights_frontend_components__WEBPACK_IMPORTED_MODULE_6__","constant","__webpack_require__","createInverter","identity","nativeObjectToString","prototype","toString","invert","result","value","key","module","exports","baseInverter","setter","toIteratee","iteratee","baseForOwn","accumulator","baseFor","keys","createBaseFor","fromRight","keysFunc","index","iterable","length","_extends","assign","target","i","arguments","source","hasOwnProperty","_createClass","defineProperties","descriptor","enumerable","configurable","writable","defineProperty","Constructor","protoProps","staticProps","Truncate_Truncate","_Component","Truncate","_ref","instance","TypeError","_classCallCheck","_len","args","Array","_key","self","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","apply","concat","state","styles","ellipsis","position","visibility","top","left","elements","onResize","onTruncate","calcTargetWidth","measureWidth","getLines","renderLine","subClass","superClass","create","constructor","setPrototypeOf","_inherits","react","text","canvas","document","canvasContext","getContext","parentNode","removeChild","addEventListener","prevProps","children","forceUpdate","width","timeout","removeEventListener","cancelAnimationFrame","node","div","contentKey","HTMLElement","innerHTML","replace","test","didTruncate","requestAnimationFrame","callback","targetWidth","Math","floor","getBoundingClientRect","style","getComputedStyle","font","join","setState","measureText","offsetWidth","_props","numLines","lines","trimWhitespace","innerText","trimRight","textLines","split","map","line","ellipsisWidth","textWords","resultLine","textRest","lower","upper","middle","slice","lastLineText","pop","react_default","_lower","_upper","_middle","splice","shift","arr","br","_this2","_props2","spanProps","obj","indexOf","_objectWithoutProperties","ref","targetEl","textEl","ellipsisEl","prop_types_default","oneOfType","oneOf","number","bool","func","defaultProps","lib_Truncate","SmartComponents_CompliancePolicyCard_CompliancePolicyCard","CompliancePolicyCard","policy","classCallCheck_default","possibleConstructorReturn_default","getPrototypeOf_default","cardTitle","name","onMouseover","assertThisInitialized_default","onMouseout","compliantHostCount","compliant_host_count","totalHostCount","total_host_count","donutValues","x","y","compliancePercentage","label","className","height","ChartLabel","fontSize","textAnchor","verticalAnchor","fill","Card","widget-id","ref_id","CardBody","Text","fontWeight","color","component","small","TextContent","onMouseEnter","onMouseLeave","h4","Grid","GridItem","display","span","textAlign","ChartDonut","data","identifier","theme","ChartTheme","light","blue","Link","to","id","Component","QUERY","src_default","_templateObject","SmartComponents_CompliancePoliciesCards_CompliancePoliciesCards","insights_frontend_components","react_apollo_browser_umd","query","loading","policies","allProfiles","policyCards","sm","md","lg","xl","Bullseye","EmptyState","EmptyStateIcon","size","icon","clipboard_check_icon","Title","EmptyStateBody","blockquote","Button","variant","href","gutter"],"mappings":"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","file":"js/CompliancePolicies.js","sourcesContent":["import { Component } from 'react';\nimport propTypes from 'prop-types';\n\nclass ErrorPage extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { error } = this.props;\n        if (error.networkError.statusCode === 401) {\n            window.insights.chrome.auth.logout();\n        }\n\n        return 'Oops! There was an error loading Compliance data. If you need to contact ' +\n            'Red Hat Support about this, this is the exact error: ' +\n            error.networkError.statusCode + ' ' + error;\n    }\n}\n\nErrorPage.propTypes = {\n    error: propTypes.object\n};\n\nexport default ErrorPage;\n","import { routerParams } from '@red-hat-insights/insights-frontend-components';\nimport propTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { paths } from '../../Routes';\nimport { Tabs, Tab } from '@patternfly/react-core';\nimport invert from 'lodash/invert';\n\nclass ComplianceTabs extends Component {\n    constructor(props) {\n        super(props);\n        this.tabPaths = {\n            0: paths.compliancePolicies,\n            1: paths.complianceSystems\n        };\n        this.redirect = this.redirect.bind(this);\n    }\n\n    redirect(_, tabIndex) {\n        this.props.history.push(this.tabPaths[tabIndex]);\n    }\n\n    render() {\n        const { match: { path } } = this.props;\n        const currentKey = Number(invert(this.tabPaths)[path]);\n\n        return (\n            <React.Fragment>\n                <Tabs activeKey={currentKey} onSelect={this.redirect} aria-label=\"Compliance Tabs\">\n                    <Tab title={'Policies'} eventKey={0}>\n                    </Tab>\n                    <Tab title={'Systems'} eventKey={1}>\n                    </Tab>\n                </Tabs>\n            </React.Fragment>\n        );\n    }\n}\n\nComplianceTabs.propTypes = {\n    history: propTypes.object,\n    match: propTypes.object\n};\n\nexport default routerParams(ComplianceTabs);\n","var constant = require('./constant'),\n    createInverter = require('./_createInverter'),\n    identity = require('./identity');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Creates an object composed of the inverted keys and values of `object`.\n * If `object` contains duplicate values, subsequent values overwrite\n * property assignments of previous values.\n *\n * @static\n * @memberOf _\n * @since 0.7.0\n * @category Object\n * @param {Object} object The object to invert.\n * @returns {Object} Returns the new inverted object.\n * @example\n *\n * var object = { 'a': 1, 'b': 2, 'c': 1 };\n *\n * _.invert(object);\n * // => { '1': 'c', '2': 'b' }\n */\nvar invert = createInverter(function(result, value, key) {\n  if (value != null &&\n      typeof value.toString != 'function') {\n    value = nativeObjectToString.call(value);\n  }\n\n  result[value] = key;\n}, constant(identity));\n\nmodule.exports = invert;\n","/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\nmodule.exports = constant;\n","var baseInverter = require('./_baseInverter');\n\n/**\n * Creates a function like `_.invertBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} toIteratee The function to resolve iteratees.\n * @returns {Function} Returns the new inverter function.\n */\nfunction createInverter(setter, toIteratee) {\n  return function(object, iteratee) {\n    return baseInverter(object, setter, toIteratee(iteratee), {});\n  };\n}\n\nmodule.exports = createInverter;\n","var baseForOwn = require('./_baseForOwn');\n\n/**\n * The base implementation of `_.invert` and `_.invertBy` which inverts\n * `object` with values transformed by `iteratee` and set by `setter`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform values.\n * @param {Object} accumulator The initial inverted object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction baseInverter(object, setter, iteratee, accumulator) {\n  baseForOwn(object, function(value, key, object) {\n    setter(accumulator, iteratee(value), key, object);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseInverter;\n","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;\n","var createBaseFor = require('./_createBaseFor');\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\nmodule.exports = baseFor;\n","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;\n","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nvar Truncate = function (_Component) {\n    _inherits(Truncate, _Component);\n\n    function Truncate() {\n        var _ref;\n\n        _classCallCheck(this, Truncate);\n\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n        }\n\n        var _this = _possibleConstructorReturn(this, (_ref = Truncate.__proto__ || Object.getPrototypeOf(Truncate)).call.apply(_ref, [this].concat(args)));\n\n        _this.state = {};\n        _this.styles = {\n            ellipsis: {\n                position: 'fixed',\n                visibility: 'hidden',\n                top: 0,\n                left: 0\n            }\n        };\n\n\n        _this.elements = {};\n\n        _this.onResize = _this.onResize.bind(_this);\n        _this.onTruncate = _this.onTruncate.bind(_this);\n        _this.calcTargetWidth = _this.calcTargetWidth.bind(_this);\n        _this.measureWidth = _this.measureWidth.bind(_this);\n        _this.getLines = _this.getLines.bind(_this);\n        _this.renderLine = _this.renderLine.bind(_this);\n        return _this;\n    }\n\n    _createClass(Truncate, [{\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n            var text = this.elements.text,\n                calcTargetWidth = this.calcTargetWidth,\n                onResize = this.onResize;\n\n\n            var canvas = document.createElement('canvas');\n            this.canvasContext = canvas.getContext('2d');\n\n            calcTargetWidth(function () {\n                // Node not needed in document tree to read its content\n                if (text) {\n                    text.parentNode.removeChild(text);\n                }\n            });\n\n            window.addEventListener('resize', onResize);\n        }\n    }, {\n        key: 'componentDidUpdate',\n        value: function componentDidUpdate(prevProps) {\n            // Render was based on outdated refs and needs to be rerun\n            if (this.props.children !== prevProps.children) {\n                this.forceUpdate();\n            }\n\n            // If the width prop has changed, recalculate size of contents\n            if (this.props.width !== prevProps.width) {\n                this.calcTargetWidth();\n            }\n        }\n    }, {\n        key: 'componentWillUnmount',\n        value: function componentWillUnmount() {\n            var ellipsis = this.elements.ellipsis,\n                onResize = this.onResize,\n                timeout = this.timeout;\n\n\n            ellipsis.parentNode.removeChild(ellipsis);\n\n            window.removeEventListener('resize', onResize);\n\n            window.cancelAnimationFrame(timeout);\n        }\n\n        // Shim innerText to consistently break lines at <br/> but not at \\n\n\n    }, {\n        key: 'innerText',\n        value: function innerText(node) {\n            var div = document.createElement('div');\n            var contentKey = 'innerText' in window.HTMLElement.prototype ? 'innerText' : 'textContent';\n\n            div.innerHTML = node.innerHTML.replace(/\\r\\n|\\r|\\n/g, ' ');\n\n            var text = div[contentKey];\n\n            var test = document.createElement('div');\n            test.innerHTML = 'foo<br/>bar';\n\n            if (test[contentKey].replace(/\\r\\n|\\r/g, '\\n') !== 'foo\\nbar') {\n                div.innerHTML = div.innerHTML.replace(/<br.*?[\\/]?>/gi, '\\n');\n                text = div[contentKey];\n            }\n\n            return text;\n        }\n    }, {\n        key: 'onResize',\n        value: function onResize() {\n            this.calcTargetWidth();\n        }\n    }, {\n        key: 'onTruncate',\n        value: function onTruncate(didTruncate) {\n            var onTruncate = this.props.onTruncate;\n\n\n            if (typeof onTruncate === 'function') {\n                this.timeout = window.requestAnimationFrame(function () {\n                    onTruncate(didTruncate);\n                });\n            }\n        }\n    }, {\n        key: 'calcTargetWidth',\n        value: function calcTargetWidth(callback) {\n            var target = this.elements.target,\n                calcTargetWidth = this.calcTargetWidth,\n                canvasContext = this.canvasContext,\n                width = this.props.width;\n\n            // Calculation is no longer relevant, since node has been removed\n\n            if (!target) {\n                return;\n            }\n\n            var targetWidth = width ||\n            // Floor the result to deal with browser subpixel precision\n            Math.floor(target.parentNode.getBoundingClientRect().width);\n\n            // Delay calculation until parent node is inserted to the document\n            // Mounting order in React is ChildComponent, ParentComponent\n            if (!targetWidth) {\n                return window.requestAnimationFrame(function () {\n                    return calcTargetWidth(callback);\n                });\n            }\n\n            var style = window.getComputedStyle(target);\n\n            var font = [style['font-weight'], style['font-style'], style['font-size'], style['font-family']].join(' ');\n\n            canvasContext.font = font;\n\n            this.setState({\n                targetWidth: targetWidth\n            }, callback);\n        }\n    }, {\n        key: 'measureWidth',\n        value: function measureWidth(text) {\n            return this.canvasContext.measureText(text).width;\n        }\n    }, {\n        key: 'ellipsisWidth',\n        value: function ellipsisWidth(node) {\n            return node.offsetWidth;\n        }\n    }, {\n        key: 'trimRight',\n        value: function trimRight(text) {\n            return text.replace(/\\s+$/, '');\n        }\n    }, {\n        key: 'getLines',\n        value: function getLines() {\n            var elements = this.elements,\n                _props = this.props,\n                numLines = _props.lines,\n                ellipsis = _props.ellipsis,\n                trimWhitespace = _props.trimWhitespace,\n                targetWidth = this.state.targetWidth,\n                innerText = this.innerText,\n                measureWidth = this.measureWidth,\n                onTruncate = this.onTruncate,\n                trimRight = this.trimRight;\n\n\n            var lines = [];\n            var text = innerText(elements.text);\n            var textLines = text.split('\\n').map(function (line) {\n                return line.split(' ');\n            });\n            var didTruncate = true;\n            var ellipsisWidth = this.ellipsisWidth(this.elements.ellipsis);\n\n            for (var line = 1; line <= numLines; line++) {\n                var textWords = textLines[0];\n\n                // Handle newline\n                if (textWords.length === 0) {\n                    lines.push();\n                    textLines.shift();\n                    line--;\n                    continue;\n                }\n\n                var resultLine = textWords.join(' ');\n\n                if (measureWidth(resultLine) <= targetWidth) {\n                    if (textLines.length === 1) {\n                        // Line is end of text and fits without truncating\n                        didTruncate = false;\n\n                        lines.push(resultLine);\n                        break;\n                    }\n                }\n\n                if (line === numLines) {\n                    // Binary search determining the longest possible line inluding truncate string\n                    var textRest = textWords.join(' ');\n\n                    var lower = 0;\n                    var upper = textRest.length - 1;\n\n                    while (lower <= upper) {\n                        var middle = Math.floor((lower + upper) / 2);\n\n                        var testLine = textRest.slice(0, middle + 1);\n\n                        if (measureWidth(testLine) + ellipsisWidth <= targetWidth) {\n                            lower = middle + 1;\n                        } else {\n                            upper = middle - 1;\n                        }\n                    }\n\n                    var lastLineText = textRest.slice(0, lower);\n\n                    if (trimWhitespace) {\n                        lastLineText = trimRight(lastLineText);\n\n                        // Remove blank lines from the end of text\n                        while (!lastLineText.length && lines.length) {\n                            var prevLine = lines.pop();\n\n                            lastLineText = trimRight(prevLine);\n                        }\n                    }\n\n                    resultLine = React.createElement(\n                        'span',\n                        null,\n                        lastLineText,\n                        ellipsis\n                    );\n                } else {\n                    // Binary search determining when the line breaks\n                    var _lower = 0;\n                    var _upper = textWords.length - 1;\n\n                    while (_lower <= _upper) {\n                        var _middle = Math.floor((_lower + _upper) / 2);\n\n                        var _testLine = textWords.slice(0, _middle + 1).join(' ');\n\n                        if (measureWidth(_testLine) <= targetWidth) {\n                            _lower = _middle + 1;\n                        } else {\n                            _upper = _middle - 1;\n                        }\n                    }\n\n                    // The first word of this line is too long to fit it\n                    if (_lower === 0) {\n                        // Jump to processing of last line\n                        line = numLines - 1;\n                        continue;\n                    }\n\n                    resultLine = textWords.slice(0, _lower).join(' ');\n                    textLines[0].splice(0, _lower);\n                }\n\n                lines.push(resultLine);\n            }\n\n            onTruncate(didTruncate);\n\n            return lines;\n        }\n    }, {\n        key: 'renderLine',\n        value: function renderLine(line, i, arr) {\n            if (i === arr.length - 1) {\n                return React.createElement(\n                    'span',\n                    { key: i },\n                    line\n                );\n            } else {\n                var br = React.createElement('br', { key: i + 'br' });\n\n                if (line) {\n                    return [React.createElement(\n                        'span',\n                        { key: i },\n                        line\n                    ), br];\n                } else {\n                    return br;\n                }\n            }\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var _this2 = this;\n\n            var target = this.elements.target,\n                _props2 = this.props,\n                children = _props2.children,\n                ellipsis = _props2.ellipsis,\n                lines = _props2.lines,\n                spanProps = _objectWithoutProperties(_props2, ['children', 'ellipsis', 'lines']),\n                targetWidth = this.state.targetWidth,\n                getLines = this.getLines,\n                renderLine = this.renderLine,\n                onTruncate = this.onTruncate;\n\n            var text = void 0;\n\n            var mounted = !!(target && targetWidth);\n\n            if (typeof window !== 'undefined' && mounted) {\n                if (lines > 0) {\n                    text = getLines().map(renderLine);\n                } else {\n                    text = children;\n\n                    onTruncate(false);\n                }\n            }\n\n            delete spanProps.onTruncate;\n            delete spanProps.trimWhitespace;\n\n            return React.createElement(\n                'span',\n                _extends({}, spanProps, { ref: function ref(targetEl) {\n                        _this2.elements.target = targetEl;\n                    } }),\n                React.createElement(\n                    'span',\n                    null,\n                    text\n                ),\n                React.createElement(\n                    'span',\n                    { ref: function ref(textEl) {\n                            _this2.elements.text = textEl;\n                        } },\n                    children\n                ),\n                React.createElement(\n                    'span',\n                    { ref: function ref(ellipsisEl) {\n                            _this2.elements.ellipsis = ellipsisEl;\n                        }, style: this.styles.ellipsis },\n                    ellipsis\n                )\n            );\n        }\n    }]);\n\n    return Truncate;\n}(Component);\n\nTruncate.propTypes = {\n    children: PropTypes.node,\n    ellipsis: PropTypes.node,\n    lines: PropTypes.oneOfType([PropTypes.oneOf([false]), PropTypes.number]),\n    trimWhitespace: PropTypes.bool,\n    width: PropTypes.number,\n    onTruncate: PropTypes.func\n};\nTruncate.defaultProps = {\n    children: '',\n    ellipsis: '…',\n    lines: 1,\n    trimWhitespace: false,\n    width: 0\n};\nexport default Truncate;\n;\n","import React from 'react';\nimport {\n    Link\n} from 'react-router-dom';\nimport Truncate from 'react-truncate';\nimport {\n    Card,\n    CardBody,\n    Text,\n    TextContent,\n    TextVariants,\n    Grid,\n    GridItem\n} from '@patternfly/react-core';\nimport {\n    ChartDonut,\n    ChartLabel,\n    ChartTheme\n} from '@patternfly/react-charts';\nimport '../../Charts.scss';\n\nclass CompliancePolicyCard extends React.Component {\n    constructor(policy) {\n        super();\n        this.policy = policy.policy;\n        this.state = { cardTitle: <Truncate lines={1}>{this.policy.name}</Truncate> };\n        this.onMouseover = this.onMouseover.bind(this);\n        this.onMouseout = this.onMouseout.bind(this);\n    }\n\n    onMouseover() {\n        this.setState({ cardTitle: this.policy.name });\n    }\n\n    onMouseout() {\n        this.setState({ cardTitle: <Truncate lines={1}>{this.policy.name}</Truncate> });\n    }\n\n    render() {\n        const compliantHostCount = this.policy.compliant_host_count;\n        const totalHostCount = this.policy.total_host_count;\n        let donutValues = [\n            { x: 'Compliant', y: compliantHostCount },\n            { x: 'Non-compliant', y: totalHostCount - compliantHostCount }\n        ];\n        const compliancePercentage = Math.floor(100 *\n            (donutValues[0].y / (donutValues[0].y + donutValues[1].y))) + '%';\n        const label = (\n            <svg\n                className=\"chart-label\"\n                height={300}\n                width={300}\n            >\n                <ChartLabel\n                    style={{ fontSize: 26 }}\n                    text={compliancePercentage}\n                    textAnchor=\"middle\"\n                    verticalAnchor=\"middle\"\n                    x={150}\n                    y={135}\n                />\n                <ChartLabel\n                    style={{ fill: '#bbb' }}\n                    text=\"Compliant\"\n                    textAnchor=\"middle\"\n                    verticalAnchor=\"middle\"\n                    x={150}\n                    y={165}\n                />\n            </svg>\n        );\n\n        return (\n            <Card widget-id={this.policy.ref_id}>\n                <CardBody>\n                    <Text style={{ fontWeight: '500', color: 'var(--pf-global--Color--200)' }} component={TextVariants.small}>\n                        External Policy\n                    </Text>\n                    <TextContent>\n                        <Text onMouseEnter={this.onMouseover.bind(this)} onMouseLeave={this.onMouseout.bind(this)}\n                            style={{ fontWeight: '500' }} component={TextVariants.h4}>\n                            {this.state.cardTitle}\n                        </Text>\n                    </TextContent>\n                    <TextContent className=\"chart-title\">\n                        <Grid>\n                            <GridItem style={{ display: 'inline-flex' }} span={12}>\n                                <TextContent>\n                                    <span style={{ fontSize: '30px', fontWeight: '500' }}>\n                                        { compliantHostCount }\n                                    </span>\n                                    <span style={{ fontWeight: '500', color: '#bbb' }}>\n                                        {' '}of{' '}\n                                    </span>\n                                    <span style={{ fontSize: '30px', fontWeight: '500' }}>\n                                        { totalHostCount }\n                                    </span>\n                                </TextContent>\n                            </GridItem>\n                            <GridItem span={8}>\n                                <Text style={{ fontWeight: '500', color: '#bbb' }} component={TextVariants.small}>\n                                    Systems above compliance threshold\n                                </Text>\n                            </GridItem>\n                        </Grid>\n                    </TextContent>\n                </CardBody>\n                <hr/>\n                <CardBody>\n                    <Grid>\n                        <GridItem style={{ textAlign: 'center' }} span={12}>\n                            <div className='chart-inline'>\n                                <div className='card-chart-container'>\n                                    {label}\n                                    <ChartDonut data={donutValues}\n                                        identifier={this.policy.name.replace(/ /g, '')}\n                                        theme={ChartTheme.light.blue}\n                                        height={205}\n                                        width={205}\n                                    />\n                                </div>\n                            </div>\n                        </GridItem>\n                    </Grid>\n                    <TextContent style={{ textAlign: 'right' }}>\n                        <Text component={TextVariants.small}>\n                            <Link to={'/policies/' + this.policy.id} >\n                                More Details\n                            </Link>\n                        </Text>\n                    </TextContent>\n                </CardBody>\n            </Card>\n        );\n    };\n};\n\nexport default CompliancePolicyCard;\n","import React from 'react';\nimport {\n    Grid,\n    GridItem,\n    Title,\n    Text,\n    TextContent,\n    TextVariants,\n    Button,\n    Bullseye,\n    EmptyState,\n    EmptyStateIcon,\n    EmptyStateBody\n} from '@patternfly/react-core';\nimport { ClipboardCheckIcon } from '@patternfly/react-icons';\nimport { routerParams } from '@red-hat-insights/insights-frontend-components';\nimport CompliancePolicyCard from '../CompliancePolicyCard/CompliancePolicyCard';\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport ErrorPage from '../ErrorPage/ErrorPage';\n\nconst QUERY = gql`\n{\n    allProfiles {\n        id\n        name\n        ref_id\n        description\n        total_host_count\n        compliant_host_count\n    }\n}\n`;\n\nconst CompliancePoliciesCards = () => (\n    <Query query={QUERY}>\n        {({ data, error, loading }) => {\n            if (error) { return <ErrorPage error={error}/>; }\n\n            if (loading) { return 'Loading Policies...'; }\n\n            const policies = data.allProfiles;\n            let policyCards = [];\n            if (policies.length) {\n                policyCards = policies.map(\n                    (policy, i) =>\n                        <GridItem sm={12} md={12} lg={6} xl={4} key={i}>\n                            <CompliancePolicyCard\n                                key={i}\n                                policy={policy}\n                            />\n                        </GridItem>\n                );\n            } else {\n                policyCards = <Bullseye>\n                    <EmptyState>\n                        <EmptyStateIcon size=\"xl\" title=\"Compliance\" icon={ClipboardCheckIcon} />\n                        <br/>\n                        <Title size=\"lg\">Welcome to Compliance</Title>\n                        <EmptyStateBody>\n                            <TextContent>\n                                You have not uploaded any reports yet. Please generate a report using\n                                OpenSCAP:\n                                <Text component={TextVariants.blockquote}>\n                                    oscap xccdf eval --profile xccdf_org.ssgproject.content_profile_standard\n                                    --results scan.xml /usr/share/xml/scap/ssg/content/ssg-rhel7-ds.xml\n                                </Text>\n                                and upload it using the following command:\n                                <Text component={TextVariants.blockquote}>\n                                    sudo insights-client --verbose --payload scan.xml\n                                    --content-type application/vnd.redhat.compliance.something+tgz\n                                </Text>\n                            </TextContent>\n                        </EmptyStateBody>\n\n                        <Button\n                            variant=\"primary\"\n                            component=\"a\"\n                            target=\"_blank\"\n                            href=\"https://www.open-scap.org/getting-started/\">\n                            Get started with OpenSCAP\n                        </Button>\n                    </EmptyState>\n                </Bullseye>;\n\n            }\n\n            return (\n                <div className=\"policies-donuts\">\n                    <Grid gutter='md'>\n                        {policyCards}\n                    </Grid>\n                </div>\n            );\n        }}\n    </Query>\n);\n\nexport default routerParams(CompliancePoliciesCards);\n","import React from 'react';\nimport CompliancePoliciesCards from '../CompliancePoliciesCards/CompliancePoliciesCards';\nimport ComplianceTabs from '../ComplianceTabs/ComplianceTabs';\nimport { PageHeader, PageHeaderTitle, Main } from '@red-hat-insights/insights-frontend-components';\n\nconst CompliancePolicies = () => {\n    return (\n        <React.Fragment>\n            <PageHeader>\n                <PageHeaderTitle title=\"Compliance\" />\n                <ComplianceTabs/>\n            </PageHeader>\n            <Main>\n                <CompliancePoliciesCards />\n            </Main>\n        </React.Fragment>\n    );\n};\n\nexport default CompliancePolicies;\n"],"sourceRoot":""}