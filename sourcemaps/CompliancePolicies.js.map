{"version":3,"sources":["webpack:///./src/SmartComponents/ErrorPage/ErrorPage.js","webpack:///./src/SmartComponents/ComplianceTabs/ComplianceTabs.js","webpack:///./node_modules/lodash/invert.js","webpack:///./node_modules/lodash/constant.js","webpack:///./node_modules/lodash/_createInverter.js","webpack:///./node_modules/lodash/_baseInverter.js","webpack:///./node_modules/lodash/_baseForOwn.js","webpack:///./node_modules/lodash/_baseFor.js","webpack:///./node_modules/lodash/_createBaseFor.js","webpack:///./node_modules/@patternfly/patternfly/components/EmptyState/empty-state.css?e907","webpack:///./node_modules/@patternfly/patternfly/components/EmptyState/empty-state.css","webpack:///./node_modules/react-truncate/lib/Truncate.js","webpack:///./src/SmartComponents/CompliancePolicyCard/CompliancePolicyCard.js","webpack:///./src/SmartComponents/CompliancePoliciesCards/CompliancePoliciesCards.js","webpack:///./src/SmartComponents/CompliancePolicies/CompliancePolicies.js"],"names":["ErrorPage","props","_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default","this","_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default","_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default","call","error","networkError","statusCode","window","insights","chrome","auth","logout","message","react__WEBPACK_IMPORTED_MODULE_5__","propTypes","prop_types__WEBPACK_IMPORTED_MODULE_6___default","a","object","__webpack_exports__","ComplianceTabs","_isMounted","state","internalUser","tabPaths","0","_Routes__WEBPACK_IMPORTED_MODULE_8__","compliancePolicies","1","complianceSystems","redirect","_","tabIndex","_this","history","push","_this2","getUser","then","data","setState","identity","user","is_internal","2","complianceImageStreams","path","match","_this$state","currentKey","Number","lodash_invert__WEBPACK_IMPORTED_MODULE_11___default","tabs","react__WEBPACK_IMPORTED_MODULE_7___default","createElement","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_9__","title","key","eventKey","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_10__","activeKey","onSelect","aria-label","react__WEBPACK_IMPORTED_MODULE_7__","Object","_red_hat_insights_insights_frontend_components__WEBPACK_IMPORTED_MODULE_5__","constant","__webpack_require__","createInverter","nativeObjectToString","prototype","toString","invert","result","value","module","exports","baseInverter","setter","toIteratee","iteratee","baseForOwn","accumulator","baseFor","keys","createBaseFor","fromRight","keysFunc","index","iterable","length","content","i","options","hmr","transform","insertInto","undefined","locals","_extends","assign","target","arguments","source","hasOwnProperty","_createClass","defineProperties","descriptor","enumerable","configurable","writable","defineProperty","Constructor","protoProps","staticProps","Truncate_Truncate","_Component","Truncate","_ref","instance","TypeError","_classCallCheck","_len","args","Array","_key","self","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","apply","concat","styles","ellipsis","position","visibility","top","left","elements","onResize","bind","onTruncate","calcTargetWidth","measureWidth","getLines","renderLine","subClass","superClass","create","constructor","setPrototypeOf","_inherits","react","text","canvas","document","canvasContext","getContext","parentNode","removeChild","addEventListener","prevProps","children","forceUpdate","width","timeout","removeEventListener","cancelAnimationFrame","node","div","contentKey","HTMLElement","innerHTML","replace","test","didTruncate","requestAnimationFrame","callback","targetWidth","Math","floor","getBoundingClientRect","style","getComputedStyle","font","join","measureText","offsetWidth","_props","numLines","lines","trimWhitespace","innerText","trimRight","textLines","split","map","line","ellipsisWidth","textWords","resultLine","textRest","lower","upper","middle","slice","lastLineText","pop","react_default","_lower","_upper","_middle","splice","shift","arr","br","_props2","spanProps","obj","indexOf","_objectWithoutProperties","ref","targetEl","textEl","ellipsisEl","prop_types_default","oneOfType","oneOf","number","bool","func","defaultProps","lib_Truncate","SmartComponents_CompliancePolicyCard_CompliancePolicyCard","CompliancePolicyCard","policy","classCallCheck_default","possibleConstructorReturn_default","getPrototypeOf_default","onMouseover","cardTitle","name","onMouseout","compliantHostCount","compliant_host_count","totalHostCount","total_host_count","donutValues","x","y","compliancePercentage","label","className","height","ChartLabel","fontSize","textAnchor","verticalAnchor","fill","Card","widget-id","ref_id","CardBody","Text","fontWeight","color","component","small","TextContent","onMouseEnter","onMouseLeave","h4","Grid","GridItem","display","span","textAlign","ChartDonut","identifier","theme","ChartTheme","light","blue","Link","to","id","Component","QUERY","src_default","_templateObject","SmartComponents_CompliancePoliciesCards_CompliancePoliciesCards","insights_frontend_components","react_apollo_browser_umd","query","loading","policies","allProfiles","policyCards","sm","md","lg","xl","Bullseye","EmptyState","EmptyStateIcon","size","icon","clipboard_check_icon","Title","empty_state_default","emptyStateBody","blockquote","Button","variant","href","gutter","Fragment"],"mappings":"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","file":"js/CompliancePolicies.js","sourcesContent":["import { Component } from 'react';\nimport propTypes from 'prop-types';\n\nclass ErrorPage extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { error } = this.props;\n        if (error.networkError && error.networkError.statusCode === 401) {\n            window.insights.chrome.auth.logout();\n        }\n\n        return 'Oops! There was an error loading Compliance data. If you need to contact ' +\n            'Red Hat Support about this, this is the exact error: ' + ' ' + error.message;\n    }\n}\n\nErrorPage.propTypes = {\n    error: propTypes.object\n};\n\nexport default ErrorPage;\n","import { routerParams } from '@red-hat-insights/insights-frontend-components';\nimport propTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { paths } from '../../Routes';\nimport { Tabs, Tab } from '@patternfly/react-core';\nimport invert from 'lodash/invert';\n\nclass ComplianceTabs extends Component {\n    _isMounted = false;\n\n    state = {\n        internalUser: false,\n        tabPaths: {\n            0: paths.compliancePolicies,\n            1: paths.complianceSystems\n        }\n    };\n\n    redirect = (_, tabIndex) => {\n        const { tabPaths } = this.state;\n        this.props.history.push(tabPaths[tabIndex]);\n    }\n\n    componentDidMount() {\n        this._isMounted = true;\n        window.insights.chrome.auth.getUser().then((data) => {\n            if (this._isMounted) {\n                this.setState({\n                    internalUser: data.identity.user.is_internal,\n                    tabPaths: {\n                        0: paths.compliancePolicies,\n                        1: paths.complianceSystems,\n                        2: paths.complianceImageStreams\n                    }\n                });\n            }\n        });\n    }\n\n    componentWillUnmount() {\n        this._isMounted = false;\n    }\n\n    render() {\n        const { match: { path } } = this.props;\n        const { internalUser, tabPaths } = this.state;\n        let currentKey = Number(invert(tabPaths)[path]);\n\n        const tabs = [\n            <Tab title={'Policies'} key={0} eventKey={0}></Tab>,\n            <Tab title={'Systems'} key={1} eventKey={1}></Tab>\n        ];\n\n        if (internalUser) {\n            tabs.push(<Tab title={'Image Streams'} key={2} eventKey={2}></Tab>);\n        } else if (path === '/imagestreams') {\n            // We cannot pass '2' to activeKey while the page is loading\n            // on the imagestreams page. This breaks the component.\n            // While the page is loading, we don't know yet if this\n            // an internal user or not. Therefore we just mark '1' as the\n            // activeKey until we know if it's an internalUser in /imagestreams\n            currentKey = 1;\n        }\n\n        return (\n            <Tabs activeKey={currentKey} onSelect={this.redirect} aria-label=\"Compliance Tabs\">\n                { tabs }\n            </Tabs>\n        );\n    }\n}\n\nComplianceTabs.propTypes = {\n    history: propTypes.object,\n    match: propTypes.object\n};\n\nexport default routerParams(ComplianceTabs);\n","var constant = require('./constant'),\n    createInverter = require('./_createInverter'),\n    identity = require('./identity');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Creates an object composed of the inverted keys and values of `object`.\n * If `object` contains duplicate values, subsequent values overwrite\n * property assignments of previous values.\n *\n * @static\n * @memberOf _\n * @since 0.7.0\n * @category Object\n * @param {Object} object The object to invert.\n * @returns {Object} Returns the new inverted object.\n * @example\n *\n * var object = { 'a': 1, 'b': 2, 'c': 1 };\n *\n * _.invert(object);\n * // => { '1': 'c', '2': 'b' }\n */\nvar invert = createInverter(function(result, value, key) {\n  if (value != null &&\n      typeof value.toString != 'function') {\n    value = nativeObjectToString.call(value);\n  }\n\n  result[value] = key;\n}, constant(identity));\n\nmodule.exports = invert;\n","/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\nmodule.exports = constant;\n","var baseInverter = require('./_baseInverter');\n\n/**\n * Creates a function like `_.invertBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} toIteratee The function to resolve iteratees.\n * @returns {Function} Returns the new inverter function.\n */\nfunction createInverter(setter, toIteratee) {\n  return function(object, iteratee) {\n    return baseInverter(object, setter, toIteratee(iteratee), {});\n  };\n}\n\nmodule.exports = createInverter;\n","var baseForOwn = require('./_baseForOwn');\n\n/**\n * The base implementation of `_.invert` and `_.invertBy` which inverts\n * `object` with values transformed by `iteratee` and set by `setter`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform values.\n * @param {Object} accumulator The initial inverted object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction baseInverter(object, setter, iteratee, accumulator) {\n  baseForOwn(object, function(value, key, object) {\n    setter(accumulator, iteratee(value), key, object);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseInverter;\n","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;\n","var createBaseFor = require('./_createBaseFor');\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\nmodule.exports = baseFor;\n","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;\n","\nvar content = require(\"!!../../../../css-loader/index.js!../../../../sass-loader/lib/loader.js??ref--5-2!./empty-state.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../css-loader/index.js!../../../../sass-loader/lib/loader.js??ref--5-2!./empty-state.css\", function() {\n\t\tvar newContent = require(\"!!../../../../css-loader/index.js!../../../../sass-loader/lib/loader.js??ref--5-2!./empty-state.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/* stylelint-enable */\\n.pf-c-empty-state {\\n  --pf-c-empty-state--MaxWidth: 37.5rem;\\n  --pf-c-empty-state--Padding: var(--pf-global--spacer--xl);\\n  --pf-c-empty-state__icon--MarginBottom: var(--pf-global--spacer--lg);\\n  --pf-c-empty-state__icon--FontSize: var(--pf-global--icon--FontSize--xl);\\n  --pf-c-empty-state__icon--Color: var(--pf-global--icon--Color--light);\\n  --pf-c-empty-state__body--MarginTop: var(--pf-global--spacer--md);\\n  --pf-c-empty-state__body--Color: var(--pf-global--Color--200);\\n  --pf-c-empty-state--c-button--MarginTop: var(--pf-global--spacer--xl);\\n  --pf-c-empty-state--c-button__secondary--MarginTop: var(--pf-global--spacer--sm);\\n  --pf-c-empty-state__secondary--MarginTop: var(--pf-global--spacer--xl);\\n  --pf-c-empty-state__secondary--MarginRight: calc(var(--pf-global--spacer--xs) * -1);\\n  --pf-c-empty-state__secondary--MarginBottom: calc(var(--pf-global--spacer--xs) * -1);\\n  --pf-c-empty-state__secondary--c-button--MarginRight: var(--pf-global--spacer--xs);\\n  --pf-c-empty-state__secondary--c-button--MarginBottom: var(--pf-global--spacer--xs);\\n  max-width: var(--pf-c-empty-state--MaxWidth);\\n  padding: var(--pf-c-empty-state--Padding);\\n  text-align: center; }\\n\\n.pf-c-empty-state > .pf-c-button.pf-m-primary {\\n  margin-top: var(--pf-c-empty-state--c-button--MarginTop); }\\n\\n.pf-c-empty-state > .pf-c-button.pf-m-primary + .pf-c-empty-state__secondary {\\n  margin-top: var(--pf-c-empty-state--c-button__secondary--MarginTop); }\\n\\n.pf-c-empty-state__icon {\\n  margin-bottom: var(--pf-c-empty-state__icon--MarginBottom);\\n  font-size: var(--pf-c-empty-state__icon--FontSize);\\n  color: var(--pf-c-empty-state__icon--Color); }\\n\\n.pf-c-empty-state__body {\\n  margin-top: var(--pf-c-empty-state__body--MarginTop);\\n  color: var(--pf-c-empty-state__body--Color); }\\n\\n.pf-c-empty-state__secondary {\\n  display: flex;\\n  flex-wrap: wrap;\\n  justify-content: center;\\n  margin-top: var(--pf-c-empty-state__secondary--MarginTop);\\n  margin-right: var(--pf-c-empty-state__secondary--MarginRight);\\n  margin-bottom: var(--pf-c-empty-state__secondary--MarginBottom); }\\n\\n.pf-c-empty-state__secondary > .pf-c-button {\\n  margin-right: var(--pf-c-empty-state__secondary--c-button--MarginRight);\\n  margin-bottom: var(--pf-c-empty-state__secondary--c-button--MarginBottom); }\\n\", \"\"]);\n\n// exports\n","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nvar Truncate = function (_Component) {\n    _inherits(Truncate, _Component);\n\n    function Truncate() {\n        var _ref;\n\n        _classCallCheck(this, Truncate);\n\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n        }\n\n        var _this = _possibleConstructorReturn(this, (_ref = Truncate.__proto__ || Object.getPrototypeOf(Truncate)).call.apply(_ref, [this].concat(args)));\n\n        _this.state = {};\n        _this.styles = {\n            ellipsis: {\n                position: 'fixed',\n                visibility: 'hidden',\n                top: 0,\n                left: 0\n            }\n        };\n\n\n        _this.elements = {};\n\n        _this.onResize = _this.onResize.bind(_this);\n        _this.onTruncate = _this.onTruncate.bind(_this);\n        _this.calcTargetWidth = _this.calcTargetWidth.bind(_this);\n        _this.measureWidth = _this.measureWidth.bind(_this);\n        _this.getLines = _this.getLines.bind(_this);\n        _this.renderLine = _this.renderLine.bind(_this);\n        return _this;\n    }\n\n    _createClass(Truncate, [{\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n            var text = this.elements.text,\n                calcTargetWidth = this.calcTargetWidth,\n                onResize = this.onResize;\n\n\n            var canvas = document.createElement('canvas');\n            this.canvasContext = canvas.getContext('2d');\n\n            calcTargetWidth(function () {\n                // Node not needed in document tree to read its content\n                if (text) {\n                    text.parentNode.removeChild(text);\n                }\n            });\n\n            window.addEventListener('resize', onResize);\n        }\n    }, {\n        key: 'componentDidUpdate',\n        value: function componentDidUpdate(prevProps) {\n            // Render was based on outdated refs and needs to be rerun\n            if (this.props.children !== prevProps.children) {\n                this.forceUpdate();\n            }\n\n            // If the width prop has changed, recalculate size of contents\n            if (this.props.width !== prevProps.width) {\n                this.calcTargetWidth();\n            }\n        }\n    }, {\n        key: 'componentWillUnmount',\n        value: function componentWillUnmount() {\n            var ellipsis = this.elements.ellipsis,\n                onResize = this.onResize,\n                timeout = this.timeout;\n\n\n            ellipsis.parentNode.removeChild(ellipsis);\n\n            window.removeEventListener('resize', onResize);\n\n            window.cancelAnimationFrame(timeout);\n        }\n\n        // Shim innerText to consistently break lines at <br/> but not at \\n\n\n    }, {\n        key: 'innerText',\n        value: function innerText(node) {\n            var div = document.createElement('div');\n            var contentKey = 'innerText' in window.HTMLElement.prototype ? 'innerText' : 'textContent';\n\n            div.innerHTML = node.innerHTML.replace(/\\r\\n|\\r|\\n/g, ' ');\n\n            var text = div[contentKey];\n\n            var test = document.createElement('div');\n            test.innerHTML = 'foo<br/>bar';\n\n            if (test[contentKey].replace(/\\r\\n|\\r/g, '\\n') !== 'foo\\nbar') {\n                div.innerHTML = div.innerHTML.replace(/<br.*?[\\/]?>/gi, '\\n');\n                text = div[contentKey];\n            }\n\n            return text;\n        }\n    }, {\n        key: 'onResize',\n        value: function onResize() {\n            this.calcTargetWidth();\n        }\n    }, {\n        key: 'onTruncate',\n        value: function onTruncate(didTruncate) {\n            var onTruncate = this.props.onTruncate;\n\n\n            if (typeof onTruncate === 'function') {\n                this.timeout = window.requestAnimationFrame(function () {\n                    onTruncate(didTruncate);\n                });\n            }\n        }\n    }, {\n        key: 'calcTargetWidth',\n        value: function calcTargetWidth(callback) {\n            var target = this.elements.target,\n                calcTargetWidth = this.calcTargetWidth,\n                canvasContext = this.canvasContext,\n                width = this.props.width;\n\n            // Calculation is no longer relevant, since node has been removed\n\n            if (!target) {\n                return;\n            }\n\n            var targetWidth = width ||\n            // Floor the result to deal with browser subpixel precision\n            Math.floor(target.parentNode.getBoundingClientRect().width);\n\n            // Delay calculation until parent node is inserted to the document\n            // Mounting order in React is ChildComponent, ParentComponent\n            if (!targetWidth) {\n                return window.requestAnimationFrame(function () {\n                    return calcTargetWidth(callback);\n                });\n            }\n\n            var style = window.getComputedStyle(target);\n\n            var font = [style['font-weight'], style['font-style'], style['font-size'], style['font-family']].join(' ');\n\n            canvasContext.font = font;\n\n            this.setState({\n                targetWidth: targetWidth\n            }, callback);\n        }\n    }, {\n        key: 'measureWidth',\n        value: function measureWidth(text) {\n            return this.canvasContext.measureText(text).width;\n        }\n    }, {\n        key: 'ellipsisWidth',\n        value: function ellipsisWidth(node) {\n            return node.offsetWidth;\n        }\n    }, {\n        key: 'trimRight',\n        value: function trimRight(text) {\n            return text.replace(/\\s+$/, '');\n        }\n    }, {\n        key: 'getLines',\n        value: function getLines() {\n            var elements = this.elements,\n                _props = this.props,\n                numLines = _props.lines,\n                ellipsis = _props.ellipsis,\n                trimWhitespace = _props.trimWhitespace,\n                targetWidth = this.state.targetWidth,\n                innerText = this.innerText,\n                measureWidth = this.measureWidth,\n                onTruncate = this.onTruncate,\n                trimRight = this.trimRight;\n\n\n            var lines = [];\n            var text = innerText(elements.text);\n            var textLines = text.split('\\n').map(function (line) {\n                return line.split(' ');\n            });\n            var didTruncate = true;\n            var ellipsisWidth = this.ellipsisWidth(this.elements.ellipsis);\n\n            for (var line = 1; line <= numLines; line++) {\n                var textWords = textLines[0];\n\n                // Handle newline\n                if (textWords.length === 0) {\n                    lines.push();\n                    textLines.shift();\n                    line--;\n                    continue;\n                }\n\n                var resultLine = textWords.join(' ');\n\n                if (measureWidth(resultLine) <= targetWidth) {\n                    if (textLines.length === 1) {\n                        // Line is end of text and fits without truncating\n                        didTruncate = false;\n\n                        lines.push(resultLine);\n                        break;\n                    }\n                }\n\n                if (line === numLines) {\n                    // Binary search determining the longest possible line inluding truncate string\n                    var textRest = textWords.join(' ');\n\n                    var lower = 0;\n                    var upper = textRest.length - 1;\n\n                    while (lower <= upper) {\n                        var middle = Math.floor((lower + upper) / 2);\n\n                        var testLine = textRest.slice(0, middle + 1);\n\n                        if (measureWidth(testLine) + ellipsisWidth <= targetWidth) {\n                            lower = middle + 1;\n                        } else {\n                            upper = middle - 1;\n                        }\n                    }\n\n                    var lastLineText = textRest.slice(0, lower);\n\n                    if (trimWhitespace) {\n                        lastLineText = trimRight(lastLineText);\n\n                        // Remove blank lines from the end of text\n                        while (!lastLineText.length && lines.length) {\n                            var prevLine = lines.pop();\n\n                            lastLineText = trimRight(prevLine);\n                        }\n                    }\n\n                    resultLine = React.createElement(\n                        'span',\n                        null,\n                        lastLineText,\n                        ellipsis\n                    );\n                } else {\n                    // Binary search determining when the line breaks\n                    var _lower = 0;\n                    var _upper = textWords.length - 1;\n\n                    while (_lower <= _upper) {\n                        var _middle = Math.floor((_lower + _upper) / 2);\n\n                        var _testLine = textWords.slice(0, _middle + 1).join(' ');\n\n                        if (measureWidth(_testLine) <= targetWidth) {\n                            _lower = _middle + 1;\n                        } else {\n                            _upper = _middle - 1;\n                        }\n                    }\n\n                    // The first word of this line is too long to fit it\n                    if (_lower === 0) {\n                        // Jump to processing of last line\n                        line = numLines - 1;\n                        continue;\n                    }\n\n                    resultLine = textWords.slice(0, _lower).join(' ');\n                    textLines[0].splice(0, _lower);\n                }\n\n                lines.push(resultLine);\n            }\n\n            onTruncate(didTruncate);\n\n            return lines;\n        }\n    }, {\n        key: 'renderLine',\n        value: function renderLine(line, i, arr) {\n            if (i === arr.length - 1) {\n                return React.createElement(\n                    'span',\n                    { key: i },\n                    line\n                );\n            } else {\n                var br = React.createElement('br', { key: i + 'br' });\n\n                if (line) {\n                    return [React.createElement(\n                        'span',\n                        { key: i },\n                        line\n                    ), br];\n                } else {\n                    return br;\n                }\n            }\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var _this2 = this;\n\n            var target = this.elements.target,\n                _props2 = this.props,\n                children = _props2.children,\n                ellipsis = _props2.ellipsis,\n                lines = _props2.lines,\n                spanProps = _objectWithoutProperties(_props2, ['children', 'ellipsis', 'lines']),\n                targetWidth = this.state.targetWidth,\n                getLines = this.getLines,\n                renderLine = this.renderLine,\n                onTruncate = this.onTruncate;\n\n            var text = void 0;\n\n            var mounted = !!(target && targetWidth);\n\n            if (typeof window !== 'undefined' && mounted) {\n                if (lines > 0) {\n                    text = getLines().map(renderLine);\n                } else {\n                    text = children;\n\n                    onTruncate(false);\n                }\n            }\n\n            delete spanProps.onTruncate;\n            delete spanProps.trimWhitespace;\n\n            return React.createElement(\n                'span',\n                _extends({}, spanProps, { ref: function ref(targetEl) {\n                        _this2.elements.target = targetEl;\n                    } }),\n                React.createElement(\n                    'span',\n                    null,\n                    text\n                ),\n                React.createElement(\n                    'span',\n                    { ref: function ref(textEl) {\n                            _this2.elements.text = textEl;\n                        } },\n                    children\n                ),\n                React.createElement(\n                    'span',\n                    { ref: function ref(ellipsisEl) {\n                            _this2.elements.ellipsis = ellipsisEl;\n                        }, style: this.styles.ellipsis },\n                    ellipsis\n                )\n            );\n        }\n    }]);\n\n    return Truncate;\n}(Component);\n\nTruncate.propTypes = {\n    children: PropTypes.node,\n    ellipsis: PropTypes.node,\n    lines: PropTypes.oneOfType([PropTypes.oneOf([false]), PropTypes.number]),\n    trimWhitespace: PropTypes.bool,\n    width: PropTypes.number,\n    onTruncate: PropTypes.func\n};\nTruncate.defaultProps = {\n    children: '',\n    ellipsis: '…',\n    lines: 1,\n    trimWhitespace: false,\n    width: 0\n};\nexport default Truncate;\n;\n","import React from 'react';\nimport {\n    Link\n} from 'react-router-dom';\nimport Truncate from 'react-truncate';\nimport {\n    Card,\n    CardBody,\n    Text,\n    TextContent,\n    TextVariants,\n    Grid,\n    GridItem\n} from '@patternfly/react-core';\nimport {\n    ChartDonut,\n    ChartLabel,\n    ChartTheme\n} from '@patternfly/react-charts';\nimport '../../Charts.scss';\n\nclass CompliancePolicyCard extends React.Component {\n    constructor(policy) {\n        super(policy);\n        this.policy = policy.policy;\n        this.state = { cardTitle: <Truncate lines={1}>{this.policy.name}</Truncate> };\n    }\n\n    onMouseover = () => {\n        this.setState({ cardTitle: this.policy.name });\n    }\n\n    onMouseout = () => {\n        this.setState({ cardTitle: <Truncate lines={1}>{this.policy.name}</Truncate> });\n    }\n\n    render() {\n        const compliantHostCount = this.policy.compliant_host_count;\n        const totalHostCount = this.policy.total_host_count;\n        let donutValues = [\n            { x: 'Compliant', y: compliantHostCount },\n            { x: 'Non-compliant', y: totalHostCount - compliantHostCount }\n        ];\n        const compliancePercentage = Math.floor(100 *\n            (donutValues[0].y / (donutValues[0].y + donutValues[1].y))) + '%';\n        const label = (\n            <svg\n                className=\"chart-label\"\n                height={300}\n                width={300}\n            >\n                <ChartLabel\n                    style={{ fontSize: 26 }}\n                    text={compliancePercentage}\n                    textAnchor=\"middle\"\n                    verticalAnchor=\"middle\"\n                    x={150}\n                    y={135}\n                />\n                <ChartLabel\n                    style={{ fill: 'var(--pf-global--Color--200)' }}\n                    text=\"Systems above threshold\"\n                    textAnchor=\"middle\"\n                    verticalAnchor=\"middle\"\n                    x={150}\n                    y={165}\n                />\n            </svg>\n        );\n\n        return (\n            <Card widget-id={this.policy.ref_id}>\n                <CardBody>\n                    <Text style={{ fontWeight: '500', color: 'var(--pf-global--Color--200)' }} component={TextVariants.small}>\n                        External Policy\n                    </Text>\n                    <TextContent>\n                        <Text onMouseEnter={this.onMouseover.bind(this)} onMouseLeave={this.onMouseout.bind(this)}\n                            style={{ fontWeight: '500' }} component={TextVariants.h4}>\n                            {this.state.cardTitle}\n                        </Text>\n                    </TextContent>\n                    <TextContent className=\"chart-title\">\n                        <Grid>\n                            <GridItem style={{ display: 'inline-flex' }} span={12}>\n                                <TextContent>\n                                    <span style={{ fontSize: '30px', fontWeight: '500' }}>\n                                        { compliantHostCount }\n                                    </span>\n                                    <span style={{ fontWeight: '500', color: 'var(--pf-global--Color--200)' }}>\n                                        {' '}of{' '}\n                                    </span>\n                                    <span style={{ fontSize: '30px', fontWeight: '500' }}>\n                                        { totalHostCount }\n                                    </span>\n                                </TextContent>\n                            </GridItem>\n                            <GridItem span={8}>\n                                <Text\n                                    style={{ fontWeight: '500', color: 'var(--pf-global--Color--200)' }}\n                                    component={TextVariants.small}\n                                >\n                                    Systems above compliance threshold\n                                </Text>\n                            </GridItem>\n                        </Grid>\n                    </TextContent>\n                </CardBody>\n                <hr/>\n                <CardBody>\n                    <Grid>\n                        <GridItem style={{ textAlign: 'center' }} span={12}>\n                            <div className='chart-inline'>\n                                <div className='card-chart-container'>\n                                    {label}\n                                    <ChartDonut data={donutValues}\n                                        identifier={this.policy.name.replace(/ /g, '')}\n                                        theme={ChartTheme.light.blue}\n                                        height={205}\n                                        width={205}\n                                    />\n                                </div>\n                            </div>\n                        </GridItem>\n                    </Grid>\n                    <TextContent style={{ textAlign: 'right' }}>\n                        <Text component={TextVariants.small} style={{ fontSize: '16px' }} >\n                            <Link to={'/policies/' + this.policy.id} >\n                                More details\n                            </Link>\n                        </Text>\n                    </TextContent>\n                </CardBody>\n            </Card>\n        );\n    };\n};\n\nexport default CompliancePolicyCard;\n","import React from 'react';\nimport {\n    Grid,\n    GridItem,\n    Title,\n    Text,\n    TextContent,\n    TextVariants,\n    Button,\n    Bullseye,\n    EmptyState,\n    EmptyStateIcon\n} from '@patternfly/react-core';\nimport emptyStateStyles from '@patternfly/patternfly/components/EmptyState/empty-state.css';\nimport { ClipboardCheckIcon } from '@patternfly/react-icons';\nimport { routerParams } from '@red-hat-insights/insights-frontend-components';\nimport CompliancePolicyCard from '../CompliancePolicyCard/CompliancePolicyCard';\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport ErrorPage from '../ErrorPage/ErrorPage';\n\nconst QUERY = gql`\n{\n    allProfiles {\n        id\n        name\n        ref_id\n        description\n        total_host_count\n        compliant_host_count\n    }\n}\n`;\n\nconst CompliancePoliciesCards = () => (\n    <Query query={QUERY}>\n        {({ data, error, loading }) => {\n            if (error) { return <ErrorPage error={error}/>; }\n\n            if (loading) { return 'Loading Policies...'; }\n\n            const policies = data.allProfiles;\n            let policyCards = [];\n            if (policies.length) {\n                policyCards = policies.map(\n                    (policy, i) =>\n                        <GridItem sm={12} md={12} lg={6} xl={4} key={i}>\n                            <CompliancePolicyCard\n                                key={i}\n                                policy={policy}\n                            />\n                        </GridItem>\n                );\n            } else {\n                policyCards = <Bullseye>\n                    <EmptyState>\n                        <EmptyStateIcon size=\"xl\" title=\"Compliance\" icon={ClipboardCheckIcon} />\n                        <br/>\n                        <Title size=\"lg\">Welcome to Compliance</Title>\n                        <span className={emptyStateStyles.emptyStateBody}>\n                            <TextContent>\n                                You have not uploaded any reports yet. Please generate a report using\n                                OpenSCAP:\n                                <Text component={TextVariants.blockquote}>\n                                    oscap xccdf eval --profile xccdf_org.ssgproject.content_profile_standard\n                                    --results scan.xml /usr/share/xml/scap/ssg/content/ssg-rhel7-ds.xml\n                                </Text>\n                                and upload it using the following command:\n                                <Text component={TextVariants.blockquote}>\n                                    sudo insights-client --verbose --payload scan.xml\n                                    --content-type application/vnd.redhat.compliance.something+tgz\n                                </Text>\n                            </TextContent>\n                        </span>\n\n                        <Button\n                            variant=\"primary\"\n                            component=\"a\"\n                            target=\"_blank\"\n                            href=\"https://www.open-scap.org/getting-started/\">\n                            Get started with OpenSCAP\n                        </Button>\n                    </EmptyState>\n                </Bullseye>;\n\n            }\n\n            return (\n                <div className=\"policies-donuts\">\n                    <Grid gutter='md'>\n                        {policyCards}\n                    </Grid>\n                </div>\n            );\n        }}\n    </Query>\n);\n\nexport default routerParams(CompliancePoliciesCards);\n","import React from 'react';\nimport CompliancePoliciesCards from '../CompliancePoliciesCards/CompliancePoliciesCards';\nimport ComplianceTabs from '../ComplianceTabs/ComplianceTabs';\nimport { PageHeader, PageHeaderTitle, Main } from '@red-hat-insights/insights-frontend-components';\n\nconst CompliancePolicies = () => {\n    return (\n        <React.Fragment>\n            <PageHeader>\n                <PageHeaderTitle title=\"Compliance\" />\n                <ComplianceTabs/>\n            </PageHeader>\n            <Main>\n                <CompliancePoliciesCards />\n            </Main>\n        </React.Fragment>\n    );\n};\n\nexport default CompliancePolicies;\n"],"sourceRoot":""}