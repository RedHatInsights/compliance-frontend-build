{"version":3,"sources":["webpack:///./node_modules/react-truncate/lib/Truncate.js","webpack:///./node_modules/lodash/invert.js","webpack:///./node_modules/lodash/constant.js","webpack:///./node_modules/lodash/_createInverter.js","webpack:///./node_modules/lodash/_baseInverter.js","webpack:///./node_modules/@patternfly/patternfly/components/EmptyState/empty-state.css?07fa","webpack:///./node_modules/@patternfly/patternfly/components/EmptyState/empty-state.css","webpack:///./src/PresentationalComponents/ComplianceTabs/ComplianceTabs.js","webpack:///./src/PresentationalComponents/LoadingComplianceCards/LoadingComplianceCards.js","webpack:///./src/PresentationalComponents/CompliancePolicyCard/CompliancePolicyCard.js","webpack:///./src/PresentationalComponents/CompliancePoliciesEmptyState/CompliancePoliciesEmptyState.js","webpack:///./src/PresentationalComponents/ErrorPage/ErrorPage.js","webpack:///./src/PresentationalComponents/index.js","webpack:///./src/SmartComponents/CompliancePolicies/CompliancePolicies.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","defineProperty","Constructor","protoProps","staticProps","Truncate","_Component","_ref","instance","TypeError","_classCallCheck","this","_len","args","Array","_key","_this","self","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","apply","concat","state","styles","ellipsis","position","visibility","top","left","elements","onResize","bind","onTruncate","calcTargetWidth","measureWidth","getLines","renderLine","subClass","superClass","create","constructor","value","setPrototypeOf","_inherits","text","canvas","document","createElement","canvasContext","getContext","parentNode","removeChild","window","addEventListener","prevProps","children","forceUpdate","width","timeout","removeEventListener","cancelAnimationFrame","node","div","contentKey","HTMLElement","innerHTML","replace","test","didTruncate","requestAnimationFrame","callback","targetWidth","Math","floor","getBoundingClientRect","style","getComputedStyle","font","join","setState","measureText","offsetWidth","_props","numLines","lines","trimWhitespace","innerText","trimRight","textLines","split","map","line","ellipsisWidth","textWords","resultLine","push","textRest","lower","upper","middle","slice","lastLineText","pop","_lower","_upper","_middle","splice","shift","arr","br","_this2","_props2","spanProps","obj","keys","indexOf","_objectWithoutProperties","ref","targetEl","textEl","ellipsisEl","propTypes","oneOfType","oneOf","number","bool","func","defaultProps","constant","createInverter","identity","nativeObjectToString","toString","invert","result","module","exports","baseInverter","setter","toIteratee","object","iteratee","baseForOwn","accumulator","content","options","transform","undefined","locals","ComplianceTabs","path","match","tabPaths","0","paths","compliancePolicies","1","complianceSystems","currentKey","Number","tabs","Tab","title","eventKey","Tabs","activeKey","onSelect","_","tabIndex","history","aria-label","routerParams","LoadingComplianceCards","Grid","gutter","GridItem","sm","md","lg","xl","Card","height","speed","primaryColor","secondaryColor","x","y","rx","ry","cx","cy","r","CompliancePolicyCard","policy","onMouseover","cardTitle","name","onMouseout","compliantHostCount","totalHostCount","donutValues","compliancePercentage","fixedPercentage","widget-id","refId","CardBody","Text","fontWeight","color","component","TextVariants","small","TextContent","onMouseEnter","onMouseLeave","h4","className","display","span","fontSize","Link","to","id","textAlign","businessObjective","Chip","isReadOnly","ChartDonut","data","identifier","innerRadius","themeColor","ChartThemeColor","blue","themeVariant","ChartThemeVariant","light","subTitle","React","Component","CompliancePoliciesEmptyState","Bullseye","EmptyState","EmptyStateIcon","size","icon","CloudServerIcon","Title","emptyStateStyles","emptyStateBody","ClipboardCopy","variant","ClipboardCopyVariant","expansion","Button","href","ErrorPage","error","networkError","statusCode","insights","chrome","auth","logout","message","QUERY","gql","useQuery","loading","Fragment","pageHeader","policies","allProfiles","filter","profile","policyCards","paddingBottom"],"mappings":"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","file":"js/CompliancePolicies.js","sourcesContent":["var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nvar Truncate = function (_Component) {\n    _inherits(Truncate, _Component);\n\n    function Truncate() {\n        var _ref;\n\n        _classCallCheck(this, Truncate);\n\n        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n        }\n\n        var _this = _possibleConstructorReturn(this, (_ref = Truncate.__proto__ || Object.getPrototypeOf(Truncate)).call.apply(_ref, [this].concat(args)));\n\n        _this.state = {};\n        _this.styles = {\n            ellipsis: {\n                position: 'fixed',\n                visibility: 'hidden',\n                top: 0,\n                left: 0\n            }\n        };\n\n\n        _this.elements = {};\n\n        _this.onResize = _this.onResize.bind(_this);\n        _this.onTruncate = _this.onTruncate.bind(_this);\n        _this.calcTargetWidth = _this.calcTargetWidth.bind(_this);\n        _this.measureWidth = _this.measureWidth.bind(_this);\n        _this.getLines = _this.getLines.bind(_this);\n        _this.renderLine = _this.renderLine.bind(_this);\n        return _this;\n    }\n\n    _createClass(Truncate, [{\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n            var text = this.elements.text,\n                calcTargetWidth = this.calcTargetWidth,\n                onResize = this.onResize;\n\n\n            var canvas = document.createElement('canvas');\n            this.canvasContext = canvas.getContext('2d');\n\n            calcTargetWidth(function () {\n                // Node not needed in document tree to read its content\n                if (text) {\n                    text.parentNode.removeChild(text);\n                }\n            });\n\n            window.addEventListener('resize', onResize);\n        }\n    }, {\n        key: 'componentDidUpdate',\n        value: function componentDidUpdate(prevProps) {\n            // Render was based on outdated refs and needs to be rerun\n            if (this.props.children !== prevProps.children) {\n                this.forceUpdate();\n            }\n\n            // If the width prop has changed, recalculate size of contents\n            if (this.props.width !== prevProps.width) {\n                this.calcTargetWidth();\n            }\n        }\n    }, {\n        key: 'componentWillUnmount',\n        value: function componentWillUnmount() {\n            var ellipsis = this.elements.ellipsis,\n                onResize = this.onResize,\n                timeout = this.timeout;\n\n\n            ellipsis.parentNode.removeChild(ellipsis);\n\n            window.removeEventListener('resize', onResize);\n\n            window.cancelAnimationFrame(timeout);\n        }\n\n        // Shim innerText to consistently break lines at <br/> but not at \\n\n\n    }, {\n        key: 'innerText',\n        value: function innerText(node) {\n            var div = document.createElement('div');\n            var contentKey = 'innerText' in window.HTMLElement.prototype ? 'innerText' : 'textContent';\n\n            div.innerHTML = node.innerHTML.replace(/\\r\\n|\\r|\\n/g, ' ');\n\n            var text = div[contentKey];\n\n            var test = document.createElement('div');\n            test.innerHTML = 'foo<br/>bar';\n\n            if (test[contentKey].replace(/\\r\\n|\\r/g, '\\n') !== 'foo\\nbar') {\n                div.innerHTML = div.innerHTML.replace(/<br.*?[\\/]?>/gi, '\\n');\n                text = div[contentKey];\n            }\n\n            return text;\n        }\n    }, {\n        key: 'onResize',\n        value: function onResize() {\n            this.calcTargetWidth();\n        }\n    }, {\n        key: 'onTruncate',\n        value: function onTruncate(didTruncate) {\n            var onTruncate = this.props.onTruncate;\n\n\n            if (typeof onTruncate === 'function') {\n                this.timeout = window.requestAnimationFrame(function () {\n                    onTruncate(didTruncate);\n                });\n            }\n        }\n    }, {\n        key: 'calcTargetWidth',\n        value: function calcTargetWidth(callback) {\n            var target = this.elements.target,\n                calcTargetWidth = this.calcTargetWidth,\n                canvasContext = this.canvasContext,\n                width = this.props.width;\n\n            // Calculation is no longer relevant, since node has been removed\n\n            if (!target) {\n                return;\n            }\n\n            var targetWidth = width ||\n            // Floor the result to deal with browser subpixel precision\n            Math.floor(target.parentNode.getBoundingClientRect().width);\n\n            // Delay calculation until parent node is inserted to the document\n            // Mounting order in React is ChildComponent, ParentComponent\n            if (!targetWidth) {\n                return window.requestAnimationFrame(function () {\n                    return calcTargetWidth(callback);\n                });\n            }\n\n            var style = window.getComputedStyle(target);\n\n            var font = [style['font-weight'], style['font-style'], style['font-size'], style['font-family']].join(' ');\n\n            canvasContext.font = font;\n\n            this.setState({\n                targetWidth: targetWidth\n            }, callback);\n        }\n    }, {\n        key: 'measureWidth',\n        value: function measureWidth(text) {\n            return this.canvasContext.measureText(text).width;\n        }\n    }, {\n        key: 'ellipsisWidth',\n        value: function ellipsisWidth(node) {\n            return node.offsetWidth;\n        }\n    }, {\n        key: 'trimRight',\n        value: function trimRight(text) {\n            return text.replace(/\\s+$/, '');\n        }\n    }, {\n        key: 'getLines',\n        value: function getLines() {\n            var elements = this.elements,\n                _props = this.props,\n                numLines = _props.lines,\n                ellipsis = _props.ellipsis,\n                trimWhitespace = _props.trimWhitespace,\n                targetWidth = this.state.targetWidth,\n                innerText = this.innerText,\n                measureWidth = this.measureWidth,\n                onTruncate = this.onTruncate,\n                trimRight = this.trimRight;\n\n\n            var lines = [];\n            var text = innerText(elements.text);\n            var textLines = text.split('\\n').map(function (line) {\n                return line.split(' ');\n            });\n            var didTruncate = true;\n            var ellipsisWidth = this.ellipsisWidth(this.elements.ellipsis);\n\n            for (var line = 1; line <= numLines; line++) {\n                var textWords = textLines[0];\n\n                // Handle newline\n                if (textWords.length === 0) {\n                    lines.push();\n                    textLines.shift();\n                    line--;\n                    continue;\n                }\n\n                var resultLine = textWords.join(' ');\n\n                if (measureWidth(resultLine) <= targetWidth) {\n                    if (textLines.length === 1) {\n                        // Line is end of text and fits without truncating\n                        didTruncate = false;\n\n                        lines.push(resultLine);\n                        break;\n                    }\n                }\n\n                if (line === numLines) {\n                    // Binary search determining the longest possible line inluding truncate string\n                    var textRest = textWords.join(' ');\n\n                    var lower = 0;\n                    var upper = textRest.length - 1;\n\n                    while (lower <= upper) {\n                        var middle = Math.floor((lower + upper) / 2);\n\n                        var testLine = textRest.slice(0, middle + 1);\n\n                        if (measureWidth(testLine) + ellipsisWidth <= targetWidth) {\n                            lower = middle + 1;\n                        } else {\n                            upper = middle - 1;\n                        }\n                    }\n\n                    var lastLineText = textRest.slice(0, lower);\n\n                    if (trimWhitespace) {\n                        lastLineText = trimRight(lastLineText);\n\n                        // Remove blank lines from the end of text\n                        while (!lastLineText.length && lines.length) {\n                            var prevLine = lines.pop();\n\n                            lastLineText = trimRight(prevLine);\n                        }\n                    }\n\n                    resultLine = React.createElement(\n                        'span',\n                        null,\n                        lastLineText,\n                        ellipsis\n                    );\n                } else {\n                    // Binary search determining when the line breaks\n                    var _lower = 0;\n                    var _upper = textWords.length - 1;\n\n                    while (_lower <= _upper) {\n                        var _middle = Math.floor((_lower + _upper) / 2);\n\n                        var _testLine = textWords.slice(0, _middle + 1).join(' ');\n\n                        if (measureWidth(_testLine) <= targetWidth) {\n                            _lower = _middle + 1;\n                        } else {\n                            _upper = _middle - 1;\n                        }\n                    }\n\n                    // The first word of this line is too long to fit it\n                    if (_lower === 0) {\n                        // Jump to processing of last line\n                        line = numLines - 1;\n                        continue;\n                    }\n\n                    resultLine = textWords.slice(0, _lower).join(' ');\n                    textLines[0].splice(0, _lower);\n                }\n\n                lines.push(resultLine);\n            }\n\n            onTruncate(didTruncate);\n\n            return lines;\n        }\n    }, {\n        key: 'renderLine',\n        value: function renderLine(line, i, arr) {\n            if (i === arr.length - 1) {\n                return React.createElement(\n                    'span',\n                    { key: i },\n                    line\n                );\n            } else {\n                var br = React.createElement('br', { key: i + 'br' });\n\n                if (line) {\n                    return [React.createElement(\n                        'span',\n                        { key: i },\n                        line\n                    ), br];\n                } else {\n                    return br;\n                }\n            }\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var _this2 = this;\n\n            var target = this.elements.target,\n                _props2 = this.props,\n                children = _props2.children,\n                ellipsis = _props2.ellipsis,\n                lines = _props2.lines,\n                spanProps = _objectWithoutProperties(_props2, ['children', 'ellipsis', 'lines']),\n                targetWidth = this.state.targetWidth,\n                getLines = this.getLines,\n                renderLine = this.renderLine,\n                onTruncate = this.onTruncate;\n\n            var text = void 0;\n\n            var mounted = !!(target && targetWidth);\n\n            if (typeof window !== 'undefined' && mounted) {\n                if (lines > 0) {\n                    text = getLines().map(renderLine);\n                } else {\n                    text = children;\n\n                    onTruncate(false);\n                }\n            }\n\n            delete spanProps.onTruncate;\n            delete spanProps.trimWhitespace;\n\n            return React.createElement(\n                'span',\n                _extends({}, spanProps, { ref: function ref(targetEl) {\n                        _this2.elements.target = targetEl;\n                    } }),\n                React.createElement(\n                    'span',\n                    null,\n                    text\n                ),\n                React.createElement(\n                    'span',\n                    { ref: function ref(textEl) {\n                            _this2.elements.text = textEl;\n                        } },\n                    children\n                ),\n                React.createElement(\n                    'span',\n                    { ref: function ref(ellipsisEl) {\n                            _this2.elements.ellipsis = ellipsisEl;\n                        }, style: this.styles.ellipsis },\n                    ellipsis\n                )\n            );\n        }\n    }]);\n\n    return Truncate;\n}(Component);\n\nTruncate.propTypes = {\n    children: PropTypes.node,\n    ellipsis: PropTypes.node,\n    lines: PropTypes.oneOfType([PropTypes.oneOf([false]), PropTypes.number]),\n    trimWhitespace: PropTypes.bool,\n    width: PropTypes.number,\n    onTruncate: PropTypes.func\n};\nTruncate.defaultProps = {\n    children: '',\n    ellipsis: '…',\n    lines: 1,\n    trimWhitespace: false,\n    width: 0\n};\nexport default Truncate;\n;\n","var constant = require('./constant'),\n    createInverter = require('./_createInverter'),\n    identity = require('./identity');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Creates an object composed of the inverted keys and values of `object`.\n * If `object` contains duplicate values, subsequent values overwrite\n * property assignments of previous values.\n *\n * @static\n * @memberOf _\n * @since 0.7.0\n * @category Object\n * @param {Object} object The object to invert.\n * @returns {Object} Returns the new inverted object.\n * @example\n *\n * var object = { 'a': 1, 'b': 2, 'c': 1 };\n *\n * _.invert(object);\n * // => { '1': 'c', '2': 'b' }\n */\nvar invert = createInverter(function(result, value, key) {\n  if (value != null &&\n      typeof value.toString != 'function') {\n    value = nativeObjectToString.call(value);\n  }\n\n  result[value] = key;\n}, constant(identity));\n\nmodule.exports = invert;\n","/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\nmodule.exports = constant;\n","var baseInverter = require('./_baseInverter');\n\n/**\n * Creates a function like `_.invertBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} toIteratee The function to resolve iteratees.\n * @returns {Function} Returns the new inverter function.\n */\nfunction createInverter(setter, toIteratee) {\n  return function(object, iteratee) {\n    return baseInverter(object, setter, toIteratee(iteratee), {});\n  };\n}\n\nmodule.exports = createInverter;\n","var baseForOwn = require('./_baseForOwn');\n\n/**\n * The base implementation of `_.invert` and `_.invertBy` which inverts\n * `object` with values transformed by `iteratee` and set by `setter`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform values.\n * @param {Object} accumulator The initial inverted object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction baseInverter(object, setter, iteratee, accumulator) {\n  baseForOwn(object, function(value, key, object) {\n    setter(accumulator, iteratee(value), key, object);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseInverter;\n","\nvar content = require(\"!!../../../../css-loader/index.js!../../../../sass-loader/dist/cjs.js??ref--5-2!./empty-state.css\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../css-loader/index.js!../../../../sass-loader/dist/cjs.js??ref--5-2!./empty-state.css\", function() {\n\t\tvar newContent = require(\"!!../../../../css-loader/index.js!../../../../sass-loader/dist/cjs.js??ref--5-2!./empty-state.css\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".pf-c-empty-state{--pf-c-empty-state--Padding: var(--pf-global--spacer--xl);--pf-c-empty-state__icon--MarginBottom: var(--pf-global--spacer--lg);--pf-c-empty-state__icon--FontSize: var(--pf-global--icon--FontSize--xl);--pf-c-empty-state__icon--Color: var(--pf-global--icon--Color--light);--pf-c-empty-state__body--MarginTop: var(--pf-global--spacer--md);--pf-c-empty-state__body--Color: var(--pf-global--Color--200);--pf-c-empty-state--c-button--MarginTop: var(--pf-global--spacer--xl);--pf-c-empty-state--c-button__secondary--MarginTop: var(--pf-global--spacer--sm);--pf-c-empty-state__secondary--MarginTop: var(--pf-global--spacer--xl);--pf-c-empty-state__secondary--MarginRight: calc(var(--pf-global--spacer--xs) * -1);--pf-c-empty-state__secondary--MarginBottom: calc(var(--pf-global--spacer--xs) * -1);--pf-c-empty-state__secondary--c-button--MarginRight: var(--pf-global--spacer--xs);--pf-c-empty-state__secondary--c-button--MarginBottom: var(--pf-global--spacer--xs);--pf-c-empty-state--m-sm--MaxWidth: 25rem;--pf-c-empty-state--m-lg--MaxWidth: 37.5rem;padding:var(--pf-c-empty-state--Padding);text-align:center}.pf-c-empty-state>.pf-c-button.pf-m-primary,.pf-c-empty-state .pf-c-empty-state__primary{margin-top:var(--pf-c-empty-state--c-button--MarginTop)}.pf-c-empty-state>.pf-c-button.pf-m-primary+.pf-c-empty-state__secondary,.pf-c-empty-state .pf-c-empty-state__primary+.pf-c-empty-state__secondary{margin-top:var(--pf-c-empty-state--c-button__secondary--MarginTop)}.pf-c-empty-state.pf-m-sm{max-width:var(--pf-c-empty-state--m-sm--MaxWidth)}.pf-c-empty-state.pf-m-lg{max-width:var(--pf-c-empty-state--m-lg--MaxWidth)}.pf-c-empty-state__icon{margin-bottom:var(--pf-c-empty-state__icon--MarginBottom);font-size:var(--pf-c-empty-state__icon--FontSize);color:var(--pf-c-empty-state__icon--Color)}.pf-c-empty-state__body{margin-top:var(--pf-c-empty-state__body--MarginTop);color:var(--pf-c-empty-state__body--Color)}.pf-c-empty-state__secondary{display:flex;flex-wrap:wrap;justify-content:center;margin-top:var(--pf-c-empty-state__secondary--MarginTop);margin-right:var(--pf-c-empty-state__secondary--MarginRight);margin-bottom:var(--pf-c-empty-state__secondary--MarginBottom)}.pf-c-empty-state__secondary>.pf-c-button{margin-right:var(--pf-c-empty-state__secondary--c-button--MarginRight);margin-bottom:var(--pf-c-empty-state__secondary--c-button--MarginBottom)}.pf-m-redhat-font .pf-c-empty-state>.pf-c-title{font-size:var(--pf-global--FontSize--xl)}\\n\", \"\"]);\n\n// exports\n","import routerParams from '@redhat-cloud-services/frontend-components-utilities/files/RouterParams';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { paths } from '../../Routes';\nimport { Tabs, Tab } from '@patternfly/react-core';\nimport invert from 'lodash/invert';\n\nexport const ComplianceTabs = (props) => {\n    const { match: { path } } = props;\n\n    const tabPaths = {\n        0: paths.compliancePolicies,\n        1: paths.complianceSystems\n    };\n\n    const redirect = (_, tabIndex) => {\n        props.history.push(tabPaths[tabIndex]);\n    };\n\n    let currentKey = Number(invert(tabPaths)[path]);\n\n    const tabs = [\n        <Tab title={'Policies'} key={0} eventKey={0}></Tab>,\n        <Tab title={'Systems'} key={1} eventKey={1}></Tab>\n    ];\n\n    return (\n        <Tabs activeKey={currentKey} onSelect={redirect} aria-label=\"Compliance Tabs\">\n            { tabs }\n        </Tabs>\n    );\n};\n\nComplianceTabs.propTypes = {\n    history: propTypes.object,\n    match: propTypes.object\n};\n\nexport default routerParams(ComplianceTabs);\n","import React from 'react';\nimport {\n    Card,\n    Grid,\n    GridItem\n} from '@patternfly/react-core';\nimport ContentLoader from 'react-content-loader';\nimport _ from 'lodash';\n\nconst LoadingComplianceCards = () => (\n    <Grid gutter='md'>\n        { _.range(3).map((_, key) => {\n            return <GridItem sm={12} md={12} lg={6} xl={4} key={key}>\n                <Card>\n                    <ContentLoader height={400} width={400} speed={2} primaryColor=\"#f3f3f3\" secondaryColor=\"#ecebeb\">\n                        <rect x=\"6\" y=\"31\" rx=\"4\" ry=\"4\" width=\"293\" height=\"15\" />\n                        <rect x=\"8\" y=\"15\" rx=\"3\" ry=\"3\" width=\"85\" height=\"6\" />\n                        <rect x=\"7\" y=\"112\" rx=\"3\" ry=\"3\" width=\"220\" height=\"10\" />\n                        <circle cx=\"190\" cy=\"256\" r=\"109\" />\n                        <rect x=\"8\" y=\"73\" rx=\"0\" ry=\"0\" width=\"69\" height=\"23\" />\n                        <rect x=\"47\" y=\"77\" rx=\"0\" ry=\"0\" width=\"0\" height=\"0\" />\n                        <rect x=\"36\" y=\"77\" rx=\"0\" ry=\"0\" width=\"16\" height=\"0\" />\n                    </ContentLoader>\n                </Card>\n            </GridItem>;\n        })}\n    </Grid>\n);\n\nexport default LoadingComplianceCards;\n","import React from 'react';\nimport {\n    Link\n} from 'react-router-dom';\nimport Truncate from 'react-truncate';\nimport {\n    Chip,\n    Card,\n    CardBody,\n    Text,\n    TextContent,\n    TextVariants,\n    Grid,\n    GridItem\n} from '@patternfly/react-core';\nimport {\n    ChartDonut,\n    ChartThemeColor,\n    ChartThemeVariant\n} from '@patternfly/react-charts';\nimport '../../Charts.scss';\nimport { fixedPercentage } from '../../Utilities/TextHelper';\n\nclass CompliancePolicyCard extends React.Component {\n    constructor(policy) {\n        super(policy);\n        this.policy = policy.policy;\n        this.state = { cardTitle: <Truncate lines={1}>{this.policy.name}</Truncate> };\n    }\n\n    onMouseover = () => {\n        this.setState({ cardTitle: this.policy.name });\n    }\n\n    onMouseout = () => {\n        this.setState({ cardTitle: <Truncate lines={1}>{this.policy.name}</Truncate> });\n    }\n\n    render() {\n        const compliantHostCount = this.policy.compliantHostCount;\n        const totalHostCount = this.policy.totalHostCount;\n        let donutValues = [\n            { x: 'Compliant', y: compliantHostCount },\n            { x: 'Non-compliant', y: totalHostCount - compliantHostCount }\n        ];\n        const compliancePercentage = fixedPercentage(Math.floor(100 *\n            (donutValues[0].y / (donutValues[0].y + donutValues[1].y))));\n\n        return (\n            <Card widget-id={this.policy.refId}>\n                <CardBody>\n                    <Text style={{ fontWeight: '500', color: 'var(--pf-global--Color--200)' }} component={TextVariants.small}>\n                        External policy\n                    </Text>\n                    <TextContent>\n                        <Text onMouseEnter={this.onMouseover.bind(this)} onMouseLeave={this.onMouseout.bind(this)}\n                            style={{ fontWeight: '500' }} component={TextVariants.h4}>\n                            {this.state.cardTitle}\n                        </Text>\n                    </TextContent>\n                    <TextContent className=\"chart-title\">\n                        <Grid>\n                            <GridItem style={{ display: 'inline-flex' }} span={12}>\n                                <TextContent>\n                                    <span style={{ fontSize: '30px', fontWeight: '500' }}>\n                                        { compliantHostCount }\n                                    </span>\n                                    <span style={{ fontWeight: '500', color: 'var(--pf-global--Color--200)' }}>\n                                        {' '}of{' '}\n                                    </span>\n                                    <span style={{ fontSize: '30px', fontWeight: '500' }}>\n                                        { totalHostCount }\n                                    </span>\n                                </TextContent>\n                            </GridItem>\n                            <GridItem span={12}>\n                                <Text\n                                    style={{ fontWeight: '500', color: 'var(--pf-global--Color--200)' }}\n                                    component={TextVariants.small}\n                                >\n                                    Systems meet compliance threshold\n                                </Text>\n                            </GridItem>\n                            <GridItem span={6}>\n                                <TextContent>\n                                    <Text component={TextVariants.small} style={{ fontSize: '16px' }} >\n                                        <Link to={'/policies/' + this.policy.id} >\n                                                More details\n                                        </Link>\n                                    </Text>\n                                </TextContent>\n                            </GridItem>\n                            <GridItem span={6} style={{ textAlign: 'right' }}>\n                                { this.policy.businessObjective &&\n                                    <Chip isReadOnly>\n                                        { this.policy.businessObjective.title }\n                                    </Chip>\n                                }\n                            </GridItem>\n                        </Grid>\n                    </TextContent>\n                </CardBody>\n                <hr/>\n                <CardBody>\n                    <Grid>\n                        <GridItem style={{ textAlign: 'center' }} span={12}>\n                            <div className='chart-inline'>\n                                <div className='card-chart-container'>\n                                    <ChartDonut data={donutValues}\n                                        identifier={this.policy.name.replace(/ /g, '')}\n                                        innerRadius={122}\n                                        themeColor={ChartThemeColor.blue}\n                                        themeVariant={ChartThemeVariant.light}\n                                        title={compliancePercentage}\n                                        subTitle=\"Systems above threshold\"\n                                        height={300}\n                                        width={300}\n                                    />\n                                </div>\n                            </div>\n                        </GridItem>\n                    </Grid>\n                </CardBody>\n            </Card>\n        );\n    };\n};\n\nexport default CompliancePolicyCard;\n","import React from 'react';\nimport {\n    Title,\n    TextContent,\n    Button,\n    Bullseye,\n    EmptyState,\n    EmptyStateIcon,\n    ClipboardCopy,\n    ClipboardCopyVariant\n} from '@patternfly/react-core';\nimport emptyStateStyles from '@patternfly/patternfly/components/EmptyState/empty-state.css';\nimport { CloudServerIcon } from '@patternfly/react-icons';\n\nconst CompliancePoliciesEmptyState = () => (\n    <Bullseye>\n        <EmptyState>\n            <EmptyStateIcon style={{ fontWeight: '500', color: 'var(--pf-global--primary-color--100)' }}\n                size=\"xl\" title=\"Compliance\" icon={CloudServerIcon} />\n            <br/>\n            <Title size=\"lg\">Connect with OpenSCAP to do more with Red Hat Enterprise Linux</Title>\n            <br/>\n            <span className={emptyStateStyles.emptyStateBody}>\n                <TextContent>\n                    Scan and upload a report on a system with OpenSCAP to see information\n                    about your system&#39;s compliance to policies.\n                    <br/>\n                    Generate a report with OpenSCAP with the following command:\n                    <ClipboardCopy className='upload-instructions'\n                        variant={ClipboardCopyVariant.expansion}>\n                        oscap xccdf eval --profile xccdf_org.ssgproject.content_profile_standard\n                        --results scan.xml /usr/share/xml/scap/ssg/content/ssg-rhel7-ds.xml\n                    </ClipboardCopy>\n                    And upload it using the following command:\n                    <ClipboardCopy className='upload-instructions'\n                        variant={ClipboardCopyVariant.expansion}>\n                        sudo insights-client --verbose --payload scan.xml\n                        --content-type application/vnd.redhat.compliance.something+tgz\n                    </ClipboardCopy>\n                </TextContent>\n            </span>\n\n            <Button\n                variant=\"primary\"\n                component=\"a\"\n                target=\"_blank\"\n                href=\"https://www.open-scap.org/getting-started/\">\n                Get started with OpenSCAP\n            </Button>\n        </EmptyState>\n    </Bullseye>\n);\n\nexport default CompliancePoliciesEmptyState;\n","import { Component } from 'react';\nimport propTypes from 'prop-types';\n\nclass ErrorPage extends Component {\n    render() {\n        const { error } = this.props;\n        if (error.networkError && error.networkError.statusCode === 401) {\n            window.insights.chrome.auth.logout();\n        }\n\n        return 'Oops! There was an error loading Compliance data. If you need to contact ' +\n            'Red Hat Support about this, this is the exact error: ' + ' ' + error.message;\n    }\n}\n\nErrorPage.propTypes = {\n    error: propTypes.object\n};\n\nexport default ErrorPage;\n","export { default as ComplianceTabs } from './ComplianceTabs/ComplianceTabs';\nexport { default as LoadingComplianceCards } from './LoadingComplianceCards/LoadingComplianceCards';\nexport { default as CompliancePolicyCard } from './CompliancePolicyCard/CompliancePolicyCard';\nexport { default as CompliancePoliciesEmptyState } from './CompliancePoliciesEmptyState/CompliancePoliciesEmptyState';\nexport { default as ErrorPage } from './ErrorPage/ErrorPage';\n","import React from 'react';\nimport {\n    ComplianceTabs,\n    LoadingComplianceCards,\n    CompliancePolicyCard,\n    CompliancePoliciesEmptyState,\n    ErrorPage\n} from 'PresentationalComponents';\nimport { PageHeader, PageHeaderTitle, Main } from '@redhat-cloud-services/frontend-components';\nimport routerParams from '@redhat-cloud-services/frontend-components-utilities/files/RouterParams';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nimport {\n    Grid,\n    GridItem\n} from '@patternfly/react-core';\n\nconst QUERY = gql`\n{\n    allProfiles {\n        id\n        name\n        refId\n        description\n        totalHostCount\n        compliantHostCount\n        businessObjective {\n            id\n            title\n        }\n    }\n}\n`;\n\nconst CompliancePolicies = () => {\n    const { data, error, loading } = useQuery(QUERY);\n\n    if (error) { return <ErrorPage error={error}/>; }\n\n    if (loading) {\n        return (\n            <React.Fragment>\n                <PageHeader>\n                    <PageHeaderTitle title=\"Compliance\" />\n                </PageHeader>\n                <Main>\n                    <div className=\"policies-donuts\">\n                        <Grid gutter='md'>\n                            <LoadingComplianceCards/>\n                        </Grid>\n                    </div>\n                </Main>\n            </React.Fragment>\n        );\n    }\n\n    const policies = data.allProfiles.filter((profile) => profile.totalHostCount > 0);\n\n    let policyCards = [];\n    let pageHeader;\n    if (policies.length) {\n        pageHeader = <PageHeader>\n            <PageHeaderTitle title=\"Compliance\" />\n            <ComplianceTabs/>\n        </PageHeader>;\n        policyCards = policies.map(\n            (policy, i) =>\n                <GridItem sm={12} md={12} lg={6} xl={4} key={i}>\n                    <CompliancePolicyCard\n                        key={i}\n                        policy={policy}\n                    />\n                </GridItem>\n        );\n    } else {\n        pageHeader = <PageHeader style={{ paddingBottom: 22 }}><PageHeaderTitle title=\"Compliance\" /></PageHeader>;\n        policyCards = <CompliancePoliciesEmptyState />;\n    }\n\n    return (\n        <React.Fragment>\n            { pageHeader }\n            <Main>\n                <div className=\"policies-donuts\">\n                    <Grid gutter='md'>\n                        {policyCards}\n                    </Grid>\n                </div>\n            </Main>\n        </React.Fragment>\n    );\n};\n\nexport default routerParams(CompliancePolicies);\n"],"sourceRoot":""}