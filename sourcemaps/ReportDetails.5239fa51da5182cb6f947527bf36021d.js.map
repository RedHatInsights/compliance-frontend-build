{"version":3,"file":"js/ReportDetails.d3e8e68a3c7f2dbca167.js","mappings":"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","sources":["webpack:///./src/SmartComponents/ReportDetails/Components/ReportedSystemRow.js","webpack:///./src/SmartComponents/ReportDetails/ReportDetails.js","webpack:///./src/SmartComponents/ReportDownload/constants.js","webpack:///./src/SmartComponents/ReportDownload/Components/ExportPDFForm.js","webpack:///./src/SmartComponents/ReportDownload/hooks/helpers.js","webpack:///./src/SmartComponents/ReportDownload/hooks/useQueryExportData.js","webpack:///./src/SmartComponents/ReportDownload/Components/ReportPDF/StyleSheet.js","webpack:///./src/SmartComponents/ReportDownload/Components/ReportPDF/SystemsTable.js","webpack:///./src/SmartComponents/ReportDownload/Components/ReportPDF/UnsupportedSystemsTable.js","webpack:///./src/SmartComponents/ReportDownload/Components/ReportPDF/NonReportedSystemsTable.js","webpack:///./src/SmartComponents/ReportDownload/Components/ReportPDF/RulesTable.js","webpack:///./src/SmartComponents/ReportDownload/Components/ReportPDF/PanelItem.js","webpack:///./src/SmartComponents/ReportDownload/Components/ReportPDF/SubSection.js","webpack:///./src/SmartComponents/ReportDownload/Components/ReportPDF/ComplianceChart.js","webpack:///./src/SmartComponents/ReportDownload/Components/ReportPDF.js","webpack:///./src/Utilities/hooks/api/utils/ApiClient.js","webpack:///./src/Utilities/hooks/api/useCollection.js","webpack:///./src/Utilities/hooks/api/useApi.js","webpack:///./src/SmartComponents/ReportDownload/hooks/useSupportedSsgFinder.js","webpack:///./src/SmartComponents/ReportDownload/hooks/usePDFExport.js","webpack:///./src/SmartComponents/ReportDownload/hooks/usePDFBuilder.js","webpack:///./src/SmartComponents/ReportDownload/ReportDownload.js","webpack:///./src/SmartComponents/ReportDownload/hooks/useExportSettings.js"],"sourcesContent":["import React from 'react';\nimport propTypes from 'prop-types';\nimport { RowWrapper } from '@patternfly/react-table';\n\nconst ReportedSystemRow = ({ row, children }) => (\n  <RowWrapper\n    style={\n      row.testResultProfiles?.length === 0\n        ? {\n            background: '#F0F0F0',\n            borderLeft:\n              'var(--pf-c-table--border-width--base) solid var(--pf-c-table--BorderColor)',\n            borderRight:\n              'var(--pf-c-table--border-width--base) solid var(--pf-c-table--BorderColor)',\n          }\n        : {}\n    }\n  >\n    {children}\n  </RowWrapper>\n);\n\nReportedSystemRow.propTypes = {\n  row: propTypes.node,\n  children: propTypes.node,\n};\n\nexport default ReportedSystemRow;\n","/* eslint-disable react/display-name */\nimport React from 'react';\nimport propTypes from 'prop-types';\nimport { useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Grid,\n  GridItem,\n} from '@patternfly/react-core';\nimport PageHeader, {\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport EmptyTable from '@redhat-cloud-services/frontend-components/EmptyTable';\nimport Spinner from '@redhat-cloud-services/frontend-components/Spinner';\nimport {\n  LinkWithPermission as Link,\n  BreadcrumbLinkItem,\n  ReportDetailsContentLoader,\n  ReportDetailsDescription,\n  StateViewWithError,\n  StateViewPart,\n  SubPageTitle,\n  LinkButton,\n} from 'PresentationalComponents';\nimport { useTitleEntity } from 'Utilities/hooks/useDocumentTitle';\nimport { SystemsTable } from 'SmartComponents';\nimport '@/Charts.scss';\nimport './ReportDetails.scss';\nimport * as Columns from '../SystemsTable/Columns';\nimport ReportedSystemRow from './Components/ReportedSystemRow';\nimport ReportChart from './Components/ReportChart';\n\nexport const QUERY = gql`\n  query RDWNRS_Profile($policyId: String!) {\n    profile(id: $policyId) {\n      id\n      name\n      refId\n      totalHostCount\n      testResultHostCount\n      compliantHostCount\n      unsupportedHostCount\n      complianceThreshold\n      osMajorVersion\n      lastScanned\n      policyType\n      policy {\n        id\n        name\n        profiles {\n          benchmark {\n            version\n          }\n        }\n      }\n      businessObjective {\n        id\n        title\n      }\n    }\n  }\n`;\n\nexport const ReportDetails = ({ route }) => {\n  const { report_id: policyId } = useParams();\n  const { data, error, loading } = useQuery(QUERY, {\n    variables: { policyId },\n    fetchPolicy: 'no-cache',\n  });\n  let profile = {};\n  let policyName;\n  let pageTitle;\n  let ssgVersions = [];\n\n  if (!loading && data) {\n    profile = data.profile;\n    policyName = profile.policy.name;\n    pageTitle = `Report: ${policyName}`;\n    ssgVersions = [\n      ...new Set(\n        profile.policy.profiles.flatMap(({ benchmark: { version } }) => version)\n      ),\n    ];\n  }\n\n  useTitleEntity(route, policyName);\n\n  return (\n    <StateViewWithError stateValues={{ error, data, loading }}>\n      <StateViewPart stateKey=\"loading\">\n        <PageHeader>\n          <ReportDetailsContentLoader />\n        </PageHeader>\n        <section className=\"pf-c-page__main-section\">\n          <EmptyTable>\n            <Spinner />\n          </EmptyTable>\n        </section>\n      </StateViewPart>\n      <StateViewPart stateKey=\"data\">\n        <PageHeader>\n          <Breadcrumb ouiaId=\"ReportDetailsPathBreadcrumb\">\n            <BreadcrumbLinkItem to=\"/\">Compliance</BreadcrumbLinkItem>\n            <BreadcrumbLinkItem to=\"/reports\">Reports</BreadcrumbLinkItem>\n            <BreadcrumbItem isActive>{pageTitle}</BreadcrumbItem>\n          </Breadcrumb>\n          <Grid hasGutter>\n            <GridItem sm={9} md={9} lg={9} xl={9}>\n              <PageHeaderTitle title={pageTitle} />\n              <SubPageTitle>{profile.policyType}</SubPageTitle>\n            </GridItem>\n            <GridItem\n              className=\"report-details-button\"\n              sm={3}\n              md={3}\n              lg={3}\n              xl={3}\n            >\n              <Link\n                state={{ profile }}\n                to={`/reports/${profile.id}/pdf`}\n                className=\"pf-u-mr-md\"\n                Component={LinkButton}\n                componentProps={{\n                  variant: 'primary',\n                  ouiaId: 'ReportDetailsDownloadReportPDFLink',\n                }}\n              >\n                Download PDF\n              </Link>\n              <Link\n                state={{ profile }}\n                to={`/reports/${profile.id}/delete`}\n                Component={LinkButton}\n                componentProps={{\n                  isInline: true,\n                  variant: 'link',\n                  ouiaId: 'ReportDetailsDeleteReportLink',\n                }}\n              >\n                Delete report\n              </Link>\n            </GridItem>\n          </Grid>\n          <Grid hasGutter>\n            <GridItem sm={12} md={12} lg={12} xl={6}>\n              <ReportChart\n                profile={profile}\n                hasLegend={true}\n                chartClass=\"report-details-chart-container\"\n              />\n            </GridItem>\n            <GridItem sm={12} md={12} lg={12} xl={6}>\n              <ReportDetailsDescription profile={profile} />\n            </GridItem>\n          </Grid>\n        </PageHeader>\n        <section className=\"pf-c-page__main-section\">\n          <Grid hasGutter>\n            <GridItem span={12}>\n              <SystemsTable\n                showOsMinorVersionFilter={[profile.osMajorVersion]}\n                ssgVersions={ssgVersions}\n                columns={[\n                  Columns.customName({\n                    showLink: true,\n                    showOsInfo: true,\n                  }),\n                  Columns.inventoryColumn('groups', {\n                    requiresDefault: true,\n                    sortBy: ['groups'],\n                  }),\n                  Columns.inventoryColumn('tags'),\n                  Columns.SsgVersion,\n                  Columns.FailedRules,\n                  Columns.ComplianceScore,\n                  Columns.LastScanned,\n                ]}\n                compliantFilter\n                defaultFilter={`policy_id = ${profile.id}`}\n                policyId={profile.id}\n                tableProps={{\n                  rowWrapper: ReportedSystemRow,\n                }}\n                ruleSeverityFilter\n                showGroupsFilter\n              />\n            </GridItem>\n          </Grid>\n        </section>\n      </StateViewPart>\n    </StateViewWithError>\n  );\n};\n\nReportDetails.propTypes = {\n  route: propTypes.object,\n};\n\nexport default ReportDetails;\n","import gql from 'graphql-tag';\n\nexport const DEFAULT_EXPORT_SETTINGS = {\n  compliantSystems: false,\n  nonCompliantSystems: true,\n  unsupportedSystems: true,\n  nonReportingSystems: true,\n  topTenFailedRules: true,\n  userNotes: undefined,\n};\n\nexport const GET_SYSTEMS = gql`\n  query PDF_Systems(\n    $filter: String!\n    $policyId: ID\n    $perPage: Int\n    $page: Int\n    $sortBy: [String!]\n    $tags: [String!]\n  ) {\n    systems(\n      search: $filter\n      limit: $perPage\n      offset: $page\n      sortBy: $sortBy\n      tags: $tags\n    ) {\n      totalCount\n      edges {\n        node {\n          id\n          name\n          osMajorVersion\n          osMinorVersion\n          insightsId\n          testResultProfiles(policyId: $policyId) {\n            lastScanned\n            compliant\n            score\n            supported\n            benchmark {\n              version\n            }\n            rulesFailed\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport const GET_PROFILE = gql`\n  query PDF_Profile($policyId: String!) {\n    profile(id: $policyId) {\n      id\n      name\n      refId\n      testResultHostCount\n      compliantHostCount\n      unsupportedHostCount\n      complianceThreshold\n      osMajorVersion\n      lastScanned\n      policyType\n      totalHostCount\n      policy {\n        id\n        name\n      }\n      benchmark {\n        id\n      }\n      businessObjective {\n        id\n        title\n      }\n    }\n  }\n`;\n\nexport const GET_RULES = gql`\n  query PDF_Profiles($filter: String!, $policyId: ID!) {\n    profiles(search: $filter) {\n      totalCount\n      edges {\n        node {\n          topFailedRules(policyId: $policyId) {\n            refId\n            title\n            remediationAvailable\n            severity\n            identifier\n            failedCount\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport {\n  Form,\n  FormGroup,\n  Text,\n  TextArea,\n  Checkbox,\n} from '@patternfly/react-core';\n\nconst ExportPDFForm = ({ policy, setExportSetting, exportSettings }) => (\n  <Form>\n    <FormGroup isInline fieldId=\"simple-form-checkbox-group\" label=\"Policy\">\n      <Text>{policy.name}</Text>\n    </FormGroup>\n\n    <FormGroup\n      fieldId=\"simple-form-checkbox-group\"\n      label=\"System data to include\"\n    >\n      <Checkbox\n        label=\"Non-compliant systems\"\n        id=\"non-compliant-systems-export-setting\"\n        aria-label=\"Non-compliant systems\"\n        onChange={setExportSetting('nonCompliantSystems')}\n        isChecked={exportSettings.nonCompliantSystems}\n      />\n      <Checkbox\n        label=\"Systems with unsupported configuration\"\n        id=\"unsupported-systems-export-setting\"\n        aria-label=\"Systems with unsupported configuration\"\n        onChange={setExportSetting('unsupportedSystems')}\n        isChecked={exportSettings.unsupportedSystems}\n      />\n      <Checkbox\n        label=\"Systems with no reports\"\n        id=\"nonreporting-systems-export-setting\"\n        aria-label=\"Systems never reported\"\n        onChange={setExportSetting('nonReportingSystems')}\n        isChecked={exportSettings.nonReportingSystems}\n      />\n      <Checkbox\n        id=\"compliant-systems-export-setting\"\n        onChange={setExportSetting('compliantSystems')}\n        isChecked={exportSettings.compliantSystems}\n        label=\"Compliant systems\"\n        aria-label=\"Compliant systems\"\n      />\n    </FormGroup>\n\n    <FormGroup label=\"Rule data to include\" fieldId=\"checkbox01\">\n      <Checkbox\n        id=\"failed-rules-export-setting\"\n        label=\"Top failed rules (Up to 10)\"\n        aria-label=\"Rule data to include\"\n        onChange={setExportSetting('topTenFailedRules')}\n        isChecked={exportSettings.topTenFailedRules}\n      />\n    </FormGroup>\n\n    <FormGroup label=\"User notes (optional)\" fieldId=\"checkbox01\">\n      <TextArea\n        aria-label=\"User notes (optional)\"\n        onChange={setExportSetting('userNotes')}\n        value={exportSettings.userNotes}\n      />\n    </FormGroup>\n  </Form>\n);\n\nExportPDFForm.propTypes = {\n  policy: propTypes.object,\n  exportSettings: propTypes.object,\n  setExportSetting: propTypes.func,\n};\n\nexport default ExportPDFForm;\n","// TODO move to utilities\n// to make these helpers available elsewhere and then use where needed\n\nconst scannedProfiles = (profiles) =>\n  profiles?.filter((profile) => profile.lastScanned != 'Never') || [];\n\nconst isSystemCompliant = (system) => {\n  const hasScannedProfiles =\n    scannedProfiles(system.testResultProfiles).length > 0;\n  const hasOnlyCompliantScannedProfiles = scannedProfiles(\n    system.testResultProfiles\n  ).every((profile) => profile.compliant);\n\n  return hasScannedProfiles && hasOnlyCompliantScannedProfiles;\n};\n\nconst isSystemNonCompliant = (system) => {\n  const hasScannedProfiles =\n    scannedProfiles(system.testResultProfiles).length > 0;\n  const hasNonCompliantProfiles =\n    scannedProfiles(system.testResultProfiles).filter(\n      (profile) => !profile.compliant\n    ).length > 0;\n\n  return hasScannedProfiles && hasNonCompliantProfiles;\n};\n\nconst hasProfiles = ({ testResultProfiles }) =>\n  scannedProfiles(testResultProfiles).length > 0;\n\nconst isSystemSupported = (system) =>\n  hasProfiles(system) &&\n  scannedProfiles(system.testResultProfiles).every(\n    (profile) => profile.supported\n  );\n\nconst isSystemUnsupported = (system) =>\n  hasProfiles(system) &&\n  scannedProfiles(system.testResultProfiles).every(\n    (profile) => !profile.supported\n  );\n\nexport const compliantSystemsData = (systems) =>\n  systems.filter(\n    (system) => isSystemSupported(system) && isSystemCompliant(system)\n  );\n\nexport const nonCompliantSystemsData = (systems) =>\n  systems.filter(\n    (system) => isSystemSupported(system) && isSystemNonCompliant(system)\n  );\n\nexport const unsupportedSystemsData = (systems) =>\n  systems.filter((system) => isSystemUnsupported(system));\n\nexport const supportedSystemsData = (systems) =>\n  systems.filter((system) => isSystemSupported(system));\n\nexport const nonReportingSystemsData = (systems) => {\n  const reportingSystemIds = [\n    ...compliantSystemsData(systems),\n    ...nonCompliantSystemsData(systems),\n    ...unsupportedSystemsData(systems),\n  ].map((system) => system.id);\n\n  return systems.filter((system) => !reportingSystemIds.includes(system.id));\n};\n\nexport const prepareForExport = (\n  exportSettings,\n  systems,\n  topTenFailedRules\n) => {\n  const compliantSystems = compliantSystemsData(systems);\n  const nonCompliantSystems = nonCompliantSystemsData(systems);\n  const unsupportedSystems = unsupportedSystemsData(systems);\n  const nonReportingSystems = nonReportingSystemsData(systems);\n\n  return {\n    totalHostCount: systems.length,\n\n    compliantSystemCount: compliantSystems.length,\n    ...(exportSettings.compliantSystems && {\n      compliantSystems: compliantSystems,\n    }),\n\n    nonCompliantSystemCount: nonCompliantSystems.length,\n    ...(exportSettings.nonCompliantSystems && {\n      nonCompliantSystems: nonCompliantSystems,\n    }),\n\n    unsupportedSystemCount: unsupportedSystems.length,\n    ...(exportSettings.unsupportedSystems && {\n      unsupportedSystems: unsupportedSystems,\n    }),\n\n    ...(exportSettings.topTenFailedRules && {\n      topTenFailedRules,\n    }),\n    nonReportingSystemCount: nonReportingSystems.length,\n    ...(exportSettings.nonReportingSystems && {\n      nonReportingSystems: nonReportingSystems,\n    }),\n    ...(exportSettings.userNotes && { userNotes: exportSettings.userNotes }),\n  };\n};\n","import { useApolloClient } from '@apollo/client';\nimport { GET_SYSTEMS, GET_RULES } from '../constants';\nimport { prepareForExport } from './helpers';\nimport usePromiseQueue from 'Utilities/hooks/usePromiseQueue';\n\nconst useFetchBatched = () => {\n  const { isResolving: isLoading, resolve } = usePromiseQueue();\n\n  return {\n    isLoading,\n    fetchBatched: (fetchFunction, total, filter, batchSize = 50) => {\n      const pages = Math.ceil(total / batchSize) || 1;\n\n      const results = resolve(\n        [...new Array(pages)].map(\n          (_, pageIdx) => () => fetchFunction(batchSize, pageIdx + 1, filter)\n        )\n      );\n\n      return results;\n    },\n  };\n};\n\nconst useSystemsFetch = ({ id: policyId, totalHostCount } = {}) => {\n  const client = useApolloClient();\n  const { fetchBatched } = useFetchBatched();\n\n  const fetchFunction = (perPage, page) =>\n    client.query({\n      query: GET_SYSTEMS,\n      fetchResults: true,\n      fetchPolicy: 'no-cache',\n      variables: {\n        perPage,\n        page,\n        filter: `policy_id = ${policyId}`,\n        policyId,\n      },\n    });\n\n  return async () =>\n    (await fetchBatched(fetchFunction, totalHostCount)).flatMap(\n      ({\n        data: {\n          systems: { edges },\n        },\n      }) => edges.map(({ node }) => node)\n    );\n};\n\nconst useFetchRules = ({ id: policyId } = {}) => {\n  const client = useApolloClient();\n\n  const fetchFunction = (perPage = 10, page = 1) =>\n    client.query({\n      query: GET_RULES,\n      fetchResults: true,\n      fetchPolicy: 'no-cache',\n      variables: {\n        perPage,\n        page,\n        filter: `policy_id = ${policyId}`,\n        policyId,\n      },\n    });\n\n  return async () =>\n    (await fetchFunction()).data.profiles?.edges.flatMap(\n      (edge) => edge.node.topFailedRules\n    );\n};\n\n// Hook that provides a wrapper function for a preconfigured GraphQL client to fetch export data\nconst useQueryExportData = (\n  exportSettings,\n  policy,\n  { onComplete, onError } = {\n    onComplete: () => undefined,\n    onError: () => undefined,\n  }\n) => {\n  const fetchSystems = useSystemsFetch(policy);\n  const fetchRules = useFetchRules(policy);\n\n  return async () => {\n    try {\n      const systems = await fetchSystems();\n      const rules = await fetchRules();\n      const exportData = prepareForExport(exportSettings, systems, rules);\n      onComplete?.(exportData);\n      return exportData;\n    } catch (error) {\n      if (onError) {\n        onError?.(error);\n        return [];\n      } else {\n        throw error;\n      }\n    }\n  };\n};\n\nexport default useQueryExportData;\n","import { StyleSheet } from '@react-pdf/renderer';\n\n// Supported style properties see: https://react-pdf.org/styling\nexport default StyleSheet.create({\n  // TODO: bold rendering in PDF does not appear to work\n  bold: {\n    fontWeight: 'bold',\n  },\n  italic: {\n    fontStyle: 'italic',\n  },\n\n  metaTitle: {\n    color: '#C9190B',\n    marginBottom: '20px',\n  },\n\n  userNotes: {\n    backgroundColor: '#F0F0F0',\n    padding: '8px',\n  },\n  userNotesTitle: {\n    marginBottom: '4px',\n  },\n\n  sectionTitle: {\n    color: '#C9190B',\n    fontWeight: 'bold',\n    fontSize: 14,\n  },\n\n  subSectionTitle: {\n    color: '#C9190B',\n    fontWeight: 'bold',\n    fontSize: 10,\n    marginBottom: '10pt',\n  },\n});\n","import React from 'react';\nimport propTypes from 'prop-types';\n// eslint-disable-next-line rulesdir/disallow-fec-relative-imports\nimport { Table } from '@redhat-cloud-services/frontend-components-pdf-generator/dist/esm/index';\nimport { fixedPercentage } from 'Utilities/TextHelper';\n\nconst SystemsTable = ({ systems }) => {\n  const headerRow = ['System name', 'OS', 'Failed rules', 'Compliance score'];\n  const rows = systems.map((system) => [\n    system.name,\n    `RHEL ${system.osMajorVersion}.${system.osMinorVersion}`,\n    `${system.testResultProfiles[0].rulesFailed || ''}`,\n    fixedPercentage(system.testResultProfiles[0].score),\n  ]);\n\n  return <Table withHeader rows={[headerRow, ...rows]} />;\n};\n\nSystemsTable.propTypes = {\n  systems: propTypes.array,\n};\n\nexport default SystemsTable;\n","import React from 'react';\nimport propTypes from 'prop-types';\n// eslint-disable-next-line rulesdir/disallow-fec-relative-imports\nimport { Table } from '@redhat-cloud-services/frontend-components-pdf-generator/dist/esm/index';\n\nconst UnsupportedSystemsTable = ({ systems, ssgFinder }) => {\n  const headerRow = [\n    'System name',\n    'OS',\n    'Running SSG version',\n    'Expected SSG version',\n  ];\n  const rows = systems.map((system) => [\n    system.name,\n    `RHEL ${system.osMajorVersion}.${system.osMinorVersion}`,\n    system.testResultProfiles[0]?.benchmark.version,\n    ssgFinder(system.osMajorVersion, system.osMinorVersion),\n  ]);\n\n  return <Table withHeader rows={[headerRow, ...rows]} />;\n};\n\nUnsupportedSystemsTable.propTypes = {\n  systems: propTypes.array,\n  ssgFinder: propTypes.func,\n};\n\nexport default UnsupportedSystemsTable;\n","import React from 'react';\nimport propTypes from 'prop-types';\n// eslint-disable-next-line rulesdir/disallow-fec-relative-imports\nimport { Table } from '@redhat-cloud-services/frontend-components-pdf-generator/dist/esm/index';\n\nconst NonReportedSystemsTable = ({ systems }) => {\n  const headerRow = ['System name', 'OS'];\n  const rows = systems.map((system) => [\n    system.name,\n    `RHEL ${system.osMajorVersion}.${system.osMinorVersion}`,\n  ]);\n\n  return <Table withHeader rows={[headerRow, ...rows]} />;\n};\n\nNonReportedSystemsTable.propTypes = {\n  systems: propTypes.array,\n  ssgFinder: propTypes.func,\n};\n\nexport default NonReportedSystemsTable;\n","import React from 'react';\nimport propTypes from 'prop-types';\n// eslint-disable-next-line rulesdir/disallow-fec-relative-imports\nimport { Table } from '@redhat-cloud-services/frontend-components-pdf-generator/dist/esm/index';\n\nconst identifierLabel = ({ identifier }) => (identifier || '{}').label || '';\n\nconst capitalize = (str = '') => str.charAt(0).toUpperCase() + str.slice(1);\n\nconst RulesTable = ({ rules }) => {\n  const headerRow = ['Rule name', 'ID', 'Severity', 'Failed systems'];\n  const failedRuleRows = rules.slice(0, 10).map((rule) => [\n    rule.title,\n    identifierLabel(rule),\n    // TODO: Add icon svg for severity\n    capitalize(rule?.severity),\n    `${rule.failedCount}`,\n  ]);\n\n  return <Table withHeader rows={[headerRow, ...failedRuleRows]} />;\n};\n\nRulesTable.propTypes = {\n  rules: propTypes.array,\n};\n\nexport default RulesTable;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Text, View } from '@react-pdf/renderer';\n\n// TODO: Move into pdf-generator components as option to render title at the bottom\nconst PanelItem = (props) => {\n  const { children, title } = props;\n  return (\n    <View\n      style={{\n        justifyContent: 'space-evenly',\n        width: '24%',\n        paddingRight: '1%',\n      }}\n    >\n      <View>\n        <Text style={{ color: '#C9190B', fontSize: 20 }}>{children}</Text>\n      </View>\n      <Text>{title}</Text>\n    </View>\n  );\n};\n\nPanelItem.propTypes = {\n  children: propTypes.node,\n  title: propTypes.string,\n};\n\nexport default PanelItem;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Text, View } from '@react-pdf/renderer';\nimport styles from './StyleSheet';\n\nconst SubSection = ({ children, metaTitle, title }) => {\n  return (\n    <View\n      style={{\n        marginBottom: '20pt',\n      }}\n    >\n      <View\n        style={{\n          justifyContent: 'start',\n        }}\n      >\n        <Text\n          style={{\n            ...styles.subSectionTitle,\n            width: '70%',\n          }}\n        >\n          {title}\n        </Text>\n        <Text>{metaTitle}</Text>\n      </View>\n\n      {children}\n    </View>\n  );\n};\n\nSubSection.propTypes = {\n  children: propTypes.node,\n  metaTitle: propTypes.string,\n  title: propTypes.string,\n};\n\nexport default SubSection;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { paletteColors } from '../../../../constants';\n// eslint-disable-next-line rulesdir/disallow-fec-relative-imports\nimport { Chart } from '@redhat-cloud-services/frontend-components-pdf-generator/dist/esm/index';\nimport { fixedPercentage } from 'Utilities/TextHelper';\n\n// TODO Legend table style need to be disablable\nconst ComplianceChart = ({\n  policy: { percentCompliant = 0 },\n  compliantSystemCount,\n  nonCompliantSystemCount,\n  unsupportedSystemCount,\n  nonReportingSystemCount,\n}) => {\n  const compliantSystemsChartData = [\n    {\n      x: `${compliantSystemCount} systems compliant`,\n      y: compliantSystemCount,\n    },\n    {\n      x: `${nonCompliantSystemCount} systems non-compliant`,\n      y: nonCompliantSystemCount,\n    },\n    ...(unsupportedSystemCount > 0\n      ? [\n          {\n            x: `${unsupportedSystemCount} systems not supported`,\n            y: unsupportedSystemCount,\n            color: paletteColors.gold300,\n          },\n        ]\n      : []),\n    ...(nonReportingSystemCount > 0\n      ? [\n          {\n            x: `${nonReportingSystemCount} systems never reported`,\n            y: nonReportingSystemCount,\n          },\n        ]\n      : []),\n  ];\n  const compliancePercentage = fixedPercentage(percentCompliant);\n\n  return (\n    <Chart\n      legendHeader={''}\n      chartType=\"donut\"\n      subTitle=\"Compliant\"\n      colorSchema=\"multi\"\n      title={compliancePercentage}\n      data={compliantSystemsChartData}\n    />\n  );\n};\n\nComplianceChart.propTypes = {\n  policy: propTypes.object,\n  compliantSystemCount: propTypes.number,\n  nonCompliantSystemCount: propTypes.number,\n  unsupportedSystemCount: propTypes.number,\n  nonReportingSystemCount: propTypes.number,\n};\n\nexport default ComplianceChart;\n","import React, { Fragment } from 'react';\nimport propTypes from 'prop-types';\nimport { Text, View } from '@react-pdf/renderer';\n// eslint-disable-next-line rulesdir/disallow-fec-relative-imports\nimport {\n  Panel,\n  Table,\n  Column,\n  Section,\n} from '@redhat-cloud-services/frontend-components-pdf-generator';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { fixedPercentage } from 'Utilities/TextHelper';\nimport styles from './ReportPDF/StyleSheet';\nimport SystemsTable from './ReportPDF/SystemsTable';\nimport UnsupportedSystemsTable from './ReportPDF/UnsupportedSystemsTable';\nimport NonReportedSystemsTable from './ReportPDF/NonReportedSystemsTable';\nimport RulesTable from './ReportPDF/RulesTable';\nimport PanelItem from './ReportPDF/PanelItem';\nimport SubSection from './ReportPDF/SubSection';\nimport ComplianceChart from './ReportPDF/ComplianceChart';\n\nconst ReportPDF = ({ data, ssgFinder }) => {\n  const {\n    totalHostCount,\n    compliantSystems,\n    compliantSystemCount,\n    nonCompliantSystems,\n    nonCompliantSystemCount,\n    topTenFailedRules,\n    unsupportedSystems,\n    unsupportedSystemCount,\n    nonReportingSystems,\n    nonReportingSystemCount,\n    userNotes,\n    policy,\n  } = data;\n  const { testResultHostCount = 0, compliantHostCount = 0 } = policy;\n  const percentCompliant =\n    testResultHostCount != 0\n      ? fixedPercentage(Math.floor(100 * (compliantHostCount / totalHostCount)))\n      : 0;\n\n  return (\n    <Fragment>\n      <Text style={styles.subSectionTitle}>{`Report prepared ${\n        DateFormat({ date: new Date(), type: 'exact' }).props.children\n      }`}</Text>\n\n      {userNotes && (\n        <View style={styles.userNotes}>\n          <View style={styles.userNotesTitle}>\n            <Text>User notes</Text>\n          </View>\n          <View>\n            <Text>{userNotes}</Text>\n          </View>\n        </View>\n      )}\n\n      <Section\n        title=\"Policy Details\"\n        titleProps={{\n          style: styles.sectionTitle,\n        }}\n      >\n        <Column style={{ width: '150px' }}>\n          <Table\n            // TODO: correct left side styling\n            rows={[\n              ['Policy type', policy.policyType],\n              ['Operating system', `RHEL ${policy.osMajorVersion}`],\n              ['Compliance threshold', `${policy.complianceThreshold}%`],\n              ['Business Objective', policy.businessObjective?.title || '--'],\n            ]}\n          />\n        </Column>\n        <Column>\n          <ComplianceChart\n            policy={{\n              ...policy,\n              percentCompliant,\n            }}\n            {...{\n              compliantSystemCount,\n              nonCompliantSystemCount,\n              unsupportedSystemCount,\n              nonReportingSystemCount,\n            }}\n          />\n        </Column>\n      </Section>\n\n      <Section\n        title=\"Systems\"\n        withColumn={false}\n        titleProps={{\n          style: styles.sectionTitle,\n        }}\n      >\n        <Panel withColumn={false} style={{ marginBottom: '20px' }}>\n          <PanelItem title=\"Non-compliant systems\">\n            {nonCompliantSystemCount}\n          </PanelItem>\n\n          {unsupportedSystemCount ? (\n            <PanelItem title=\"Systems with unsupported configuration\">\n              {unsupportedSystemCount}\n            </PanelItem>\n          ) : null}\n\n          {nonReportingSystemCount ? (\n            <PanelItem title=\"Systems never reported\">\n              {nonReportingSystemCount}\n            </PanelItem>\n          ) : null}\n\n          <PanelItem title=\"Compliant systems\">\n            {compliantSystemCount}\n          </PanelItem>\n        </Panel>\n\n        {nonCompliantSystems && nonCompliantSystemCount ? (\n          <SubSection title=\"Non-compliant systems\">\n            <SystemsTable systems={nonCompliantSystems} />\n          </SubSection>\n        ) : null}\n\n        {unsupportedSystems && unsupportedSystemCount ? (\n          <SubSection title=\"Systems with unsupported configuration\">\n            <UnsupportedSystemsTable\n              systems={unsupportedSystems}\n              ssgFinder={ssgFinder}\n            />\n          </SubSection>\n        ) : null}\n\n        {nonReportingSystems && nonReportingSystemCount ? (\n          <SubSection title=\"Systems never reported\">\n            <NonReportedSystemsTable systems={nonReportingSystems} />\n          </SubSection>\n        ) : null}\n\n        {compliantSystems && compliantSystemCount ? (\n          <SubSection title=\"Compliant systems\">\n            <SystemsTable systems={compliantSystems} />\n          </SubSection>\n        ) : null}\n      </Section>\n\n      {topTenFailedRules ? (\n        <Section\n          title=\"Rules\"\n          withColumn={false}\n          titleProps={{\n            style: styles.sectionTitle,\n          }}\n        >\n          <SubSection title=\"Top failed rules\">\n            <RulesTable rules={topTenFailedRules} />\n          </SubSection>\n        </Section>\n      ) : null}\n    </Fragment>\n  );\n};\n\nReportPDF.propTypes = {\n  data: propTypes.object,\n  ssgFinder: propTypes.func,\n};\n\nexport default ReportPDF;\n","class ApiClient {\n  DEFAULT_API_HEADERS = {\n    'Content-Type': 'application/vnd.api+json',\n    Accept: 'application/json',\n  };\n\n  constructor(options = {}) {\n    this.apiBase = options.apiBase || '/api';\n    this.path = options.path || '';\n    this.authenticate = options.authenticate || (() => Promise.resolve({}));\n    this.onUnauthorised = options.onUnauthorised || (() => Promise.resolve({}));\n    this.defaultHeaders = options.headers || this.DEFAULT_API_HEADERS;\n  }\n\n  async request(path, apiProps, method, options = {}) {\n    return await this.callAuthenticate()\n      .then(() => this.fetch(path, apiProps, method, options))\n      .then(this.checkForEmptyResponse)\n      .then((response) => this.checkForErrors(response, options))\n      .then((response) => response.json())\n      .catch(this.finalCatch);\n  }\n\n  finalCatch(promise) {\n    if (promise.errors === undefined) {\n      return Promise.reject({ title: 'Error parsing' });\n    } else {\n      return Promise.reject({ ...promise });\n    }\n  }\n\n  fetch(path, apiProps, method, options) {\n    let params = {\n      method: method || 'get',\n      headers: this.defaultHeaders,\n      credentials: 'include',\n    };\n    const fullPath = `${this.apiBase}${this.path ? this.path : ''}${\n      path ? path : ''\n    }`;\n    let url = new URL(fullPath, window.location.origin);\n    if (options.params) {\n      const params = Object.keys(options.params)\n        .map(\n          (key) =>\n            encodeURIComponent(key) +\n            '=' +\n            encodeURIComponent(options.params[key])\n        )\n        .join('&');\n      url.search = new URLSearchParams(params);\n    }\n\n    if (apiProps) {\n      params.body = JSON.stringify(apiProps);\n    }\n\n    return fetch(url, params);\n  }\n\n  checkForEmptyResponse(response) {\n    return response.status === 204 ? { json: () => ({}) } : response;\n  }\n\n  checkForErrors(response, options = {}) {\n    if (response.status === 404 && options.ignore404) {\n      return { json: () => ({}) };\n    }\n\n    if (response.status === 401) {\n      return this.onUnauthorised();\n    }\n\n    const responseCloneJson = response.clone\n      ? response.clone().json()\n      : response;\n\n    if (response.status === 422) {\n      return responseCloneJson.then((json) =>\n        Promise.reject({ ...json, title: 'Validation error' })\n      );\n    }\n\n    if (response.status >= 400 && response.status <= 600) {\n      return responseCloneJson.then((json) => Promise.reject(json.errors[0]));\n    }\n\n    return response;\n  }\n\n  callAuthenticate() {\n    return Promise.resolve(this.authenticate() || true);\n  }\n\n  create(path, apiProps) {\n    return this.request(path, apiProps, 'post');\n  }\n\n  update(path, apiProps) {\n    return this.request(path, apiProps, 'put');\n  }\n\n  get(path, options = {}) {\n    return this.request(path, null, 'get', options);\n  }\n\n  destroy(path) {\n    return this.request(path, null, 'delete');\n  }\n}\n\nexport default ApiClient;\n","import { useEffect, useState } from 'react';\nimport { COMPLIANCE_API_ROOT } from '@/constants';\nimport normalize from 'json-api-normalizer';\nimport useApi from './useApi';\n\nconst includePropAndDelete = (entity, prop) => {\n  const attributes = entity[prop];\n  let newEntity = entity;\n  delete newEntity[prop];\n  return { ...newEntity, ...attributes };\n};\n\nconst includeAttributes = (entity) =>\n  entity && includePropAndDelete(entity, 'attributes');\n\nconst includeRelationship = (entity, normalizedJson) => {\n  let relationships = {};\n  Object.entries(entity?.relationships || []).forEach((item) => {\n    const [relationship, relationshipData] = item;\n    relationships[relationship] = relationshipData?.data\n      .map((entity) =>\n        includeAttributes(normalizedJson?.[entity.type]?.[entity.id])\n      )\n      .filter((v) => !!v);\n  });\n  delete entity.relationships;\n  return { ...entity, ...relationships };\n};\n\nconst normalizeData = (json, type) => {\n  const jsonNormalized = normalize(json);\n  return Object.values(jsonNormalized[type] || {})?.map((entity) =>\n    includeRelationship(includeAttributes(entity), jsonNormalized)\n  );\n};\n\nconst fetchCollection = async (\n  apiClient,\n  collection,\n  params = {},\n  options = {}\n) => {\n  const json = await apiClient.get(`/${collection}`, { params });\n  const normalized = await normalizeData(json, options?.type || collection);\n\n  return {\n    collection: normalized,\n    meta: json.meta,\n    total: json.meta.total,\n    json,\n  };\n};\n\nconst useCollection = (collection, options = {}, dependencies = []) => {\n  const [collectionState, setCollectionState] = useState({\n    data: undefined,\n    loading: false,\n    error: undefined,\n  });\n  const apiClient = useApi({\n    apiBase: COMPLIANCE_API_ROOT,\n  });\n  const params = {\n    ...(options?.params || {}),\n    include: options?.include || [],\n  };\n\n  useEffect(() => {\n    if (!options?.skip) {\n      setCollectionState({\n        data: undefined,\n        loading: true,\n        error: undefined,\n      });\n\n      fetchCollection(apiClient, collection, params, options).then((data) => {\n        setCollectionState({\n          data,\n          loading: false,\n          error: undefined,\n        });\n      });\n    }\n  }, [...dependencies, options?.skip]);\n\n  return collectionState;\n};\n\nexport default useCollection;\n","import ApiClient from './utils/ApiClient';\n\nconst useApi = (options) => {\n  const apiClient = new ApiClient({\n    ...options,\n  });\n\n  return apiClient;\n};\n\nexport default useApi;\n","import useCollection from 'Utilities/hooks/api/useCollection';\n\nconst compareAsIntegers = (firstString, secondString) =>\n  parseInt(firstString) === parseInt(secondString);\n\nconst useSupportedSsgFinder = (skip) => {\n  const { data: supportedSsgs } = useCollection('supported_ssgs', {\n    type: 'supportedSsg',\n    skip,\n  });\n  return (majorVersion, minorVersion) => {\n    const matchingVersion = (supportedSsgs || {}).collection?.find(\n      (profile) =>\n        compareAsIntegers(profile.osMajorVersion, majorVersion) &&\n        compareAsIntegers(profile.osMinorVersion, minorVersion)\n    );\n\n    return matchingVersion?.version || 'N/A';\n  };\n};\n\nexport default useSupportedSsgFinder;\n","import { dispatchNotification } from 'Utilities/Dispatcher';\nimport useQueryExportData from './useQueryExportData';\nimport usePDFBuilder from './usePDFBuilder';\nimport useSupportedSsgFinder from './useSupportedSsgFinder';\n\n// Hook to provide a function that fetches the necessary data to export\n// and compile it into pages for the pdf-generator DownloadButton\nconst usePDFExport = (exportSettings, policy) => {\n  const ssgFinder = useSupportedSsgFinder();\n  const queryExportData = useQueryExportData(exportSettings, policy, {\n    onError: () => {\n      dispatchNotification({\n        variant: 'danger',\n        title: 'Couldn’t download export',\n        description: 'Reinitiate this export to try again.',\n      });\n    },\n    onComplete: () => {\n      dispatchNotification({\n        variant: 'success',\n        title: 'Downloading export',\n      });\n    },\n  });\n  const buildPDFPages = usePDFBuilder(policy);\n\n  const exportPDF = async () => {\n    dispatchNotification({\n      variant: 'info',\n      title: 'Preparing export',\n      description: 'Once complete, your download will start automatically.',\n    });\n    const data = await queryExportData();\n    return await buildPDFPages(data, ssgFinder);\n  };\n\n  return exportPDF;\n};\n\nexport default usePDFExport;\n","import React from 'react';\nimport ReportPDF from '../Components/ReportPDF';\n\n// (Eventually) responsible for rendering sections and splitting into pages\nconst usePDFBuilder = (policy) => async (data, ssgFinder) =>\n  [\n    <ReportPDF\n      key=\"pdf-page-1\"\n      data={{ ...data, policy }}\n      ssgFinder={ssgFinder}\n    />,\n  ];\n\nexport default usePDFBuilder;\n","import React from 'react';\nimport { Button, Spinner } from '@patternfly/react-core';\nimport { useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n// eslint-disable-next-line\nimport { DownloadButton } from '@redhat-cloud-services/frontend-components-pdf-generator/dist/esm/index';\nimport {\n  ComplianceModal,\n  StateViewWithError,\n  StateViewPart,\n} from 'PresentationalComponents';\nimport useNavigate from '@redhat-cloud-services/frontend-components-utilities/useInsightsNavigate';\nimport { GET_PROFILE } from './constants';\nimport ExportPDFForm from './Components/ExportPDFForm';\nimport usePDFExport from './hooks/usePDFExport';\nimport useExportSettings from './hooks/useExportSettings';\n\n// Provides that export settings modal accessible in the report details\nexport const ReportDownload = () => {\n  const { report_id: policyId } = useParams();\n  const navigate = useNavigate();\n  const { data, loading, error } = useQuery(GET_PROFILE, {\n    variables: { policyId },\n  });\n  const policy = data?.profile;\n  const {\n    exportSettings,\n    setExportSetting,\n    isValid: settingsValid,\n  } = useExportSettings();\n\n  const exportPDF = usePDFExport(exportSettings, policy);\n  const exportFileName = `compliance-report--${\n    new Date().toISOString().split('T')[0]\n  }`;\n  const buttonLabel = 'Export report';\n  const buttonProps = {\n    ouiaId: 'ExportReportButton',\n    variant: 'primary',\n    isDisabled: !settingsValid,\n  };\n\n  const FallbackButton = () => <Button {...buttonProps}>{buttonLabel}</Button>;\n\n  const actions = [\n    <DownloadButton\n      groupName=\"Red Hat Insights\"\n      key=\"export\"\n      label={buttonLabel}\n      reportName={`Compliance:`}\n      type={policy && policy.name}\n      fileName={exportFileName}\n      asyncFunction={exportPDF}\n      buttonProps={buttonProps}\n      fallback={<FallbackButton />}\n      className=\"pf-u-mr-sm\"\n      onSuccess={() => navigate(-1)}\n    />,\n    <Button\n      variant=\"secondary\"\n      key=\"cancel\"\n      ouiaId=\"ExportReportCancelButton\"\n      onClick={() => {\n        navigate(-1);\n      }}\n    >\n      Cancel\n    </Button>,\n  ];\n\n  return (\n    <ComplianceModal\n      isOpen\n      width=\"440px\"\n      ouiaId=\"DownloadReportModal\"\n      title=\"Compliance report\"\n      onClose={() => navigate(-1)}\n      actions={actions}\n    >\n      <StateViewWithError stateValues={{ error, data, loading }}>\n        <StateViewPart stateKey=\"loading\">\n          <Spinner />\n        </StateViewPart>\n        <StateViewPart stateKey=\"data\">\n          <ExportPDFForm {...{ policy, setExportSetting, exportSettings }} />\n        </StateViewPart>\n      </StateViewWithError>\n    </ComplianceModal>\n  );\n};\n\nexport default ReportDownload;\n","import { useState } from 'react';\nimport pickBy from 'lodash/pickBy';\nimport { DEFAULT_EXPORT_SETTINGS } from '../constants';\n\nconst preparedSettings = (withReporting = true) =>\n  pickBy(\n    DEFAULT_EXPORT_SETTINGS,\n    (_value, key) => !(key === 'nonReportingSystems' && !withReporting)\n  );\n\nconst useExportSettings = () => {\n  const [exportSettings, setExportSettings] = useState(preparedSettings());\n\n  const setExportSetting = (setting) => (value) =>\n    setExportSettings({\n      ...exportSettings,\n      [setting]: value,\n    });\n\n  const isValid = () =>\n    Object.keys(exportSettings).some(\n      (key) => (key !== 'userNotes' && !!exportSettings[key]) === true\n    );\n\n  return {\n    exportSettings,\n    setExportSetting,\n    isValid: isValid(),\n  };\n};\n\nexport default useExportSettings;\n"],"names":["ReportedSystemRow","_ref","_row$testResultProfil","row","children","React","RowWrapper","style","testResultProfiles","length","background","borderLeft","borderRight","propTypes","QUERY","gql","_templateObject","_taggedTemplateLiteral","ReportDetails","policyName","pageTitle","route","policyId","useParams","report_id","_useQuery","useQuery","variables","fetchPolicy","data","error","loading","profile","ssgVersions","policy","name","concat","_toConsumableArray","Set","profiles","flatMap","_ref2","benchmark","version","useTitleEntity","StateViewWithError","stateValues","StateViewPart","stateKey","PageHeader","ReportDetailsContentLoader","className","EmptyTable","Spinner","Breadcrumb","ouiaId","BreadcrumbLinkItem","to","BreadcrumbItem","isActive","Grid","hasGutter","GridItem","sm","md","lg","xl","PageHeaderTitle","title","SubPageTitle","policyType","Link","state","id","Component","LinkButton","componentProps","variant","isInline","ReportChart","hasLegend","chartClass","ReportDetailsDescription","span","SystemsTable","showOsMinorVersionFilter","osMajorVersion","columns","Columns","showLink","showOsInfo","requiresDefault","sortBy","compliantFilter","defaultFilter","tableProps","rowWrapper","ruleSeverityFilter","showGroupsFilter","DEFAULT_EXPORT_SETTINGS","compliantSystems","nonCompliantSystems","unsupportedSystems","nonReportingSystems","topTenFailedRules","userNotes","undefined","GET_SYSTEMS","GET_PROFILE","_templateObject2","GET_RULES","_templateObject3","ExportPDFForm","setExportSetting","exportSettings","Form","FormGroup","fieldId","label","Text","Checkbox","onChange","isChecked","TextArea","value","scannedProfiles","filter","lastScanned","hasProfiles","isSystemSupported","system","every","supported","compliantSystemsData","systems","hasScannedProfiles","hasOnlyCompliantScannedProfiles","compliant","isSystemCompliant","nonCompliantSystemsData","hasNonCompliantProfiles","isSystemNonCompliant","unsupportedSystemsData","isSystemUnsupported","prepareForExport","reportingSystemIds","map","includes","nonReportingSystemsData","_objectSpread","totalHostCount","compliantSystemCount","nonCompliantSystemCount","unsupportedSystemCount","nonReportingSystemCount","_ref7","arguments","onComplete","onError","fetchSystems","_usePromiseQueue","isLoading","resolve","client","useApolloClient","_useFetchBatched","usePromiseQueue","isResolving","fetchBatched","fetchFunction","total","batchSize","pages","Math","ceil","Array","_","pageIdx","perPage","page","query","fetchResults","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","abrupt","sent","_ref3","edges","_ref4","node","stop","useSystemsFetch","fetchRules","_callee2","_yield$fetchFunction$","_context2","t1","t0","t2","edge","topFailedRules","useFetchRules","_callee3","rules","exportData","_context3","StyleSheet","create","bold","fontWeight","italic","fontStyle","metaTitle","color","marginBottom","backgroundColor","padding","userNotesTitle","sectionTitle","fontSize","subSectionTitle","rows","osMinorVersion","rulesFailed","fixedPercentage","score","Table","withHeader","UnsupportedSystemsTable","ssgFinder","_system$testResultPro","NonReportedSystemsTable","capitalize","str","charAt","toUpperCase","slice","RulesTable","failedRuleRows","rule","identifier","severity","failedCount","PanelItem","props","View","justifyContent","width","paddingRight","SubSection","styles","ComplianceChart","_ref$policy$percentCo","percentCompliant","compliantSystemsChartData","x","y","paletteColors","gold300","compliancePercentage","Chart","legendHeader","chartType","subTitle","colorSchema","ReportPDF","_policy$businessObjec","_policy$testResultHos","testResultHostCount","_policy$compliantHost","compliantHostCount","floor","Fragment","DateFormat","date","Date","type","Section","titleProps","Column","complianceThreshold","businessObjective","withColumn","Panel","ApiClient","options","_classCallCheck","_defineProperty","Accept","this","apiBase","path","authenticate","Promise","onUnauthorised","defaultHeaders","headers","DEFAULT_API_HEADERS","_request","_createClass","key","apiProps","method","_this","_args","callAuthenticate","then","fetch","checkForEmptyResponse","response","checkForErrors","json","catch","finalCatch","_x5","_x6","_x7","apply","promise","errors","reject","_fetch","_x","_x2","_x3","_x4","toString","params","credentials","fullPath","url","URL","window","location","origin","Object","keys","encodeURIComponent","join","search","URLSearchParams","body","JSON","stringify","status","ignore404","responseCloneJson","clone","request","includeAttributes","entity","prop","attributes","newEntity","includePropAndDelete","normalizeData","_Object$values","jsonNormalized","normalize","values","normalizedJson","relationships","entries","forEach","item","_item","_slicedToArray","relationship","relationshipData","_normalizedJson$entit","v","includeRelationship","fetchCollection","apiClient","collection","normalized","get","meta","dependencies","_useState","useState","_useState2","collectionState","setCollectionState","useApi","COMPLIANCE_API_ROOT","include","useEffect","skip","compareAsIntegers","firstString","secondString","parseInt","supportedSsgs","useCollection","majorVersion","minorVersion","_collection","matchingVersion","find","queryExportData","useQueryExportData","dispatchNotification","description","buildPDFPages","usePDFBuilder","exportPDF","ReportDownload","navigate","useNavigate","_useExportSettings","withReporting","pickBy","_value","preparedSettings","setExportSettings","setting","isValid","some","useExportSettings","settingsValid","usePDFExport","exportFileName","toISOString","split","buttonLabel","buttonProps","isDisabled","FallbackButton","Button","actions","DownloadButton","groupName","reportName","fileName","asyncFunction","fallback","onSuccess","onClick","ComplianceModal","isOpen","onClose"],"sourceRoot":""}