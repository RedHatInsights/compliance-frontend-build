{"version":3,"sources":["webpack:///./src/PresentationalComponents/ComplianceEmptyState/ComplianceEmptyState.js","webpack:///./src/PresentationalComponents/ComplianceRemediationButton/ComplianceRemediationButton.js","webpack:///./src/PresentationalComponents/ErrorCard/ErrorCard.js","webpack:///./src/PresentationalComponents/ReduxFormWrappers/ReduxFormWrappers.js","webpack:///./src/PresentationalComponents/RulesTable/Cells.js","webpack:///./src/PresentationalComponents/RulesTable/Columns.js","webpack:///./src/Utilities/hooks/useTableTools/useTableSort.js","webpack:///./src/Utilities/hooks/useTableTools/usePaginate.js","webpack:///./src/Utilities/hooks/useTableTools/Components/NoResultsTable.js","webpack:///./src/Utilities/hooks/useTableTools/useRowsBuilder.js","webpack:///./src/Utilities/hooks/useTableTools/useBulkSelect.js","webpack:///./src/Utilities/hooks/useTableTools/helper.js","webpack:///./src/Utilities/hooks/useTableTools/useItemIdentify.js","webpack:///./src/Utilities/hooks/useTableTools/useExpandable.js","webpack:///./src/Utilities/hooks/useTableTools/useDedicatedAction.js","webpack:///./src/Utilities/hooks/useTableTools/Components/TableToolsTable.js","webpack:///./src/Utilities/hooks/useTableTools/useTableTools.js","webpack:///./src/PresentationalComponents/RulesTable/RuleDetailsRow.js","webpack:///./src/PresentationalComponents/RulesTable/EmptyRows.js","webpack:///./src/PresentationalComponents/RulesTable/Constants.js","webpack:///./src/PresentationalComponents/RulesTable/Filters.js","webpack:///./src/PresentationalComponents/RulesTable/RulesTable.js","webpack:///./src/PresentationalComponents/TabbedRules/OsVersionText.js","webpack:///./src/PresentationalComponents/TabbedRules/ProfileTabContent.js","webpack:///./src/PresentationalComponents/TabbedRules/ruleSelection.js","webpack:///./src/PresentationalComponents/TabbedRules/TabbedRules.js","webpack:///./src/PresentationalComponents/UnsupportedSSGVersion/UnsupportedSSGVersion.js","webpack:///./src/PresentationalComponents/LoadingPoliciesTable/LoadingPoliciesTable.js","webpack:///./src/PresentationalComponents/ErrorPage/ErrorPage.js","webpack:///./src/PresentationalComponents/GreySmallText/GreySmallText.js","webpack:///./src/PresentationalComponents/CheckboxGroup/CheckboxGroup.js","webpack:///./src/PresentationalComponents/ProfileTypeSelect/ProfileTypeSelect.js","webpack:///./src/PresentationalComponents/ComplianceScore/ComplianceScore.js","webpack:///./src/PresentationalComponents/PolicyDetailsContentLoader/PolicyDetailsContentLoader.js","webpack:///./src/PresentationalComponents/ReportDetailsContentLoader/ReportDetailsContentLoader.js","webpack:///./src/PresentationalComponents/PolicyDetailsDescription/PolicyDetailsDescription.js","webpack:///./src/PresentationalComponents/ReportDetailsDescription/ReportDetailsDescription.js","webpack:///./src/PresentationalComponents/ProgressBar/ProgressBar.js","webpack:///./src/PresentationalComponents/TabSwitcher/TabSwitcher.js","webpack:///./src/PresentationalComponents/StateView/StateView.js","webpack:///./src/PresentationalComponents/SystemsCountWarning/SystemsCountWarning.js","webpack:///./src/PresentationalComponents/WarningText/WarningText.js","webpack:///./src/PresentationalComponents/BackgroundLink/BackgroundLink.js","webpack:///./src/PresentationalComponents/BreadcrumbLinkItem/BreadcrumbLinkItem.js","webpack:///./src/PresentationalComponents/ReportsTable/Cells.js","webpack:///./src/PresentationalComponents/ReportsTable/Filters.js","webpack:///./src/PresentationalComponents/ReportsTable/ReportsTable.js","webpack:///./src/Utilities/hooks/useTableSort.js","webpack:///./src/PresentationalComponents/ReportsEmptyState/ReportsEmptyState.js","webpack:///./src/PresentationalComponents/PolicyPopover/PolicyPopover.js","webpack:///./src/PresentationalComponents/PolicyThresholdTooltip/PolicyThresholdTooltip.js","webpack:///./src/PresentationalComponents/PolicyBusinessObjectiveTooltip/PolicyBusinessObjectiveTooltip.js","webpack:///./src/PresentationalComponents/NoResultsTable/NoResultsTable.js","webpack:///./src/PresentationalComponents/PoliciesTable/PoliciesTable.js","webpack:///./src/PresentationalComponents/ProfileThresholdField/ProfileThresholdField.js","webpack:///./src/PresentationalComponents/SupportedSSGVersionsLink/SupportedSSGVersionsLink.js","webpack:///./src/PresentationalComponents/SubPageTitle/SubPageTitle.js","webpack:///./src/PresentationalComponents/NoSystemsTableWithWarning/NoSystemsTableWithWarning.js","webpack:///./src/PresentationalComponents/ConditionalLink/ConditionalLink.js","webpack:///./src/SmartComponents/CreatePolicy/validate.js","webpack:///./src/Utilities/TextHelper.js","webpack:///./src/Utilities/helpers.js","webpack:///./src/Utilities/hooks/useTableTools/FilterConfigBuilder/Helpers.js","webpack:///./src/Utilities/hooks/useTableTools/FilterConfigBuilder/FilterBuilder.js","webpack:///./src/Utilities/hooks/useTableTools/FilterConfigBuilder/ChipBuilder.js","webpack:///./src/Utilities/hooks/useTableTools/FilterConfigBuilder/FilterConfigBuilder.js","webpack:///./src/Utilities/hooks/useTableTools/Components/SelectedFilterSwitch.js","webpack:///./src/Utilities/hooks/useTableTools/useSelectedFilter.js","webpack:///./src/Utilities/hooks/useTableTools/useFilterConfig.js","webpack:///./src/Utilities/ruleHelpers.js"],"names":["QUERY","gql","ComplianceEmptyState","title","mainButton","client","useQuery","fetchPolicy","data","error","loading","Spinner","errorMsg","ErrorCard","message","policiesCount","profiles","totalCount","policyWord","haveWord","Bullseye","EmptyState","EmptyStateIcon","style","fontWeight","color","size","icon","CloudSecurityIcon","Title","headingLevel","EmptyStateBody","TextContent","href","EmptyStatePrimary","EmptyStateSecondaryActions","Button","variant","component","target","rel","propTypes","defaultProps","ApolloClient","link","HttpLink","uri","COMPLIANCE_API_ROOT","credentials","cache","InMemoryCache","ComplianceRemediationButton","profile","system","majorOsVersion","refId","id","split","description","systems","issues","issueIds","map","issue","filter","index","originalIssueIndex","indexOf","Array","from","Set","concat","rule","find","rules","profileRule","remediationAvailable","ruleProfile","supported","compliant","formatRule","props","allSystems","selectedRules","result","forEach","push","length","rulesWithRemediations","ruleObjectsFailed","Promise","all","then","uniqIssuesBySystem","flatten","dataProvider","flatMap","some","addNotification","this","RemediationButton","isDisabled","notEmptyData","onRemediationCreated","getNotification","React","name","severity","rationale","identifier","references","connect","dispatch","notification","ReduxFormTextInput","field","TextInput","value","input","defaultValue","onChange","ReduxFormTextArea","TextArea","ruleProps","Rule","Text","TextVariants","label","Policy","HighSeverity","className","MediumSeverity","LowSeverityIcon","width","height","viewBox","role","verticalAlign","xmlns","d","fill","fillRule","LowSeverity","UnknownSeverity","Severity","high","medium","low","toLowerCase","Passed","Ansible","Name","sortByProp","renderFunc","renderComponent","sortByFunction","PolicyCell","transforms","fitContent","sortByArray","SeverityCell","PassedCell","original","tooltip","AnsibleCell","addSortableTransform","columns","column","isSortable","uniq","sortable","columnOffset","options","onSelect","detailsComponent","useState","direction","sortBy","setSortBy","onSort","_","sorter","items","orderByArray","orderArrayByProp","tableProps","cells","perPage","enablePagination","pagination","page","paginationState","setPaginationState","setPagination","newState","onSetPage","onPerPageSelect","paginator","start","end","slice","setPage","nextPage","toolbarProps","NoResultsTable","kind","EmptyTable","EmptyStateVariant","emptyRows","colSpan","columnProp","key","primeItem","item","transformers","newItem","transformer","applyTransformers","buildRow","rowTransformer","idx","row","rowProps","itemId","undefined","itemRow","EmptyRowsComponent","transformedItems","filteredItems","sortedItems","paginatedItems","rows","v","itemCount","allItemsIncluded","selection","includes","selectOrUnselect","selected","itemIds","propItems","preselected","enableBulkSelect","selectedIds","setSelectedItemIds","selectItemTransformer","total","selectedItems","filterSelected","selectedItemsTotal","noneSelected","filteredTotal","filtered","allFiltertedSelected","paginatedTotal","currentPageSelected","checkCurrentPageSelected","checked","itemsTotal","checkboxState","allCount","allSelected","onSelectCallback","func","newSelectedItemsIds","selectNone","selectItems","arrayA","arrayB","unselectItems","selectPage","currentPageIds","setPageMemo","useMemo","useEffect","rowId","canSelectAll","clearSelection","bulkSelect","toggleProps","children","onClick","currentFilteredIds","getIdProp","idProp","identify","itemDetailsRow","DetailsComponent","parent","childRowForRule","enableExpanbale","openItems","setOpenItems","_columns","rowIndex","isOpen","onCollapse","_event","_index","_isOpen","enableDedicatedAction","dedicatedAction","DedicatedActionOption","AdditionalDedicatedActions","TableToolsTable","filters","toolbarPropsOption","tablePropsOption","identifiedItems","useItemIdentify","useTableSort","sortableTableProps","usePaginate","pagintionToolbarProps","useFilterConfig","conditionalFilterProps","selectedFilterToolbarProps","useExpandable","openItem","expandableProps","useBulkSelect","selectItem","bulkSelectToolbarProps","bulkSelectTableProps","dedicatedActionToolbarProps","useDedicatedAction","additionalDedicatedActions","useRowsBuilder","rowBuilderToolbarProps","rowBuilderTableProps","useTableTools","PrimaryToolbar","Table","TableHeader","TableBody","TableToolbar","isFooter","Pagination","PaginationVariant","sortByProperty","isRequired","RuleDetailsRow","marginTop","Stack","StackItem","marginBottom","isFilled","Grid","GridItem","span","ident","reduce","prev","next","ref","HIGH_SEVERITY","MEDIUM_SEVERITY","LOW_SEVERITY","UNKNOWN_SEVERITY","filterRulesWithAllValues","values","valueCheck","anyFilterApply","filteredRules","BASE_FILTER_CONFIGURATION","type","conditionalFilterType","reference","PASS_FILTER_CONFIG","REMEDIATION_AVAILABLE_FILTER_CONFIG","showPassFailFilter","policies","remediationAvailableFilter","config","policy","policiesFilterConfig","RulesTable","profileRules","Columns","remediationsEnabled","selectedFilter","handleSelect","selectedRefIds","hidePassed","rulesTableProps","toRulesArrayWithProfile","c","aria-label","filterConfig","buildFilterConfig","activeFilters","passed","selectable","testResultProfiles","newOsMinorVersion","osMajorVersion","osMinorVersion","ProfileSystemCount","count","Badge","isRead","pluralize","SSGVersionText","ssgVersion","Popover","position","bodyContent","SSGPopoverBody","footerContent","cursor","fontSize","BENCHMARK_QUERY","ProfileTabContent","systemCount","selectedRuleRefIds","variables","benchmark","skip","stateValues","stateKey","matchesSelectionItem","selectionItem","selectedRuleRefIdsForTab","tabSelection","ruleRefIds","profilesWithRulesToSelection","prevSelection","only","additionalSelection","foundSelection","console","tabsDataToOsMinorMap","tabsData","osMinorMap","extendProfilesByOsMinor","eventKey","getDefaultTab","defaultTab","firstTab","TabbedRules","setSelectedRuleRefIds","level","profileSelectedRuleRefIds","filteredSelection","Tab","supportedConfigsLink","UNSUPPORTED_PLURAL_MESSAGE","WarningWithPopover","maxWidth","headerContent","WarningWithTooltip","content","Tooltip","TooltipOrPopover","tooltipProps","Component","componentProps","popover","showHeader","showPopupHeader","messageVariant","UnsupportedSSGVersion","showWarningIcon","showHelpIcon","tooltipText","iconProps","defaultStyle","display","ouiaId","RowLoader","ErrorPage","networkError","statusCode","window","insights","chrome","auth","logout","NotAuthorized","serviceName","InvalidObject","history","goBack","GreySmallText","CheckboxFieldArray","inputValue","defaultChecked","Checkbox","isChecked","arr","splice","handleChange","InUseProfileLabel","Label","lineHeight","ProfileTypeSelect","hasGutter","disabled","rowSpan","Field","JSON","stringify","Truncate","lines","CompliantIcon","rulesPassed","rulesFailed","complianceScoreString","fixedPercentage","score","speed","backgroundcolor","foregroundcolor","x","y","rx","ry","primaryColor","secondaryColor","cx","cy","r","PolicyDetailsDescription","Card","CardHeader","CardBody","complianceThreshold","businessObjective","text","linkifyHtml","inline","policyType","PropTypes","Dt","TextListItem","TextListItemVariants","Dd","PolicyDescription","TextList","TextListVariants","Link","to","version","ReportDetailsDescription","ProgressBar","percent","failed","ProgressVariant","Progress","ContentTab","useAnchorLevels","defaultAnchor","levels","useAnchor","currentAnchor","RoutedTabSwitcher","tab","RoutedTabs","useHistory","useLocation","pathname","state","Tabs","e","preventDefault","tabToActivate","replace","tabAnchor","hash","join","activeKey","StateViewPart","StateView","child","StateViewWithError","WARNING_TEXT","WithOptionalToolTip","showTooltip","TooltipPosition","SystemsCountWarning","WarningText","BackgroundLink","desiredState","backgroundLocation","background","RouterLink","BreadcrumbLinkItem","BreadcrumbItem","marginRight","OperatingSystem","unsupportedHostCount","CompliantSystems","testResultHostCount","compliantHostCount","measureLocation","marginLeft","policyNameFilter","lowerCaseValue","policyTypeFilter","policyTypes","operatingSystemFilter","operatingSystems","operatingSystem","policyComplianceFilter","compliantHostsPercent","Math","round","min","max","i","ReportsTable","conditionalFilter","array","tableSort","sorted","sortedProfiles","PolicyPopover","isInline","Fragment","PolicyNameCell","FILTER_CONFIGURATION","PoliciesTable","FilterConfigBuilder","filterConfigBuilder","getChipBuilder","getFilterBuilder","itemsPerPage","changePage","setState","applyFilterToObjectArray","chips","removeFilterWithChip","initialDefaultState","clearAll","clearAllFilter","deleteFilter","policyId","location","filteredPolicies","filterChips","chipBuilder","chipsFor","totalHostCount","policiesToRows","paginatedPolicies","buildConfiguration","onFilterUpdate","hideLabel","dropDirection","setPerPage","activeFiltersConfig","onDelete","onFilterDelete","ToolbarItem","actionResolver","withRouter","ProfileThresholdField","validThreshold","thresholdValid","previousThreshold","threshold","FormGroup","fieldId","validated","helperTextInvalid","helperText","labelIcon","handleThresholdChange","reduxForm","form","destroyOnUnmount","forceUnregisterOnUnmount","SubPageTitle","additionalProps","validateBenchmarkPage","validateDetailsPage","validateRulesPage","validateSystemsPage","systemIds","fixed","withPercent","fixedValue","toFixed","singular","plural","collection","sortingByProp","propName","order","objA","objB","propA","propB","_data","_id","entity","getSortable","property","objects","sort","a","b","String","localeCompare","objectArray","orderProp","orderArray","sortedObjectArray","orderKey","reverse","getProperty","obj","path","fallback","parts","shift","camelCase","string","trim","toUpperCase","substring","stringToId","configItem","filterString","filterStringArray","moreThanTwo","f","fl","fs","buildFilterFilterString","combineFilterStrings","findWithString","category","currentValue","labelForValue","categoryConfig","Object","keys","groupValue","group","itemValue","getCategoryForLabel","textFilterChip","checkboxFilterChip","radioFilterChip","groupFilterChip","chipFor","defaultPlaceholder","ChipBuilder","filterBuilder","FilterBuilder","handler","placeholder","filterValues","event","selectedValues","groups","subItem","toTextFilterConfig","toCheckboxFilterConfig","toRadioFilterConfig","toGroupedFilterConfig","states","initConfig","toFilterConfigItem","default","defaultStates","initialState","filterStateName","defaultValueForFilter","query","results","parentValue","info","getItemByLabelOrValue","filteredObjects","currentState","chipItem","newGroupState","chipCategory","chipLabel","chipValue","stateProp","newFilterState","removeFilterFromGroupFilterState","removeFilterFromFilterState","SelectedFilterSwitch","setActiveFilter","Switch","enableSelectedFilter","filterItem","enableFilters","initialActiveFilters","setActiveFilters","addConfigItem","useSelectedFilter","selectFilterItem","activeFilterValues","filterConfigWithSelected","buildFilterString","profilesRulesFailed","profilesRulesPassed","systemRulesFailed","systemSupportedByProfiles","acc","systemsWithRuleObjectsFailed","profilesWithRules","profileWithRules","parse"],"mappings":"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","file":"js/233.7a257960d31e5db32657.js","sourcesContent":["import React from 'react';\nimport propTypes from 'prop-types';\nimport { ApolloClient, HttpLink, InMemoryCache } from 'apollo-boost';\nimport {\n    Title,\n    TextContent,\n    Button,\n    Bullseye,\n    EmptyState,\n    EmptyStateBody,\n    EmptyStatePrimary,\n    EmptyStateSecondaryActions,\n    EmptyStateIcon\n} from '@patternfly/react-core';\nimport { CloudSecurityIcon } from '@patternfly/react-icons';\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/client';\nimport { Spinner } from '@redhat-cloud-services/frontend-components/Spinner';\nimport { ErrorCard } from '../ErrorCard/ErrorCard';\nconst COMPLIANCE_API_ROOT = '/api/compliance';\n\nconst QUERY = gql`\n{\n    profiles(search: \"external = false and canonical = false\") {\n        totalCount\n    }\n}\n`;\n\nconst ComplianceEmptyState = ({ title, mainButton, client }) => {\n    let { data, error, loading } = useQuery(QUERY, { fetchPolicy: 'network-only', client });\n\n    if (loading) { return <Spinner/>; }\n\n    if (error) {\n        const errorMsg = `Oops! Error loading System data: ${error}`;\n        return <ErrorCard message={errorMsg} />;\n    }\n\n    const policiesCount = data.profiles.totalCount;\n\n    const policyWord = policiesCount > 1 ? 'policies' : 'policy';\n    const haveWord = policiesCount > 1 ? 'have' : 'has';\n\n    return <Bullseye>\n        <EmptyState>\n            <EmptyStateIcon style={{ fontWeight: '500', color: 'var(--pf-global--primary-color--100)' }}\n                size=\"xl\" title=\"Compliance\" icon={CloudSecurityIcon} />\n            <Title headingLevel=\"h1\" size=\"lg\">{ title }</Title>\n            <br/>\n            <EmptyStateBody>\n                { policiesCount > 0 &&\n                    <TextContent>\n                        <a\n                            href='insights/compliance/scappolicies'\n                        >\n                            {policiesCount} {policyWord}\n                        </a> {haveWord} been created but {haveWord} no reports.\n                    </TextContent> }\n                <TextContent>\n                    The Compliance service uses SCAP policies to track your organization&#39;s adherence to\n                    compliance requirements.\n                </TextContent>\n                <TextContent>\n                    Get started by adding a policy, or read documentation about how to connect OpenSCAP to the\n                    Compliance service.\n                </TextContent>\n            </EmptyStateBody>\n            <EmptyStatePrimary>\n                { mainButton }\n            </EmptyStatePrimary>\n            <EmptyStateSecondaryActions>\n                <Button variant='link' component='a' target='_blank' rel='noopener noreferrer'\n                    href={ `https://access.redhat.com/documentation/en-us/red_hat_insights/` +\n                           `2020-04/html/assessing_and_monitoring_security_policy_compliance_of_rhel_systems/index` } >\n                    Learn about OpenSCAP and Compliance\n                </Button>\n            </EmptyStateSecondaryActions>\n        </EmptyState>\n    </Bullseye>;\n};\n\nComplianceEmptyState.propTypes = {\n    title: propTypes.string,\n    mainButton: propTypes.object,\n    client: propTypes.object\n};\n\nComplianceEmptyState.defaultProps = {\n    title: 'No policies',\n    mainButton: <Button\n        variant=\"primary\"\n        component=\"a\"\n        href=\"/insights/compliance/scappolicies\">\n        Create new policy\n    </Button>,\n    client: new ApolloClient({\n        link: new HttpLink({\n            uri: COMPLIANCE_API_ROOT + '/graphql',\n            credentials: 'include'\n        }),\n        cache: new InMemoryCache()\n    })\n};\n\nexport default ComplianceEmptyState;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport RemediationButton from '@redhat-cloud-services/frontend-components-remediations/RemediationButton';\nimport flatten from 'lodash/flatten';\nimport { connect } from 'react-redux';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport { AnsibeTowerIcon } from '@patternfly/react-icons';\n\nclass ComplianceRemediationButton extends React.Component {\n    formatRule = ({ title, refId }, profile, system, majorOsVersion) => ({\n        id: `ssg:rhel${majorOsVersion}|${profile.split('xccdf_org.ssgproject.')[1]}|${refId}`,\n        description: title,\n        systems: [\n            system\n        ]\n    })\n\n    uniqIssuesBySystem = (issues) => {\n        const issueIds = issues.map((issue) => issue.id);\n        return issues.filter((issue, index) => {\n            const originalIssueIndex = issueIds.indexOf(issue.id);\n            return (originalIssueIndex === index) ? true :\n                (issues[originalIssueIndex].systems = Array.from(new Set(\n                    issues[originalIssueIndex].systems.concat(issue.systems)))) && false;\n        });\n    }\n\n    ruleProfile = (rule, system) => (\n        system.profiles.find(profile => profile.rules.find(profileRule => rule.refId === profileRule.refId))\n    )\n\n    rulesWithRemediations = (rules, system) => {\n        return rules.filter((rule) => (\n            rule.remediationAvailable &&\n            this.ruleProfile(rule, system).supported &&\n            rule.compliant === false\n        )).map((rule) => {\n            const profile = this.ruleProfile(rule, system);\n            return this.formatRule(\n                rule, profile.refId, system.id, profile.majorOsVersion\n            );\n        });\n    }\n\n    dataProvider = () => {\n        const { allSystems, selectedRules } = this.props;\n        const result = { systems: [], issues: [] };\n\n        allSystems.filter((system) => (system.supported)).forEach(async (system) => {\n            result.systems.push(system.id);\n\n            if (selectedRules.length !== 0) {\n                result.issues.push(this.rulesWithRemediations(selectedRules, system));\n            } else {\n                result.issues.push(this.rulesWithRemediations(system.ruleObjectsFailed, system));\n            }\n        });\n\n        return Promise.all(result.issues).then(issues => {\n            result.issues = this.uniqIssuesBySystem(flatten(issues));\n            return result;\n        });\n    }\n\n    notEmptyData = async () => {\n        const data = await this.dataProvider();\n        return data.issues.length > 0 && data.systems.length > 0;\n    }\n\n    remediationAvailable = () => {\n        const { allSystems, selectedRules } = this.props;\n        let rules = selectedRules.length ? selectedRules : allSystems.flatMap((system) => system.ruleObjectsFailed);\n\n        return rules.some((rule) => (\n            rule.remediationAvailable &&\n            (\n                rule.profiles?.some((profile) => profile.supported) ||\n                allSystems.some((system) => this.ruleProfile(rule, system).supported)\n            ) &&\n            rule.compliant === false\n        ));\n    }\n\n    render() {\n        const { addNotification } = this.props;\n\n        return (\n            <React.Fragment>\n                <RemediationButton\n                    isDisabled={ !(this.remediationAvailable() && this.notEmptyData()) }\n                    onRemediationCreated={ result => addNotification(result.getNotification()) }\n                    dataProvider={ this.dataProvider }>\n                    <AnsibeTowerIcon size='sm' color='var(--pf-c-button--m-primary--Color)' />\n                    &nbsp;Remediate\n                </RemediationButton>\n            </React.Fragment>\n        );\n    }\n}\n\nComplianceRemediationButton.propTypes = {\n    selectedRules: propTypes.array,\n    allSystems: propTypes.arrayOf(propTypes.shape({\n        id: propTypes.string,\n        name: propTypes.string,\n        supported: propTypes.bool.isRequired,\n        profiles: propTypes.arrayOf(propTypes.shape({\n            refId: propTypes.string,\n            name: propTypes.string,\n            rules: propTypes.arrayOf(propTypes.shape({\n                title: propTypes.string,\n                severity: propTypes.string,\n                rationale: propTypes.string,\n                refId: propTypes.string,\n                description: propTypes.string,\n                compliant: propTypes.bool,\n                identifier: propTypes.string,\n                references: propTypes.string\n            }))\n        }))\n    })),\n    addNotification: propTypes.func\n};\n\nComplianceRemediationButton.defaultProps = {\n    allSystems: []\n};\n\nexport default connect(\n    () => ({}),\n    dispatch => ({\n        addNotification: notification => dispatch(addNotification(notification))\n    })\n)(ComplianceRemediationButton);\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport {\n    Card,\n    CardHeader,\n    CardBody\n} from '@patternfly/react-core';\nimport { NotEqualIcon } from '@patternfly/react-icons';\n\nconst ErrorCard = ({ errorMsg }) => (\n    <Card className=\"ins-error-card\">\n        <CardHeader>\n            <NotEqualIcon />\n        </CardHeader>\n        <CardBody>\n            <div>{ errorMsg }</div>\n        </CardBody>\n    </Card>\n);\n\nErrorCard.propTypes = {\n    errorMsg: propTypes.string\n};\n\nexport default ErrorCard;\n","import React from 'react';\nimport { rawComponents } from '@data-driven-forms/pf4-component-mapper';\nimport { TextInput, TextArea } from '@patternfly/react-core';\n\nexport const ReduxFormTextInput = field => (\n    <TextInput\n        value={field.input.value || field.defaultValue}\n        onChange={field.input.onChange}\n        {...field} />\n);\n\nexport const ReduxFormTextArea = field => (\n    <TextArea\n        value={field.input.value || field.defaultValue}\n        onChange={field.input.onChange}\n        {...field} />\n);\n\nexport const ReduxFormCreatableSelectInput = field => (\n    <rawComponents.RawSelect selectVariant=\"createable\"\n        value={field.selected}\n        onChange={field.input.onChange}\n        {...field} />\n);\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Text, TextVariants, TextContent } from '@patternfly/react-core';\nimport {\n    CheckCircleIcon, ExclamationCircleIcon, ExclamationTriangleIcon, QuestionCircleIcon\n} from '@patternfly/react-icons';\n\nconst ruleProps = {\n    title: propTypes.string,\n    identifier: propTypes.object,\n    profile: propTypes.object,\n    compliant: propTypes.bool,\n    remediationAvailable: propTypes.bool,\n    severity: propTypes.string\n};\n\nexport const Rule = ({ title, identifier }) => (\n    <TextContent>\n        { title }\n        { identifier ?\n            <Text component={ TextVariants.small }>{ identifier.label }</Text> : '' }\n    </TextContent>\n);\nRule.propTypes = ruleProps;\n\nexport const Policy = ({ profile }) => (\n    profile.name\n);\nPolicy.propTypes = ruleProps;\n\nexport const HighSeverity = () => (\n    <span>\n        <ExclamationCircleIcon className='ins-u-failed'/> High\n    </span>\n);\n\nexport const MediumSeverity = () => (\n    <span>\n        <ExclamationTriangleIcon className='ins-u-warning'/> Medium\n    </span>\n);\n\nexport const LowSeverityIcon = () => (\n    <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 18 18\" role=\"img\" style={ { verticalAlign: '-0.125em' } } xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M2 0h14a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2zm6.67 10.46a1.67 1.67 0 1 0 0 3.338 1.67 1.67 0 0 0 0-3.338zm-1.586-6l.27 4.935a.435.435 0 0 0 .434.411H9.55c.232 0 .422-.18.435-.411l.27-4.936A.435.435 0 0 0 9.818 4h-2.3c-.25 0-.448.21-.435.46z\" fill=\"#3A9CA6\" fillRule=\"evenodd\"/></svg> // eslint-disable-line\n);\n\nexport const LowSeverity = () => (\n    <span>\n        <LowSeverityIcon /> Low\n    </span>\n);\n\nexport const UnknownSeverity = () => (\n    <span>\n        <QuestionCircleIcon /> Unknown\n    </span>\n);\n\nexport const Severity = ({ severity }) => (\n    {\n        high: <HighSeverity />,\n        medium: <MediumSeverity />,\n        low: <LowSeverity />\n    }[severity?.toLowerCase()] || <UnknownSeverity />\n);\nSeverity.propTypes = ruleProps;\n\nexport const Passed = ({ compliant }) => (\n    compliant ?\n        <CheckCircleIcon className='ins-u-passed' /> :\n        <ExclamationCircleIcon className='ins-u-failed' />\n);\nPassed.propTypes = ruleProps;\n\nexport const Ansible = ({ remediationAvailable }) => (\n    remediationAvailable ? <CheckCircleIcon className='ins-u-passed' /> : 'No'\n);\nAnsible.propTypes = ruleProps;\n","import React from 'react';\nimport { fitContent } from '@patternfly/react-table';\nimport { AnsibeTowerIcon } from '@patternfly/react-icons';\nimport { renderComponent } from 'Utilities/helpers';\nimport {\n    Rule, Policy as PolicyCell, Severity as SeverityCell, Passed as PassedCell, Ansible as AnsibleCell\n} from './Cells';\n\nexport const Name = {\n    title: 'Name',\n    sortByProp: 'title',\n    renderFunc: renderComponent(Rule)\n};\n\nexport const Policy = {\n    title: 'Policy',\n    sortByFunction: (rule) => (rule?.profile?.name),\n    renderFunc: renderComponent(PolicyCell)\n};\n\nexport const Severity = {\n    title: 'Severity',\n    sortByProp: 'severity',\n    transforms: [fitContent],\n    sortByArray: ['high', 'medium', 'low', 'unknown'],\n    renderFunc: renderComponent(SeverityCell)\n};\n\nexport const Passed = {\n    title: 'Passed',\n    sortByProp: 'compliant',\n    renderFunc: renderComponent(PassedCell)\n};\n\nexport const Ansible = {\n    title: <span><AnsibeTowerIcon /> Ansible</span>,\n    original: 'Ansible',\n    props: {\n        tooltip: 'Ansible'\n    },\n    transforms: [fitContent],\n    sortByProp: 'remediationAvailable',\n    renderFunc: renderComponent(AnsibleCell)\n};\n","import { useState } from 'react';\nimport { sortable } from '@patternfly/react-table';\nimport { orderArrayByProp, orderByArray, uniq } from 'Utilities/helpers';\n\nconst isSortable = (column) => (\n    column.sortByProp || column.sortByFunction\n);\n\nconst addSortableTransform = (columns) => (\n    columns.map((column) => ({\n        ...column,\n        ...isSortable(column) ? {\n            transforms: uniq([\n                ...(column?.transforms || []),\n                sortable\n            ])\n        } : {}\n    }))\n);\n\nconst columnOffset = (options = {}) => (\n    (typeof options.onSelect === 'function') +\n    (typeof options.detailsComponent  !== 'undefined')\n);\n\nconst useTableSort = (columns, options = {}) => {\n    const [sortBy, setSortBy] = useState({\n        index: 0,\n        direction: 'desc'\n    });\n    const onSort = (_, index, direction) => (\n        setSortBy({\n            index,\n            direction\n        })\n    );\n\n    return {\n        sorter: (items) => {\n            const column = columns[sortBy.index - columnOffset(options)];\n            return column?.sortByArray ? orderByArray(\n                items, column?.sortByProp, column?.sortByArray, sortBy.direction\n            ) : orderArrayByProp(\n                (column?.sortByProp || column?.sortByFunction), items, sortBy.direction\n            );\n        },\n        tableProps: {\n            onSort,\n            sortBy,\n            cells: addSortableTransform(columns)\n        }\n    };\n};\n\nexport default useTableSort;\n","import { useState } from 'react';\n\nconst usePaginate = (options = {}) => {\n    const { perPage = 10 } = options;\n    const enablePagination = options?.pagination !== false;\n\n    const [paginationState, setPaginationState] = useState({\n        perPage,\n        page: 1\n    });\n    const setPagination = (newState) => (\n        setPaginationState({\n            ...paginationState,\n            ...newState\n        })\n    );\n\n    const onSetPage = (_, page) => (\n        setPagination({ ...paginationState, page })\n    );\n\n    const onPerPageSelect = (_, perPage) => (\n        setPagination({ page: 1, perPage })\n    );\n\n    const paginator = (items) => {\n        const { page, perPage } = paginationState;\n        const start = (page - 1) * perPage;\n        const end = start + perPage;\n\n        return items.slice(start, end);\n    };\n\n    const setPage = (page) => {\n        const nextPage = page < 0 ? paginationState.page + page : page;\n        setPagination({\n            page: nextPage > 0 ? nextPage : 1\n        });\n    };\n\n    return enablePagination ? {\n        paginator,\n        setPage,\n        toolbarProps: {\n            pagination: {\n                ...paginationState,\n                onSetPage,\n                onPerPageSelect\n            }\n        }\n    } : {};\n};\n\nexport default usePaginate;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport {\n    Bullseye, EmptyState, EmptyStateBody, EmptyStateVariant, Title\n} from '@patternfly/react-core';\nimport EmptyTable from '@redhat-cloud-services/frontend-components/EmptyTable';\n\nexport const NoResultsTable = ({ kind = 'results' }) => (\n    <EmptyTable>\n        <Bullseye>\n            <EmptyState variant={ EmptyStateVariant.full }>\n                <Title headingLevel=\"h5\" size=\"lg\">\n                    No matching { kind } found\n                </Title>\n                <EmptyStateBody>\n                    This filter criteria matches no { kind }.<br />\n                    Try changing your filter settings.\n                </EmptyStateBody>\n            </EmptyState>\n        </Bullseye>\n    </EmptyTable>\n);\n\nNoResultsTable.propTypes = {\n    kind: propTypes.string\n};\n\nexport const emptyRows = [{\n    cells: [\n        {\n            title: () => (<NoResultsTable />),  // eslint-disable-line\n            props: {\n                colSpan: 3\n            }\n        }\n    ]\n}];\n\nexport default NoResultsTable;\n","import { emptyRows } from './Components/NoResultsTable';\n\nconst columnProp = (column) => (\n    column.key || column.original?.toLowerCase() || column.title?.toLowerCase()\n);\n\nconst itemRow = (item, columns) => ({\n    ...item.rowProps,\n    itemId: item.itemId,\n    cells: columns.map((column) => ({\n        title: column.renderFunc ?\n            column.renderFunc(undefined, undefined, item) : item[columnProp(column)]\n    }))\n});\n\nconst primeItem = (item, transformers) => {\n    let newItem = item;\n\n    transformers.forEach((transformer) => {\n        if (transformer) {\n            newItem = transformer(newItem);\n        }\n    });\n\n    return newItem;\n};\n\nconst applyTransformers = (items, transformers = []) => (\n    items.map((item) => (\n        primeItem(item, transformers)\n    ))\n);\n\nconst buildRow = (item, columns, rowTransformer, idx) => (\n    rowTransformer.flatMap((transformer) => {\n        const row = itemRow(item, columns);\n        return transformer ? transformer(\n            row, item, columns, idx\n        ) : row;\n    })\n);\n\nconst useRowsBuilder = (items, columns, options = {}) => {\n    const { transformer = [], rowTransformer = [] } = options;\n    const EmptyRowsComponent = options.emptyRows || emptyRows;\n    const transformedItems = transformer ?\n        applyTransformers(items, transformer) : items;\n\n    const filteredItems = options?.filter ?\n        options.filter(transformedItems) : transformedItems;\n\n    const sortedItems = options?.sorter ?\n        options.sorter(filteredItems) : filteredItems;\n\n    const paginatedItems = options?.paginator ?\n        options?.paginator(sortedItems) : sortedItems;\n\n    const rows = paginatedItems.length > 0 ? paginatedItems.flatMap((item, idx) => (\n        buildRow(item, columns, rowTransformer, idx)\n    )).filter((v) => (!!v)) : EmptyRowsComponent;\n\n    const pagination = options?.pagination ? {\n        ...options.pagination,\n        itemCount: filteredItems.length\n    } : undefined ;\n\n    return {\n        tableProps: {\n            rows\n        },\n        toolbarProps: {\n            pagination\n        }\n    };\n};\n\nexport default useRowsBuilder;\n","import { useEffect, useMemo, useState } from 'react';\nimport { filterSelected } from './helper';\n\nconst compileTitle = (itemsTotal, titleOption) => {\n    if (typeof titleOption === 'string') {\n        return titleOption;\n    } else if (typeof titleOption === 'function') {\n        return titleOption(itemsTotal);\n    } else {\n        return `${ itemsTotal } selected`;\n    }\n};\n\nconst checkboxState = (selectedItemsTotal, itemsTotal) => {\n    if (selectedItemsTotal === 0) {\n        return false;\n    } else if (selectedItemsTotal === itemsTotal) {\n        return true;\n    } else {\n        return null;\n    }\n};\n\nconst allItemsIncluded = (items, selection = []) => (\n    items.filter((item) => (\n        selection.includes(item)\n    )).length === items.length\n);\n\nconst selectOrUnselect = (selected) => (\n    selected ? 'Unselect' : 'Select'\n);\n\nconst checkCurrentPageSelected = (items, selectedItems) => {\n    if (items.length === 0) {\n        return false;\n    } else {\n        return allItemsIncluded(items, selectedItems);\n    }\n};\n\nconst itemIds = (items) => (items.map((item) => (item.itemId)));\nconst mergeArraysUniqly = (arrayA, arrayB) => (\n    Array.from(new Set([...arrayA, ...arrayB]))\n);\n\nconst useBulkSelect = ({\n    onSelect,\n    items: propItems,\n    filter,\n    paginator,\n    sorter,\n    preselected,\n    setPage\n}) => {\n    const enableBulkSelect = !!onSelect;\n\n    const [selectedIds, setSelectedItemIds] = useState(preselected || []);\n    const selectItemTransformer = (item) => ({\n        ...item,\n        rowProps: {\n            selected: (selectedIds || []).includes(item.itemId)\n        }\n    });\n\n    const items = (sorter ? sorter(propItems) : propItems).map(selectItemTransformer);\n    const total = items.length;\n\n    const selectedItems = filterSelected(items, selectedIds);\n    const selectedItemsTotal = selectedItems.length;\n    const noneSelected = selectedItemsTotal === 0;\n\n    const filteredItems = filter ? filter(items) : items;\n    const filteredTotal = filteredItems.length;\n    const filtered = filteredTotal !== total;\n    const allFiltertedSelected = selectedIds?.length > 0 ?\n        allItemsIncluded(itemIds(filteredItems), selectedIds) : false;\n\n    const paginatedItems = paginator ? paginator(filteredItems) : filteredItems;\n    const paginatedTotal = paginatedItems.length;\n\n    const currentPageSelected = checkCurrentPageSelected(\n        itemIds(paginatedItems), selectedIds\n    );\n\n    const title = compileTitle(selectedItemsTotal);\n    const checked = checkboxState(selectedItemsTotal, total);\n    const allCount = filtered ? filteredTotal : total;\n    const allSelected = selectedItemsTotal === allCount;\n    const isDisabled = allCount === 0;\n\n    const onSelectCallback = (func) => {\n        const newSelectedItemsIds = func();\n        setSelectedItemIds(newSelectedItemsIds);\n        onSelect && onSelect(newSelectedItemsIds);\n    };\n\n    const selectNone = () => onSelectCallback(() =>([]));\n\n    const selectOne = (_, selected, key, row) => onSelectCallback(() => {\n        const newItemIds = selected ?\n            [...selectedIds, row.itemId] :\n            selectedIds.filter((rowId) => (rowId !== row.itemId));\n\n        return newItemIds;\n    });\n\n    const selectItems = (itemIds) => (\n        mergeArraysUniqly(selectedIds, itemIds)\n    );\n\n    const unselectItems = (itemIds) => (\n        selectedIds.filter((itemId) => (\n            !itemIds.includes(itemId)\n        ))\n    );\n\n    const selectPage = () => onSelectCallback(() => {\n        const currentPageIds = itemIds(paginatedItems);\n        return currentPageSelected ?\n            unselectItems(currentPageIds) : selectItems(currentPageIds);\n    });\n\n    const selectFiltered = () => onSelectCallback(() => {\n        const currentFilteredIds = itemIds(filteredItems);\n        return allFiltertedSelected ?\n            unselectItems(currentFilteredIds) : selectItems(currentFilteredIds);\n    });\n\n    const selectAll = () => onSelectCallback(() => (\n        itemIds(items)\n    ));\n\n    const selectFilteredOrAll = () => (\n        filtered ? selectFiltered() : selectAll()\n    );\n\n    const selectAllHandler = () => (\n        allSelected ? selectNone() : selectFilteredOrAll()\n    );\n    const setPageMemo = useMemo(() => (\n        setPage\n    ), []);\n\n    useEffect(() => {\n        if (paginatedTotal === 0) {\n            setPageMemo(-1);\n        }\n    }, [paginatedTotal, setPageMemo]);\n\n    useEffect(() => {\n        setSelectedItemIds(preselected);\n    }, [preselected]);\n\n    return enableBulkSelect ? {\n        transformer: selectItemTransformer,\n        tableProps: {\n            onSelect: paginatedTotal > 0 ? selectOne : undefined,\n            canSelectAll: false\n        },\n        selected: selectedIds,\n        selectedItems,\n        clearSelection: selectNone,\n        toolbarProps: {\n            bulkSelect: {\n                toggleProps: { children: [title] },\n                isDisabled,\n                items: [{\n                    title: 'Select none',\n                    onClick: selectNone,\n                    props: {\n                        isDisabled: noneSelected\n                    }\n                }, {\n                    title: `${ selectOrUnselect(currentPageSelected) } page (${ paginatedTotal } items)`,\n                    onClick: selectPage\n                }, {\n                    title: `${ selectOrUnselect(filtered ? allFiltertedSelected : allSelected) } all (${ allCount } items)`,\n                    onClick: selectAllHandler\n                }],\n                checked,\n                onSelect: !isDisabled ? () => selectPage() : undefined\n            }\n        }\n    } : {};\n};\n\nexport default useBulkSelect;\n","export const filterSelected = (items, selectedIds = []) => (\n    items.filter((item) => (\n        selectedIds.includes(item.itemId)\n    ))\n);\n","const getIdProp = (item, idProp = 'id') => (item[idProp]);\n\nconst identify = (item, identifier) => {\n    if (typeof identifier === 'string') {\n        return {\n            ...item,\n            itemId: getIdProp(item, identifier)\n        };\n    } else {\n        return {\n            ...item,\n            itemId: identifier(item)\n        };\n    }\n};\n\nexport const useItemIdentify = (items, options = {}) => {\n    const identifier = options?.identifier || getIdProp;\n\n    return items.map((item) => identify(item, identifier));\n};\n\nexport default useItemIdentify;\n","import React, { useState } from 'react';\n\nconst childRowForRule = (item, idx, DetailsComponent) => ({\n    parent: idx * 2,\n    cells: [\n        { title: <DetailsComponent rule={ item } key={ 'item-' + item.rowId } /> }\n    ]\n});\n\nconst itemDetailsRow = (item, idx, options) => (\n    (typeof(options?.detailsComponent) !== 'undefined') && childRowForRule(item, idx, options.detailsComponent)\n);\n\nconst useExpandable = (options) => {\n    const enableExpanbale = !!options.detailsComponent;\n    const [openItems, setOpenItems] = useState([]);\n    const onCollapse = (_event, _index, _isOpen, row) => {\n        if (openItems.includes(row.itemId)) {\n            setOpenItems(openItems.filter((itemId) => (itemId !== row.itemId)));\n        } else {\n            setOpenItems([...openItems, row.itemId]);\n        }\n    };\n\n    const openItem = (row, item, _columns, rowIndex) => {\n        const isOpen = openItems.includes(item.itemId);\n        const newRow = {\n            ...row,\n            isOpen\n        };\n        const expandableRow = itemDetailsRow(item, rowIndex, options);\n\n        return [\n            newRow,\n            expandableRow\n        ];\n    };\n\n    return enableExpanbale ? {\n        transformer: openItem,\n        tableProps: {\n            onCollapse\n        }\n    } : {};\n};\n\nexport default useExpandable;\n","import React from 'react';\n\nconst useDedicatedAction = (options) => {\n    const enableDedicatedAction = !!options.dedicatedAction;\n    const {\n        dedicatedAction: DedicatedActionOption, AdditionalDedicatedActions,\n        selected\n    } = options;\n\n    return enableDedicatedAction ? {\n        toolbarProps: {\n            dedicatedAction: selected && <div>\n                {DedicatedActionOption && <DedicatedActionOption selected={selected} />}\n                {AdditionalDedicatedActions && <AdditionalDedicatedActions selected={ selected } />}\n            </div>\n        } } : {};\n};\n\nexport default useDedicatedAction;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Pagination, PaginationVariant } from '@patternfly/react-core';\nimport { Table, TableBody, TableHeader } from '@patternfly/react-table';\nimport PrimaryToolbar from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport TableToolbar from '@redhat-cloud-services/frontend-components/TableToolbar';\nimport useTableTools from '../useTableTools';\n\nconst TableToolsTable = ({\n    items = [], columns = [], filters = [], options = {},\n    toolbarProps: toolbarPropsProp, ...tablePropsRest\n}) => {\n    const { toolbarProps, tableProps } = useTableTools(items, columns, {\n        filters,\n        toolbarProps: toolbarPropsProp,\n        tableProps: tablePropsRest,\n        ...options\n    });\n\n    return <React.Fragment>\n\n        <PrimaryToolbar { ...toolbarProps } />\n\n        <Table { ...tableProps }>\n            <TableHeader />\n            <TableBody />\n        </Table>\n\n        <TableToolbar isFooter>\n            <Pagination\n                variant={ PaginationVariant.bottom }\n                { ...toolbarProps.pagination } />\n        </TableToolbar>\n\n    </React.Fragment>;\n};\n\nTableToolsTable.propTypes = {\n    items: propTypes.array.isRequired,\n    columns: propTypes.arrayOf(propTypes.shape({\n        title: propTypes.node,\n        transforms: propTypes.array,\n        sortByProperty: propTypes.string,\n        sortByArray: propTypes.array,\n        sortByFunction: propTypes.func,\n        renderFunc: propTypes.func\n    })).isRequired,\n    filters: propTypes.object,\n    options: propTypes.object,\n    toolbarProps: propTypes.object\n};\n\nexport default TableToolsTable;\n","import useFilterConfig from './useFilterConfig';\nimport useTableSort from './useTableSort';\nimport usePaginate from './usePaginate';\nimport useRowsBuilder from './useRowsBuilder';\nimport useBulkSelect from './useBulkSelect';\nimport useItemIdentify from './useItemIdentify';\nimport useExpandable from './useExpandable';\nimport useDedicatedAction from './useDedicatedAction';\n\nconst useTableTools = (items = [], columns = [], options = {}) => {\n    const {\n        toolbarProps: toolbarPropsOption, tableProps: tablePropsOption\n    } = options;\n\n    const identifiedItems = useItemIdentify(items, options);\n\n    const {\n        tableProps: sortableTableProps, sorter\n    } = useTableSort(columns, options);\n\n    const {\n        toolbarProps: pagintionToolbarProps, setPage, paginator\n    } = usePaginate(options);\n\n    const {\n        toolbarProps: conditionalFilterProps,\n        filter,\n        selectedFilterToolbarProps\n    } = useFilterConfig({\n        ...options,\n        setPage\n    });\n\n    const {\n        transformer: openItem, tableProps: expandableProps\n    } = useExpandable(options);\n\n    const {\n        transformer: selectItem,\n        toolbarProps: bulkSelectToolbarProps,\n        tableProps: bulkSelectTableProps,\n        selectedItems\n    } = useBulkSelect({\n        ...options,\n        items: identifiedItems,\n        filter,\n        paginator,\n        sorter,\n        setPage\n    });\n\n    const {\n        toolbarProps: dedicatedActionToolbarProps\n    } = useDedicatedAction({\n        ...options,\n        selected: selectedItems,\n        additionalDedicatedActions: [\n            selectedFilterToolbarProps?.dedicatedAction\n        ]\n    });\n\n    const {\n        toolbarProps: rowBuilderToolbarProps, tableProps: rowBuilderTableProps\n    } = useRowsBuilder(identifiedItems, sortableTableProps.cells, {\n        emptyRows: options.emptyRows,\n        transformer: [selectItem],\n        rowTransformer: [openItem],\n        pagination: pagintionToolbarProps?.pagination,\n        paginator,\n        filter,\n        sorter\n    });\n\n    const toolbarProps = {\n        ...pagintionToolbarProps,\n        ...bulkSelectToolbarProps,\n        ...conditionalFilterProps,\n        ...selectedFilterToolbarProps,\n        ...dedicatedActionToolbarProps,\n        ...rowBuilderToolbarProps,\n        ...toolbarPropsOption\n    };\n\n    const tableProps = {\n        cells: columns,\n        ...rowBuilderTableProps,\n        ...sortableTableProps,\n        ...bulkSelectTableProps,\n        ...expandableProps,\n        ...tablePropsOption\n    };\n\n    return {\n        toolbarProps,\n        tableProps\n    };\n};\n\nexport default useTableTools;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Grid, GridItem, Stack, StackItem, Text, TextVariants } from '@patternfly/react-core';\nimport { ConditionalLink } from 'PresentationalComponents';\n\nconst RuleDetailsRow = ({ rule }) => {\n    const { refId, description, identifier, references, rationale } = rule;\n    const key = `rule-child-row-${refId}`;\n\n    return <div key={ key } style={ { marginTop: 'var(--pf-global--spacer--lg)' } }>\n        <Stack id={ `rule-description-${key}` } className='margin-bottom-lg'>\n            <StackItem style={ { marginBottom: 'var(--pf-global--spacer--sm)' } }>\n                <Text className='pf-c-form__label' component={ TextVariants.h5 }><b>Description</b></Text>\n            </StackItem>\n            <StackItem isFilled>{ description }</StackItem>\n        </Stack>\n        <Stack id={ `rule-identifiers-references-${key}` } className='margin-bottom-lg'>\n            <Grid>\n                { identifier && identifier.length > 0 && <GridItem span={ 2 }>\n                    <Text className='pf-c-form__label' component={ TextVariants.h5 }><b>Identifier</b></Text>\n                    <Text>\n                        {\n                            identifier.map((ident, idx) => (\n                                <ConditionalLink\n                                    href={ ident.system }\n                                    target='_blank'\n                                    key={ `${refId}-identifier-${idx}` }>\n                                    { ident.label }\n                                </ConditionalLink>)\n                            ).reduce((prev, next) => ([prev, ', ', next]))\n                        }\n                    </Text>\n                </GridItem> }\n\n                { (references && references.length > 0) && <GridItem span={ 10 }>\n                    <Text className='pf-c-form__label' component={ TextVariants.h5 }><b>References</b></Text>\n                    <Text>\n                        {\n                            references.map((ref, idx) => (\n                                <ConditionalLink\n                                    href={ ref.href }\n                                    target='_blank'\n                                    key={ `${refId}-reference-${idx}` }>\n                                    { ref.label }\n                                </ConditionalLink>)\n                            ).reduce((prev, next) => ([prev, ', ', next]))\n                        }\n                    </Text>\n                </GridItem> }\n            </Grid>\n        </Stack>\n\n        { rationale &&\n            <Stack id={ `rule-rationale-${key}` } style={ { marginBottom: 'var(--pf-global--spacer--lg)' } }>\n                <StackItem style={ { marginBottom: 'var(--pf-global--spacer--sm)' } }>\n                    <Text className='pf-c-form__label' component={ TextVariants.h5 }><b>Rationale</b></Text>\n                </StackItem>\n                <StackItem isFilled>{ rationale }</StackItem>\n            </Stack>\n        }\n\n    </div>;\n};\n\nRuleDetailsRow.propTypes = {\n    rule: propTypes.object\n};\n\nexport default RuleDetailsRow;\n","import React from 'react';\nimport { Bullseye, EmptyState, EmptyStateBody, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { EmptyTable } from '@redhat-cloud-services/frontend-components/EmptyTable';\n\nconst emptyRows = (columns) => ([{\n    cells: [{\n        title: (\n            <EmptyTable>\n                <Bullseye>\n                    <EmptyState variant={ EmptyStateVariant.full }>\n                        <Title headingLevel=\"h5\" size=\"lg\">\n                                No matching rules found\n                        </Title>\n                        <EmptyStateBody>\n                                This filter criteria matches no rules. <br /> Try changing your filter settings.\n                        </EmptyStateBody>\n                    </EmptyState>\n                </Bullseye>\n            </EmptyTable>\n        ),\n        props: {\n            colSpan: columns.length\n        }\n    }]\n}]);\n\nexport default emptyRows;\n","import React from 'react';\nimport {\n    ExclamationCircleIcon, ExclamationTriangleIcon, QuestionCircleIcon\n} from '@patternfly/react-icons';\nimport { LowSeverityIcon } from './Cells';\n\nexport const HIGH_SEVERITY = <span><ExclamationCircleIcon className='ins-u-failed'/> High</span>;\nexport const MEDIUM_SEVERITY = <span><ExclamationTriangleIcon className='ins-u-warning'/> Medium</span>;\nexport const LOW_SEVERITY = <span><LowSeverityIcon /> Low</span>;\nexport const UNKNOWN_SEVERITY = <span><QuestionCircleIcon /> Unknown</span>;\n","import { HIGH_SEVERITY, MEDIUM_SEVERITY, LOW_SEVERITY, UNKNOWN_SEVERITY } from './Constants';\nimport { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\n\nconst filterRulesWithAllValues = (rules, values, valueCheck) => rules.filter((rule) => (\n    values.map((value) => valueCheck(rule, value)).filter(v => !!v).length > 0\n));\n\nconst anyFilterApply = (rules, values, valueCheck) => {\n    let filteredRules = [];\n    rules.forEach((rule) => {\n        if (values.map((value) => valueCheck(rule, value)).filter(v => !!v).length > 0) {\n            filteredRules.push(rule);\n        }\n    });\n    return filteredRules;\n};\n\nconst BASE_FILTER_CONFIGURATION = [{\n    type: conditionalFilterType.text,\n    label: 'Name',\n    filter: (rules, value) => filterRulesWithAllValues(rules, [value], (rule, value) => (\n        rule.title.toLowerCase().includes(value.toLowerCase()) ||\n        (rule.identifier && rule.identifier.label.toLowerCase().includes(value.toLowerCase())) ||\n        rule.references.filter((reference) => reference.label.toLowerCase().includes(value.toLowerCase())).length > 0\n    ))\n}, {\n    type: conditionalFilterType.checkbox,\n    label: 'Severity',\n    items: [\n        { label: HIGH_SEVERITY, value: 'high' },\n        { label: MEDIUM_SEVERITY, value: 'medium' },\n        { label: LOW_SEVERITY, value: 'low' },\n        { label: UNKNOWN_SEVERITY, value: 'unknown' }\n    ],\n    filter: (rules, values) => anyFilterApply(rules, values, (rule, value) => (\n        rule.severity === value\n    ))\n}];\n\nconst PASS_FILTER_CONFIG = {\n    type: conditionalFilterType.checkbox,\n    label: 'Passed',\n    items: [\n        { label: 'Passed rules', value: 'passed' },\n        { label: 'Failed rules', value: 'failed' }\n    ],\n    filter: (rules, values) => anyFilterApply(rules, values, (rule, value) => (\n        rule.compliant === (value === 'passed')\n    ))\n};\n\nexport const policiesFilterConfig = (policies) => ({\n    type: conditionalFilterType.checkbox,\n    label: 'Policy',\n    items: policies.map(policy => (\n        { label: policy.name, value: policy.id }\n    )),\n    filter: (rules, values) => filterRulesWithAllValues(rules, values, (rule, value) => (\n        (rule.profile.policy ? rule.profile.policy.id : rule.profile.id) === value\n    ))\n});\n\nexport const REMEDIATION_AVAILABLE_FILTER_CONFIG = {\n    type: conditionalFilterType.checkbox,\n    label: 'Remediation available',\n    items: [\n        { label: 'Remediation available', value: 'true' }\n    ],\n    filter: (rules, value) => (rules.filter((rule) => (\n        value[0] === 'true' ? rule.remediationAvailable === true : true\n    )))\n};\n\nconst buildFilterConfig = ({ showPassFailFilter, policies, remediationAvailableFilter }) => {\n    const config = [...BASE_FILTER_CONFIGURATION];\n\n    if (showPassFailFilter) {\n        config.push(PASS_FILTER_CONFIG);\n    }\n\n    if (policies && policies.length > 1) {\n        config.push(policiesFilterConfig(policies));\n    }\n\n    if (remediationAvailableFilter) {\n        config.push(REMEDIATION_AVAILABLE_FILTER_CONFIG);\n    }\n\n    return config;\n};\n\nexport default buildFilterConfig;\n","import React from 'react';\nimport propTypes from 'prop-types';\n// eslint-disable-next-line\nimport ComplianceRemediationButton from 'PresentationalComponents/ComplianceRemediationButton';\nimport { TableToolsTable } from 'Utilities/hooks/useTableTools';\nimport { toRulesArrayWithProfile } from 'Utilities/ruleHelpers';\nimport RuleDetailsRow from './RuleDetailsRow';\nimport emptyRows from './EmptyRows';\nimport buildFilterConfig from './Filters';\nimport * as Columns from './Columns';\n\nconst RulesTable = ({\n    system,\n    profileRules,\n    columns = [\n        Columns.Name,\n        Columns.Policy,\n        Columns.Severity,\n        Columns.Passed,\n        Columns.Ansible\n    ],\n    remediationsEnabled = true,\n    remediationAvailableFilter = false,\n    selectedFilter = false,\n    handleSelect,\n    selectedRefIds = [],\n    hidePassed = false,\n    options,\n    ...rulesTableProps\n}) => {\n    const rules = toRulesArrayWithProfile(profileRules);\n    const showPassFailFilter = (columns.filter((c) => (c.title === 'Passed')).length > 0);\n    const policies = profileRules.filter(({ profile }) => !!profile).map(({ profile }) => (\n        {\n            id: profile.policy ? profile.policy.id : profile.id,\n            name: profile.name\n        }\n    ));\n\n    const remediationAction = ({ selected: selectedRules }) => (\n        <ComplianceRemediationButton\n            allSystems={ [{\n                id: system.id,\n                profiles: system.testResultProfiles,\n                ruleObjectsFailed: [],\n                supported: system.supported\n            }] }\n            selectedRules={\n                (selectedRules || []).filter((rule) => (rule.remediationAvailable))\n            } />\n    );\n\n    return <TableToolsTable\n        aria-label=\"Rules Table\"\n        items={ rules }\n        columns={ columns }\n        filters={{\n            filterConfig: buildFilterConfig({\n                showPassFailFilter,\n                policies,\n                remediationAvailableFilter\n            }),\n            ...hidePassed && { activeFilters: {\n                passed: ['failed']\n            } }\n        }}\n        options={{\n            ...options,\n            identifier: (item) => (item.refId),\n            selectable: !!handleSelect || remediationsEnabled,\n            onSelect: handleSelect,\n            preselected: selectedRefIds,\n            detailsComponent: RuleDetailsRow,\n            emptyRows: emptyRows(columns),\n            selectedFilter,\n            ...remediationsEnabled ? { dedicatedAction: remediationAction } : {}\n        }}\n        { ...rulesTableProps } />;\n};\n\nRulesTable.propTypes = {\n    profileRules: propTypes.array,\n    loading: propTypes.bool,\n    hidePassed: propTypes.bool,\n    system: propTypes.object,\n    remediationsEnabled: propTypes.bool,\n    remediationAvailableFilter: propTypes.bool,\n    selectedRefIds: propTypes.array,\n    selectedFilter: propTypes.bool,\n    handleSelect: propTypes.func,\n    columns: propTypes.array,\n    options: propTypes.object\n};\n\nexport default RulesTable;\n","const OsVersionText = ({ profile, newOsMinorVersion }) => (\n    `RHEL${'\\u00A0'}${ profile.osMajorVersion }.${ (profile.osMinorVersion || newOsMinorVersion) }`\n);\n\nexport default OsVersionText;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport {\n    Text, TextVariants, TextContent, Grid, Spinner, Badge, Popover\n} from '@patternfly/react-core';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport { StateViewWithError, StateViewPart, SupportedSSGVersionsLink, RulesTable } from 'PresentationalComponents';\nimport { pluralize } from 'Utilities/TextHelper';\nimport OsVersionText from './OsVersionText';\n\nconst ProfileSystemCount = ({ count = 0 }) => (\n    <Badge isRead>\n        { `${count} ${ pluralize(count, 'system')}` }\n    </Badge>\n);\n\nProfileSystemCount.propTypes = {\n    profile: propTypes.object,\n    count: propTypes.number\n};\n\nconst SSGVersionText = ({ profile, newOsMinorVersion }) => (\n    <Text component={ TextVariants.p }>\n        SSG version: { profile.ssgVersion }\n        {' '}\n        <Popover\n            position='right'\n            bodyContent={ <SSGPopoverBody { ...{ profile, newOsMinorVersion } } /> }\n            footerContent={ <SupportedSSGVersionsLink /> }>\n            <span style={ { cursor: 'pointer' } }>\n                <OutlinedQuestionCircleIcon className=\"grey-icon\" />\n            </span>\n        </Popover>\n    </Text>\n);\n\nSSGVersionText.propTypes = {\n    profile: propTypes.object.isRequired,\n    newOsMinorVersion: propTypes.string\n};\n\nconst SSGPopoverBody = ({ profile, newOsMinorVersion }) => (\n    <TextContent style={ { fontSize: 'var(--pf-c-popover--FontSize)' } }>\n        <Text>\n            This is the latest supported version of the SCAP Security Guide (SSG) for\n            {' '}\n            <OsVersionText { ...{ profile, newOsMinorVersion } } />\n        </Text>\n        <Text>\n            <OsVersionText { ...{ profile, newOsMinorVersion } } /> systems assigned to this\n            policy will report using this rule list.\n        </Text>\n    </TextContent>\n);\n\nSSGPopoverBody.propTypes = {\n    profile: propTypes.object.isRequired,\n    newOsMinorVersion: propTypes.string\n};\n\nconst BENCHMARK_QUERY = gql`\nquery benchmarkQuery($id: String!) {\n    benchmark(id: $id) {\n        id\n        osMajorVersion\n        rules {\n            id\n            title\n            severity\n            rationale\n            refId\n            description\n            remediationAvailable\n            identifier\n        }\n    }\n}\n`;\n\nconst ProfileTabContent = ({\n    profile, columns, handleSelect, systemCount, selectedRuleRefIds, rulesTableProps, newOsMinorVersion\n}) => {\n    const { data: benchmark, error, loading } = useQuery(BENCHMARK_QUERY, {\n        variables: {\n            id: profile.benchmark.id\n        },\n        skip: !handleSelect || !profile.benchmark?.id\n    });\n    const rules = handleSelect ? benchmark?.benchmark?.rules : profile?.rules;\n\n    return <React.Fragment>\n        <Grid>\n            <TextContent className=\"pf-u-mt-md\">\n                <Text component={ TextVariants.h3 } >\n                    <span className='pf-u-pr-sm'>\n                        <OsVersionText { ...{ profile, newOsMinorVersion } } />\n                    </span>\n                    <ProfileSystemCount count={ systemCount } />\n                </Text>\n                <SSGVersionText { ...{ profile, newOsMinorVersion } } />\n            </TextContent>\n        </Grid>\n        <StateViewWithError stateValues={ { error, loading, rules } }>\n            <StateViewPart stateKey=\"loading\">\n                <Spinner />\n            </StateViewPart>\n            <StateViewPart stateKey=\"rules\">\n\n                <RulesTable\n                    remediationAvailableFilter\n                    remediationsEnabled={false}\n                    columns={ columns }\n                    profileRules={ [{ profile, rules: (rules || []) }] }\n                    selectedRefIds={ selectedRuleRefIds }\n                    handleSelect={\n                        handleSelect && ((selectedRuleRefIds) =>\n                            handleSelect(profile, newOsMinorVersion, selectedRuleRefIds)\n                        )\n                    }\n                    { ...rulesTableProps } />\n\n            </StateViewPart>\n        </StateViewWithError>\n    </React.Fragment>;\n};\n\nProfileTabContent.propTypes = {\n    profile: propTypes.object,\n    newOsMinorVersion: propTypes.string,\n    columns: propTypes.array,\n    handleSelect: propTypes.func,\n    systemCount: propTypes.object,\n    selectedRuleRefIds: propTypes.array,\n    rulesTableProps: propTypes.object\n};\n\nexport default ProfileTabContent;\n","// Rule selection utilities\n\nexport const matchesSelectionItem = (selectionItem, profile, newOsMinorVersion) => (\n    selectionItem.id === profile.id\n    && selectionItem.osMinorVersion === (newOsMinorVersion || profile.osMinorVersion)\n);\n\nexport const selectedRuleRefIdsForTab = (selectedRuleRefIds, profile, newOsMinorVersion) => {\n    const tabSelection = (selectedRuleRefIds || []).find((selectionItem) =>\n        matchesSelectionItem(selectionItem, profile, newOsMinorVersion)\n    );\n    return tabSelection?.ruleRefIds || [];\n};\n\nexport const profilesWithRulesToSelection = (profiles, prevSelection = [], options = {}) => {\n    const { only } = options;\n    const additionalSelection = profiles.map((profile) => {\n        const foundSelection = prevSelection.find((selectionItem) =>\n            matchesSelectionItem(selectionItem, profile)\n        );\n        if (!foundSelection) {\n            if (!profile.rules) {\n                console.error(`Profile ${profile.id} is missing rules for selection!`);\n            }\n\n            if (!profile.osMinorVersion) {\n                console.error(`Profile ${profile.id} is missing osMinorVersion for selection!`);\n            }\n\n            return {\n                id: profile.id,\n                osMinorVersion: profile.osMinorVersion,\n                ruleRefIds: profile.rules?.map((rule) => (rule.refId)) || []\n            };\n        } else if (only) {\n            return foundSelection;\n        }\n    }).filter((v) => !!v);\n\n    return only ? additionalSelection : [...prevSelection, ...additionalSelection];\n};\n\nexport const tabsDataToOsMinorMap = (tabsData) => {\n    const osMinorMap = {};\n    tabsData.forEach(({ profile, newOsMinorVersion }) => {\n        if (profile?.id) {\n            const osMinorVersion = newOsMinorVersion || profile.osMinorVersion;\n            osMinorMap[profile.id] = [\n                ...(osMinorMap[profile.id] || []),\n                osMinorVersion\n            ];\n        }\n    });\n    return osMinorMap;\n};\n\nexport const extendProfilesByOsMinor = (profiles, osMinorMap) => (\n    profiles.flatMap((profile) => (\n        (osMinorMap[profile.id] || [undefined]).map((osMinorVersion) => (\n            { ...profile, osMinorVersion }\n        ))\n    ))\n);\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Tab, Badge } from '@patternfly/react-core';\nimport { RoutedTabs } from 'PresentationalComponents';\nimport ProfileTabContent from './ProfileTabContent';\nimport OsVersionText from './OsVersionText';\nimport { selectedRuleRefIdsForTab, matchesSelectionItem } from './ruleSelection';\n\nconst eventKey = ({ id, osMinorVersion }, newOsMinorVersion) => (\n    `rules-${id}-${osMinorVersion || newOsMinorVersion}`\n);\n\nconst getDefaultTab = (tabsData, defaultTab) => {\n    if (!tabsData || tabsData.length === 0) {\n        return;\n    }\n\n    if (!defaultTab) {\n        const firstTab = tabsData[0];\n        defaultTab = {\n            id: firstTab.profile.id,\n            osMinorVersion: firstTab.profile.osMinorVersion || firstTab.newOsMinorVersion\n        };\n    }\n\n    return eventKey(defaultTab);\n};\n\nconst TabbedRules = ({\n    tabsData, defaultTab, selectedRuleRefIds, setSelectedRuleRefIds, columns, level = 0, ...rulesTableProps\n}) => {\n    const handleSelect = (profile, newOsMinorVersion, profileSelectedRuleRefIds) => {\n        const filteredSelection = (selectedRuleRefIds || []).filter((selectionItem) =>\n            !matchesSelectionItem(selectionItem, profile, newOsMinorVersion)\n        );\n\n        const newItem = {\n            id: profile.id,\n            osMinorVersion: newOsMinorVersion || profile.osMinorVersion,\n            ruleRefIds: profileSelectedRuleRefIds\n        };\n        setSelectedRuleRefIds([newItem, ...filteredSelection]);\n    };\n\n    return <RoutedTabs level={ level } defaultTab={ getDefaultTab(tabsData, defaultTab) }>\n        {\n            tabsData?.map(({ profile, newOsMinorVersion, systemCount }) => (\n                <Tab\n                    key={ eventKey(profile, newOsMinorVersion) }\n                    eventKey={ eventKey(profile, newOsMinorVersion) }\n                    title={\n                        <span>\n                            <span className='pf-u-pr-sm'>\n                                <OsVersionText profile={ profile } newOsMinorVersion={newOsMinorVersion} />\n                            </span>\n                            <Badge isRead>{ systemCount }</Badge>\n                        </span>\n                    }>\n                    <ProfileTabContent\n                        { ...{\n                            profile,\n                            newOsMinorVersion,\n                            columns,\n                            rulesTableProps,\n                            systemCount,\n                            selectedRuleRefIds: selectedRuleRefIdsForTab(\n                                selectedRuleRefIds, profile, newOsMinorVersion\n                            ),\n                            handleSelect: setSelectedRuleRefIds ? handleSelect : undefined\n                        } } />\n                </Tab>\n            ))\n        }\n    </RoutedTabs>;\n};\n\nTabbedRules.propTypes = {\n    tabsData: propTypes.arrayOf(\n        propTypes.shape({\n            profile: propTypes.object.isRequired,\n            selectedRuleRefIds: propTypes.arrayOf(propTypes.string),\n            newOsMinorVersion: propTypes.string,\n            systemCount: propTypes.number\n        })\n    ).isRequired,\n    selectedRuleRefIds: propTypes.arrayOf(\n        propTypes.shape({\n            id: propTypes.string,\n            ruleRefIds: propTypes.arrayOf(propTypes.string)\n        })\n    ),\n    setSelectedRuleRefIds: propTypes.func,\n    columns: propTypes.arrayOf(propTypes.object),\n    defaultTab: propTypes.shape({\n        id: propTypes.string,\n        osMinorVersion: propTypes.string\n    }),\n    level: propTypes.number\n};\n\nexport default TabbedRules;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Popover, Tooltip, Text } from '@patternfly/react-core';\nimport { ExclamationTriangleIcon, OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport { SupportedSSGVersionsLink } from 'PresentationalComponents';\n\nexport const supportedConfigsLink = 'https://access.redhat.com/documentation/en-us/red_hat_insights/2020-10/' +\n    'html/assessing_and_monitoring_security_policy_compliance_of_rhel_systems/' +\n    'con-compl-assess-overview_compl-assess-overview#con-compl-assess-supported-configurations_compl-assess-overview';\n\nconst UNSUPPORTED_SINGULAR_MESSAGE =\n    'This system was using an incompatible version of the SSG at the time this report was generated. ' +\n    'Assessment of rules failed/passed on this system is a best-guess effort and may not be accurate.';\nconst UNSUPPORTED_PLURAL_MESSAGE = <React.Fragment>\n    <Text variant='p' style={ { marginBottom: '1rem' } }>\n        These systems are running unsupported versions of the SCAP Security Guide (SSG) for the version of RHEL installed on them.\n        Assessment of rules failed/passed on these systems is a best-guess effort and may not be accurate.\n    </Text>\n    <Text variant='p'>\n        The policy&apos;s compliance score excludes these systems.\n    </Text>\n</React.Fragment>;\n\nconst WarningWithPopover = ({ children, variant = 'plural' }) => (\n    <Popover\n        id='unsupported-popover'\n        maxWidth='25rem'\n        headerContent='Unsupported SSG versions'\n        bodyContent={ variant === 'plural' ? UNSUPPORTED_PLURAL_MESSAGE : UNSUPPORTED_SINGULAR_MESSAGE }\n        footerContent={ <SupportedSSGVersionsLink /> }>\n        { children }\n    </Popover>\n);\n\nWarningWithPopover.propTypes = {\n    children: propTypes.node,\n    variant: propTypes.oneOf(['singular', 'plural'])\n};\n\nconst WarningWithTooltip = ({ children, content }) => (\n    <Tooltip content={ content } position='bottom'>\n        { children }\n    </Tooltip>\n);\n\nWarningWithTooltip.propTypes = {\n    content: propTypes.string,\n    children: propTypes.node\n};;\n\nconst TooltipOrPopover = ({ variant, children, tooltipProps }) => {\n    const { Component, componentProps } = {\n        tooltip: {\n            Component: WarningWithTooltip,\n            componentProps: tooltipProps\n        },\n        popover: {\n            Component: WarningWithPopover,\n            componentProps: {\n                showHeader: tooltipProps.showPopupHeader,\n                variant: tooltipProps.messageVariant\n            }\n        }\n    }[variant];\n\n    return <Component { ...componentProps }>\n        { children }\n    </Component>;\n};\n\nTooltipOrPopover.propTypes = {\n    children: propTypes.node,\n    variant: propTypes.oneOf(['tooltip', 'popover']),\n    tooltipProps: propTypes.object\n};\n\nconst UnsupportedSSGVersion = ({\n    children, showWarningIcon = true, showHelpIcon = false, style, tooltipText, messageVariant\n}) => {\n    const tooltipProps = {\n        ...tooltipText && { content: <div>{ tooltipText }</div> },\n        messageVariant\n    };\n    const variant = tooltipText ? 'tooltip' : 'popover';\n    const iconProps = {\n        variant,\n        tooltipProps\n    };\n    const defaultStyle = !tooltipText ? { cursor: 'pointer' } : {};\n\n    return <span style={ { ...style, display: 'inline-block' } }>\n        { showWarningIcon && <TooltipOrPopover { ...iconProps }>\n            <span style={ defaultStyle } className='pf-u-mr-xs'>\n                <ExclamationTriangleIcon color='var(--pf-global--warning-color--100)' />\n            </span>\n        </TooltipOrPopover> }\n\n        { children }\n\n        { showHelpIcon &&  <TooltipOrPopover { ...iconProps }>\n            <span style={ defaultStyle } className='pf-u-ml-xs'>\n                <OutlinedQuestionCircleIcon />\n            </span>\n        </TooltipOrPopover> }\n    </span>;\n};\n\nUnsupportedSSGVersion.propTypes = {\n    showWarningIcon: propTypes.bool,\n    showHelpIcon: propTypes.bool,\n    style: propTypes.object,\n    tooltipText: propTypes.string,\n    children: propTypes.node,\n    variant: propTypes.string,\n    messageVariant: propTypes.string,\n    showPopupHeader: propTypes.bool\n};\n\nexport default UnsupportedSSGVersion;\n","import React from 'react';\nimport { Table, TableHeader, TableBody } from '@patternfly/react-table';\nimport RowLoader from '@redhat-cloud-services/frontend-components-utilities/RowLoader';\n\nconst LoadingPoliciesTable = () => (\n    <Table\n        aria-label='policies-table'\n        ouiaId=\"PoliciesTable\"\n        cells={ [\n            { title: 'Policy name' },\n            { title: 'Operating system' },\n            { title: 'Systems' },\n            { title: 'Business initiative' },\n            { title: 'Compliance threshold' }\n        ] }\n        rows={ [...Array(5)].map(() => ({\n            cells: [{\n                title: <RowLoader />,\n                colSpan: 5\n            }]\n        })) }>\n        <TableHeader />\n        <TableBody />\n    </Table>\n);\n\nexport default LoadingPoliciesTable;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport {\n    Title,\n    Button,\n    Text\n} from '@patternfly/react-core';\nimport {\n    ExclamationCircleIcon\n} from '@patternfly/react-icons';\nimport InvalidObject from '@redhat-cloud-services/frontend-components/InvalidObject';\nimport NotAuthorized from '@redhat-cloud-services/frontend-components/NotAuthorized';\n\nconst ErrorPage = ({ error, ...props }) => {\n    if (error.networkError && error.networkError.statusCode === 401) {\n        window.insights.chrome.auth.logout(true);\n        return false;\n    }\n\n    if (error.networkError && error.networkError.statusCode === 403) {\n        return <NotAuthorized serviceName='Compliance' />;\n    }\n\n    if (error.networkError && error.networkError.statusCode === 404) {\n        return <InvalidObject />;\n    }\n\n    return <section {...props} className=\"pf-l-page__main-section pf-c-page__main-section ins-c-component_invalid-componet\">\n        <ExclamationCircleIcon size=\"xl\" style={ { color: 'var(--pf-global--danger-color--100)' } } />\n        <Title headingLevel='h1'>There was an error</Title>\n        <Text>\n            If you need to contact Red Hat Support about this, this is the exact error:\n            <Text>\n                { error.message }\n            </Text>\n        </Text>\n        <Button\n            variant=\"link\"\n            ouiaId=\"ErrorPageGoBackButton\"\n            onClick={ history.goBack }>\n                Go back\n        </Button>\n    </section>;\n};\n\nErrorPage.propTypes = {\n    error: propTypes.object\n};\n\nexport default ErrorPage;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Text, TextVariants } from '@patternfly/react-core';\n\nexport const GreySmallText = ({ children }) => (\n    <Text\n        style={{ color: 'var(--pf-global--Color--200)' }}\n        component={ TextVariants.small }>{ children }</Text>\n);\n\nGreySmallText.propTypes = {\n    children: propTypes.node\n};\n\nexport default GreySmallText;\n","import React from 'react';\nimport { Field } from 'redux-form';\nimport propTypes from 'prop-types';\nimport { Checkbox } from '@patternfly/react-core';\n\nconst CheckboxFieldArray = ({ input, options }) => {\n    const { name, onChange } = input;\n    const inputValue = input.value;\n\n    const handleChange = (checked, value) => {\n        const arr = [...new Set(inputValue)];\n        if (checked) {\n            arr.push(value);\n        } else {\n            arr.splice(arr.indexOf(value), 1);\n        }\n\n        return onChange(arr);\n    };\n\n    return (\n        <React.Fragment>\n            {\n                options.map(({ label, value, defaultChecked }, index) => (\n                    <Checkbox key={value} id={value} label={label}\n                        name={`${name}[${index}]`} value={value}\n                        isChecked={inputValue === '' ? defaultChecked : inputValue.includes(value)}\n                        onChange={(checked) => handleChange(checked, value)}\n                    />\n                ))\n            }\n        </React.Fragment>\n    );\n};\n\nCheckboxFieldArray.propTypes = {\n    input: propTypes.shape({\n        name: propTypes.string.isRequired,\n        onChange: propTypes.func,\n        value: propTypes.string\n    }),\n    options: propTypes.arrayOf(propTypes.shape({\n        label: propTypes.string.isRequired,\n        value: propTypes.string.isRequired,\n        defaultChecked: propTypes.bool\n    })).isRequired\n};\n\nconst CheckboxGroup = (props) => (\n    <Field {...props} type=\"checkbox\" component={CheckboxFieldArray} />\n);\n\nCheckboxGroup.propTypes = {\n    options: propTypes.arrayOf(propTypes.shape({\n        label: propTypes.string.isRequired,\n        value: propTypes.string.isRequired,\n        defaultChecked: propTypes.bool\n    })).isRequired\n};\n\nexport { CheckboxFieldArray };\nexport default CheckboxGroup;\n","import React from 'react';\nimport { Field } from 'redux-form';\nimport propTypes from 'prop-types';\nimport Truncate from 'react-truncate';\nimport {\n    Grid,\n    GridItem,\n    Label,\n    TextContent,\n    TextVariants,\n    Text,\n    Tooltip\n} from '@patternfly/react-core';\n\nconst InUseProfileLabel = () => (\n    <Tooltip\n        position=\"right\"\n        content=\"A policy of this type is already in use.\n        Only one policy per policy type can be created for a major release of RHEL.\"\n    >\n        <Label color=\"orange\" style={ { lineHeight: '1.5em' } }>In use</Label>\n    </Tooltip>\n);\n\nconst ProfileTypeSelect  = ({ profiles, onClick }) => (\n    <React.Fragment>\n        { profiles?.length === 0 && (\n            <TextContent style={{ color: 'var(--pf-c-content--blockquote--Color)' }}>\n                <Text>\n                    Select an operating system to view policy types.\n                </Text>\n            </TextContent>\n        )}\n\n        <Grid hasGutter>\n            { profiles.map((profile) => {\n                const { description, name, id, disabled } = profile;\n                return (\n                    <React.Fragment key={`profile-select-${id}`}>\n                        <GridItem span={8} rowSpan={2}>\n                            <TextContent\n                                style={ {\n                                    lineHeight: '2em',\n                                    color: disabled ? 'var(--pf-c-content--blockquote--Color)' : ''\n                                } }>\n                                <Text >\n                                    <Field component='input'\n                                        type='radio'\n                                        name='profile'\n                                        value={JSON.stringify(profile)}\n                                        onClick={ () => onClick(JSON.stringify(profile)) }\n                                        disabled={ disabled }\n                                    />\n                                    { ` ${name} ` }\n                                    { disabled && <InUseProfileLabel /> }\n                                </Text>\n                            </TextContent>\n                            <TextContent style={ { color: 'var(--pf-c-content--blockquote--Color)' } }>\n                                <Text component={ TextVariants.p }>\n                                    <Truncate\n                                        key={`profile-select-text-${id}`}\n                                        lines={3}>\n                                        { description }\n                                    </Truncate>\n                                </Text>\n                            </TextContent>\n                        </GridItem>\n                    </React.Fragment>);\n            })}\n        </Grid>\n    </React.Fragment>\n);\n\nProfileTypeSelect.propTypes = {\n    profiles: propTypes.array,\n    onClick: propTypes.func\n};\n\nProfileTypeSelect.defaultProps = {\n    profiles: [],\n    onClick: () => ({})\n};\n\nexport default ProfileTypeSelect;\n","import React from 'react';\nimport {\n    QuestionCircleIcon,\n    CheckCircleIcon,\n    ExclamationCircleIcon\n} from '@patternfly/react-icons';\nimport { Text, Tooltip } from '@patternfly/react-core';\nimport { fixedPercentage } from 'Utilities/TextHelper';\n\nconst CompliantIcon = (system) => {\n    if ((system.rulesPassed + system.rulesFailed) === 0) {\n        return <QuestionCircleIcon color='var(--pf-global--disabled-color--100)' />;\n    } else {\n        return system.compliant ?\n            <CheckCircleIcon color='var(--pf-global--success-color--200)' /> :\n            <ExclamationCircleIcon color='var(--pf-global--danger-color--100)' />;\n    }\n};\n\nexport const complianceScoreString = (system) => {\n    if (system.supported === false) {\n        return ' Unsupported';\n    } else if ((system.rulesPassed + system.rulesFailed) === 0) {\n        return ' N/A';\n    }\n\n    return ' ' + fixedPercentage(system.score);\n};\n\nconst ComplianceScore = (system) => (\n    <Text>\n        { system.supported ?\n            <Tooltip content={\n                'The system compliance score is calculated by OpenSCAP and ' +\n                'is a normalized weighted sum of rules selected for this policy.'\n            }>\n                <CompliantIcon key={ `system-compliance-icon-${system.id}` } { ...system } />\n                { complianceScoreString(system) }\n            </Tooltip>\n            :\n            complianceScoreString(system) }\n    </Text>\n);\n\nexport default ComplianceScore;\n","import React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nconst PolicyDetailsContentLoader = () => (\n    <ContentLoader\n        speed={2}\n        width={1000}\n        height={400}\n        viewBox='0 0 1000 400'\n        backgroundcolor='#f3f3f3'\n        foregroundcolor='#ecebeb'\n    >\n        <rect x='-3' y='7' rx='3' ry='3' width='760' height='19' />\n        <rect x='823' y='3' rx='3' ry='3' width='67' height='29' />\n        <rect x='910' y='3' rx='3' ry='3' width='67' height='29' />\n        <rect x='6' y='54' rx='0' ry='0' width='46' height='19' />\n        <rect x='68' y='54' rx='0' ry='0' width='46' height='19' />\n        <rect x='133' y='54' rx='0' ry='0' width='46' height='19' />\n        <rect x='3' y='110' rx='0' ry='0' width='255' height='17' />\n        <rect x='1' y='149' rx='0' ry='0' width='47' height='16' />\n        <rect x='1' y='185' rx='0' ry='0' width='255' height='17' />\n        <rect x='-1' y='224' rx='0' ry='0' width='187' height='16' />\n        <rect x='-4' y='267' rx='0' ry='0' width='255' height='17' />\n        <rect x='-6' y='306' rx='0' ry='0' width='47' height='16' />\n        <rect x='-6' y='342' rx='0' ry='0' width='255' height='17' />\n        <rect x='-8' y='381' rx='0' ry='0' width='187' height='16' />\n    </ContentLoader>\n);\n\nexport default PolicyDetailsContentLoader;\n","import React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nconst ReportDetailsContentLoader = () => (\n    <ContentLoader\n        height={320}\n        width={1550}\n        speed={2}\n        primaryColor=\"#f3f3f3\"\n        secondaryColor=\"#ecebeb\">\n        <rect x=\"18\" y=\"50\" rx=\"4\" ry=\"4\" width=\"478\" height=\"15\" />\n        <rect x=\"19\" y=\"18\" rx=\"3\" ry=\"3\" width=\"220\" height=\"9\" />\n        <circle cx=\"118\" cy=\"156\" r=\"73\" />\n        <rect x=\"1002\" y=\"40\" rx=\"0\" ry=\"0\" width=\"69\" height=\"23\" />\n        <rect x=\"47\" y=\"77\" rx=\"0\" ry=\"0\" width=\"0\" height=\"0\" />\n        <rect x=\"36\" y=\"77\" rx=\"0\" ry=\"0\" width=\"16\" height=\"0\" />\n        <rect x=\"409\" y=\"149\" rx=\"0\" ry=\"0\" width=\"0\" height=\"0\" />\n        <rect x=\"214\" y=\"145\" rx=\"0\" ry=\"0\" width=\"205\" height=\"9\" />\n        <rect x=\"216\" y=\"119\" rx=\"0\" ry=\"0\" width=\"205\" height=\"9\" />\n        <rect x=\"526\" y=\"100\" rx=\"0\" ry=\"0\" width=\"431\" height=\"8\" />\n        <rect x=\"526\" y=\"122\" rx=\"0\" ry=\"0\" width=\"431\" height=\"8\" />\n        <rect x=\"526\" y=\"146\" rx=\"0\" ry=\"0\" width=\"431\" height=\"8\" />\n        <rect x=\"527\" y=\"170\" rx=\"0\" ry=\"0\" width=\"431\" height=\"8\" />\n        <rect x=\"527\" y=\"194\" rx=\"0\" ry=\"0\" width=\"431\" height=\"8\" />\n        <rect x=\"527\" y=\"218\" rx=\"0\" ry=\"0\" width=\"431\" height=\"8\" />\n        <rect x=\"529\" y=\"275\" rx=\"0\" ry=\"0\" width=\"231\" height=\"7\" />\n    </ContentLoader>\n);\n\nexport default ReportDetailsContentLoader;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { fixedPercentage } from 'Utilities/TextHelper';\nimport {\n    PolicyBusinessObjectiveTooltip,\n    PolicyThresholdTooltip\n} from 'PresentationalComponents';\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n    TextContent,\n    TextVariants,\n    Text\n} from '@patternfly/react-core';\nimport Truncate from '@redhat-cloud-services/frontend-components/Truncate';\nimport linkifyHtml from 'linkifyjs/html';\n\nconst PolicyDetailsDescription = ({ policy }) => (\n    <Card ouiaId=\"PolicyDetailsCard\">\n        <CardHeader>\n            <Text style={ { fontSize: 20 } }>\n                <b>Policy details</b>\n            </Text>\n        </CardHeader>\n        <CardBody>\n            <TextContent>\n                <Text component={TextVariants.h5}>\n                    Compliance threshold\n                    <PolicyThresholdTooltip />\n                </Text>\n                <Text className='threshold-tooltip' component={TextVariants.p}>\n                    { fixedPercentage(policy.complianceThreshold, 1) }\n                </Text>\n                <Text component={TextVariants.h5}>\n                    Business objective\n                    <PolicyBusinessObjectiveTooltip />\n                </Text>\n                <Text component={TextVariants.p}>\n                    { policy.businessObjective && policy.businessObjective.title || '-' }\n                </Text>\n                <Text component={TextVariants.h5}>Policy description</Text>\n                <Text component={TextVariants.p}>\n                    <Truncate text={linkifyHtml(policy.description || '')} length={380} inline={true} />\n                </Text>\n                <Text component={TextVariants.h5}>\n                    Operating system\n                </Text>\n                <Text component={TextVariants.p}>\n                    RHEL { policy.majorOsVersion }\n                </Text>\n                <Text component={TextVariants.h5}>Policy type </Text>\n                <Text component={TextVariants.p}>{ policy.policyType }</Text>\n                <Text component={TextVariants.h5}>Reference ID</Text>\n                <Text component={TextVariants.p}>{ policy.refId }</Text>\n            </TextContent>\n        </CardBody>\n    </Card>\n);\n\nPolicyDetailsDescription.propTypes = {\n    policy: propTypes.object\n};\n\nexport default PolicyDetailsDescription;\n","import React from 'react';\nimport { fixedPercentage } from 'Utilities/TextHelper';\nimport propTypes from 'prop-types';\nimport {\n    Text,\n    TextContent,\n    TextList,\n    TextListVariants,\n    TextListItem,\n    TextListItemVariants\n} from '@patternfly/react-core';\nimport {\n    Link\n} from 'react-router-dom';\n\nconst PropTypes = {\n    children: propTypes.node\n};\n\nconst Dt = ({ children, ...props }) => (\n    <TextListItem { ...props } component={ TextListItemVariants.dt }>\n        { children }\n    </TextListItem>\n);\nDt.propTypes = PropTypes;\n\nconst Dd = ({ children, ...props }) => (\n    <TextListItem { ...props } component={ TextListItemVariants.dd }>\n        { children }\n    </TextListItem>\n);\nDd.propTypes = PropTypes;\n\nconst PolicyDescription = ({ profile }) => (\n    <React.Fragment>\n        <TextList component={TextListVariants.dl}>\n            <Dt>\n                <Text className='ins-c-non-bold-h2'>\n                    Policy details\n                </Text>\n            </Dt>\n            <Dt>\n                Operating system\n            </Dt>\n            <Dd>\n                RHEL { profile.majorOsVersion }\n            </Dd>\n            <Dt>\n                Compliance threshold\n            </Dt>\n            <Dd>\n                { fixedPercentage(profile.complianceThreshold, 1) }\n            </Dd>\n            <Dt>\n                Business objective\n            </Dt>\n            <Dd>\n                { profile.businessObjective ? profile.businessObjective.title : '--' }\n            </Dd>\n        </TextList>\n        <Link to={'/scappolicies/' + profile.policy.id} >\n            View policy\n        </Link>\n    </React.Fragment>\n);\n\nPolicyDescription.propTypes = {\n    profile: propTypes.shape({\n        id: propTypes.string,\n        complianceThreshold: propTypes.number,\n        businessObjective: propTypes.object,\n        majorOsVersion: propTypes.string,\n        policy: propTypes.shape({\n            id: propTypes.string\n        }),\n        benchmark: propTypes.shape({\n            version: propTypes.string\n        })\n    })\n};\n\nconst ReportDetailsDescription = ({ profile }) => (\n    <TextContent className='policy-details'>\n        <PolicyDescription { ...{ profile }} />\n    </TextContent>\n);\n\nReportDetailsDescription.propTypes = {\n    profile: propTypes.object\n};\n\nexport default ReportDetailsDescription;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport {\n    Progress, ProgressVariant\n} from '@patternfly/react-core/dist/js/components/Progress';\n\nconst ProgressBar = ({ percent, failed }) => {\n    let variant;\n    let title;\n\n    if (percent === 100) {\n        title = 'Success';\n        variant = ProgressVariant.success;\n    } else if (failed) {\n        title = 'Error';\n        variant = ProgressVariant.danger;\n    } else {\n        title = 'Progress';\n        variant = ProgressVariant.info;\n    }\n\n    return <Progress\n        id={'finished-create-policy'}\n        value={percent}\n        title={title}\n        variant={variant}\n        className='wizard-progress-bar'\n    />;\n};\n\nProgressBar.propTypes = {\n    percent: propTypes.number,\n    failed: propTypes.bool\n};\n\nexport default ProgressBar;\n","import React from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport propTypes from 'prop-types';\nimport { Tabs } from '@patternfly/react-core';\nimport { useAnchor } from 'Utilities/Router';\n\nexport const ContentTab = ({ children }) => (children);\n\nconst useAnchorLevels = (defaultAnchor, level) => {\n    const anchor = useAnchor(defaultAnchor);\n    const levels = anchor.split('|');\n    const currentAnchor = levels[level] || defaultAnchor;\n\n    return {\n        levels,\n        currentAnchor\n    };\n};\n\nconst TabSwitcher = (props) => (\n    props.children.map((tab) => (\n        tab.props.eventKey === props.activeKey ? tab : undefined\n    )).filter((c) => (!!c))\n);\n\nTabSwitcher.propTypes = {\n    activeTab: propTypes.number,\n    children: propTypes.node\n};\n\nexport const RoutedTabSwitcher = ({ children, defaultTab, level }) => {\n    const { currentAnchor } = useAnchorLevels(defaultTab, level);\n\n    return children.map((tab) => (\n        tab.props.eventKey === currentAnchor ? tab : undefined\n    )).filter((c) => (!!c));\n};\n\nRoutedTabSwitcher.propTypes = {\n    children: propTypes.node,\n    defaultTab: propTypes.string,\n    level: propTypes.number\n};\n\nRoutedTabSwitcher.defaultProps = {\n    level: 0\n};\n\nexport const RoutedTabs = ({ children, defaultTab, level, ...props }) => {\n    const { push } = useHistory();\n    const { pathname, state } = useLocation();\n    const { currentAnchor, levels } = useAnchorLevels(defaultTab, level);\n    const handleTabSelect = (e, eventKey) => {\n        e.preventDefault();\n        const tabToActivate = eventKey.replace('#', '');\n        let tabAnchor = levels;\n        tabAnchor[level] = tabToActivate;\n\n        push({\n            state,\n            to: pathname,\n            hash: tabAnchor.slice(0, (level + 1)).join('|')\n        });\n    };\n\n    return <Tabs\n        { ...props }\n        onSelect={ handleTabSelect }\n        activeKey={ currentAnchor }>\n        { children }\n    </Tabs>;\n};\n\nRoutedTabs.defaultProps = {\n    level: 0\n};\n\nRoutedTabs.propTypes = {\n    children: propTypes.node,\n    defaultTab: propTypes.string,\n    level: propTypes.number\n};\n\nexport default TabSwitcher;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport {\n    ErrorPage\n} from 'PresentationalComponents';\n\nexport const StateViewPart = ({ children }) => (children);\n\nconst props = {\n    stateValues: propTypes.object,\n    children: propTypes.node\n};\n\nexport const StateView = ({ stateValues, children }) => (\n    children.flatMap((c) => (c)).filter((child) => (\n        stateValues[child.props.stateKey]\n    ))\n);\n\nStateView.propTypes = props;\n\nexport const StateViewWithError = ({ stateValues, children }) => (\n    <StateView stateValues={ stateValues }>\n        <StateViewPart key='error-state' stateKey='error'>\n            <ErrorPage error={ stateValues.error } />\n        </StateViewPart>\n        { children }\n    </StateView>\n);\n\nStateViewWithError.propTypes = props;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport {\n    Tooltip,\n    TooltipPosition\n} from '@patternfly/react-core';\nimport {\n    WarningText\n} from 'PresentationalComponents';\n\nconst WARNING_TEXT = 'Policies without systems will not have reports.';\n\nconst WithOptionalToolTip = ({ showTooltip, children }) => (\n    showTooltip ? <Tooltip\n        position={ TooltipPosition.bottom }\n        content={ WARNING_TEXT }>\n        { children }\n    </Tooltip> : children\n);\n\nWithOptionalToolTip.propTypes = {\n    showTooltip: propTypes.bool,\n    children: propTypes.node\n};\n\nconst SystemsCountWarning = ({ count, variant }) => {\n    let text;\n\n    switch (variant) {\n        case 'count':\n            text = count;\n            break;\n        case 'compact':\n            text = 'No Systems';\n            break;\n        case 'full':\n            text = WARNING_TEXT;\n            break;\n        default:\n            text = count;\n    }\n\n    return <WithOptionalToolTip showTooltip={ variant === 'count' || variant === 'compact' }>\n        <WarningText>\n            { text }\n        </WarningText>\n    </WithOptionalToolTip>;\n};\n\nSystemsCountWarning.defaultProps = {\n    variant: 'compact'\n};\n\nSystemsCountWarning.propTypes = {\n    count: propTypes.number.isRequired,\n    variant: propTypes.string\n};\n\nexport { WARNING_TEXT };\nexport default SystemsCountWarning;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport {\n    Text\n} from '@patternfly/react-core';\nimport {\n    ExclamationTriangleIcon\n} from '@patternfly/react-icons';\n\nconst WarningText = ({ children }) => (\n    <React.Fragment>\n        <ExclamationTriangleIcon className='ins-u-warning'/>\n        <Text component=\"span\" className='ins-c-warning-text'>\n            &nbsp;{ children }\n        </Text>\n    </React.Fragment>\n);\n\nWarningText.propTypes = {\n    children: propTypes.node\n};\n\nexport default WarningText;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst BackgroundLink = ({\n    to, hash, children, state: desiredState, backgroundLocation, ...props\n}) => {\n    const currentLocation = useLocation();\n    const background = { ...currentLocation, ...backgroundLocation };\n    const state = { ...desiredState, background };\n\n    return <Link\n        to={{ pathname: to, state, hash }}\n        { ...props }>\n        { children }\n    </Link>;\n};\n\nBackgroundLink.propTypes = {\n    backgroundLocation: propTypes.object,\n    children: propTypes.node,\n    hash: propTypes.string,\n    state: propTypes.object,\n    to: propTypes.string.isRequired\n};\n\nexport default BackgroundLink;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Link as ReactRouterLink } from 'react-router-dom';\nimport { BreadcrumbItem } from '@patternfly/react-core';\n\nconst RouterLink = ({ href, ...props }) => (\n    <ReactRouterLink { ...props } to={ href } />\n);\n\nRouterLink.propTypes = {\n    href: propTypes.string\n};\n\nconst BreadcrumbLinkItem = ({ children, ...props }) => (\n    <BreadcrumbItem { ...props } component={ RouterLink }>\n        { children}\n    </BreadcrumbItem>\n);\n\nBreadcrumbLinkItem.propTypes = {\n    children: propTypes.node\n};\n\nexport default BreadcrumbLinkItem;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { TextContent, Text, Progress } from '@patternfly/react-core';\nimport { Link } from 'react-router-dom';\nimport { PolicyPopover, GreySmallText, UnsupportedSSGVersion } from 'PresentationalComponents';\n\nexport const Name = (profile) => (\n    <TextContent>\n        <Link to={'/reports/' + profile.id} style={ { marginRight: '.5rem' }}>\n            { profile.policy?.name }\n        </Link>\n        <React.Fragment>\n            <PolicyPopover { ...{ profile, position: 'right' } } />\n            <GreySmallText>{ profile.policyType }</GreySmallText>\n        </React.Fragment>\n    </TextContent>\n);\n\nName.propTypes = {\n    profile: propTypes.object\n};\n\nexport const OperatingSystem = ({ majorOsVersion, ssgVersion, unsupportedHostCount, policy }) => {\n    const supported = unsupportedHostCount === 0;\n    ssgVersion = 'SSG: ' + ssgVersion;\n\n    return <React.Fragment>\n        RHEL { majorOsVersion }\n        { policy === null && ssgVersion && <Text>\n            <GreySmallText>\n                { supported ? ssgVersion : <UnsupportedSSGVersion>{ ssgVersion }</UnsupportedSSGVersion> }\n            </GreySmallText>\n        </Text> }\n    </React.Fragment>;\n};\n\nOperatingSystem.propTypes = {\n    majorOsVersion: propTypes.string,\n    ssgVersion: propTypes.string,\n    unsupportedHostCount: propTypes.number,\n    policy: propTypes.object\n};\n\nexport const CompliantSystems = ({ testResultHostCount = 0, compliantHostCount = 0, unsupportedHostCount = 0 }) => {\n    const tooltipText = 'Insights cannot provide a compliance score for systems running an unsupported ' +\n        'version of the SSG at the time this report was created, as the SSG version was not supported by RHEL.';\n    return <React.Fragment>\n        <Progress\n            measureLocation={ 'outside' }\n            value={ testResultHostCount ? (100 / testResultHostCount) * compliantHostCount : 0 } />\n        <GreySmallText>\n            { `${ compliantHostCount } of ${ testResultHostCount } systems ` }\n\n            { unsupportedHostCount > 0 && <UnsupportedSSGVersion { ...{ tooltipText } } style={ { marginLeft: '.5em' } }>\n                <strong className='ins-c-warning-text'>{ unsupportedHostCount } unsupported</strong>\n            </UnsupportedSSGVersion> }\n        </GreySmallText>\n    </React.Fragment>;\n};\n\nCompliantSystems.propTypes = {\n    testResultHostCount: propTypes.number,\n    compliantHostCount: propTypes.number,\n    unsupportedHostCount: propTypes.number\n};\n","import { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\n\nexport const policyNameFilter = [{\n    type: conditionalFilterType.text,\n    label: 'Policy name',\n    filter: (profiles, value) => {\n        const lowerCaseValue = value.toLowerCase();\n        return profiles.filter((profile) => (\n            [\n                profile.name,\n                profile.policy.name\n            ].join().toLowerCase().includes(lowerCaseValue)\n        ));\n    }\n}];\n\nexport const policyTypeFilter = (policyTypes) => ([{\n    type: conditionalFilterType.checkbox,\n    label: 'Policy type',\n    filter: (profiles, values) => (\n        profiles.filter(({ policyType }) => values.includes(policyType))\n    ),\n    items: policyTypes.map((policyType) => ({\n        label: policyType,\n        value: policyType\n    }))\n}]);\n\nexport const operatingSystemFilter = (operatingSystems) => ([{\n    type: conditionalFilterType.checkbox,\n    label: 'Operating system',\n    filter: (profiles, values) => (\n        profiles.filter(({ majorOsVersion }) => (\n            values.includes(majorOsVersion)\n        ))\n    ),\n    items: operatingSystems.map((operatingSystem) => ({\n        label: `RHEL ${operatingSystem}`,\n        value: operatingSystem\n    }))\n}]);\n\nexport const policyComplianceFilter = [{\n    type: conditionalFilterType.checkbox,\n    label: 'Systems meeting compliance',\n    filter: (profiles, values) => (\n        profiles.filter(({ testResultHostCount, compliantHostCount }) => {\n            const compliantHostsPercent = Math.round((100 / testResultHostCount) * compliantHostCount);\n            const matching = values.map((value) => {\n                const [min, max] = value.split('-');\n                return compliantHostsPercent >= min && compliantHostsPercent <= max;\n            }).filter((i) => (!!i));\n            return matching.length > 0;\n        })\n    ),\n    items: [\n        { label: '90 - 100%', value: '90-100' },\n        { label: '70 - 89%', value: '70-89' },\n        { label: '50 - 69%', value: '50-69' },\n        { label: 'Less than 50%', value: '0-49' }\n    ]\n}];\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Table, TableBody, TableHeader, sortable, fitContent } from '@patternfly/react-table';\nimport PrimaryToolbar from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport { emptyRows } from 'PresentationalComponents';\nimport useFilterConfig from 'Utilities/hooks/useTableTools/useFilterConfig';\nimport useTableSort from 'Utilities/hooks/useTableSort';\nimport { Name, OperatingSystem, CompliantSystems } from './Cells';\nimport { uniq } from 'Utilities/helpers';\nimport {\n    policyNameFilter, policyTypeFilter, operatingSystemFilter, policyComplianceFilter\n} from './Filters';\n\nconst ReportsTable = ({ profiles }) => {\n    const columns = [\n        {\n            title: 'Policy',\n            transforms: [sortable],\n            sortByProperty: 'name',\n            props: {\n                width: 55\n            }\n        },\n        {\n            title: 'Operating system',\n            transforms: [sortable, fitContent],\n            sortByProperty: 'majorOsVersion',\n            props: {\n                width: 20\n            }\n        },\n        {\n            title: 'Systems meeting compliance',\n            transforms: [sortable, fitContent],\n            sortByFunction: ({ testResultHostCount, compliantHostCount }) => (\n                (100 / testResultHostCount) * compliantHostCount\n            ),\n            props: {\n                width: 25\n            }\n        }\n    ];\n    const policyTypes = uniq(profiles.map(({ policyType }) => (policyType)).filter((i) => (!!i)));\n    const operatingSystems = uniq(profiles.map(({ majorOsVersion }) => (majorOsVersion)).filter((i) => (!!i)));\n    const { toolbarProps: conditionalFilter, filter } = useFilterConfig({ filters: { filterConfig: [\n        ...policyNameFilter,\n        ...policyTypes.length > 0 && policyTypeFilter(policyTypes) || [],\n        ...operatingSystems.length > 0 && operatingSystemFilter(operatingSystems) || [],\n        ...policyComplianceFilter\n    ] } });\n    const filteredProfiles = filter(profiles);\n\n    const { tableSort, sorted: sortedProfiles } = useTableSort(filteredProfiles, columns);\n    const rows = sortedProfiles.length > 0 ? sortedProfiles.map((profile) => ({\n        cells: [\n            { title: <Name { ...profile } /> },\n            { title: <OperatingSystem { ...profile } /> },\n            { title: <CompliantSystems { ...profile } /> }\n        ]\n    })) : emptyRows;\n\n    return <React.Fragment>\n        <PrimaryToolbar { ...conditionalFilter } />\n        <Table\n            aria-label='Reports'\n            ouiaId=\"ReportsTable\"\n            cells={ columns }\n            rows={ rows }\n            { ...tableSort }>\n            <TableHeader />\n            <TableBody />\n        </Table>\n    </React.Fragment>;\n};\n\nReportsTable.propTypes = {\n    profiles: propTypes.array\n};\n\nexport default ReportsTable;\n","import { useState } from 'react';\nimport { orderArrayByProp } from 'Utilities/helpers';\n\nconst useTableSort = (array, columns) => {\n    const [sortBy, setSortBy] = useState({\n        index: 0,\n        direction: 'desc'\n    });\n    const column = columns[sortBy.index];\n    const onSort = (_, index, direction) => (\n        setSortBy({\n            index,\n            direction\n        })\n    );\n\n    return {\n        tableSort: {\n            onSort,\n            sortBy\n        },\n        sorted: orderArrayByProp(\n            (column?.sortByProperty || column?.sortByFunction), array, sortBy.direction\n        )\n    };\n};\n\nexport default useTableSort;\n","import React from 'react';\nimport { Button } from '@patternfly/react-core';\nimport ComplianceEmptyState from '../ComplianceEmptyState';\nimport { BackgroundLink } from 'PresentationalComponents';\n\nconst ReportsEmptyState = () => (\n    <ComplianceEmptyState\n        title={ 'No policies are reporting' }\n        mainButton={ <BackgroundLink to='/scappolicies/new'>\n            <Button variant='primary' ouiaId=\"CreateNewPolicyButton\">Create new policy</Button>\n        </BackgroundLink> }\n    />\n);\n\nexport default ReportsEmptyState;\n","import React from 'react';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport {\n    Button,\n    Popover,\n    Text,\n    TextList,\n    TextListVariants,\n    TextListItem,\n    TextListItemVariants,\n    TextContent,\n    TextVariants\n} from '@patternfly/react-core';\nimport { fixedPercentage } from 'Utilities/TextHelper';\nimport {\n    Link\n} from 'react-router-dom';\nimport propTypes from 'prop-types';\n\nconst PolicyPopover = ({ profile, position = 'top' }) => {\n    const { policy, policyType, complianceThreshold, majorOsVersion, businessObjective } = profile;\n    return (\n        <Popover\n            { ...{ position } }\n            headerContent={\n                <TextContent>\n                    { policy?.name }\n                    <Text component={ TextVariants.small }>{ policyType }</Text>\n                </TextContent>\n            }\n            footerContent={\n                <Link to={'/scappolicies/' + policy?.id} >\n                    View policy\n                </Link>\n            }\n            bodyContent={\n                <TextContent className='policy-details'>\n                    <TextList component={TextListVariants.dl}>\n                        <TextListItem component={TextListItemVariants.dt}>\n                            Operating system\n                        </TextListItem>\n                        <TextListItem component={TextListItemVariants.dd}>\n                            RHEL { majorOsVersion }\n                        </TextListItem>\n                        <TextListItem component={TextListItemVariants.dt}>\n                            Compliance threshold\n                        </TextListItem>\n                        <TextListItem component={TextListItemVariants.dd}>\n                            { fixedPercentage(complianceThreshold, 1) }\n                        </TextListItem>\n                        { businessObjective &&\n                        <React.Fragment>\n                            <TextListItem component={TextListItemVariants.dt}>\n                                Business objective\n                            </TextListItem>\n                            <TextListItem component={TextListItemVariants.dd}>\n                                { businessObjective.title }\n                            </TextListItem>\n                        </React.Fragment> }\n                    </TextList>\n                </TextContent>\n            }\n        >\n            <Button variant=\"link\" ouiaId=\"PopoverViewPolicyLink\" isInline>\n                <OutlinedQuestionCircleIcon className='grey-icon'/>\n            </Button>\n        </Popover>\n    );\n};\n\nPolicyPopover.propTypes = {\n    profile: propTypes.object,\n    position: propTypes.string\n};\n\nexport default PolicyPopover;\n","import React, { Fragment } from 'react';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport { Tooltip } from '@patternfly/react-core';\n\nconst PolicyThresholdTooltip = () => (\n    <Tooltip\n        position='right'\n        content={\n            <Fragment>\n                The compliance threshold defines what percentage of rules must be\n                met in order for a system to be determined &quot;compliant&quot;.\n            </Fragment>\n        }\n    >\n        <span>\n            &nbsp;<OutlinedQuestionCircleIcon className='grey-icon'/>\n        </span>\n    </Tooltip>\n);\n\nexport default PolicyThresholdTooltip;\n","import React, { Fragment } from 'react';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport { Tooltip } from '@patternfly/react-core';\n\nconst PolicyBusinessObjectiveTooltip = () => (\n    <Tooltip\n        position='right'\n        content={\n            <Fragment>\n                This is an optional field that can be used to label policies that\n                are related to specific business objectives.\n            </Fragment>\n        }\n    >\n        <span>\n            &nbsp;<OutlinedQuestionCircleIcon className='grey-icon'/>\n        </span>\n    </Tooltip>\n);\n\nexport default PolicyBusinessObjectiveTooltip;\n","import React from 'react';\nimport {\n    Bullseye, EmptyState, EmptyStateBody, EmptyStateVariant, Title\n} from '@patternfly/react-core';\nimport EmptyTable from '@redhat-cloud-services/frontend-components/EmptyTable';\n\nconst NoResultsTable = () => (\n    <EmptyTable>\n        <Bullseye>\n            <EmptyState variant={ EmptyStateVariant.full }>\n                <Title headingLevel=\"h5\" size=\"lg\">\n                    No matching policies found\n                </Title>\n                <EmptyStateBody>\n                    This filter criteria matches no policies. <br /> Try changing your filter settings.\n                </EmptyStateBody>\n            </EmptyState>\n        </Bullseye>\n    </EmptyTable>\n);\n\nexport const emptyRows = [{\n    cells: [\n        {\n            title: () => (<NoResultsTable />),  // eslint-disable-line\n            props: {\n                colSpan: 3\n            }\n        }\n    ]\n}];\n\nexport default NoResultsTable;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Table, TableHeader, TableBody, fitContent } from '@patternfly/react-table';\nimport { Button, Pagination, PaginationVariant, ToolbarItem, TextContent } from '@patternfly/react-core';\nimport PrimaryToolbar from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport TableToolbar from '@redhat-cloud-services/frontend-components/TableToolbar';\nimport { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\nimport FilterConfigBuilder from 'Utilities/hooks/useTableTools/FilterConfigBuilder/FilterConfigBuilder';\nimport {\n    BackgroundLink, GreySmallText, SystemsCountWarning, emptyRows\n} from 'PresentationalComponents';\n\nexport const PolicyNameCell = ({ profile }) => (\n    <TextContent>\n        <Link to={'/scappolicies/' + profile.id}>{ profile.policy.name }</Link>\n        <GreySmallText>{ profile.policyType }</GreySmallText>\n    </TextContent>\n);\n\nPolicyNameCell.propTypes = {\n    profile: propTypes.object\n};\n\nconst policiesToRows = (policies) => (\n    policies.map((policy) => (\n        {\n            policyId: policy.id,\n            cells: [\n                { title: <PolicyNameCell profile={policy} /> },\n                { title: `RHEL ${ policy.majorOsVersion }` },\n                { title: policy.totalHostCount > 0 ? policy.totalHostCount :\n                    <SystemsCountWarning count={ policy.totalHostCount } variant='count' /> },\n                policy.businessObjective && policy.businessObjective.title || '--',\n                `${policy.complianceThreshold}%`\n            ]\n        }\n    ))\n);\n\nexport const FILTER_CONFIGURATION = [\n    {\n        type: conditionalFilterType.text,\n        label: 'Name',\n        filter: (policies, value) => (\n            policies.filter((policy) => policy.name.includes(value))\n        )\n    }\n];\n\nexport class PoliciesTable extends React.Component {\n    filterConfigBuilder = new FilterConfigBuilder(FILTER_CONFIGURATION);\n    chipBuilder = this.filterConfigBuilder.getChipBuilder();\n    filterBuilder = this.filterConfigBuilder.getFilterBuilder();\n    columns = [\n        { title: 'Name' },\n        { title: 'Operating system' },\n        { title: 'Systems' },\n        { title: 'Business objective', transforms: [fitContent] },\n        { title: 'Compliance threshold', transforms: [fitContent] }\n    ]\n    state = {\n        page: 1,\n        itemsPerPage: 10,\n        activeFilters: {}\n    }\n\n    setPage = (_event, page) => (\n        this.changePage(page, this.state.itemsPerPage)\n    )\n\n    setPerPage = (_event, itemsPerPage) => (\n        this.changePage(1, itemsPerPage)\n    )\n\n    changePage = (page, itemsPerPage) => (\n        this.setState({\n            page,\n            itemsPerPage\n        })\n    )\n\n    paginatedPolicies = (policies) => (\n        policies.slice(\n            (this.state.page - 1) * this.state.itemsPerPage,\n            this.state.page * this.state.itemsPerPage\n        )\n    )\n\n    filteredPolicies = () => (\n        this.filterConfigBuilder.applyFilterToObjectArray(\n            this.props.policies, this.state.activeFilters\n        )\n    )\n\n    onFilterUpdate = (filter, value) => {\n        this.setState({\n            page: 1,\n            activeFilters: {\n                ...this.state.activeFilters,\n                [filter]: value\n            }\n        });\n    }\n\n    deleteFilter = (chips) => {\n        const activeFilters =  this.filterConfigBuilder.removeFilterWithChip(\n            chips, this.state.activeFilters\n        );\n        this.setState({\n            activeFilters\n        });\n    }\n\n    clearAllFilter = () => (\n        this.setState({\n            activeFilters: this.filterConfigBuilder.initialDefaultState()\n        })\n    )\n\n    onFilterDelete = (_event, chips, clearAll = false) => (\n        clearAll ? this.clearAllFilter() : this.deleteFilter(chips[0])\n    )\n\n    actionResolver = () => ([\n        {\n            title: 'Delete policy',\n            onClick: (_event, _index, { policyId }) => {\n                const policy = this.props.policies.find((policy) => (\n                    policy.id === policyId\n                ));\n                this.props.history.push(`/scappolicies/${ policyId }/delete`, {\n                    policy,\n                    background: this.props.location\n                });\n            }\n        },\n        {\n            title: 'Edit policy',\n            onClick: (_event, _index, { policyId }) => {\n                const policy = this.props.policies.find((policy) => (\n                    policy.id === policyId\n                ));\n                this.props.history.push(`/scappolicies/${ policyId }/edit`, {\n                    policy,\n                    background: this.props.location,\n                    state: { policy }\n                });\n            }\n        }\n    ]);\n\n    render() {\n        const { page, itemsPerPage } = this.state;\n        const policies = this.filteredPolicies();\n        const filterChips = this.chipBuilder.chipsFor(this.state.activeFilters);\n        const rows = policiesToRows(this.paginatedPolicies(policies));\n        const filterConfig = this.filterConfigBuilder.buildConfiguration(\n            this.onFilterUpdate,\n            this.state.activeFilters,\n            { hideLabel: true }\n        );\n        const pagination = {\n            page,\n            itemCount: policies.length,\n            dropDirection: 'down',\n            onSetPage: this.setPage,\n            onPerPageSelect: this.setPerPage,\n            perPage: itemsPerPage\n        };\n\n        return <React.Fragment>\n            <PrimaryToolbar\n                filterConfig={ filterConfig }\n                activeFiltersConfig={{\n                    filters: filterChips,\n                    onDelete: this.onFilterDelete\n                }}\n                pagination={{\n                    ...pagination,\n                    dropDirection: 'down',\n                    ouiaId: 'PoliciesCompactPagination'\n                }}>\n                <ToolbarItem>\n                    <BackgroundLink to='/scappolicies/new'>\n                        <Button variant='primary' ouiaId=\"CreateNewPolicyButton\">Create new policy</Button>\n                    </BackgroundLink>\n                </ToolbarItem>\n                <ToolbarItem>\n                    { policies.length } results\n                </ToolbarItem>\n            </PrimaryToolbar>\n            <Table\n                aria-label='policies'\n                ouiaId=\"PoliciesTable\"\n                className='compliance-policies-table'\n                cells={ this.columns }\n                actionResolver={ rows.length > 0 && this.actionResolver }\n                rows={ (rows.length === 0) ? emptyRows : rows }>\n                <TableHeader />\n                <TableBody />\n            </Table>\n            <TableToolbar isFooter className=\"ins-c-inventory__table--toolbar\">\n                <Pagination\n                    { ...pagination }\n                    dropDirection='up'\n                    ouiaId=\"PoliciesPagination\"\n                    variant={ PaginationVariant.bottom }\n                />\n            </TableToolbar>\n        </React.Fragment>;\n    }\n}\n\nPoliciesTable.propTypes = {\n    policies: propTypes.array.isRequired,\n    history: propTypes.object.isRequired,\n    location: propTypes.object.isRequired\n};\n\nPoliciesTable.defaultProps = {\n    policies: []\n};\n\nexport { policiesToRows };\n\nexport default withRouter(PoliciesTable);\n","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { FormGroup } from '@patternfly/react-core';\nimport { ReduxFormTextInput } from 'PresentationalComponents/ReduxFormWrappers/ReduxFormWrappers';\nimport propTypes from 'prop-types';\nimport round from 'lodash/round';\nimport { thresholdValid } from '../../SmartComponents/CreatePolicy/validate';\nimport { PolicyThresholdTooltip } from 'PresentationalComponents';\n\nexport class ProfileThresholdField extends React.Component {\n    state = {\n        validThreshold: thresholdValid(this.props.previousThreshold),\n        threshold: round(this.props.previousThreshold || 100, 1)\n    };\n\n    handleThresholdChange = (threshold) => (\n        this.setState({\n            validThreshold: thresholdValid(threshold),\n            threshold: round(threshold, 1)\n        })\n    )\n\n    render() {\n        const { threshold, validThreshold } = this.state;\n\n        return (\n            <React.Fragment>\n                <FormGroup fieldId='policy-threshold'\n                    validated={ validThreshold ? 'default' : 'error' }\n                    helperTextInvalid='Threshold has to be a number between 0 and 100'\n                    helperText=\"A value of 95% or higher is recommended\"\n                    labelIcon={ <PolicyThresholdTooltip /> }\n                    label='Compliance threshold (%)'>\n                    <Field name='complianceThreshold' id='complianceThreshold' isRequired={true}\n                        onChange={this.handleThresholdChange}\n                        validated={ validThreshold ? 'default' : 'error' }\n                        defaultValue={threshold}\n                        aria-label=\"compliance threshold\"\n                        component={ReduxFormTextInput} type='number'\n                        style={ { width: '60%', display: 'block' } } />\n                </FormGroup>\n            </React.Fragment>\n        );\n    }\n}\n\nProfileThresholdField.propTypes = {\n    previousThreshold: propTypes.number\n};\n\nexport default reduxForm({\n    form: 'policyForm',\n    destroyOnUnmount: false,\n    forceUnregisterOnUnmount: true\n})(ProfileThresholdField);\n","import React from 'react';\nimport { supportedConfigsLink } from '../UnsupportedSSGVersion/UnsupportedSSGVersion';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\n\nconst SupportedSSGVersionsLink = () => (\n    <a target='_blank' rel='noopener noreferrer' href={ supportedConfigsLink }>\n        Supported SSG versions <ExternalLinkAltIcon />\n    </a>\n);\n\nexport default SupportedSSGVersionsLink;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Text } from '@patternfly/react-core';\n\nconst SubPageTitle = ({ children }) => (\n    <Text\n        component='h2'\n        style={ {\n            color: 'var(--pf-global--Color--200)',\n            lineHeight: '2rem'\n        } }>\n        { children }\n    </Text>\n);\n\nSubPageTitle.propTypes = {\n    children: propTypes.node\n};\n\nexport default SubPageTitle;\n","import React from 'react';\nimport {\n    EmptyStateBody, EmptyState, EmptyStateVariant, Text, TextContent, TextVariants, Title, Bullseye\n} from '@patternfly/react-core';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\nimport { WARNING_TEXT } from 'PresentationalComponents';\n\nconst NoSystemsTableWithWarning = () => (\n    <Bullseye>\n        <EmptyState variant={ EmptyStateVariant.full }>\n            <Title headingLevel=\"h2\" size='lg' style={ { fontWeight: 'bold' }}>\n                No systems on this policy\n            </Title>\n            <EmptyStateBody>\n                <TextContent>\n                    <Text component={ TextVariants.p }>\n                        Add systems to this policy from the systems page\n                    </Text>\n                    <Text style={ { color: 'var(--pf-global--warning-color--100)' }}>\n                        <ExclamationTriangleIcon /> { WARNING_TEXT }\n                    </Text>\n                </TextContent>\n            </EmptyStateBody>\n        </EmptyState>\n    </Bullseye>\n);\n\nexport default NoSystemsTableWithWarning;\n","import React from 'react';\n\nconst ConditionalLink = ({ children, href, ...additionalProps }) => (\n    href && <a href={ href } { ...additionalProps }>{ children }</a> || children || ''\n);\n\nexport default ConditionalLink;\n","export const validateBenchmarkPage = (benchmark, osMajorVersion, profile) => {\n    if (benchmark && osMajorVersion && profile) {\n        return true;\n    } else {\n        return false;\n    }\n};\n\nexport const thresholdValid = (threshold) => (\n    threshold < 101 && threshold >= 0\n);\n\nexport const validateDetailsPage = (name, refId, complianceThreshold) => (\n    !name || !refId  || !complianceThreshold || !thresholdValid(complianceThreshold) ? false : true\n);\n\nexport const validateRulesPage = (selectedRuleRefIds) => (\n    selectedRuleRefIds?.length > 0\n);\n\nexport const validateSystemsPage = (systemIds) => {\n    if (systemIds) {\n        return systemIds.length > 0;\n    } else {\n        return false;\n    }\n};\n","export const isNumberRange = (value) => value && !!value.match(/\\d\\d*-\\d\\d*/);\n\nexport const fixedPercentage = (value, fixed = 0, withPercent = true) => {\n    const fixedValue = (value)?.toFixed(fixed);\n    return fixedValue ? (fixedValue + (withPercent ? '%' : '')) : 'N/A';\n};\n\nexport const pluralize = (value, singular, plural) => {\n    if (!plural) {\n        plural = singular + 's';\n    }\n\n    return (value > 1 || value === 0 ? plural : singular);\n};\n\nexport const stringToId = (string) => (\n    string.replace(' ', '').toLowerCase()\n);\n","import React from 'react';\n\nexport const uniq = (collection) => [...new Set(collection)];\n\nexport const sortingByProp = (propName, order = 'asc') => (\n    (objA, objB) => {\n        const propA = (objA && objA[propName]) || '';\n        const propB = (objB && objB[propName]) || '';\n        if (propA === propB) {\n            return 0;\n        } else if (order === 'asc') {\n            return propA < propB ? -1 : 1;\n        } else {\n            return propA < propB ? 1 : -1;\n        }\n    }\n);\n\nexport const renderComponent = (Component, props) => (\n    (_data, _id, entity) => ( // eslint-disable-line react/display-name\n        <Component { ...entity } { ...props } />\n    )\n);\n\nconst getSortable = (property, item) => {\n    if (typeof(property) === 'function') {\n        return property(item);\n    } else {\n        return item[property];\n    }\n};\n\nexport const stringToId = (string) => (\n    string.split(' ').join('').toLowerCase()\n);\n\nexport const orderArrayByProp = (property, objects, direction) => (\n    objects.sort((a, b) => {\n        if (direction === 'asc') {\n            return String(getSortable(property, a)).localeCompare(String(getSortable(property, b)));\n        } else {\n            return -String(getSortable(property, a)).localeCompare(String(getSortable(property, b)));\n        }\n    })\n);\n\nexport const orderByArray = (objectArray, orderProp, orderArray, direction) => {\n    const sortedObjectArray = orderArray.flatMap((orderKey) => (\n        objectArray.filter((item) => (item[orderProp] === orderKey))\n    ));\n    return (direction !== 'asc' ? sortedObjectArray.reverse() : sortedObjectArray);\n};\n\nexport const getProperty = (obj, path, fallback) => {\n    const parts = path.split('.');\n    const key = parts.shift();\n    if (typeof obj[key] !== 'undefined') {\n        return parts.length > 0 ?\n            getProperty(obj[key], parts.join('.'), fallback) :\n            obj[key];\n    }\n\n    return fallback;\n};\n\nexport const camelCase = (string) => (\n    string.split(/[-_\\W]+/g)\n    .map((string) => (string.trim()))\n    .map((string) => string[0].toUpperCase() + string.substring(1))\n    .join('')\n);\n","export const stringToId = (string) => (\n    string.split(' ').join('').toLowerCase()\n);\n","import { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\nimport { stringToId } from './Helpers';\n\nclass FilterBuilder {\n    constructor(filterConfig) {\n        this.filterConfig = filterConfig;\n        this.config = this.filterConfig.config;\n    }\n\n    buildFilterFilterString = (configItem, value) => {\n        const { type, filterString } = configItem;\n\n        if (type !== 'hidden' && !value) { return []; }\n\n        switch (type) {\n            case conditionalFilterType.text:\n                return [filterString(value)];\n            case conditionalFilterType.checkbox:\n                return value.map((filter) => (filterString(filter)));\n\n            case conditionalFilterType.group:\n                return filterString(value);\n\n            case 'hidden':\n                return filterString();\n\n            default:\n                return [];\n        }\n    }\n\n    combineFilterStrings = (filterStringArray) => {\n        const moreThanTwo = filterStringArray.map((f) => (f.length)).filter((fl) => (fl > 0)).length >= 2;\n        return filterStringArray.map((fs) => (fs.join(' or '))).join(moreThanTwo ? ' and ' : '');\n    }\n\n    buildFilterString = (filters) => {\n        const filterStringArray = this.config.map((configItem) => (\n            this.buildFilterFilterString(configItem, filters[stringToId(configItem.label)])\n        )).filter((f) => (f.length > 0));\n        return this.combineFilterStrings(filterStringArray);\n    }\n}\n\nexport default FilterBuilder;\n","import { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\n\nconst findWithString = (value) => (\n    (item) => (\n        String(item.value) === String(value)\n    )\n);\n\nclass ChipBuilder {\n    constructor(filterConfig) {\n        this.filterConfig = filterConfig;\n        this.config = this.filterConfig.config;\n    }\n\n    textFilterChip = (category, currentValue) => (currentValue && currentValue !== '' ? {\n        category,\n        chips: [{ name: currentValue }]\n    } : null)\n\n    checkboxFilterChip = (category, currentValue) => (currentValue && currentValue.length > 0 ? {\n        category,\n        chips: currentValue.map((value) => (\n            { name: this.filterConfig.labelForValue(value, category) }\n        ))\n    } : null)\n\n    radioFilterChip = (category, currentValue) => (currentValue && currentValue !== '' ? {\n        category,\n        chips: [{ name: this.filterConfig.labelForValue(currentValue, category) }]\n    } : null)\n\n    groupFilterChip = (category, currentValue = {}, categoryConfig) => {\n        const items = Object.keys(currentValue).flatMap((groupValue) => {\n            const group = categoryConfig.items.find(findWithString(groupValue));\n\n            return Object.keys(currentValue[groupValue]).map((itemValue) => (\n                currentValue[groupValue][itemValue] ? group?.items.find(findWithString(itemValue)) : null\n            ));\n        }).filter((v) => (!!v));\n\n        return currentValue && items.length > 0 ? {\n            category,\n            chips: items.map((item) => ({ name: item.label }))\n        } : null;\n    }\n\n    chipFor = (filter, currentValue) => {\n        const categoryConfig = this.filterConfig.getCategoryForLabel(filter);\n        const { label, type } = categoryConfig ? categoryConfig : { label: filter, type: null };\n\n        switch (type) {\n            case conditionalFilterType.text:\n                return this.textFilterChip(label, currentValue);\n\n            case conditionalFilterType.checkbox:\n                return this.checkboxFilterChip(label, currentValue);\n\n            case conditionalFilterType.radio:\n                return this.radioFilterChip(label, currentValue);\n\n            case conditionalFilterType.group:\n                return this.groupFilterChip(label, currentValue, categoryConfig);\n\n            default:\n                return null;\n        }\n    }\n\n    chipsFor = (filters) => (\n        Object.keys(filters).map((filter) => (\n            this.chipFor(filter, filters[filter])\n        )).filter((f) => (!!f))\n    )\n}\n\nexport default ChipBuilder;\n","import { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\nimport FilterBuilder from './FilterBuilder';\nimport ChipBuilder from './ChipBuilder';\nimport { stringToId } from './Helpers';\n\nconst defaultPlaceholder = (label) => (`Filter by ${ label.toLowerCase() }`);\n\nclass FilterConfigBuilder {\n    chipBuilder = null;\n    filterBuilder = null;\n\n    constructor(config) {\n        this.config = config;\n    }\n\n    addConfigItem = (item) => (\n        this.config = this.config.filter((i) => (\n            i.label !== item.label\n        )).concat(item)\n    )\n\n    getChipBuilder = (config) => {\n        if (config) {\n            this.config = config;\n        }\n\n        return this.chipBuilder = this.chipBuilder ? this.chipBuilder : new ChipBuilder(this);\n    }\n\n    getFilterBuilder = (config) => {\n        if (config) {\n            this.config = config;\n        }\n\n        return this.filterBuilder = this.filterBuilder ? this.filterBuilder : new FilterBuilder(this);\n    }\n\n    toTextFilterConfig = (item, handler, value) => ({\n        type: conditionalFilterType.text,\n        label: item.label,\n        placeholder: defaultPlaceholder(item.label),\n        id: stringToId(item.label),\n        filterValues: {\n            value,\n            [item.event || 'onChange']: (_event, selectedValues) => {\n                handler(stringToId(item.label), selectedValues);\n            }\n        }\n    });\n\n    toCheckboxFilterConfig = (item, handler, value) => ({\n        type: conditionalFilterType.checkbox,\n        label: item.label,\n        placeholder: defaultPlaceholder(item.label),\n        id: stringToId(item.label),\n        filterValues: {\n            value,\n            items: item.items,\n            onChange: (_event, selectedValues) => {\n                handler(stringToId(item.label), selectedValues);\n            }\n        }\n    });\n\n    toRadioFilterConfig = (item, handler, value) => ({\n        type: conditionalFilterType.radio,\n        label: item.label,\n        placeholder: defaultPlaceholder(item.label),\n        id: stringToId(item.label),\n        filterValues: {\n            value,\n            items: item.items,\n            onChange: (_event, selectedValues) => {\n                handler(stringToId(item.label), selectedValues);\n            }\n        }\n    });\n\n    toGroupedFilterConfig = (item, handler, value) => ({\n        type: conditionalFilterType.group,\n        label: item.label,\n        id: stringToId(item.label),\n        filterValues: {\n            selected: value,\n            onChange: (_event, selectedValues) => {\n                handler(stringToId(item.label), selectedValues);\n            },\n            groups: item.items.map((item) => ({\n                ...item,\n                type: 'checkbox',\n                items: item.items.map((subItem) => ({\n                    ...subItem,\n                    type: 'checkbox'\n                }))\n            }))\n        }\n    });\n\n    toFilterConfigItem = (item, handler, value) => {\n        switch (item.type) {\n            case conditionalFilterType.text:\n                return this.toTextFilterConfig(item, handler, value);\n\n            case conditionalFilterType.checkbox:\n                return this.toCheckboxFilterConfig(item, handler, value);\n\n            case conditionalFilterType.radio:\n                return this.toRadioFilterConfig(item, handler, value);\n\n            case conditionalFilterType.group:\n                return this.toGroupedFilterConfig(item, handler, value);\n\n            default:\n                return null;\n        }\n    };\n\n    buildConfiguration = (handler, states, props = {}, initConfig) => ({\n        ...props,\n        items: (initConfig || this.config).map((item) => (\n            this.toFilterConfigItem(item, handler, states[stringToId(item.label)])\n        )).filter((v) => (!!v))\n    });\n\n    defaultValueForFilter = (filter) => {\n        switch (filter.type) {\n            case conditionalFilterType.text:\n                return '';\n            case conditionalFilterType.checkbox:\n                return [];\n            case 'hidden':\n                return filter.default || false;\n            default:\n                return;\n        }\n    }\n\n    initialDefaultState = (defaultStates = {}, initConfig) => {\n        let initialState = {};\n        (initConfig || this.config).forEach((filter) => {\n            const filterStateName = stringToId(filter.key || filter.label);\n            initialState[filterStateName] =\n                defaultStates[filterStateName] || this.defaultValueForFilter(filter);\n        });\n\n        return initialState;\n    }\n\n    categoryLabelForValue = (value) => {\n        const category = this.config.filter((category) => (\n            category.items ? category.items.map((item) => item.value).includes(value) : false\n        ))[0];\n\n        return category ? category.label : value;\n    };\n\n    getCategoryForLabel = (query) => (\n        this.config.filter((item) => (stringToId(item.key || item.label) === stringToId(query)))[0] || {}\n    )\n\n    getItemByLabelOrValue = (query, category) => {\n        const categoryConfig = this.getCategoryForLabel(category);\n        const items = categoryConfig.type !== conditionalFilterType.group ?\n            categoryConfig.items : categoryConfig.items.flatMap((item) => (\n                item.items.map((subItem) => ({ ...subItem, parentValue: item.value }))\n            ));\n        const results = (items || []).filter((item) => (\n            item.value === query || item.label === query\n        ));\n\n        if (results.length === 1) {\n            return results[0];\n        } else if (results.length > 1) {\n            // eslint-disable-next-line no-console\n            console.info(`Multiple items found for ${query} in ${category}! Returning first one.`);\n            return results[0];\n        } else {\n            // eslint-disable-next-line no-console\n            console.info('No item found for ' + query + ' in ', category);\n        }\n    }\n\n    labelForValue = (value, category) => {\n        const item = this.getItemByLabelOrValue(value, category);\n        return item ? item.label : value;\n    };\n\n    valueForLabel = (label, category) => {\n        const item = this.getItemByLabelOrValue(label, category);\n        return item ? item.value : label;\n    };\n\n    applyFilterToObjectArray = (objects, activeFilters) => {\n        let filteredObjects = [...objects];\n\n        Object.keys(activeFilters).forEach((filter) => {\n            const category = this.getCategoryForLabel(filter);\n            const value = activeFilters[filter];\n            if ((!category || !value)) {\n                return;\n            }\n\n            if (value.length > 0 || (category.type === 'hidden' && typeof value === 'boolean')) {\n                filteredObjects = category.filter(filteredObjects, value);\n            }\n        });\n\n        return filteredObjects;\n    }\n\n    removeFilterFromFilterState = (currentState, filter) => (\n        (typeof(currentState) === 'string') ? '' :\n            currentState.filter((value) =>\n                value !== filter\n            )\n    )\n\n    removeFilterFromGroupFilterState = (currentState, filter, chipItem) => {\n        // eslint-disable-next-line\n        const { [chipItem.value]: _remove, ...newGroupState } = currentState[chipItem.parentValue];\n        return {\n            ...currentState,\n            [chipItem.parentValue]: newGroupState\n        };\n    }\n\n    removeFilterWithChip = (chips, activeFilters) => {\n        const chipCategory = chips.category;\n        const chipLabel = chips.chips[0].name;\n        const chipItem = this.getItemByLabelOrValue(chipLabel, chipCategory);\n        const chipValue = chipItem ? chipItem.value : chipLabel;\n        const stateProp = stringToId(chipCategory);\n        const currentState = activeFilters[stateProp];\n        const categoryConfig = this.getCategoryForLabel(chipCategory);\n        const isGroup = categoryConfig.type === conditionalFilterType.group;\n        const newFilterState = (isGroup ?\n            this.removeFilterFromGroupFilterState : this.removeFilterFromFilterState\n        )(currentState, chipValue, chipItem);\n\n        return {\n            ...activeFilters,\n            [stateProp]: newFilterState\n        };\n    }\n}\n\nexport default FilterConfigBuilder;\n","import React from 'react';\nimport { Switch } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\n\nconst SelectedFilterSwitch = ({ isChecked, setActiveFilter }) => (\n    <Switch\n        label='Selected only'\n        isChecked={ isChecked }\n        onChange={ () => (\n            setActiveFilter('selected', !isChecked)\n        ) }\n    />\n);\n\nSelectedFilterSwitch.propTypes = {\n    isChecked: propTypes.bool,\n    setActiveFilter: propTypes.func\n};\n\nexport default SelectedFilterSwitch;\n","import React from 'react';\nimport SelectedFilterSwitch from './Components/SelectedFilterSwitch';\n\nconst useSelectedFilter = ({\n    setActiveFilter, activeFilters, selectedFilter\n}) => {\n    const enableSelectedFilter = !!selectedFilter;\n    const filterKey = 'selected';\n    const filterItem = {\n        type: 'hidden',\n        label: 'selectFilter',\n        key: filterKey,\n        default: true,\n        filter: (items, value) => {\n            return items.filter((item) => (item?.rowProps?.selected === value));\n        }\n    };\n    const isChecked = activeFilters[filterKey] === true;\n    const selectedToggle = <SelectedFilterSwitch { ...{\n        setActiveFilter,\n        isChecked\n    }  } />;\n\n    return enableSelectedFilter ? {\n        filterItem,\n        toolbarProps: {\n            dedicatedAction: selectedToggle\n        }\n    } : {};\n};\n\nexport default useSelectedFilter;\n","import { useState, useEffect, useMemo } from 'react';\nimport FilterConfigBuilder from './FilterConfigBuilder/FilterConfigBuilder';\nimport useSelectedFilter from './useSelectedFilter';\n\nconst filterValues = (activeFilters) => (\n    Object.values(activeFilters).filter((value) => {\n        if (typeof value === Object) {\n            return Object.values(value).length > 0;\n        }\n\n        if (typeof value === Array) {\n            return value.length > 0;\n        }\n\n        return !!value;\n    })\n);\n\nconst filterConfigBuilder = new FilterConfigBuilder([]);\n\nconst useFilterConfig = (options = {}) => {\n    const {\n        filters,\n        setPage,\n        selectedFilter\n    } = options;\n    const enableFilters = !!filters;\n    const { filterConfig = [], activeFilters: initialActiveFilters } = filters || {};\n    const [activeFilters, setActiveFilters] = useState(\n        filterConfigBuilder.initialDefaultState(initialActiveFilters, filterConfig)\n    );\n    const onFilterUpdate = (filter, value) => {\n        setActiveFilters({\n            ...activeFilters,\n            [filter]: value\n        });\n\n        setPage && setPage(1);\n    };\n\n    const addConfigItem = (item) => {\n        filterConfigBuilder.addConfigItem(item);\n        setActiveFilters(filterConfigBuilder.initialDefaultState(\n            activeFilters\n        ));\n    };\n\n    const clearAllFilter = () => (\n        setActiveFilters(filterConfigBuilder.initialDefaultState())\n    );\n\n    const deleteFilter = (chips) => (\n        setActiveFilters(filterConfigBuilder.removeFilterWithChip(\n            chips, activeFilters\n        ))\n    );\n    const onFilterDelete = (_event, chips, clearAll = false) => (\n        clearAll ? clearAllFilter() : deleteFilter(chips[0])\n    );\n\n    const filter = (items) => (\n        filterConfigBuilder.applyFilterToObjectArray(\n            items, activeFilters\n        )\n    );\n\n    const {\n        toolbarProps: selectedFilterToolbarProps, filterItem: selectFilterItem\n    } = useSelectedFilter({\n        activeFilters,\n        setActiveFilter: onFilterUpdate,\n        selectedFilter\n    });\n\n    const activeFilterValues = useMemo(() => (\n        filterValues(activeFilters)\n    ), [activeFilters]);\n\n    const filterConfigWithSelected = [...filterConfig, ...(selectFilterItem ? [selectFilterItem] : [])];\n\n    useEffect(() => {\n        filterConfigBuilder.config = [];\n        filterConfigWithSelected.filter((v) => (!!v)).forEach(addConfigItem);\n        setActiveFilters(filterConfigBuilder.initialDefaultState(\n            initialActiveFilters || []\n        ), filterConfig);\n\n        return () => {\n            filterConfigBuilder.config = [];\n        };\n    }, []);\n\n    return enableFilters ? {\n        filter,\n        selectedFilterToolbarProps,\n        toolbarProps: {\n            filterConfig: filterConfigBuilder.buildConfiguration(\n                onFilterUpdate,\n                activeFilters,\n                {},\n                filterConfigWithSelected\n            ),\n            activeFiltersConfig: {\n                filters: filterConfigBuilder.getChipBuilder(filterConfigWithSelected).chipsFor(activeFilters),\n                onDelete: onFilterDelete\n            }\n        },\n        setActiveFilter: onFilterUpdate,\n        activeFilters,\n        activeFilterValues,\n        addConfigItem,\n        filterConfigBuilder,\n        filterString: () => filterConfigBuilder.getFilterBuilder(filterConfigWithSelected).buildFilterString(activeFilters)\n    } : {};\n};\n\nexport default useFilterConfig;\n","export const profilesRulesFailed = (profiles) => (\n    profiles.flatMap(profile => profile.rules && profile.rules.filter(rule => !rule.compliant))\n);\n\nexport const profilesRulesPassed = (profiles) => (\n    profiles.flatMap(profile => profile.rules && profile.rules.filter(rule => rule.compliant))\n);\n\nexport const systemRulesPassed = (system) => (\n    system.testResultProfiles ? profilesRulesPassed(system.testResultProfiles) : []\n);\n\nexport const systemRulesFailed = (system) => (\n    system.testResultProfiles ? profilesRulesFailed(system.testResultProfiles) : []\n);\n\nexport const systemSupportedByProfiles = (profiles = []) => (\n    profiles.reduce((acc, profile) => acc && !!profile.supported, true)\n);\n\nexport const systemsWithRuleObjectsFailed = (systems) => (\n    systems.map(system => (\n        {\n            ...system,\n            ruleObjectsFailed: systemRulesFailed(system),\n            supported: systemSupportedByProfiles(system.testResultProfiles),\n            profiles: system.testResultProfiles\n        }\n    ))\n);\n\nexport const toRulesArrayWithProfile = (profilesWithRules) => (\n    profilesWithRules.flatMap((profileWithRules) => (\n        profileWithRules.rules.map((rule) => {\n            const identifier = rule.identifier && JSON.parse(rule.identifier);\n            return {\n                ...rule,\n                references: rule.references ? JSON.parse(rule.references) : [],\n                identifier: identifier && identifier.label ? identifier : null,\n                profile: profileWithRules.profile\n            };\n        })\n    ))\n);\n"],"sourceRoot":""}