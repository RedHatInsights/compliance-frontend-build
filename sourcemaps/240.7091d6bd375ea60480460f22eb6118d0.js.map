{"version":3,"file":"js/240.a5f4b95d440bde8e8757.js","mappings":"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","sources":["webpack:///./src/PresentationalComponents/ComplianceEmptyState/ComplianceEmptyState.js","webpack:///./src/PresentationalComponents/ComplianceRemediationButton/ComplianceRemediationButton.js","webpack:///./src/PresentationalComponents/ReduxFormWrappers/ReduxFormWrappers.js","webpack:///./src/PresentationalComponents/RulesTable/Cells.js","webpack:///./src/PresentationalComponents/RulesTable/Columns.js","webpack:///./src/PresentationalComponents/RulesTable/RuleDetailsRow.js","webpack:///./src/PresentationalComponents/RulesTable/EmptyRows.js","webpack:///./src/PresentationalComponents/RulesTable/Constants.js","webpack:///./src/PresentationalComponents/RulesTable/Filters.js","webpack:///./src/PresentationalComponents/RulesTable/RulesTable.js","webpack:///./src/PresentationalComponents/TabbedRules/OsVersionText.js","webpack:///./src/PresentationalComponents/TabbedRules/ProfileTabContent.js","webpack:///./src/PresentationalComponents/TabbedRules/ruleSelection.js","webpack:///./src/PresentationalComponents/TabbedRules/TabbedRules.js","webpack:///./src/PresentationalComponents/PoliciesTable/Columns.js","webpack:///./src/PresentationalComponents/LoadingPoliciesTable/LoadingPoliciesTable.js","webpack:///./src/PresentationalComponents/ErrorPage/ErrorPage.js","webpack:///./src/PresentationalComponents/ErrorCard/ErrorCard.js","webpack:///./src/PresentationalComponents/GreySmallText/GreySmallText.js","webpack:///./src/PresentationalComponents/CheckboxGroup/CheckboxGroup.js","webpack:///./src/PresentationalComponents/ProfileTypeSelect/ProfileTypeSelect.js","webpack:///./src/PresentationalComponents/ComplianceScore/ComplianceScore.js","webpack:///./src/PresentationalComponents/PolicyDetailsContentLoader/PolicyDetailsContentLoader.js","webpack:///./src/PresentationalComponents/ReportDetailsContentLoader/ReportDetailsContentLoader.js","webpack:///./src/PresentationalComponents/PolicyDetailsDescription/PolicyDetailsDescription.js","webpack:///./src/PresentationalComponents/ReportDetailsDescription/ReportDetailsDescription.js","webpack:///./src/PresentationalComponents/ProgressBar/ProgressBar.js","webpack:///./src/PresentationalComponents/TabSwitcher/TabSwitcher.js","webpack:///./src/PresentationalComponents/StateView/StateView.js","webpack:///./src/PresentationalComponents/SystemsCountWarning/SystemsCountWarning.js","webpack:///./src/PresentationalComponents/WarningText/WarningText.js","webpack:///./src/PresentationalComponents/BackgroundLink/BackgroundLink.js","webpack:///./src/PresentationalComponents/BreadcrumbLinkItem/BreadcrumbLinkItem.js","webpack:///./src/PresentationalComponents/ReportsTable/Cells.js","webpack:///./src/PresentationalComponents/ReportsTable/Columns.js","webpack:///./src/PresentationalComponents/ReportsTable/Filters.js","webpack:///./src/PresentationalComponents/ReportsTable/ReportsTable.js","webpack:///./src/PresentationalComponents/ReportsEmptyState/ReportsEmptyState.js","webpack:///./src/PresentationalComponents/PolicyPopover/PolicyPopover.js","webpack:///./src/PresentationalComponents/PolicyThresholdTooltip/PolicyThresholdTooltip.js","webpack:///./src/PresentationalComponents/PolicyBusinessObjectiveTooltip/PolicyBusinessObjectiveTooltip.js","webpack:///./src/PresentationalComponents/NoResultsTable/NoResultsTable.js","webpack:///./src/PresentationalComponents/PoliciesTable/Filters.js","webpack:///./src/PresentationalComponents/PoliciesTable/PoliciesTable.js","webpack:///./src/PresentationalComponents/ProfileThresholdField/ProfileThresholdField.js","webpack:///./src/PresentationalComponents/SupportedSSGVersionsLink/SupportedSSGVersionsLink.js","webpack:///./src/PresentationalComponents/UnsupportedSSGVersion/UnsupportedSSGVersion.js","webpack:///./src/PresentationalComponents/SubPageTitle/SubPageTitle.js","webpack:///./src/PresentationalComponents/NoSystemsTableWithWarning/NoSystemsTableWithWarning.js","webpack:///./src/PresentationalComponents/ConditionalLink/ConditionalLink.js","webpack:///./src/PresentationalComponents/ComplianceModal/ComplianceModal.js","webpack:///./src/SmartComponents/CreatePolicy/validate.js","webpack:///./src/Utilities/TextHelper.js","webpack:///./src/Utilities/helpers.js","webpack:///./src/Utilities/hooks/useTableTools/useTableSort.js","webpack:///./src/Utilities/hooks/useTableTools/usePaginate.js","webpack:///./src/Utilities/hooks/useTableTools/Components/NoResultsTable.js","webpack:///./src/Utilities/hooks/useTableTools/useRowsBuilder.js","webpack:///./src/Utilities/hooks/useTableTools/useItemIdentify.js","webpack:///./src/Utilities/hooks/useTableTools/useExpandable.js","webpack:///./src/Utilities/hooks/useTableTools/useDedicatedAction.js","webpack:///./src/Utilities/hooks/useTableTools/Components/TableToolsTable.js","webpack:///./src/Utilities/hooks/useTableTools/useTableTools.js","webpack:///./src/Utilities/hooks/useTableTools/helper.js","webpack:///./src/Utilities/hooks/useTableTools/useBulkSelect.js","webpack:///./src/Utilities/hooks/useTableTools/useExport.js","webpack:///./src/Utilities/hooks/useTableTools/FilterConfigBuilder/Helpers.js","webpack:///./src/Utilities/hooks/useTableTools/FilterConfigBuilder/FilterBuilder.js","webpack:///./src/Utilities/hooks/useTableTools/FilterConfigBuilder/ChipBuilder.js","webpack:///./src/Utilities/hooks/useTableTools/FilterConfigBuilder/FilterConfigBuilder.js","webpack:///./src/Utilities/hooks/useTableTools/Components/SelectedFilterSwitch.js","webpack:///./src/Utilities/hooks/useTableTools/useSelectedFilter.js","webpack:///./src/Utilities/hooks/useTableTools/useFilterConfig.js","webpack:///./src/Utilities/ruleHelpers.js"],"sourcesContent":["import React from 'react';\nimport propTypes from 'prop-types';\nimport { ApolloClient, HttpLink, InMemoryCache } from 'apollo-boost';\nimport {\n  Title,\n  TextContent,\n  Button,\n  Bullseye,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStatePrimary,\n  EmptyStateSecondaryActions,\n  EmptyStateIcon,\n} from '@patternfly/react-core';\nimport { CloudSecurityIcon } from '@patternfly/react-icons';\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/client';\nimport { Spinner } from '@redhat-cloud-services/frontend-components/Spinner';\nimport { ErrorCard } from 'PresentationalComponents';\nconst COMPLIANCE_API_ROOT = '/api/compliance';\n\nconst QUERY = gql`\n  {\n    profiles(search: \"external = false and canonical = false\") {\n      totalCount\n    }\n  }\n`;\n\nconst ComplianceEmptyState = ({ title, mainButton, client }) => {\n  let { data, error, loading } = useQuery(QUERY, {\n    fetchPolicy: 'network-only',\n    client,\n  });\n\n  if (loading) {\n    return <Spinner />;\n  }\n\n  if (error) {\n    const errorMsg = `Oops! Error loading System data: ${error}`;\n    return <ErrorCard message={errorMsg} />;\n  }\n\n  const policiesCount = data.profiles.totalCount;\n\n  const policyWord = policiesCount > 1 ? 'policies' : 'policy';\n  const haveWord = policiesCount > 1 ? 'have' : 'has';\n\n  return (\n    <Bullseye>\n      <EmptyState>\n        <EmptyStateIcon\n          style={{\n            fontWeight: '500',\n            color: 'var(--pf-global--primary-color--100)',\n          }}\n          size=\"xl\"\n          title=\"Compliance\"\n          icon={CloudSecurityIcon}\n        />\n        <Title headingLevel=\"h1\" size=\"lg\">\n          {title}\n        </Title>\n        <br />\n        <EmptyStateBody>\n          {policiesCount > 0 && (\n            <TextContent>\n              <a href=\"insights/compliance/scappolicies\">\n                {policiesCount} {policyWord}\n              </a>{' '}\n              {haveWord} been created but {haveWord} no reports.\n            </TextContent>\n          )}\n          <TextContent>\n            The Compliance service uses SCAP policies to track your\n            organization&#39;s adherence to compliance requirements.\n          </TextContent>\n          <TextContent>\n            Get started by adding a policy, or read documentation about how to\n            connect OpenSCAP to the Compliance service.\n          </TextContent>\n        </EmptyStateBody>\n        <EmptyStatePrimary>{mainButton}</EmptyStatePrimary>\n        <EmptyStateSecondaryActions>\n          <Button\n            variant=\"link\"\n            component=\"a\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href={\n              `https://access.redhat.com/documentation/en-us/red_hat_insights/` +\n              `2021/html/assessing_and_monitoring_security_policy_compliance_of_rhel_systems/index`\n            }\n          >\n            Learn about OpenSCAP and Compliance\n          </Button>\n        </EmptyStateSecondaryActions>\n      </EmptyState>\n    </Bullseye>\n  );\n};\n\nComplianceEmptyState.propTypes = {\n  title: propTypes.string,\n  mainButton: propTypes.object,\n  client: propTypes.object,\n};\n\nComplianceEmptyState.defaultProps = {\n  title: 'No policies',\n  mainButton: (\n    <Button\n      variant=\"primary\"\n      component=\"a\"\n      href=\"/insights/compliance/scappolicies\"\n    >\n      Create new policy\n    </Button>\n  ),\n  client: new ApolloClient({\n    link: new HttpLink({\n      uri: COMPLIANCE_API_ROOT + '/graphql',\n      credentials: 'include',\n    }),\n    cache: new InMemoryCache(),\n  }),\n};\n\nexport default ComplianceEmptyState;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Button } from '@patternfly/react-core';\nimport RemediationButton from '@redhat-cloud-services/frontend-components-remediations/RemediationButton';\nimport flatten from 'lodash/flatten';\nimport { connect } from 'react-redux';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport { AnsibeTowerIcon } from '@patternfly/react-icons';\n\nconst FallbackButton = () => (\n  <Button variant=\"primary\" isDisabled>\n    <AnsibeTowerIcon size=\"sm\" color=\"var(--pf-c-button--m-primary--Color)\" />\n    &nbsp;Remediate\n  </Button>\n);\n\nclass ComplianceRemediationButton extends React.Component {\n  formatRule = ({ title, refId }, profile, system, majorOsVersion) => ({\n    id: `ssg:rhel${majorOsVersion}|${\n      profile.split('xccdf_org.ssgproject.content_profile_')[1]\n    }|${refId}`,\n    description: title,\n    systems: [system],\n  });\n\n  uniqIssuesBySystem = (issues) => {\n    const issueIds = issues.map((issue) => issue.id);\n    return issues.filter((issue, index) => {\n      const originalIssueIndex = issueIds.indexOf(issue.id);\n      return originalIssueIndex === index\n        ? true\n        : (issues[originalIssueIndex].systems = Array.from(\n            new Set(issues[originalIssueIndex].systems.concat(issue.systems))\n          )) && false;\n    });\n  };\n\n  ruleProfile = (rule, system) => {\n    const profile = system.profiles.find((profile) =>\n      profile.rules.find((profileRule) => rule.refId === profileRule.refId)\n    );\n    if (!profile) {\n      console.log('No profile', rule, system);\n      return;\n    }\n\n    return profile;\n  };\n\n  rulesWithRemediations = (rules, system) => {\n    return rules\n      .filter(\n        (rule) =>\n          rule.remediationAvailable &&\n          this.ruleProfile(rule, system)?.supported &&\n          rule.compliant === false\n      )\n      .map((rule) => {\n        const profile = this.ruleProfile(rule, system);\n        return this.formatRule(\n          rule,\n          profile.refId,\n          system.id,\n          profile.majorOsVersion\n        );\n      });\n  };\n\n  dataProvider = () => {\n    const { allSystems, selectedRules } = this.props;\n    const result = { systems: [], issues: [] };\n\n    allSystems\n      .filter((system) => system.supported)\n      .forEach(async (system) => {\n        result.systems.push(system.id);\n\n        if (selectedRules.length !== 0) {\n          result.issues.push(this.rulesWithRemediations(selectedRules, system));\n        } else {\n          result.issues.push(\n            this.rulesWithRemediations(system.ruleObjectsFailed, system)\n          );\n        }\n      });\n\n    return Promise.all(result.issues).then((issues) => {\n      result.issues = this.uniqIssuesBySystem(flatten(issues));\n      return result;\n    });\n  };\n\n  notEmptyData = async () => {\n    const data = await this.dataProvider();\n    return data.issues.length > 0 && data.systems.length > 0;\n  };\n\n  remediationAvailable = () => {\n    const { allSystems, selectedRules } = this.props;\n    let rules = selectedRules.length\n      ? selectedRules\n      : allSystems.flatMap((system) => system.ruleObjectsFailed);\n\n    return rules.some(\n      (rule) =>\n        rule.remediationAvailable &&\n        (rule.profiles?.some((profile) => profile.supported) ||\n          allSystems.some(\n            (system) => this.ruleProfile(rule, system)?.supported\n          )) &&\n        rule.compliant === false\n    );\n  };\n\n  render() {\n    const { addNotification } = this.props;\n\n    return (\n      <React.Fragment>\n        <RemediationButton\n          isDisabled={!(this.remediationAvailable() && this.notEmptyData())}\n          onRemediationCreated={(result) =>\n            addNotification(result.getNotification())\n          }\n          dataProvider={this.dataProvider}\n          buttonProps={{\n            ouiaId: 'RemediateButton',\n          }}\n          fallback={<FallbackButton />}\n        >\n          <AnsibeTowerIcon\n            size=\"sm\"\n            color=\"var(--pf-c-button--m-primary--Color)\"\n          />\n          &nbsp;Remediate\n        </RemediationButton>\n      </React.Fragment>\n    );\n  }\n}\n\nComplianceRemediationButton.propTypes = {\n  selectedRules: propTypes.array,\n  allSystems: propTypes.arrayOf(\n    propTypes.shape({\n      id: propTypes.string,\n      name: propTypes.string,\n      supported: propTypes.bool.isRequired,\n      profiles: propTypes.arrayOf(\n        propTypes.shape({\n          refId: propTypes.string,\n          name: propTypes.string,\n          rules: propTypes.arrayOf(\n            propTypes.shape({\n              title: propTypes.string,\n              severity: propTypes.string,\n              rationale: propTypes.string,\n              refId: propTypes.string,\n              description: propTypes.string,\n              compliant: propTypes.bool,\n              identifier: propTypes.string,\n              references: propTypes.string,\n            })\n          ),\n        })\n      ),\n    })\n  ),\n  addNotification: propTypes.func,\n};\n\nComplianceRemediationButton.defaultProps = {\n  allSystems: [],\n};\n\nexport default connect(\n  () => ({}),\n  (dispatch) => ({\n    addNotification: (notification) => dispatch(addNotification(notification)),\n  })\n)(ComplianceRemediationButton);\n","import React from 'react';\nimport { TextInput, TextArea } from '@patternfly/react-core';\n\nexport const ReduxFormTextInput = (field) => (\n  <TextInput\n    value={field.input.value || field.defaultValue}\n    onChange={field.input.onChange}\n    {...field}\n  />\n);\n\nexport const ReduxFormTextArea = (field) => (\n  <TextArea\n    value={field.input.value || field.defaultValue}\n    onChange={field.input.onChange}\n    {...field}\n  />\n);\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Text, TextVariants, TextContent } from '@patternfly/react-core';\nimport {\n  CheckCircleIcon,\n  ExclamationCircleIcon,\n  ExclamationTriangleIcon,\n  QuestionCircleIcon,\n} from '@patternfly/react-icons';\n\nconst ruleProps = {\n  title: propTypes.string,\n  identifier: propTypes.object,\n  profile: propTypes.object,\n  compliant: propTypes.bool,\n  remediationAvailable: propTypes.bool,\n  severity: propTypes.string,\n};\n\nexport const Rule = ({ title, identifier }) => (\n  <TextContent>\n    {title}\n    {identifier ? (\n      <Text component={TextVariants.small}>{identifier.label}</Text>\n    ) : (\n      ''\n    )}\n  </TextContent>\n);\nRule.propTypes = ruleProps;\n\nexport const Policy = ({ profile }) => profile.name;\nPolicy.propTypes = ruleProps;\n\nexport const HighSeverity = () => (\n  <span>\n    <ExclamationCircleIcon className=\"ins-u-failed\" /> High\n  </span>\n);\n\nexport const MediumSeverity = () => (\n  <span>\n    <ExclamationTriangleIcon className=\"ins-u-warning\" /> Medium\n  </span>\n);\n\nexport const LowSeverityIcon = () => (\n    <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 18 18\" role=\"img\" style={ { verticalAlign: '-0.125em' } } xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M2 0h14a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2zm6.67 10.46a1.67 1.67 0 1 0 0 3.338 1.67 1.67 0 0 0 0-3.338zm-1.586-6l.27 4.935a.435.435 0 0 0 .434.411H9.55c.232 0 .422-.18.435-.411l.27-4.936A.435.435 0 0 0 9.818 4h-2.3c-.25 0-.448.21-.435.46z\" fill=\"#3A9CA6\" fillRule=\"evenodd\"/></svg> // eslint-disable-line\n);\n\nexport const LowSeverity = () => (\n  <span>\n    <LowSeverityIcon /> Low\n  </span>\n);\n\nexport const UnknownSeverity = () => (\n  <span>\n    <QuestionCircleIcon /> Unknown\n  </span>\n);\n\nexport const Severity = ({ severity }) =>\n  ({\n    high: <HighSeverity />,\n    medium: <MediumSeverity />,\n    low: <LowSeverity />,\n  }[severity?.toLowerCase()] || <UnknownSeverity />);\nSeverity.propTypes = ruleProps;\n\nexport const Passed = ({ compliant }) =>\n  compliant ? (\n    <CheckCircleIcon className=\"ins-u-passed\" />\n  ) : (\n    <ExclamationCircleIcon className=\"ins-u-failed\" />\n  );\nPassed.propTypes = ruleProps;\n\nexport const Ansible = ({ remediationAvailable }) =>\n  remediationAvailable ? <CheckCircleIcon className=\"ins-u-passed\" /> : 'No';\nAnsible.propTypes = ruleProps;\n","import React from 'react';\nimport { fitContent } from '@patternfly/react-table';\nimport { AnsibeTowerIcon } from '@patternfly/react-icons';\nimport { renderComponent } from 'Utilities/helpers';\nimport {\n  Rule,\n  Policy as PolicyCell,\n  Severity as SeverityCell,\n  Passed as PassedCell,\n  Ansible as AnsibleCell,\n} from './Cells';\n\nexport const Name = {\n  title: 'Name',\n  sortByProp: 'title',\n  renderExport: ({ title, identifier }) =>\n    `${title}${identifier ? ` - ${identifier.label}` : ''}`,\n  renderFunc: renderComponent(Rule),\n};\n\nexport const Policy = {\n  title: 'Policy',\n  sortByFunction: (rule) => rule?.profile?.name,\n  renderExport: (rule) => rule?.profile?.name,\n  renderFunc: renderComponent(PolicyCell),\n};\n\nexport const Severity = {\n  title: 'Severity',\n  sortByProp: 'severity',\n  exportKey: 'severity',\n  transforms: [fitContent],\n  sortByArray: ['high', 'medium', 'low', 'unknown'],\n  renderFunc: renderComponent(SeverityCell),\n};\n\nexport const Passed = {\n  title: 'Passed',\n  sortByProp: 'compliant',\n  renderExport: (rule) => (rule?.compliant ? 'Yes' : 'No'),\n  renderFunc: renderComponent(PassedCell),\n};\n\nexport const Ansible = {\n  title: (\n    <span>\n      <AnsibeTowerIcon /> Ansible\n    </span>\n  ),\n  original: 'Ansible',\n  props: {\n    tooltip: 'Ansible',\n  },\n  transforms: [fitContent],\n  sortByProp: 'remediationAvailable',\n  renderExport: (rule) => (rule?.remediationAvailable ? 'Yes' : 'No'),\n  renderFunc: renderComponent(AnsibleCell),\n};\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport {\n  Grid,\n  GridItem,\n  Stack,\n  StackItem,\n  Text,\n  TextVariants,\n} from '@patternfly/react-core';\nimport { ConditionalLink } from 'PresentationalComponents';\n\nconst RuleDetailsRow = ({ rule }) => {\n  const { refId, description, identifier, references, rationale } = rule;\n  const key = `rule-child-row-${refId}`;\n\n  return (\n    <div key={key} style={{ marginTop: 'var(--pf-global--spacer--lg)' }}>\n      <Stack id={`rule-description-${key}`} className=\"margin-bottom-lg\">\n        <StackItem style={{ marginBottom: 'var(--pf-global--spacer--sm)' }}>\n          <Text className=\"pf-c-form__label\" component={TextVariants.h5}>\n            <b>Description</b>\n          </Text>\n        </StackItem>\n        <StackItem isFilled>{description}</StackItem>\n      </Stack>\n      <Stack\n        id={`rule-identifiers-references-${key}`}\n        className=\"margin-bottom-lg\"\n      >\n        <Grid>\n          {identifier && identifier.length > 0 && (\n            <GridItem span={2}>\n              <Text className=\"pf-c-form__label\" component={TextVariants.h5}>\n                <b>Identifier</b>\n              </Text>\n              <Text>\n                {identifier\n                  .map((ident, idx) => (\n                    <ConditionalLink\n                      href={ident.system}\n                      target=\"_blank\"\n                      key={`${refId}-identifier-${idx}`}\n                    >\n                      {ident.label}\n                    </ConditionalLink>\n                  ))\n                  .reduce((prev, next) => [prev, ', ', next])}\n              </Text>\n            </GridItem>\n          )}\n\n          {references && references.length > 0 && (\n            <GridItem span={10}>\n              <Text className=\"pf-c-form__label\" component={TextVariants.h5}>\n                <b>References</b>\n              </Text>\n              <Text>\n                {references\n                  .map((ref, idx) => (\n                    <ConditionalLink\n                      href={ref.href}\n                      target=\"_blank\"\n                      key={`${refId}-reference-${idx}`}\n                    >\n                      {ref.label}\n                    </ConditionalLink>\n                  ))\n                  .reduce((prev, next) => [prev, ', ', next])}\n              </Text>\n            </GridItem>\n          )}\n        </Grid>\n      </Stack>\n\n      {rationale && (\n        <Stack\n          id={`rule-rationale-${key}`}\n          style={{ marginBottom: 'var(--pf-global--spacer--lg)' }}\n        >\n          <StackItem style={{ marginBottom: 'var(--pf-global--spacer--sm)' }}>\n            <Text className=\"pf-c-form__label\" component={TextVariants.h5}>\n              <b>Rationale</b>\n            </Text>\n          </StackItem>\n          <StackItem isFilled>{rationale}</StackItem>\n        </Stack>\n      )}\n    </div>\n  );\n};\n\nRuleDetailsRow.propTypes = {\n  rule: propTypes.object,\n};\n\nexport default RuleDetailsRow;\n","import React from 'react';\nimport {\n  Bullseye,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateVariant,\n  Title,\n} from '@patternfly/react-core';\nimport { EmptyTable } from '@redhat-cloud-services/frontend-components/EmptyTable';\n\nconst emptyRows = (columns) => [\n  {\n    cells: [\n      {\n        title: (\n          <EmptyTable>\n            <Bullseye>\n              <EmptyState variant={EmptyStateVariant.full}>\n                <Title headingLevel=\"h5\" size=\"lg\">\n                  No matching rules found\n                </Title>\n                <EmptyStateBody>\n                  This filter criteria matches no rules. <br /> Try changing\n                  your filter settings.\n                </EmptyStateBody>\n              </EmptyState>\n            </Bullseye>\n          </EmptyTable>\n        ),\n        props: {\n          colSpan: columns.length,\n        },\n      },\n    ],\n  },\n];\n\nexport default emptyRows;\n","import React from 'react';\nimport {\n  ExclamationCircleIcon,\n  ExclamationTriangleIcon,\n  QuestionCircleIcon,\n} from '@patternfly/react-icons';\nimport { LowSeverityIcon } from './Cells';\n\nexport const HIGH_SEVERITY = (\n  <span>\n    <ExclamationCircleIcon className=\"ins-u-failed\" /> High\n  </span>\n);\nexport const MEDIUM_SEVERITY = (\n  <span>\n    <ExclamationTriangleIcon className=\"ins-u-warning\" /> Medium\n  </span>\n);\nexport const LOW_SEVERITY = (\n  <span>\n    <LowSeverityIcon /> Low\n  </span>\n);\nexport const UNKNOWN_SEVERITY = (\n  <span>\n    <QuestionCircleIcon /> Unknown\n  </span>\n);\n","import {\n  HIGH_SEVERITY,\n  MEDIUM_SEVERITY,\n  LOW_SEVERITY,\n  UNKNOWN_SEVERITY,\n} from './Constants';\nimport { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\n\nconst filterRulesWithAllValues = (rules, values, valueCheck) =>\n  rules.filter(\n    (rule) =>\n      values.map((value) => valueCheck(rule, value)).filter((v) => !!v).length >\n      0\n  );\n\nconst anyFilterApply = (rules, values, valueCheck) => {\n  let filteredRules = [];\n  rules.forEach((rule) => {\n    if (\n      values.map((value) => valueCheck(rule, value)).filter((v) => !!v).length >\n      0\n    ) {\n      filteredRules.push(rule);\n    }\n  });\n  return filteredRules;\n};\n\nconst BASE_FILTER_CONFIGURATION = [\n  {\n    type: conditionalFilterType.text,\n    label: 'Name',\n    filter: (rules, value) =>\n      filterRulesWithAllValues(\n        rules,\n        [value],\n        (rule, value) =>\n          rule.title.toLowerCase().includes(value.toLowerCase()) ||\n          (rule.identifier &&\n            rule.identifier.label\n              .toLowerCase()\n              .includes(value.toLowerCase())) ||\n          rule.references.filter((reference) =>\n            reference.label.toLowerCase().includes(value.toLowerCase())\n          ).length > 0\n      ),\n  },\n  {\n    type: conditionalFilterType.checkbox,\n    label: 'Severity',\n    items: [\n      { label: HIGH_SEVERITY, value: 'high' },\n      { label: MEDIUM_SEVERITY, value: 'medium' },\n      { label: LOW_SEVERITY, value: 'low' },\n      { label: UNKNOWN_SEVERITY, value: 'unknown' },\n    ],\n    filter: (rules, values) =>\n      anyFilterApply(rules, values, (rule, value) => rule.severity === value),\n  },\n];\n\nconst PASS_FILTER_CONFIG = {\n  type: conditionalFilterType.checkbox,\n  label: 'Passed',\n  items: [\n    { label: 'Passed rules', value: 'passed' },\n    { label: 'Failed rules', value: 'failed' },\n  ],\n  filter: (rules, values) =>\n    anyFilterApply(\n      rules,\n      values,\n      (rule, value) => rule.compliant === (value === 'passed')\n    ),\n};\n\nexport const policiesFilterConfig = (policies) => ({\n  type: conditionalFilterType.checkbox,\n  label: 'Policy',\n  items: policies.map((policy) => ({ label: policy.name, value: policy.id })),\n  filter: (rules, values) =>\n    filterRulesWithAllValues(\n      rules,\n      values,\n      (rule, value) =>\n        (rule.profile.policy ? rule.profile.policy.id : rule.profile.id) ===\n        value\n    ),\n});\n\nexport const REMEDIATION_AVAILABLE_FILTER_CONFIG = {\n  type: conditionalFilterType.checkbox,\n  label: 'Remediation available',\n  items: [{ label: 'Remediation available', value: 'true' }],\n  filter: (rules, value) =>\n    rules.filter((rule) =>\n      value[0] === 'true' ? rule.remediationAvailable === true : true\n    ),\n};\n\nconst buildFilterConfig = ({\n  showPassFailFilter,\n  policies,\n  remediationAvailableFilter,\n}) => {\n  const config = [...BASE_FILTER_CONFIGURATION];\n\n  if (showPassFailFilter) {\n    config.push(PASS_FILTER_CONFIG);\n  }\n\n  if (policies && policies.length > 1) {\n    config.push(policiesFilterConfig(policies));\n  }\n\n  if (remediationAvailableFilter) {\n    config.push(REMEDIATION_AVAILABLE_FILTER_CONFIG);\n  }\n\n  return config;\n};\n\nexport default buildFilterConfig;\n","import React from 'react';\nimport propTypes from 'prop-types';\n// eslint-disable-next-line\nimport ComplianceRemediationButton from 'PresentationalComponents/ComplianceRemediationButton';\nimport { TableToolsTable } from 'Utilities/hooks/useTableTools';\nimport { toRulesArrayWithProfile } from 'Utilities/ruleHelpers';\nimport RuleDetailsRow from './RuleDetailsRow';\nimport emptyRows from './EmptyRows';\nimport buildFilterConfig from './Filters';\nimport * as Columns from './Columns';\n\nconst RulesTable = ({\n  system,\n  profileRules,\n  columns = [\n    Columns.Name,\n    Columns.Policy,\n    Columns.Severity,\n    Columns.Passed,\n    Columns.Ansible,\n  ],\n  remediationsEnabled = true,\n  remediationAvailableFilter = false,\n  selectedFilter = false,\n  handleSelect,\n  selectedRefIds = [],\n  hidePassed = false,\n  options,\n  ...rulesTableProps\n}) => {\n  const rules = toRulesArrayWithProfile(profileRules);\n  const showPassFailFilter =\n    columns.filter((c) => c.title === 'Passed').length > 0;\n  const policies = profileRules\n    .filter(({ profile }) => !!profile)\n    .map(({ profile }) => ({\n      id: profile.policy ? profile.policy.id : profile.id,\n      name: profile.name,\n    }));\n\n  const remediationAction = ({ selected: selectedRules }) => (\n    <ComplianceRemediationButton\n      allSystems={[\n        {\n          id: system.id,\n          profiles: system.testResultProfiles,\n          ruleObjectsFailed: [],\n          supported: system.supported,\n        },\n      ]}\n      selectedRules={(selectedRules || []).filter(\n        (rule) => rule.remediationAvailable\n      )}\n    />\n  );\n\n  return (\n    <TableToolsTable\n      aria-label=\"Rules Table\"\n      items={rules}\n      columns={columns}\n      isStickyHeader\n      filters={{\n        filterConfig: buildFilterConfig({\n          showPassFailFilter,\n          policies,\n          remediationAvailableFilter,\n        }),\n        ...(hidePassed && {\n          activeFilters: {\n            passed: ['failed'],\n          },\n        }),\n      }}\n      options={{\n        ...options,\n        identifier: (item) => item.refId,\n        selectable: !!handleSelect || remediationsEnabled,\n        onSelect: handleSelect,\n        preselected: selectedRefIds,\n        detailsComponent: RuleDetailsRow,\n        emptyRows: emptyRows(columns),\n        selectedFilter,\n        ...(remediationsEnabled ? { dedicatedAction: remediationAction } : {}),\n        exportable: true,\n      }}\n      {...rulesTableProps}\n    />\n  );\n};\n\nRulesTable.propTypes = {\n  profileRules: propTypes.array,\n  loading: propTypes.bool,\n  hidePassed: propTypes.bool,\n  system: propTypes.object,\n  remediationsEnabled: propTypes.bool,\n  remediationAvailableFilter: propTypes.bool,\n  selectedRefIds: propTypes.array,\n  selectedFilter: propTypes.bool,\n  handleSelect: propTypes.func,\n  columns: propTypes.array,\n  options: propTypes.object,\n};\n\nexport default RulesTable;\n","const OsVersionText = ({ profile, newOsMinorVersion }) =>\n  `RHEL${'\\u00A0'}${profile.osMajorVersion}.${\n    profile.osMinorVersion || newOsMinorVersion\n  }`;\n\nexport default OsVersionText;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport {\n  Text,\n  TextVariants,\n  TextContent,\n  Grid,\n  Spinner,\n  Badge,\n  Popover,\n} from '@patternfly/react-core';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport {\n  StateViewWithError,\n  StateViewPart,\n  SupportedSSGVersionsLink,\n  RulesTable,\n} from 'PresentationalComponents';\nimport { pluralize } from 'Utilities/TextHelper';\nimport OsVersionText from './OsVersionText';\n\nconst ProfileSystemCount = ({ count = 0 }) => (\n  <Badge isRead>{`${count} ${pluralize(count, 'system')}`}</Badge>\n);\n\nProfileSystemCount.propTypes = {\n  profile: propTypes.object,\n  count: propTypes.number,\n};\n\nconst SSGVersionText = ({ profile, newOsMinorVersion }) => (\n  <Text component={TextVariants.p}>\n    SSG version: {profile.ssgVersion}{' '}\n    <Popover\n      position=\"right\"\n      bodyContent={<SSGPopoverBody {...{ profile, newOsMinorVersion }} />}\n      footerContent={<SupportedSSGVersionsLink />}\n    >\n      <span style={{ cursor: 'pointer' }}>\n        <OutlinedQuestionCircleIcon className=\"grey-icon\" />\n      </span>\n    </Popover>\n  </Text>\n);\n\nSSGVersionText.propTypes = {\n  profile: propTypes.object.isRequired,\n  newOsMinorVersion: propTypes.string,\n};\n\nconst SSGPopoverBody = ({ profile, newOsMinorVersion }) => (\n  <TextContent style={{ fontSize: 'var(--pf-c-popover--FontSize)' }}>\n    <Text>\n      This is the latest supported version of the SCAP Security Guide (SSG) for{' '}\n      <OsVersionText {...{ profile, newOsMinorVersion }} />\n    </Text>\n    <Text>\n      <OsVersionText {...{ profile, newOsMinorVersion }} /> systems assigned to\n      this policy will report using this rule list.\n    </Text>\n  </TextContent>\n);\n\nSSGPopoverBody.propTypes = {\n  profile: propTypes.object.isRequired,\n  newOsMinorVersion: propTypes.string,\n};\n\nconst BENCHMARK_QUERY = gql`\n  query benchmarkQuery($id: String!) {\n    benchmark(id: $id) {\n      id\n      osMajorVersion\n      rules {\n        id\n        title\n        severity\n        rationale\n        refId\n        description\n        remediationAvailable\n        identifier\n      }\n    }\n  }\n`;\n\nconst ProfileTabContent = ({\n  profile,\n  columns,\n  handleSelect,\n  systemCount,\n  selectedRuleRefIds,\n  rulesTableProps,\n  newOsMinorVersion,\n}) => {\n  const {\n    data: benchmark,\n    error,\n    loading,\n  } = useQuery(BENCHMARK_QUERY, {\n    variables: {\n      id: profile.benchmark.id,\n    },\n    skip: !handleSelect || !profile.benchmark?.id,\n  });\n  const rules = handleSelect ? benchmark?.benchmark?.rules : profile?.rules;\n\n  return (\n    <React.Fragment>\n      <Grid>\n        <TextContent className=\"pf-u-mt-md\">\n          <Text component={TextVariants.h3}>\n            <span className=\"pf-u-pr-sm\">\n              <OsVersionText {...{ profile, newOsMinorVersion }} />\n            </span>\n            <ProfileSystemCount count={systemCount} />\n          </Text>\n          <SSGVersionText {...{ profile, newOsMinorVersion }} />\n        </TextContent>\n      </Grid>\n      <StateViewWithError stateValues={{ error, loading, rules }}>\n        <StateViewPart stateKey=\"loading\">\n          <Spinner />\n        </StateViewPart>\n        <StateViewPart stateKey=\"rules\">\n          <RulesTable\n            remediationAvailableFilter\n            remediationsEnabled={false}\n            columns={columns}\n            profileRules={[{ profile, rules: rules || [] }]}\n            selectedRefIds={selectedRuleRefIds}\n            handleSelect={\n              handleSelect &&\n              ((selectedRuleRefIds) =>\n                handleSelect(profile, newOsMinorVersion, selectedRuleRefIds))\n            }\n            {...rulesTableProps}\n          />\n        </StateViewPart>\n      </StateViewWithError>\n    </React.Fragment>\n  );\n};\n\nProfileTabContent.propTypes = {\n  profile: propTypes.object,\n  newOsMinorVersion: propTypes.string,\n  columns: propTypes.array,\n  handleSelect: propTypes.func,\n  systemCount: propTypes.object,\n  selectedRuleRefIds: propTypes.array,\n  rulesTableProps: propTypes.object,\n};\n\nexport default ProfileTabContent;\n","// Rule selection utilities\n\nexport const matchesSelectionItem = (\n  selectionItem,\n  profile,\n  newOsMinorVersion\n) =>\n  selectionItem.id === profile.id &&\n  selectionItem.osMinorVersion ===\n    (newOsMinorVersion || profile.osMinorVersion);\n\nexport const selectedRuleRefIdsForTab = (\n  selectedRuleRefIds,\n  profile,\n  newOsMinorVersion\n) => {\n  const tabSelection = (selectedRuleRefIds || []).find((selectionItem) =>\n    matchesSelectionItem(selectionItem, profile, newOsMinorVersion)\n  );\n  return tabSelection?.ruleRefIds || [];\n};\n\nexport const profilesWithRulesToSelection = (\n  profiles,\n  prevSelection = [],\n  options = {}\n) => {\n  const { only } = options;\n  const additionalSelection = profiles\n    .map((profile) => {\n      const foundSelection = prevSelection.find((selectionItem) =>\n        matchesSelectionItem(selectionItem, profile)\n      );\n      if (!foundSelection) {\n        if (!profile.rules) {\n          console.error(\n            `Profile ${profile.id} is missing rules for selection!`\n          );\n        }\n\n        if (!profile.osMinorVersion) {\n          console.error(\n            `Profile ${profile.id} is missing osMinorVersion for selection!`\n          );\n        }\n\n        return {\n          id: profile.id,\n          osMinorVersion: profile.osMinorVersion,\n          ruleRefIds: profile.rules?.map((rule) => rule.refId) || [],\n        };\n      } else if (only) {\n        return foundSelection;\n      }\n    })\n    .filter((v) => !!v);\n\n  return only\n    ? additionalSelection\n    : [...prevSelection, ...additionalSelection];\n};\n\nexport const tabsDataToOsMinorMap = (tabsData) => {\n  const osMinorMap = {};\n  tabsData.forEach(({ profile, newOsMinorVersion }) => {\n    if (profile?.id) {\n      const osMinorVersion = newOsMinorVersion || profile.osMinorVersion;\n      osMinorMap[profile.id] = [\n        ...(osMinorMap[profile.id] || []),\n        osMinorVersion,\n      ];\n    }\n  });\n  return osMinorMap;\n};\n\nexport const extendProfilesByOsMinor = (profiles, osMinorMap) =>\n  profiles.flatMap((profile) =>\n    (osMinorMap[profile.id] || [undefined]).map((osMinorVersion) => ({\n      ...profile,\n      osMinorVersion,\n    }))\n  );\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Tab, Badge } from '@patternfly/react-core';\nimport { RoutedTabs } from 'PresentationalComponents';\nimport ProfileTabContent from './ProfileTabContent';\nimport OsVersionText from './OsVersionText';\nimport {\n  selectedRuleRefIdsForTab,\n  matchesSelectionItem,\n} from './ruleSelection';\n\nconst eventKey = ({ id, osMinorVersion }, newOsMinorVersion) =>\n  `rules-${id}-${osMinorVersion || newOsMinorVersion}`;\n\nconst getDefaultTab = (tabsData, defaultTab) => {\n  if (!tabsData || tabsData.length === 0) {\n    return;\n  }\n\n  if (!defaultTab) {\n    const firstTab = tabsData[0];\n    defaultTab = {\n      id: firstTab.profile.id,\n      osMinorVersion:\n        firstTab.profile.osMinorVersion || firstTab.newOsMinorVersion,\n    };\n  }\n\n  return eventKey(defaultTab);\n};\n\nconst TabbedRules = ({\n  tabsData,\n  defaultTab,\n  selectedRuleRefIds,\n  setSelectedRuleRefIds,\n  columns,\n  level = 0,\n  ouiaId,\n  ...rulesTableProps\n}) => {\n  const handleSelect = (\n    profile,\n    newOsMinorVersion,\n    profileSelectedRuleRefIds\n  ) => {\n    const filteredSelection = (selectedRuleRefIds || []).filter(\n      (selectionItem) =>\n        !matchesSelectionItem(selectionItem, profile, newOsMinorVersion)\n    );\n\n    const newItem = {\n      id: profile.id,\n      osMinorVersion: newOsMinorVersion || profile.osMinorVersion,\n      ruleRefIds: profileSelectedRuleRefIds,\n    };\n    setSelectedRuleRefIds([newItem, ...filteredSelection]);\n  };\n\n  return (\n    <RoutedTabs\n      ouiaId={ouiaId}\n      level={level}\n      defaultTab={getDefaultTab(tabsData, defaultTab)}\n    >\n      {tabsData?.map(({ profile, newOsMinorVersion, systemCount }) => (\n        <Tab\n          key={eventKey(profile, newOsMinorVersion)}\n          eventKey={eventKey(profile, newOsMinorVersion)}\n          title={\n            <span>\n              <span className=\"pf-u-pr-sm\">\n                <OsVersionText\n                  profile={profile}\n                  newOsMinorVersion={newOsMinorVersion}\n                />\n              </span>\n              <Badge isRead>{systemCount}</Badge>\n            </span>\n          }\n          ouiaId={`RHEL ${profile.osMajorVersion}.${\n            profile.osMinorVersion || newOsMinorVersion\n          }`}\n        >\n          <ProfileTabContent\n            {...{\n              profile,\n              newOsMinorVersion,\n              columns,\n              rulesTableProps,\n              systemCount,\n              selectedRuleRefIds: selectedRuleRefIdsForTab(\n                selectedRuleRefIds,\n                profile,\n                newOsMinorVersion\n              ),\n              handleSelect: setSelectedRuleRefIds ? handleSelect : undefined,\n            }}\n          />\n        </Tab>\n      ))}\n    </RoutedTabs>\n  );\n};\n\nTabbedRules.propTypes = {\n  tabsData: propTypes.arrayOf(\n    propTypes.shape({\n      profile: propTypes.object.isRequired,\n      selectedRuleRefIds: propTypes.arrayOf(propTypes.string),\n      newOsMinorVersion: propTypes.string,\n      systemCount: propTypes.number,\n    })\n  ).isRequired,\n  selectedRuleRefIds: propTypes.arrayOf(\n    propTypes.shape({\n      id: propTypes.string,\n      ruleRefIds: propTypes.arrayOf(propTypes.string),\n    })\n  ),\n  setSelectedRuleRefIds: propTypes.func,\n  columns: propTypes.arrayOf(propTypes.object),\n  defaultTab: propTypes.shape({\n    id: propTypes.string,\n    osMinorVersion: propTypes.string,\n  }),\n  level: propTypes.number,\n  ouiaId: propTypes.string,\n};\n\nexport default TabbedRules;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { TextContent } from '@patternfly/react-core';\nimport { fitContent } from '@patternfly/react-table';\nimport { Link } from 'react-router-dom';\nimport { GreySmallText, SystemsCountWarning } from 'PresentationalComponents';\nimport { renderComponent } from 'Utilities/helpers';\n\nconst PolicyNameCell = ({ id, policy, policyType }) => (\n  <TextContent>\n    <Link to={'/scappolicies/' + id}>{policy.name}</Link>\n    <GreySmallText>{policyType}</GreySmallText>\n  </TextContent>\n);\n\nPolicyNameCell.propTypes = {\n  id: propTypes.string,\n  policy: propTypes.object,\n  policyType: propTypes.string,\n};\n\nexport const Name = {\n  title: 'Name',\n  props: {\n    width: 45,\n  },\n  sortByProp: 'name',\n  renderFunc: renderComponent(PolicyNameCell),\n};\n\nexport const OperatingSystem = {\n  title: 'Operating system',\n  transforms: [fitContent],\n  props: {\n    width: 15,\n  },\n  sortByProp: 'majorOsVersion',\n  renderFunc: (_data, _id, policy) => `RHEL ${policy.majorOsVersion}`,\n};\n\nexport const Systems = {\n  title: 'Systems',\n  props: {\n    width: 15,\n  },\n  sortByProp: 'totalHostCount',\n  // eslint-disable-next-line react/display-name\n  renderFunc: (_data, _id, policy) =>\n    policy.totalHostCount > 0 ? (\n      policy.totalHostCount\n    ) : (\n      <SystemsCountWarning count={policy.totalHostCount} variant=\"count\" />\n    ),\n};\n\nexport const BusinessObjective = {\n  title: 'Business objective',\n  sortByFunction: (policy) => policy?.businessObjective?.title,\n  renderFunc: (_data, _id, policy) =>\n    (policy.businessObjective && policy.businessObjective.title) || '--',\n};\n\nexport const ComplianceThreshold = {\n  title: 'Compliance threshold',\n  sortByProp: 'complianceThreshold',\n  renderFunc: (_data, _id, policy) => `${policy.complianceThreshold}%`,\n};\n\nexport default [\n  Name,\n  OperatingSystem,\n  Systems,\n  BusinessObjective,\n  ComplianceThreshold,\n];\n","import React from 'react';\nimport { Table, TableHeader, TableBody } from '@patternfly/react-table';\nimport RowLoader from '@redhat-cloud-services/frontend-components-utilities/RowLoader';\nimport columns from '../PoliciesTable/Columns';\n\nconst LoadingPoliciesTable = () => (\n  <Table\n    aria-label=\"policies-table\"\n    ouiaId=\"PoliciesTable\"\n    cells={columns}\n    rows={[...Array(5)].map(() => ({\n      cells: [\n        {\n          title: <RowLoader />,\n          colSpan: 5,\n        },\n      ],\n    }))}\n  >\n    <TableHeader />\n    <TableBody />\n  </Table>\n);\n\nexport default LoadingPoliciesTable;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Title, Button, Text } from '@patternfly/react-core';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport InvalidObject from '@redhat-cloud-services/frontend-components/InvalidObject';\nimport NotAuthorized from '@redhat-cloud-services/frontend-components/NotAuthorized';\n\nconst ErrorPage = ({ error, ...props }) => {\n  if (error.networkError && error.networkError.statusCode === 401) {\n    window.insights.chrome.auth.logout(true);\n    return false;\n  }\n\n  if (error.networkError && error.networkError.statusCode === 403) {\n    return <NotAuthorized serviceName=\"Compliance\" />;\n  }\n\n  if (error.networkError && error.networkError.statusCode === 404) {\n    return <InvalidObject />;\n  }\n\n  return (\n    <section\n      {...props}\n      className=\"pf-l-page__main-section pf-c-page__main-section ins-c-component_invalid-componet\"\n    >\n      <ExclamationCircleIcon\n        size=\"xl\"\n        style={{ color: 'var(--pf-global--danger-color--100)' }}\n      />\n      <Title headingLevel=\"h1\">There was an error</Title>\n      <Text>\n        If you need to contact Red Hat Support about this, this is the exact\n        error:\n        <Text>{error.message}</Text>\n      </Text>\n      <Button\n        variant=\"link\"\n        ouiaId=\"ErrorPageGoBackButton\"\n        onClick={history.goBack}\n      >\n        Go back\n      </Button>\n    </section>\n  );\n};\n\nErrorPage.propTypes = {\n  error: propTypes.object,\n};\n\nexport default ErrorPage;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Card, CardHeader, CardBody } from '@patternfly/react-core';\nimport { NotEqualIcon } from '@patternfly/react-icons';\n\nconst ErrorCard = ({ errorMsg }) => (\n  <Card className=\"ins-error-card\">\n    <CardHeader>\n      <NotEqualIcon />\n    </CardHeader>\n    <CardBody>\n      <div>{errorMsg}</div>\n    </CardBody>\n  </Card>\n);\n\nErrorCard.propTypes = {\n  errorMsg: propTypes.string,\n};\n\nexport default ErrorCard;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Text, TextVariants } from '@patternfly/react-core';\n\nexport const GreySmallText = ({ children }) => (\n  <Text\n    style={{ color: 'var(--pf-global--Color--200)' }}\n    component={TextVariants.small}\n  >\n    {children}\n  </Text>\n);\n\nGreySmallText.propTypes = {\n  children: propTypes.node,\n};\n\nexport default GreySmallText;\n","import React from 'react';\nimport { Field } from 'redux-form';\nimport propTypes from 'prop-types';\nimport { Checkbox } from '@patternfly/react-core';\n\nconst CheckboxFieldArray = ({ input, options }) => {\n  const { name, onChange } = input;\n  const inputValue = input.value;\n\n  const handleChange = (checked, value) => {\n    const arr = [...new Set(inputValue)];\n    if (checked) {\n      arr.push(value);\n    } else {\n      arr.splice(arr.indexOf(value), 1);\n    }\n\n    return onChange(arr);\n  };\n\n  return (\n    <React.Fragment>\n      {options.map(({ label, value, defaultChecked }, index) => (\n        <Checkbox\n          key={value}\n          id={value}\n          label={label}\n          name={`${name}[${index}]`}\n          value={value}\n          isChecked={\n            inputValue === '' ? defaultChecked : inputValue.includes(value)\n          }\n          onChange={(checked) => handleChange(checked, value)}\n        />\n      ))}\n    </React.Fragment>\n  );\n};\n\nCheckboxFieldArray.propTypes = {\n  input: propTypes.shape({\n    name: propTypes.string.isRequired,\n    onChange: propTypes.func,\n    value: propTypes.string,\n  }),\n  options: propTypes.arrayOf(\n    propTypes.shape({\n      label: propTypes.string.isRequired,\n      value: propTypes.string.isRequired,\n      defaultChecked: propTypes.bool,\n    })\n  ).isRequired,\n};\n\nconst CheckboxGroup = (props) => (\n  <Field {...props} type=\"checkbox\" component={CheckboxFieldArray} />\n);\n\nCheckboxGroup.propTypes = {\n  options: propTypes.arrayOf(\n    propTypes.shape({\n      label: propTypes.string.isRequired,\n      value: propTypes.string.isRequired,\n      defaultChecked: propTypes.bool,\n    })\n  ).isRequired,\n};\n\nexport { CheckboxFieldArray };\nexport default CheckboxGroup;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport Truncate from '@redhat-cloud-services/frontend-components/Truncate';\nimport {\n  Grid,\n  GridItem,\n  Label,\n  TextContent,\n  Text,\n  Tooltip,\n  Radio,\n} from '@patternfly/react-core';\n\nconst InUseProfileLabel = () => (\n  <Tooltip\n    position=\"right\"\n    content=\"A policy of this type is already in use.\n        Only one policy per policy type can be created for a major release of RHEL.\"\n  >\n    <Label color=\"orange\" style={{ lineHeight: '1.5em' }}>\n      In use\n    </Label>\n  </Tooltip>\n);\n\nconst ProfileTypeSelect = ({ profiles, onChange, selectedProfile }) => (\n  <React.Fragment>\n    {profiles?.length === 0 && (\n      <TextContent style={{ color: 'var(--pf-c-content--blockquote--Color)' }}>\n        <Text>Select an operating system to view policy types.</Text>\n      </TextContent>\n    )}\n\n    <Grid hasGutter>\n      {profiles.map((profile) => {\n        const { description, name, id, disabled } = profile;\n        return (\n          <React.Fragment key={`profile-select-${id}`}>\n            <GridItem span={8} rowSpan={2}>\n              <Radio\n                id={`profile-select-text-${id}`}\n                label={\n                  <>\n                    {` ${name} `}\n                    {disabled && <InUseProfileLabel />}\n                  </>\n                }\n                isDisabled={disabled}\n                description={\n                  <Truncate\n                    inline\n                    key={`profile-select-text-${id}`}\n                    length={190}\n                    text={description}\n                  />\n                }\n                isChecked={selectedProfile === JSON.stringify(profile)}\n                onChange={(_, event) => onChange(event.currentTarget?.value)}\n                value={JSON.stringify(profile)}\n              />\n            </GridItem>\n          </React.Fragment>\n        );\n      })}\n    </Grid>\n  </React.Fragment>\n);\n\nProfileTypeSelect.propTypes = {\n  profiles: propTypes.array,\n  onChange: propTypes.func,\n  selectedProfile: propTypes.object,\n};\n\nProfileTypeSelect.defaultProps = {\n  profiles: [],\n  onClick: () => ({}),\n};\n\nexport default ProfileTypeSelect;\n","import React from 'react';\nimport {\n  QuestionCircleIcon,\n  CheckCircleIcon,\n  ExclamationCircleIcon,\n} from '@patternfly/react-icons';\nimport { Text, Tooltip } from '@patternfly/react-core';\nimport { fixedPercentage } from 'Utilities/TextHelper';\n\nconst CompliantIcon = (system) => {\n  if (system.rulesPassed + system.rulesFailed === 0) {\n    return <QuestionCircleIcon color=\"var(--pf-global--disabled-color--100)\" />;\n  } else {\n    return system.compliant ? (\n      <CheckCircleIcon color=\"var(--pf-global--success-color--200)\" />\n    ) : (\n      <ExclamationCircleIcon color=\"var(--pf-global--danger-color--100)\" />\n    );\n  }\n};\n\nexport const complianceScoreString = (system) => {\n  if (system.supported === false) {\n    return ' Unsupported';\n  } else if (system.rulesPassed + system.rulesFailed === 0) {\n    return ' N/A';\n  }\n\n  return ' ' + fixedPercentage(system.score);\n};\n\nconst ComplianceScore = (system) => (\n  <Text>\n    {system.supported ? (\n      <Tooltip\n        content={\n          'The system compliance score is calculated by OpenSCAP and ' +\n          'is a normalized weighted sum of rules selected for this policy.'\n        }\n      >\n        <CompliantIcon\n          key={`system-compliance-icon-${system.id}`}\n          {...system}\n        />\n        {complianceScoreString(system)}\n      </Tooltip>\n    ) : (\n      complianceScoreString(system)\n    )}\n  </Text>\n);\n\nexport default ComplianceScore;\n","import React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nconst PolicyDetailsContentLoader = () => (\n  <ContentLoader\n    speed={2}\n    width={1000}\n    height={400}\n    viewBox=\"0 0 1000 400\"\n    backgroundcolor=\"#f3f3f3\"\n    foregroundcolor=\"#ecebeb\"\n  >\n    <rect x=\"-3\" y=\"7\" rx=\"3\" ry=\"3\" width=\"760\" height=\"19\" />\n    <rect x=\"823\" y=\"3\" rx=\"3\" ry=\"3\" width=\"67\" height=\"29\" />\n    <rect x=\"910\" y=\"3\" rx=\"3\" ry=\"3\" width=\"67\" height=\"29\" />\n    <rect x=\"6\" y=\"54\" rx=\"0\" ry=\"0\" width=\"46\" height=\"19\" />\n    <rect x=\"68\" y=\"54\" rx=\"0\" ry=\"0\" width=\"46\" height=\"19\" />\n    <rect x=\"133\" y=\"54\" rx=\"0\" ry=\"0\" width=\"46\" height=\"19\" />\n    <rect x=\"3\" y=\"110\" rx=\"0\" ry=\"0\" width=\"255\" height=\"17\" />\n    <rect x=\"1\" y=\"149\" rx=\"0\" ry=\"0\" width=\"47\" height=\"16\" />\n    <rect x=\"1\" y=\"185\" rx=\"0\" ry=\"0\" width=\"255\" height=\"17\" />\n    <rect x=\"-1\" y=\"224\" rx=\"0\" ry=\"0\" width=\"187\" height=\"16\" />\n    <rect x=\"-4\" y=\"267\" rx=\"0\" ry=\"0\" width=\"255\" height=\"17\" />\n    <rect x=\"-6\" y=\"306\" rx=\"0\" ry=\"0\" width=\"47\" height=\"16\" />\n    <rect x=\"-6\" y=\"342\" rx=\"0\" ry=\"0\" width=\"255\" height=\"17\" />\n    <rect x=\"-8\" y=\"381\" rx=\"0\" ry=\"0\" width=\"187\" height=\"16\" />\n  </ContentLoader>\n);\n\nexport default PolicyDetailsContentLoader;\n","import React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nconst ReportDetailsContentLoader = () => (\n  <ContentLoader\n    height={320}\n    width={1550}\n    speed={2}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n  >\n    <rect x=\"18\" y=\"50\" rx=\"4\" ry=\"4\" width=\"478\" height=\"15\" />\n    <rect x=\"19\" y=\"18\" rx=\"3\" ry=\"3\" width=\"220\" height=\"9\" />\n    <circle cx=\"118\" cy=\"156\" r=\"73\" />\n    <rect x=\"1002\" y=\"40\" rx=\"0\" ry=\"0\" width=\"69\" height=\"23\" />\n    <rect x=\"47\" y=\"77\" rx=\"0\" ry=\"0\" width=\"0\" height=\"0\" />\n    <rect x=\"36\" y=\"77\" rx=\"0\" ry=\"0\" width=\"16\" height=\"0\" />\n    <rect x=\"409\" y=\"149\" rx=\"0\" ry=\"0\" width=\"0\" height=\"0\" />\n    <rect x=\"214\" y=\"145\" rx=\"0\" ry=\"0\" width=\"205\" height=\"9\" />\n    <rect x=\"216\" y=\"119\" rx=\"0\" ry=\"0\" width=\"205\" height=\"9\" />\n    <rect x=\"526\" y=\"100\" rx=\"0\" ry=\"0\" width=\"431\" height=\"8\" />\n    <rect x=\"526\" y=\"122\" rx=\"0\" ry=\"0\" width=\"431\" height=\"8\" />\n    <rect x=\"526\" y=\"146\" rx=\"0\" ry=\"0\" width=\"431\" height=\"8\" />\n    <rect x=\"527\" y=\"170\" rx=\"0\" ry=\"0\" width=\"431\" height=\"8\" />\n    <rect x=\"527\" y=\"194\" rx=\"0\" ry=\"0\" width=\"431\" height=\"8\" />\n    <rect x=\"527\" y=\"218\" rx=\"0\" ry=\"0\" width=\"431\" height=\"8\" />\n    <rect x=\"529\" y=\"275\" rx=\"0\" ry=\"0\" width=\"231\" height=\"7\" />\n  </ContentLoader>\n);\n\nexport default ReportDetailsContentLoader;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { fixedPercentage } from 'Utilities/TextHelper';\nimport {\n  PolicyBusinessObjectiveTooltip,\n  PolicyThresholdTooltip,\n} from 'PresentationalComponents';\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  TextContent,\n  TextVariants,\n  Text,\n} from '@patternfly/react-core';\nimport Truncate from '@redhat-cloud-services/frontend-components/Truncate';\nimport linkifyHtml from 'linkifyjs/html';\n\nconst PolicyDetailsDescription = ({ policy }) => (\n  <Card ouiaId=\"PolicyDetailsCard\">\n    <CardHeader>\n      <Text style={{ fontSize: 20 }}>\n        <b>Policy details</b>\n      </Text>\n    </CardHeader>\n    <CardBody>\n      <TextContent>\n        <Text component={TextVariants.h5}>\n          Compliance threshold\n          <PolicyThresholdTooltip />\n        </Text>\n        <Text className=\"threshold-tooltip\" component={TextVariants.p}>\n          {fixedPercentage(policy.complianceThreshold, 1)}\n        </Text>\n        <Text component={TextVariants.h5}>\n          Business objective\n          <PolicyBusinessObjectiveTooltip />\n        </Text>\n        <Text component={TextVariants.p}>\n          {(policy.businessObjective && policy.businessObjective.title) || '-'}\n        </Text>\n        <Text component={TextVariants.h5}>Policy description</Text>\n        <Text component={TextVariants.p}>\n          <Truncate\n            text={linkifyHtml(policy.description || '')}\n            length={380}\n            inline={true}\n          />\n        </Text>\n        <Text component={TextVariants.h5}>Operating system</Text>\n        <Text component={TextVariants.p}>RHEL {policy.majorOsVersion}</Text>\n        <Text component={TextVariants.h5}>Policy type </Text>\n        <Text component={TextVariants.p}>{policy.policyType}</Text>\n        <Text component={TextVariants.h5}>Reference ID</Text>\n        <Text component={TextVariants.p}>{policy.refId}</Text>\n      </TextContent>\n    </CardBody>\n  </Card>\n);\n\nPolicyDetailsDescription.propTypes = {\n  policy: propTypes.object,\n};\n\nexport default PolicyDetailsDescription;\n","import React from 'react';\nimport { fixedPercentage } from 'Utilities/TextHelper';\nimport propTypes from 'prop-types';\nimport {\n  Text,\n  TextContent,\n  TextList,\n  TextListVariants,\n  TextListItem,\n  TextListItemVariants,\n} from '@patternfly/react-core';\nimport { Link } from 'react-router-dom';\n\nconst PropTypes = {\n  children: propTypes.node,\n};\n\nconst Dt = ({ children, ...props }) => (\n  <TextListItem {...props} component={TextListItemVariants.dt}>\n    {children}\n  </TextListItem>\n);\nDt.propTypes = PropTypes;\n\nconst Dd = ({ children, ...props }) => (\n  <TextListItem {...props} component={TextListItemVariants.dd}>\n    {children}\n  </TextListItem>\n);\nDd.propTypes = PropTypes;\n\nconst PolicyDescription = ({ profile }) => (\n  <React.Fragment>\n    <TextList component={TextListVariants.dl}>\n      <Dt>\n        <Text className=\"ins-c-non-bold-h2\">Policy details</Text>\n      </Dt>\n      <Dt>Operating system</Dt>\n      <Dd>RHEL {profile.majorOsVersion}</Dd>\n      <Dt>Compliance threshold</Dt>\n      <Dd>{fixedPercentage(profile.complianceThreshold, 1)}</Dd>\n      <Dt>Business objective</Dt>\n      <Dd>\n        {profile.businessObjective ? profile.businessObjective.title : '--'}\n      </Dd>\n    </TextList>\n    <Link to={'/scappolicies/' + profile.policy.id}>View policy</Link>\n  </React.Fragment>\n);\n\nPolicyDescription.propTypes = {\n  profile: propTypes.shape({\n    id: propTypes.string,\n    complianceThreshold: propTypes.number,\n    businessObjective: propTypes.object,\n    majorOsVersion: propTypes.string,\n    policy: propTypes.shape({\n      id: propTypes.string,\n    }),\n    benchmark: propTypes.shape({\n      version: propTypes.string,\n    }),\n  }),\n};\n\nconst ReportDetailsDescription = ({ profile }) => (\n  <TextContent className=\"policy-details\">\n    <PolicyDescription {...{ profile }} />\n  </TextContent>\n);\n\nReportDetailsDescription.propTypes = {\n  profile: propTypes.object,\n};\n\nexport default ReportDetailsDescription;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport {\n  Progress,\n  ProgressVariant,\n} from '@patternfly/react-core/dist/js/components/Progress';\n\nconst ProgressBar = ({ percent, failed }) => {\n  let variant;\n  let title;\n\n  if (percent === 100) {\n    title = 'Success';\n    variant = ProgressVariant.success;\n  } else if (failed) {\n    title = 'Error';\n    variant = ProgressVariant.danger;\n  } else {\n    title = 'Progress';\n    variant = ProgressVariant.info;\n  }\n\n  return (\n    <Progress\n      id={'finished-create-policy'}\n      value={percent}\n      title={title}\n      variant={variant}\n      className=\"wizard-progress-bar\"\n    />\n  );\n};\n\nProgressBar.propTypes = {\n  percent: propTypes.number,\n  failed: propTypes.bool,\n};\n\nexport default ProgressBar;\n","import React from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport propTypes from 'prop-types';\nimport { Tabs } from '@patternfly/react-core';\nimport { useAnchor } from 'Utilities/Router';\n\n// Plain tab component without any styling\nexport const ContentTab = ({ children }) => children;\n\nconst findTab = (tabs, key) => tabs.find((tab) => tab.props.eventKey === key);\n\nconst useAnchorLevels = (defaultAnchor, level) => {\n  const anchor = useAnchor(defaultAnchor);\n  const levels = anchor.split('|');\n  const currentAnchor = levels[level] || defaultAnchor;\n\n  return {\n    levels,\n    currentAnchor,\n  };\n};\n\n// Shows always only one tab, either the current or if not available the default\nconst TabSwitcher = ({ children, activeKey: currentAnchor, defaultTab }) => {\n  const getDefaultTab = () =>\n    defaultTab ? findTab(children, defaultTab) : children[0];\n  const currentTab = findTab(children, currentAnchor);\n\n  return currentTab ? [currentTab] : [getDefaultTab()];\n};\n\nTabSwitcher.propTypes = {\n  activeTab: propTypes.number,\n  children: propTypes.node,\n};\n\n// Routed Plain switcher that can be used with PatternFly tabs\nexport const RoutedTabSwitcher = ({ children, defaultTab, level }) => {\n  const { currentAnchor } = useAnchorLevels(defaultTab, level);\n\n  return <TabSwitcher activeKey={currentAnchor}>{children}</TabSwitcher>;\n};\n\nRoutedTabSwitcher.propTypes = {\n  children: propTypes.node,\n  defaultTab: propTypes.string,\n  level: propTypes.number,\n};\n\nRoutedTabSwitcher.defaultProps = {\n  level: 0,\n};\n\n// Allows to use full PatternFly tabs and switch them using the URL hash\n// It can be used with filled tabs (EditPolicyForm) or just tab \"buttons\" (PolicyDetails)\nexport const RoutedTabs = ({\n  children,\n  defaultTab,\n  level,\n  ouiaId,\n  ...props\n}) => {\n  const { push } = useHistory();\n  const { pathname, state } = useLocation();\n  const { currentAnchor, levels } = useAnchorLevels(defaultTab, level);\n  const handleTabSelect = (e, eventKey) => {\n    e.preventDefault();\n    const tabToActivate = eventKey.replace('#', '');\n    let tabAnchor = levels;\n    tabAnchor[level] = tabToActivate;\n\n    push({\n      state,\n      to: pathname,\n      hash: tabAnchor.slice(0, level + 1).join('|'),\n    });\n  };\n  const tabAvailable = children\n    .map(({ props: { eventKey } }) => eventKey)\n    .find((tabAnchor) => tabAnchor === currentAnchor);\n\n  return (\n    <Tabs\n      {...props}\n      ouiaId={ouiaId}\n      onSelect={handleTabSelect}\n      activeKey={tabAvailable ? currentAnchor : defaultTab}\n    >\n      {children}\n    </Tabs>\n  );\n};\n\nRoutedTabs.defaultProps = {\n  level: 0,\n};\n\nRoutedTabs.propTypes = {\n  children: propTypes.node,\n  defaultTab: propTypes.string,\n  level: propTypes.number,\n  ouiaId: propTypes.string,\n};\n\nexport default TabSwitcher;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { ErrorPage } from 'PresentationalComponents';\n\nexport const StateViewPart = ({ children }) => children;\n\nconst props = {\n  stateValues: propTypes.object,\n  children: propTypes.node,\n};\n\nexport const StateView = ({ stateValues, children }) =>\n  children\n    .flatMap((c) => c)\n    .filter((child) => stateValues[child.props.stateKey]);\n\nStateView.propTypes = props;\n\nexport const StateViewWithError = ({ stateValues, children }) => (\n  <StateView stateValues={stateValues}>\n    <StateViewPart key=\"error-state\" stateKey=\"error\">\n      <ErrorPage error={stateValues.error} />\n    </StateViewPart>\n    {children}\n  </StateView>\n);\n\nStateViewWithError.propTypes = props;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport { WarningText } from 'PresentationalComponents';\n\nconst WARNING_TEXT = 'Policies without systems will not have reports.';\n\nconst WithOptionalToolTip = ({ showTooltip, children }) =>\n  showTooltip ? (\n    <Tooltip position={TooltipPosition.bottom} content={WARNING_TEXT}>\n      {children}\n    </Tooltip>\n  ) : (\n    children\n  );\n\nWithOptionalToolTip.propTypes = {\n  showTooltip: propTypes.bool,\n  children: propTypes.node,\n};\n\nconst SystemsCountWarning = ({ count, variant }) => {\n  let text;\n\n  switch (variant) {\n    case 'count':\n      text = count;\n      break;\n    case 'compact':\n      text = 'No Systems';\n      break;\n    case 'full':\n      text = WARNING_TEXT;\n      break;\n    default:\n      text = count;\n  }\n\n  return (\n    <WithOptionalToolTip\n      showTooltip={variant === 'count' || variant === 'compact'}\n    >\n      <WarningText>{text}</WarningText>\n    </WithOptionalToolTip>\n  );\n};\n\nSystemsCountWarning.defaultProps = {\n  variant: 'compact',\n};\n\nSystemsCountWarning.propTypes = {\n  count: propTypes.number.isRequired,\n  variant: propTypes.string,\n};\n\nexport { WARNING_TEXT };\nexport default SystemsCountWarning;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Text } from '@patternfly/react-core';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\n\nconst WarningText = ({ children }) => (\n  <React.Fragment>\n    <ExclamationTriangleIcon className=\"ins-u-warning\" />\n    <Text component=\"span\" className=\"ins-c-warning-text\">\n      &nbsp;{children}\n    </Text>\n  </React.Fragment>\n);\n\nWarningText.propTypes = {\n  children: propTypes.node,\n};\n\nexport default WarningText;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst BackgroundLink = ({\n  to,\n  hash,\n  children,\n  state: desiredState,\n  backgroundLocation,\n  ...props\n}) => {\n  const currentLocation = useLocation();\n  const background = { ...currentLocation, ...backgroundLocation };\n  const state = { ...desiredState, background };\n\n  return (\n    <Link to={{ pathname: to, state, hash }} {...props}>\n      {children}\n    </Link>\n  );\n};\n\nBackgroundLink.propTypes = {\n  backgroundLocation: propTypes.object,\n  children: propTypes.node,\n  hash: propTypes.string,\n  state: propTypes.object,\n  to: propTypes.string.isRequired,\n};\n\nexport default BackgroundLink;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Link as ReactRouterLink } from 'react-router-dom';\nimport { BreadcrumbItem } from '@patternfly/react-core';\n\nconst RouterLink = ({ href, ...props }) => (\n  <ReactRouterLink {...props} to={href} />\n);\n\nRouterLink.propTypes = {\n  href: propTypes.string,\n};\n\nconst BreadcrumbLinkItem = ({ children, ...props }) => (\n  <BreadcrumbItem {...props} component={RouterLink}>\n    {children}\n  </BreadcrumbItem>\n);\n\nBreadcrumbLinkItem.propTypes = {\n  children: propTypes.node,\n};\n\nexport default BreadcrumbLinkItem;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Button, TextContent, Text, Progress } from '@patternfly/react-core';\nimport { DownloadIcon } from '@patternfly/react-icons';\nimport { Link } from 'react-router-dom';\nimport {\n  BackgroundLink,\n  PolicyPopover,\n  GreySmallText,\n  UnsupportedSSGVersion,\n} from 'PresentationalComponents';\n\nexport const Name = (profile) => (\n  <TextContent>\n    <Link to={'/reports/' + profile.id} style={{ marginRight: '.5rem' }}>\n      {profile.policy?.name}\n    </Link>\n    <React.Fragment>\n      <PolicyPopover {...{ profile, position: 'right' }} />\n      <GreySmallText>{profile.policyType}</GreySmallText>\n    </React.Fragment>\n  </TextContent>\n);\n\nName.propTypes = {\n  profile: propTypes.object,\n};\n\nexport const OperatingSystem = ({\n  majorOsVersion,\n  ssgVersion,\n  unsupportedHostCount,\n  policy,\n}) => {\n  const supported = unsupportedHostCount === 0;\n  ssgVersion = 'SSG: ' + ssgVersion;\n\n  return (\n    <React.Fragment>\n      RHEL {majorOsVersion}\n      {policy === null && ssgVersion && (\n        <Text>\n          <GreySmallText>\n            {supported ? (\n              ssgVersion\n            ) : (\n              <UnsupportedSSGVersion>{ssgVersion}</UnsupportedSSGVersion>\n            )}\n          </GreySmallText>\n        </Text>\n      )}\n    </React.Fragment>\n  );\n};\n\nOperatingSystem.propTypes = {\n  majorOsVersion: propTypes.string,\n  ssgVersion: propTypes.string,\n  unsupportedHostCount: propTypes.number,\n  policy: propTypes.object,\n};\n\nexport const CompliantSystems = ({\n  testResultHostCount = 0,\n  compliantHostCount = 0,\n  unsupportedHostCount = 0,\n}) => {\n  const tooltipText =\n    'Insights cannot provide a compliance score for systems running an unsupported ' +\n    'version of the SSG at the time this report was created, as the SSG version was not supported by RHEL.';\n  return (\n    <React.Fragment>\n      <Progress\n        aria-label=\"Compliant systems\"\n        measureLocation={'outside'}\n        value={\n          testResultHostCount\n            ? (100 / testResultHostCount) * compliantHostCount\n            : 0\n        }\n      />\n      <GreySmallText>\n        {`${compliantHostCount} of ${testResultHostCount} systems `}\n\n        {unsupportedHostCount > 0 && (\n          <UnsupportedSSGVersion\n            {...{ tooltipText }}\n            style={{ marginLeft: '.5em' }}\n          >\n            <strong className=\"ins-c-warning-text\">\n              {unsupportedHostCount} unsupported\n            </strong>\n          </UnsupportedSSGVersion>\n        )}\n      </GreySmallText>\n    </React.Fragment>\n  );\n};\n\nCompliantSystems.propTypes = {\n  testResultHostCount: propTypes.number,\n  compliantHostCount: propTypes.number,\n  unsupportedHostCount: propTypes.number,\n};\n\nexport const PDFExportDownload = (profile) => {\n  return (\n    <BackgroundLink to={`/reports/${profile.id}/pdf`}>\n      <Button\n        ouiaId=\"ReportsDownloadReportPDFLink\"\n        variant=\"plain\"\n        className=\"pf-u-mr-md\"\n      >\n        <DownloadIcon />\n      </Button>\n    </BackgroundLink>\n  );\n};\n","import { fitContent } from '@patternfly/react-table';\nimport { renderComponent } from 'Utilities/helpers';\nimport {\n  Name as NameCell,\n  OperatingSystem as OperatingSystemCell,\n  CompliantSystems as CompliantSystemsCell,\n  PDFExportDownload as PDFExportDownloadCell,\n} from './Cells';\n\nexport const Name = {\n  title: 'Policy',\n  sortByProp: 'name',\n  props: {\n    width: 60,\n  },\n  exportKey: 'name',\n  renderFunc: renderComponent(NameCell),\n};\n\nexport const OperatingSystem = {\n  title: 'Operating system',\n  transforms: [fitContent],\n  sortByProp: 'majorOsVersion',\n  props: {\n    width: 20,\n  },\n  renderExport: ({ majorOsVersion }) => `RHEL ${majorOsVersion} `,\n  renderFunc: renderComponent(OperatingSystemCell),\n};\n\nexport const CompliantSystems = {\n  title: 'Systems meeting compliance',\n  transforms: [fitContent],\n  sortByFunction: ({ testResultHostCount, compliantHostCount }) =>\n    (100 / testResultHostCount) * compliantHostCount,\n  props: {\n    width: 20,\n  },\n  renderExport: ({\n    testResultHostCount = 0,\n    compliantHostCount = 0,\n    unsupportedHostCount = 0,\n  }) =>\n    `${compliantHostCount} of ${testResultHostCount} systems${\n      unsupportedHostCount > 0 ? ` | ${unsupportedHostCount} unsupported` : ''\n    }`,\n  renderFunc: renderComponent(CompliantSystemsCell),\n};\n\nexport const PDFExportDownload = {\n  title: '',\n  renderFunc: renderComponent(PDFExportDownloadCell),\n};\n\nconst PolicyType = {\n  title: 'Policy Type',\n  renderExport: (profile) => profile.policyType,\n};\n\nexport const exportableColumns = [\n  Name,\n  PolicyType,\n  OperatingSystem,\n  CompliantSystems,\n];\n\nexport default [Name, OperatingSystem, CompliantSystems];\n","import { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\n\nexport const policyNameFilter = [\n  {\n    type: conditionalFilterType.text,\n    label: 'Policy name',\n    filter: (profiles, value) => {\n      const lowerCaseValue = value.toLowerCase();\n      return profiles.filter((profile) =>\n        [profile.name, profile.policy.name]\n          .join()\n          .toLowerCase()\n          .includes(lowerCaseValue)\n      );\n    },\n  },\n];\n\nexport const policyTypeFilter = (policyTypes) => [\n  {\n    type: conditionalFilterType.checkbox,\n    label: 'Policy type',\n    filter: (profiles, values) =>\n      profiles.filter(({ policyType }) => values.includes(policyType)),\n    items: policyTypes.map((policyType) => ({\n      label: policyType,\n      value: policyType,\n    })),\n  },\n];\n\nexport const operatingSystemFilter = (operatingSystems) => [\n  {\n    type: conditionalFilterType.checkbox,\n    label: 'Operating system',\n    filter: (profiles, values) =>\n      profiles.filter(({ majorOsVersion }) => values.includes(majorOsVersion)),\n    items: operatingSystems.map((operatingSystem) => ({\n      label: `RHEL ${operatingSystem}`,\n      value: operatingSystem,\n    })),\n  },\n];\n\nexport const policyComplianceFilter = [\n  {\n    type: conditionalFilterType.checkbox,\n    label: 'Systems meeting compliance',\n    filter: (profiles, values) =>\n      profiles.filter(({ testResultHostCount, compliantHostCount }) => {\n        const compliantHostsPercent = Math.round(\n          (100 / testResultHostCount) * compliantHostCount\n        );\n        const matching = values\n          .map((value) => {\n            const [min, max] = value.split('-');\n            return compliantHostsPercent >= min && compliantHostsPercent <= max;\n          })\n          .filter((i) => !!i);\n        return matching.length > 0;\n      }),\n    items: [\n      { label: '90 - 100%', value: '90-100' },\n      { label: '70 - 89%', value: '70-89' },\n      { label: '50 - 69%', value: '50-69' },\n      { label: 'Less than 50%', value: '0-49' },\n    ],\n  },\n];\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { emptyRows } from 'PresentationalComponents';\nimport { TableToolsTable } from 'Utilities/hooks/useTableTools';\nimport { uniq } from 'Utilities/helpers';\nimport useFeature from 'Utilities/hooks/useFeature';\nimport columns, { exportableColumns, PDFExportDownload } from './Columns';\nimport {\n  policyNameFilter,\n  policyTypeFilter,\n  operatingSystemFilter,\n  policyComplianceFilter,\n} from './Filters';\n\nconst ReportsTable = ({ profiles }) => {\n  const pdfReportEnabled = useFeature('pdfReport');\n  const policyTypes = uniq(\n    profiles.map(({ policyType }) => policyType).filter((i) => !!i)\n  );\n  const operatingSystems = uniq(\n    profiles.map(({ majorOsVersion }) => majorOsVersion).filter((i) => !!i)\n  );\n\n  return (\n    <TableToolsTable\n      aria-label=\"Reports\"\n      ouiaId=\"ReportsTable\"\n      columns={[\n        ...columns,\n        ...((pdfReportEnabled && [PDFExportDownload]) || []),\n      ]}\n      items={profiles}\n      emptyRows={emptyRows}\n      isStickyHeader\n      filters={{\n        filterConfig: [\n          ...policyNameFilter,\n          ...((policyTypes.length > 0 && policyTypeFilter(policyTypes)) || []),\n          ...((operatingSystems.length > 0 &&\n            operatingSystemFilter(operatingSystems)) ||\n            []),\n          ...policyComplianceFilter,\n        ],\n      }}\n      options={{\n        exportable: {\n          columns: exportableColumns,\n        },\n      }}\n    />\n  );\n};\n\nReportsTable.propTypes = {\n  profiles: propTypes.array,\n};\n\nexport default ReportsTable;\n","import React from 'react';\nimport { Button } from '@patternfly/react-core';\nimport ComplianceEmptyState from '../ComplianceEmptyState';\nimport { BackgroundLink } from 'PresentationalComponents';\n\nconst ReportsEmptyState = () => (\n  <ComplianceEmptyState\n    title={'No policies are reporting'}\n    mainButton={\n      <BackgroundLink to=\"/scappolicies/new\">\n        <Button variant=\"primary\" ouiaId=\"CreateNewPolicyButton\">\n          Create new policy\n        </Button>\n      </BackgroundLink>\n    }\n  />\n);\n\nexport default ReportsEmptyState;\n","import React from 'react';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport {\n  Button,\n  Popover,\n  Text,\n  TextList,\n  TextListVariants,\n  TextListItem,\n  TextListItemVariants,\n  TextContent,\n  TextVariants,\n} from '@patternfly/react-core';\nimport { fixedPercentage } from 'Utilities/TextHelper';\nimport { Link } from 'react-router-dom';\nimport propTypes from 'prop-types';\n\nconst PolicyPopover = ({ profile, position = 'top' }) => {\n  const {\n    policy,\n    policyType,\n    complianceThreshold,\n    majorOsVersion,\n    businessObjective,\n  } = profile;\n  return (\n    <Popover\n      {...{ position }}\n      headerContent={\n        <TextContent>\n          {policy?.name}\n          <Text component={TextVariants.small}>{policyType}</Text>\n        </TextContent>\n      }\n      footerContent={\n        <Link to={'/scappolicies/' + policy?.id}>View policy</Link>\n      }\n      bodyContent={\n        <TextContent className=\"policy-details\">\n          <TextList component={TextListVariants.dl}>\n            <TextListItem component={TextListItemVariants.dt}>\n              Operating system\n            </TextListItem>\n            <TextListItem component={TextListItemVariants.dd}>\n              RHEL {majorOsVersion}\n            </TextListItem>\n            <TextListItem component={TextListItemVariants.dt}>\n              Compliance threshold\n            </TextListItem>\n            <TextListItem component={TextListItemVariants.dd}>\n              {fixedPercentage(complianceThreshold, 1)}\n            </TextListItem>\n            {businessObjective && (\n              <React.Fragment>\n                <TextListItem component={TextListItemVariants.dt}>\n                  Business objective\n                </TextListItem>\n                <TextListItem component={TextListItemVariants.dd}>\n                  {businessObjective.title}\n                </TextListItem>\n              </React.Fragment>\n            )}\n          </TextList>\n        </TextContent>\n      }\n    >\n      <Button variant=\"link\" ouiaId=\"PopoverViewPolicyLink\" isInline>\n        <OutlinedQuestionCircleIcon className=\"grey-icon\" />\n      </Button>\n    </Popover>\n  );\n};\n\nPolicyPopover.propTypes = {\n  profile: propTypes.object,\n  position: propTypes.string,\n};\n\nexport default PolicyPopover;\n","import React, { Fragment } from 'react';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport { Tooltip } from '@patternfly/react-core';\n\nconst PolicyThresholdTooltip = () => (\n  <Tooltip\n    position=\"right\"\n    content={\n      <Fragment>\n        The compliance threshold defines what percentage of rules must be met in\n        order for a system to be determined &quot;compliant&quot;.\n      </Fragment>\n    }\n  >\n    <span>\n      &nbsp;\n      <OutlinedQuestionCircleIcon className=\"grey-icon\" />\n    </span>\n  </Tooltip>\n);\n\nexport default PolicyThresholdTooltip;\n","import React, { Fragment } from 'react';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport { Tooltip } from '@patternfly/react-core';\n\nconst PolicyBusinessObjectiveTooltip = () => (\n  <Tooltip\n    position=\"right\"\n    content={\n      <Fragment>\n        This is an optional field that can be used to label policies that are\n        related to specific business objectives.\n      </Fragment>\n    }\n  >\n    <span>\n      &nbsp;\n      <OutlinedQuestionCircleIcon className=\"grey-icon\" />\n    </span>\n  </Tooltip>\n);\n\nexport default PolicyBusinessObjectiveTooltip;\n","import React from 'react';\nimport {\n  Bullseye,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateVariant,\n  Title,\n} from '@patternfly/react-core';\nimport EmptyTable from '@redhat-cloud-services/frontend-components/EmptyTable';\n\nconst NoResultsTable = () => (\n  <EmptyTable>\n    <Bullseye>\n      <EmptyState variant={EmptyStateVariant.full}>\n        <Title headingLevel=\"h5\" size=\"lg\">\n          No matching policies found\n        </Title>\n        <EmptyStateBody>\n          This filter criteria matches no policies. <br /> Try changing your\n          filter settings.\n        </EmptyStateBody>\n      </EmptyState>\n    </Bullseye>\n  </EmptyTable>\n);\n\nexport const emptyRows = [\n  {\n    cells: [\n      {\n            title: () => (<NoResultsTable />),  // eslint-disable-line\n        props: {\n          colSpan: 3,\n        },\n      },\n    ],\n  },\n];\n\nexport default NoResultsTable;\n","import { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\n\nexport const nameFilter = {\n  type: conditionalFilterType.text,\n  label: 'Name',\n  filter: (policies, value) =>\n    policies.filter((policy) =>\n      policy.name.toLowerCase().includes(value.toLowerCase())\n    ),\n};\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { Button } from '@patternfly/react-core';\nimport { BackgroundLink, emptyRows } from 'PresentationalComponents';\nimport { TableToolsTable } from 'Utilities/hooks/useTableTools';\nimport columns from './Columns';\nimport * as Filters from './Filters';\n\nconst DedicatedAction = () => (\n  <div>\n    <BackgroundLink to=\"/scappolicies/new\">\n      <Button variant=\"primary\" ouiaId=\"CreateNewPolicyButton\">\n        Create new policy\n      </Button>\n    </BackgroundLink>\n  </div>\n);\n\nexport const PoliciesTable = ({ policies, location, history }) => {\n  const filters = Object.values(Filters);\n\n  const actionResolver = () => [\n    {\n      title: 'Delete policy',\n      onClick: (_event, _index, { itemId: policyId }) => {\n        const policy = policies.find((policy) => policy.id === policyId);\n        history.push(`/scappolicies/${policyId}/delete`, {\n          policy,\n          background: location,\n        });\n      },\n    },\n    {\n      title: 'Edit policy',\n      onClick: (_event, _index, { itemId: policyId }) => {\n        const policy = policies.find((policy) => policy.id === policyId);\n        history.push(`/scappolicies/${policyId}/edit`, {\n          policy,\n          background: location,\n          state: { policy },\n        });\n      },\n    },\n  ];\n\n  return (\n    <TableToolsTable\n      aria-label=\"Policies\"\n      ouiaId=\"PoliciesTable\"\n      className=\"compliance-policies-table\"\n      columns={columns}\n      items={policies}\n      emptyRows={emptyRows}\n      isStickyHeader\n      filters={{\n        filterConfig: filters,\n      }}\n      options={{\n        dedicatedAction: DedicatedAction,\n      }}\n      actionResolver={actionResolver}\n    />\n  );\n};\n\nPoliciesTable.propTypes = {\n  policies: propTypes.array.isRequired,\n  history: propTypes.object.isRequired,\n  location: propTypes.object.isRequired,\n};\n\nPoliciesTable.defaultProps = {\n  policies: [],\n};\n\nexport default withRouter(PoliciesTable);\n","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { FormGroup } from '@patternfly/react-core';\nimport { ReduxFormTextInput } from 'PresentationalComponents/ReduxFormWrappers/ReduxFormWrappers';\nimport propTypes from 'prop-types';\nimport round from 'lodash/round';\nimport { thresholdValid } from '../../SmartComponents/CreatePolicy/validate';\nimport { PolicyThresholdTooltip } from 'PresentationalComponents';\n\nexport class ProfileThresholdField extends React.Component {\n  state = {\n    validThreshold: thresholdValid(this.props.previousThreshold),\n    threshold: round(this.props.previousThreshold || 100, 1),\n  };\n\n  handleThresholdChange = (threshold) =>\n    this.setState({\n      validThreshold: thresholdValid(threshold),\n      threshold: round(threshold, 1),\n    });\n\n  render() {\n    const { threshold, validThreshold } = this.state;\n\n    return (\n      <React.Fragment>\n        <FormGroup\n          fieldId=\"policy-threshold\"\n          validated={validThreshold ? 'default' : 'error'}\n          helperTextInvalid=\"Threshold has to be a number between 0 and 100\"\n          helperText=\"A value of 95% or higher is recommended\"\n          labelIcon={<PolicyThresholdTooltip />}\n          label=\"Compliance threshold (%)\"\n        >\n          <Field\n            name=\"complianceThreshold\"\n            id=\"complianceThreshold\"\n            isRequired={true}\n            onChange={this.handleThresholdChange}\n            validated={validThreshold ? 'default' : 'error'}\n            defaultValue={threshold}\n            aria-label=\"compliance threshold\"\n            component={ReduxFormTextInput}\n            type=\"number\"\n            style={{ width: '60%', display: 'block' }}\n          />\n        </FormGroup>\n      </React.Fragment>\n    );\n  }\n}\n\nProfileThresholdField.propTypes = {\n  previousThreshold: propTypes.number,\n};\n\nexport default reduxForm({\n  form: 'policyForm',\n  destroyOnUnmount: false,\n  forceUnregisterOnUnmount: true,\n})(ProfileThresholdField);\n","import React from 'react';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport { supportedConfigsLink } from '@/constants';\n\nconst SupportedSSGVersionsLink = () => (\n  <a target=\"_blank\" rel=\"noopener noreferrer\" href={supportedConfigsLink}>\n    Supported SSG versions <ExternalLinkAltIcon />\n  </a>\n);\n\nexport default SupportedSSGVersionsLink;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Popover, Tooltip, Text } from '@patternfly/react-core';\nimport {\n  ExclamationTriangleIcon,\n  OutlinedQuestionCircleIcon,\n} from '@patternfly/react-icons';\nimport { SupportedSSGVersionsLink } from 'PresentationalComponents';\n\nconst UNSUPPORTED_SINGULAR_MESSAGE =\n  'This system was using an incompatible version of the SSG at the time this report was generated. ' +\n  'Assessment of rules failed/passed on this system is a best-guess effort and may not be accurate.';\n\nconst UNSUPPORTED_PLURAL_MESSAGE = (\n  <React.Fragment>\n    <Text variant=\"p\" style={{ marginBottom: '1rem' }}>\n      These systems are running unsupported versions of the SCAP Security Guide\n      (SSG) for the version of RHEL installed on them. Assessment of rules\n      failed/passed on these systems is a best-guess effort and may not be\n      accurate.\n    </Text>\n    <Text variant=\"p\">\n      The policy&apos;s compliance score excludes these systems.\n    </Text>\n  </React.Fragment>\n);\n\nconst WarningWithPopover = ({ children, variant = 'plural' }) => (\n  <Popover\n    id=\"unsupported-popover\"\n    maxWidth=\"25rem\"\n    headerContent=\"Unsupported SSG versions\"\n    bodyContent={\n      variant === 'plural'\n        ? UNSUPPORTED_PLURAL_MESSAGE\n        : UNSUPPORTED_SINGULAR_MESSAGE\n    }\n    footerContent={<SupportedSSGVersionsLink />}\n  >\n    {children}\n  </Popover>\n);\n\nWarningWithPopover.propTypes = {\n  children: propTypes.node,\n  variant: propTypes.oneOf(['singular', 'plural']),\n};\n\nconst WarningWithTooltip = ({ children, content }) => (\n  <Tooltip content={content} position=\"bottom\">\n    {children}\n  </Tooltip>\n);\n\nWarningWithTooltip.propTypes = {\n  content: propTypes.string,\n  children: propTypes.node,\n};\n\nconst TooltipOrPopover = ({ variant, children, tooltipProps }) => {\n  const { Component, componentProps } = {\n    tooltip: {\n      Component: WarningWithTooltip,\n      componentProps: tooltipProps,\n    },\n    popover: {\n      Component: WarningWithPopover,\n      componentProps: {\n        showHeader: tooltipProps.showPopupHeader,\n        variant: tooltipProps.messageVariant,\n      },\n    },\n  }[variant];\n\n  return <Component {...componentProps}>{children}</Component>;\n};\n\nTooltipOrPopover.propTypes = {\n  children: propTypes.node,\n  variant: propTypes.oneOf(['tooltip', 'popover']),\n  tooltipProps: propTypes.object,\n};\n\nconst UnsupportedSSGVersion = ({\n  children,\n  showWarningIcon = true,\n  showHelpIcon = false,\n  style,\n  tooltipText,\n  messageVariant,\n}) => {\n  const tooltipProps = {\n    ...(tooltipText && { content: <div>{tooltipText}</div> }),\n    messageVariant,\n  };\n  const variant = tooltipText ? 'tooltip' : 'popover';\n  const iconProps = {\n    variant,\n    tooltipProps,\n  };\n  const defaultStyle = !tooltipText ? { cursor: 'pointer' } : {};\n\n  return (\n    <span style={{ ...style, display: 'inline-block' }}>\n      {showWarningIcon && (\n        <TooltipOrPopover {...iconProps}>\n          <span style={defaultStyle} className=\"pf-u-mr-xs\">\n            <ExclamationTriangleIcon color=\"var(--pf-global--warning-color--100)\" />\n          </span>\n        </TooltipOrPopover>\n      )}\n\n      {children}\n\n      {showHelpIcon && (\n        <TooltipOrPopover {...iconProps}>\n          <span style={defaultStyle} className=\"pf-u-ml-xs\">\n            <OutlinedQuestionCircleIcon />\n          </span>\n        </TooltipOrPopover>\n      )}\n    </span>\n  );\n};\n\nUnsupportedSSGVersion.propTypes = {\n  showWarningIcon: propTypes.bool,\n  showHelpIcon: propTypes.bool,\n  style: propTypes.object,\n  tooltipText: propTypes.string,\n  children: propTypes.node,\n  variant: propTypes.string,\n  messageVariant: propTypes.string,\n  showPopupHeader: propTypes.bool,\n};\n\nexport default UnsupportedSSGVersion;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Text } from '@patternfly/react-core';\n\nconst SubPageTitle = ({ children }) => (\n  <Text\n    component=\"h2\"\n    style={{\n      color: 'var(--pf-global--Color--200)',\n      lineHeight: '2rem',\n    }}\n  >\n    {children}\n  </Text>\n);\n\nSubPageTitle.propTypes = {\n  children: propTypes.node,\n};\n\nexport default SubPageTitle;\n","import React from 'react';\nimport {\n  EmptyStateBody,\n  EmptyState,\n  EmptyStateVariant,\n  Text,\n  TextContent,\n  TextVariants,\n  Title,\n  Bullseye,\n} from '@patternfly/react-core';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\nimport { WARNING_TEXT } from 'PresentationalComponents';\n\nconst NoSystemsTableWithWarning = () => (\n  <Bullseye>\n    <EmptyState variant={EmptyStateVariant.full}>\n      <Title headingLevel=\"h2\" size=\"lg\" style={{ fontWeight: 'bold' }}>\n        No systems on this policy\n      </Title>\n      <EmptyStateBody>\n        <TextContent>\n          <Text component={TextVariants.p}>\n            Add systems to this policy from the systems page\n          </Text>\n          <Text style={{ color: 'var(--pf-global--warning-color--100)' }}>\n            <ExclamationTriangleIcon /> {WARNING_TEXT}\n          </Text>\n        </TextContent>\n      </EmptyStateBody>\n    </EmptyState>\n  </Bullseye>\n);\n\nexport default NoSystemsTableWithWarning;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ConditionalLink = ({ children, href, ...additionalProps }) =>\n  (href && (\n    <a href={href} {...additionalProps}>\n      {children}\n    </a>\n  )) ||\n  children ||\n  '';\n\nConditionalLink.propTypes = {\n  children: PropTypes.node,\n  href: PropTypes.string,\n};\n\nexport default ConditionalLink;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Modal } from '@patternfly/react-core';\n\n// Provides a modal with defaults used in compliance\nconst ComplianceModal = ({ children, className = '', ...props }) => {\n  return (\n    <Modal\n      className={`compliance${className ? ` ${className}` : ''}`}\n      {...props}\n    >\n      {children}\n    </Modal>\n  );\n};\n\nComplianceModal.propTypes = {\n  children: propTypes.node,\n  className: propTypes.string,\n};\n\nexport default ComplianceModal;\n","export const validateBenchmarkPage = (benchmark, osMajorVersion, profile) => {\n  if (benchmark && osMajorVersion && profile) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport const thresholdValid = (threshold) => threshold < 101 && threshold >= 0;\n\nexport const validateDetailsPage = (name, refId, complianceThreshold) =>\n  !name ||\n  !refId ||\n  !complianceThreshold ||\n  !thresholdValid(complianceThreshold)\n    ? false\n    : true;\n\nexport const validateRulesPage = (selectedRuleRefIds) =>\n  selectedRuleRefIds?.length > 0;\n\nexport const validateSystemsPage = (systemIds) => {\n  if (systemIds) {\n    return systemIds.length > 0;\n  } else {\n    return false;\n  }\n};\n","export const isNumberRange = (value) => value && !!value.match(/\\d\\d*-\\d\\d*/);\n\nexport const fixedPercentage = (value, fixed = 0, withPercent = true) => {\n  const fixedValue = value?.toFixed(fixed);\n  return fixedValue ? fixedValue + (withPercent ? '%' : '') : 'N/A';\n};\n\nexport const pluralize = (value, singular, plural) => {\n  if (!plural) {\n    plural = singular + 's';\n  }\n\n  return value > 1 || value === 0 ? plural : singular;\n};\n\nexport const stringToId = (string) => string.replace(' ', '').toLowerCase();\n","import React from 'react';\nimport natsort from 'natsort';\n\nexport const uniq = (collection) => [...new Set(collection)];\n\nexport const sortingByProp =\n  (propName, order = 'asc') =>\n  (objA, objB) => {\n    const descending = order != 'asc';\n    const propA = (objA && objA[propName]) || '';\n    const propB = (objB && objB[propName]) || '';\n\n    const sorter = natsort({ desc: descending });\n    return sorter(propA, propB);\n  };\n\n// eslint-disable-next-line react/display-name\nexport const renderComponent = (Component, props) => (_data, _id, entity) =>\n  <Component {...entity} {...props} />;\n\nconst getSortable = (property, item) => {\n  if (typeof property === 'function') {\n    return property(item);\n  } else {\n    return item[property];\n  }\n};\n\nexport const stringToId = (string) => string.split(' ').join('').toLowerCase();\n\nexport const orderArrayByProp = (property, objects, direction) =>\n  objects.sort((a, b) => {\n    if (direction === 'asc') {\n      return String(getSortable(property, a)).localeCompare(\n        String(getSortable(property, b))\n      );\n    } else {\n      return -String(getSortable(property, a)).localeCompare(\n        String(getSortable(property, b))\n      );\n    }\n  });\n\nexport const orderByArray = (objectArray, orderProp, orderArray, direction) => {\n  const sortedObjectArray = orderArray.flatMap((orderKey) =>\n    objectArray.filter((item) => item[orderProp] === orderKey)\n  );\n  return direction !== 'asc' ? sortedObjectArray.reverse() : sortedObjectArray;\n};\n\nexport const getProperty = (obj, path, fallback) => {\n  const parts = path.split('.');\n  const key = parts.shift();\n  if (typeof obj[key] !== 'undefined') {\n    return parts.length > 0\n      ? getProperty(obj[key], parts.join('.'), fallback)\n      : obj[key];\n  }\n\n  return fallback;\n};\n\nexport const camelCase = (string) =>\n  string\n    .split(/[-_\\W]+/g)\n    .map((string) => string.trim())\n    .map((string) => string[0].toUpperCase() + string.substring(1))\n    .join('');\n","import { useState } from 'react';\nimport { sortable } from '@patternfly/react-table';\nimport { orderArrayByProp, orderByArray, uniq } from 'Utilities/helpers';\n\nconst isSortable = (column) => column.sortByProp || column.sortByFunction;\n\nconst addSortableTransform = (columns) =>\n  columns.map((column) => ({\n    ...column,\n    ...(isSortable(column)\n      ? {\n          transforms: uniq([...(column?.transforms || []), sortable]),\n        }\n      : {}),\n  }));\n\nconst columnOffset = (options = {}) =>\n  (typeof options.onSelect === 'function') +\n  (typeof options.detailsComponent !== 'undefined');\n\nconst useTableSort = (columns, options = {}) => {\n  const [sortBy, setSortBy] = useState(\n    options.sortBy || {\n      index: 0,\n      direction: 'asc',\n    }\n  );\n  const onSort = (_, index, direction) =>\n    setSortBy({\n      index,\n      direction,\n    });\n  const currentSortableColumn = columns[sortBy.index - columnOffset(options)];\n  const sorter = (items) =>\n    currentSortableColumn?.sortByArray\n      ? orderByArray(\n          items,\n          currentSortableColumn?.sortByProp,\n          currentSortableColumn?.sortByArray,\n          sortBy.direction\n        )\n      : orderArrayByProp(\n          currentSortableColumn?.sortByProp ||\n            currentSortableColumn?.sortByFunction,\n          items,\n          sortBy.direction\n        );\n\n  return {\n    sorter,\n    tableProps: {\n      onSort,\n      sortBy,\n      cells: addSortableTransform(columns),\n    },\n  };\n};\n\nexport const useTableSortWithItems = (items, columns, options) => {\n  const { tableProps, sorter } = useTableSort(columns, options);\n\n  return {\n    tableProps: {\n      ...tableProps,\n      sortBy: items.length > 0 ? tableProps.sortBy : undefined,\n    },\n    sorter,\n  };\n};\n\nexport default useTableSort;\n","import { useState } from 'react';\n\nconst usePaginate = (options = {}) => {\n  const { perPage = 10 } = options;\n  const enablePagination = options?.pagination !== false;\n\n  const [paginationState, setPaginationState] = useState({\n    perPage,\n    page: 1,\n  });\n  const setPagination = (newState) =>\n    setPaginationState({\n      ...paginationState,\n      ...newState,\n    });\n\n  const onSetPage = (_, page) => setPagination({ ...paginationState, page });\n\n  const onPerPageSelect = (_, perPage) => setPagination({ page: 1, perPage });\n\n  const paginator = (items) => {\n    const { page, perPage } = paginationState;\n    const start = (page - 1) * perPage;\n    const end = start + perPage;\n\n    return items.slice(start, end);\n  };\n\n  const setPage = (page) => {\n    const nextPage = page < 0 ? paginationState.page + page : page;\n    setPagination({\n      page: nextPage > 0 ? nextPage : 1,\n    });\n  };\n\n  return enablePagination\n    ? {\n        paginator,\n        setPage,\n        toolbarProps: {\n          pagination: {\n            ...paginationState,\n            onSetPage,\n            onPerPageSelect,\n          },\n        },\n      }\n    : {};\n};\n\nexport default usePaginate;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport {\n  Bullseye,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateVariant,\n  Title,\n} from '@patternfly/react-core';\nimport EmptyTable from '@redhat-cloud-services/frontend-components/EmptyTable';\n\nexport const NoResultsTable = ({ kind = 'results' }) => (\n  <EmptyTable>\n    <Bullseye>\n      <EmptyState variant={EmptyStateVariant.full}>\n        <Title headingLevel=\"h5\" size=\"lg\">\n          No matching {kind} found\n        </Title>\n        <EmptyStateBody>\n          This filter criteria matches no {kind}.<br />\n          Try changing your filter settings.\n        </EmptyStateBody>\n      </EmptyState>\n    </Bullseye>\n  </EmptyTable>\n);\n\nNoResultsTable.propTypes = {\n  kind: propTypes.string,\n};\n\nexport const emptyRows = [\n  {\n    cells: [\n      {\n            title: () => (<NoResultsTable />),  // eslint-disable-line\n        props: {\n          colSpan: 3,\n        },\n      },\n    ],\n  },\n];\n\nexport default NoResultsTable;\n","import { emptyRows } from './Components/NoResultsTable';\n\nconst columnProp = (column) =>\n  column.key || column.original?.toLowerCase() || column.title?.toLowerCase();\n\nconst itemRow = (item, columns) => ({\n  ...item.rowProps,\n  itemId: item.itemId,\n  cells: columns.map((column) => ({\n    title: column.renderFunc\n      ? column.renderFunc(undefined, undefined, item)\n      : item[columnProp(column)],\n  })),\n});\n\nconst primeItem = (item, transformers) => {\n  let newItem = item;\n\n  transformers.forEach((transformer) => {\n    if (transformer) {\n      newItem = transformer(newItem);\n    }\n  });\n\n  return newItem;\n};\n\nconst applyTransformers = (items, transformers = []) =>\n  items.map((item) => primeItem(item, transformers));\n\nconst buildRow = (item, columns, rowTransformer, idx) =>\n  rowTransformer.flatMap((transformer) => {\n    const row = itemRow(item, columns);\n    return transformer ? transformer(row, item, columns, idx) : row;\n  });\n\nconst useRowsBuilder = (items, columns, options = {}) => {\n  const { transformer = [], rowTransformer = [] } = options;\n  const EmptyRowsComponent = options.emptyRows || emptyRows;\n  const transformedItems = transformer\n    ? applyTransformers(items, transformer)\n    : items;\n\n  const filteredItems = options?.filter\n    ? options.filter(transformedItems)\n    : transformedItems;\n\n  const sortedItems = options?.sorter\n    ? options.sorter(filteredItems)\n    : filteredItems;\n\n  const paginatedItems = options?.paginator\n    ? options?.paginator(sortedItems)\n    : sortedItems;\n\n  const rows =\n    paginatedItems.length > 0\n      ? paginatedItems\n          .flatMap((item, idx) => buildRow(item, columns, rowTransformer, idx))\n          .filter((v) => !!v)\n      : EmptyRowsComponent;\n\n  const pagination = options?.pagination\n    ? {\n        ...options.pagination,\n        itemCount: filteredItems.length,\n      }\n    : undefined;\n\n  return {\n    tableProps: {\n      rows,\n    },\n    toolbarProps: {\n      pagination,\n    },\n  };\n};\n\nexport default useRowsBuilder;\n","const getIdProp = (item, idProp = 'id') => item[idProp];\n\nconst identify = (item, identifier) => {\n  if (typeof identifier === 'string') {\n    return {\n      ...item,\n      itemId: getIdProp(item, identifier),\n    };\n  } else {\n    return {\n      ...item,\n      itemId: identifier(item),\n    };\n  }\n};\n\nexport const useItemIdentify = (items, options = {}) => {\n  const identifier = options?.identifier || getIdProp;\n\n  return items.map((item) => identify(item, identifier));\n};\n\nexport default useItemIdentify;\n","import React, { useState } from 'react';\n\nconst childRowForRule = (item, idx, DetailsComponent) => ({\n  parent: idx * 2,\n  fullWidth: true,\n  cells: [\n    { title: <DetailsComponent rule={item} key={'item-' + item.rowId} /> },\n  ],\n});\n\nconst itemDetailsRow = (item, idx, options) =>\n  typeof options?.detailsComponent !== 'undefined' &&\n  childRowForRule(item, idx, options.detailsComponent);\n\nconst useExpandable = (options) => {\n  const enableExpanbale = !!options.detailsComponent;\n  const [openItems, setOpenItems] = useState([]);\n  const onCollapse = (_event, _index, _isOpen, row) => {\n    if (openItems.includes(row.itemId)) {\n      setOpenItems(openItems.filter((itemId) => itemId !== row.itemId));\n    } else {\n      setOpenItems([...openItems, row.itemId]);\n    }\n  };\n\n  const openItem = (row, item, _columns, rowIndex) => {\n    const isOpen = openItems.includes(item.itemId);\n    const newRow = {\n      ...row,\n      isOpen,\n    };\n    const expandableRow = itemDetailsRow(item, rowIndex, options);\n\n    return [newRow, expandableRow];\n  };\n\n  return enableExpanbale\n    ? {\n        transformer: openItem,\n        tableProps: {\n          onCollapse,\n        },\n      }\n    : {};\n};\n\nexport default useExpandable;\n","import React from 'react';\n\nconst useDedicatedAction = (options) => {\n  const enableDedicatedAction = !!options.dedicatedAction;\n  const {\n    dedicatedAction: DedicatedActionOption,\n    AdditionalDedicatedActions,\n    selected,\n  } = options;\n\n  return enableDedicatedAction\n    ? {\n        toolbarProps: {\n          dedicatedAction: (\n            <div>\n              {DedicatedActionOption && (\n                <DedicatedActionOption {...(selected && { selected })} />\n              )}\n              {AdditionalDedicatedActions && (\n                <AdditionalDedicatedActions {...(selected && { selected })} />\n              )}\n            </div>\n          ),\n        },\n      }\n    : {};\n};\n\nexport default useDedicatedAction;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Pagination, PaginationVariant } from '@patternfly/react-core';\nimport { Table, TableBody, TableHeader } from '@patternfly/react-table';\nimport PrimaryToolbar from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport TableToolbar from '@redhat-cloud-services/frontend-components/TableToolbar';\nimport useTableTools from '../useTableTools';\n\nconst TableToolsTable = ({\n  items = [],\n  columns = [],\n  filters = [],\n  options = {},\n  toolbarProps: toolbarPropsProp,\n  ...tablePropsRest\n}) => {\n  const { toolbarProps, tableProps } = useTableTools(items, columns, {\n    filters,\n    toolbarProps: toolbarPropsProp,\n    tableProps: tablePropsRest,\n    ...options,\n  });\n\n  return (\n    <React.Fragment>\n      <PrimaryToolbar {...toolbarProps} />\n\n      <Table {...tableProps}>\n        <TableHeader />\n        <TableBody />\n      </Table>\n\n      <TableToolbar isFooter>\n        <Pagination\n          variant={PaginationVariant.bottom}\n          {...toolbarProps.pagination}\n        />\n      </TableToolbar>\n    </React.Fragment>\n  );\n};\n\nTableToolsTable.propTypes = {\n  items: propTypes.array.isRequired,\n  columns: propTypes.arrayOf(\n    propTypes.shape({\n      title: propTypes.node,\n      transforms: propTypes.array,\n      sortByProperty: propTypes.string,\n      sortByArray: propTypes.array,\n      sortByFunction: propTypes.func,\n      renderFunc: propTypes.func,\n    })\n  ).isRequired,\n  filters: propTypes.object,\n  options: propTypes.object,\n  toolbarProps: propTypes.object,\n};\n\nexport default TableToolsTable;\n","import useFilterConfig from './useFilterConfig';\nimport { useTableSortWithItems } from './useTableSort';\nimport usePaginate from './usePaginate';\nimport useRowsBuilder from './useRowsBuilder';\nimport { useBulkSelectWithItems } from './useBulkSelect';\nimport useItemIdentify from './useItemIdentify';\nimport useExpandable from './useExpandable';\nimport useDedicatedAction from './useDedicatedAction';\nimport { useExportWithItems } from './useExport';\n\nconst useTableTools = (items = [], columns = [], options = {}) => {\n  const { toolbarProps: toolbarPropsOption, tableProps: tablePropsOption } =\n    options;\n\n  const identifiedItems = useItemIdentify(items, options);\n\n  const {\n    toolbarProps: pagintionToolbarProps,\n    setPage,\n    paginator,\n  } = usePaginate(options);\n\n  const {\n    toolbarProps: conditionalFilterProps,\n    filter,\n    selectedFilterToolbarProps,\n  } = useFilterConfig({\n    ...options,\n    setPage,\n  });\n\n  const { transformer: openItem, tableProps: expandableProps } =\n    useExpandable(options);\n\n  const { tableProps: sortableTableProps, sorter } = useTableSortWithItems(\n    filter ? filter(items) : items,\n    columns,\n    options\n  );\n\n  const {\n    transformer: selectItem,\n    toolbarProps: bulkSelectToolbarProps,\n    tableProps: bulkSelectTableProps,\n    selectedItems,\n  } = useBulkSelectWithItems({\n    ...options,\n    items: sorter(identifiedItems),\n    filter,\n    paginator,\n    setPage,\n  });\n\n  const { toolbarProps: dedicatedActionToolbarProps } = useDedicatedAction({\n    ...options,\n    selected: selectedItems,\n    additionalDedicatedActions: selectedFilterToolbarProps?.dedicatedAction,\n  });\n\n  const filteredAndSortedItems = (items, filter, sorter) => {\n    const filtered = filter ? filter(items) : items;\n    return sorter ? sorter(filtered) : filtered;\n  };\n\n  const { toolbarProps: exportToolbarProps } = useExportWithItems(\n    filteredAndSortedItems(\n      selectedItems?.length > 0 ? selectedItems : items,\n      filter,\n      sorter\n    ),\n    columns,\n    options\n  );\n\n  const {\n    toolbarProps: rowBuilderToolbarProps,\n    tableProps: rowBuilderTableProps,\n  } = useRowsBuilder(identifiedItems, sortableTableProps.cells, {\n    emptyRows: options.emptyRows,\n    transformer: [selectItem],\n    rowTransformer: [openItem],\n    pagination: pagintionToolbarProps?.pagination,\n    paginator,\n    filter,\n    sorter,\n  });\n\n  const toolbarProps = {\n    ...pagintionToolbarProps,\n    ...bulkSelectToolbarProps,\n    ...conditionalFilterProps,\n    ...selectedFilterToolbarProps,\n    ...dedicatedActionToolbarProps,\n    ...rowBuilderToolbarProps,\n    ...toolbarPropsOption,\n    ...exportToolbarProps,\n  };\n\n  const tableProps = {\n    cells: columns,\n    ...rowBuilderTableProps,\n    ...sortableTableProps,\n    ...bulkSelectTableProps,\n    ...expandableProps,\n    ...tablePropsOption,\n  };\n\n  return {\n    toolbarProps,\n    tableProps,\n  };\n};\n\nexport default useTableTools;\n","export const filterSelected = (items, selectedIds = []) =>\n  items.filter((item) => selectedIds.includes(item.itemId));\n\nexport const filteredAndSortedItems = (items, filter, sorter) => {\n  const filtered = filter ? filter(items) : items;\n  return sorter ? sorter(filtered) : filtered;\n};\n","import { useEffect, useMemo, useState } from 'react';\nimport { filterSelected } from './helper';\n\nconst compileTitle = (itemsTotal, titleOption) => {\n  if (typeof titleOption === 'string') {\n    return titleOption;\n  } else if (typeof titleOption === 'function') {\n    return titleOption(itemsTotal);\n  } else {\n    return `${itemsTotal} selected`;\n  }\n};\n\nconst checkboxState = (selectedItemsTotal, itemsTotal) => {\n  if (selectedItemsTotal === 0) {\n    return false;\n  } else if (selectedItemsTotal === itemsTotal) {\n    return true;\n  } else {\n    return null;\n  }\n};\n\nconst allItemsIncluded = (items, selection = []) =>\n  items.filter((item) => selection.includes(item)).length === items.length;\n\nconst selectOrUnselect = (selected) => (selected ? 'Unselect' : 'Select');\n\nconst checkCurrentPageSelected = (items, selectedItems) => {\n  if (selectedItems.length === 0) {\n    return false;\n  } else {\n    return allItemsIncluded(items, selectedItems);\n  }\n};\n\nconst itemIds = (items) => items.map((item) => item.itemId);\nconst mergeArraysUniqly = (arrayA, arrayB) =>\n  Array.from(new Set([...arrayA, ...arrayB]));\n\nexport const useBulkSelect = ({\n  total,\n  onSelect,\n  preselected,\n  itemIdsInTable,\n  itemIdsOnPage,\n  identifier = 'id',\n}) => {\n  const enableBulkSelect = !!onSelect;\n  const [selectedIds, setSelectedItemIds] = useState(preselected);\n  const selectedIdsTotal = (selectedIds || []).length;\n  const paginatedTotal = itemIdsOnPage().length;\n  const allSelected = selectedIdsTotal === total;\n  const noneSelected = selectedIdsTotal === 0;\n  const currentPageSelected = checkCurrentPageSelected(\n    itemIdsOnPage(),\n    selectedIds || []\n  );\n\n  const isDisabled = total === 0;\n  const checked = checkboxState(selectedIdsTotal, total);\n  const title = compileTitle(selectedIdsTotal);\n\n  const onSelectCallback = async (func) => {\n    const newSelectedItemsIds = await func();\n    setSelectedItemIds(newSelectedItemsIds);\n    onSelect && onSelect(newSelectedItemsIds);\n  };\n\n  const selectItems = (itemIds) => mergeArraysUniqly(selectedIds, itemIds);\n\n  const unselectItems = (itemIds) =>\n    selectedIds.filter((itemId) => !itemIds.includes(itemId));\n\n  const unselectAll = () => [];\n  const selectNone = () => onSelectCallback(unselectAll);\n  const selectOne = (_, selected, key, row) =>\n    onSelectCallback(() =>\n      selected\n        ? selectItems([row[identifier]])\n        : unselectItems([row[identifier]])\n    );\n\n  const selectPage = () =>\n    onSelectCallback(() => {\n      const currentPageIds = itemIdsOnPage();\n      const currentPageSelected =\n        mergeArraysUniqly(selectedIds, currentPageIds).length ===\n        selectedIds.length;\n\n      return currentPageSelected\n        ? unselectItems(currentPageIds)\n        : selectItems(currentPageIds);\n    });\n\n  const selectAll = () =>\n    onSelectCallback(async () =>\n      allSelected ? unselectAll() : selectItems(await itemIdsInTable())\n    );\n\n  useEffect(() => {\n    setSelectedItemIds(preselected);\n  }, [preselected]);\n\n  return enableBulkSelect\n    ? {\n        selectedIds,\n        selectNone,\n        tableProps: {\n          onSelect: total > 0 ? selectOne : undefined,\n          canSelectAll: false,\n        },\n        toolbarProps: {\n          bulkSelect: {\n            toggleProps: { children: [title] },\n            isDisabled,\n            items: [\n              {\n                title: 'Select none',\n                onClick: selectNone,\n                props: {\n                  isDisabled: noneSelected,\n                },\n              },\n              {\n                title: `${selectOrUnselect(\n                  currentPageSelected\n                )} page (${paginatedTotal} items)`,\n                onClick: selectPage,\n              },\n              {\n                title: `${selectOrUnselect(allSelected)} all (${total} items)`,\n                onClick: selectAll,\n              },\n            ],\n            checked,\n            onSelect: !isDisabled ? selectPage : undefined,\n          },\n        },\n      }\n    : {};\n};\n\nconst selectItemTransformer = (item, selectedIds) => ({\n  ...item,\n  rowProps: {\n    selected: (selectedIds || []).includes(item.itemId),\n  },\n});\n\nexport const useBulkSelectWithItems = ({\n  onSelect,\n  items: propItems,\n  filter,\n  paginator,\n  preselected,\n  setPage,\n}) => {\n  const enableBulkSelect = !!onSelect;\n  const items = propItems.map((item) =>\n    selectItemTransformer(item, preselected)\n  );\n  const total = items.length;\n\n  const filteredItems = filter ? filter(items) : items;\n  const filteredTotal = filteredItems.length;\n  const filtered = filteredTotal !== total;\n\n  const paginatedItems = paginator ? paginator(filteredItems) : filteredItems;\n  const paginatedTotal = paginatedItems.length;\n\n  const allCount = filtered ? filteredTotal : total;\n\n  const setPageMemo = useMemo(() => setPage, []);\n\n  useEffect(() => {\n    if (paginatedTotal === 0) {\n      setPageMemo(-1);\n    }\n  }, [paginatedTotal, setPageMemo]);\n\n  const { selectNone, selectedIds, ...bulkSelect } = useBulkSelect({\n    total: allCount,\n    onSelect,\n    preselected,\n    itemIdsInTable: () => (filtered ? itemIds(filteredItems) : itemIds(items)),\n    itemIdsOnPage: () => itemIds(paginatedItems),\n    identifier: 'itemId',\n  });\n\n  return enableBulkSelect\n    ? {\n        transformer: (item) => selectItemTransformer(item, selectedIds),\n        selectedItems: filterSelected(items, selectedIds),\n        selected: selectedIds,\n        clearSelection: selectNone,\n        ...bulkSelect,\n      }\n    : {};\n};\n","import { camelCase, getProperty } from 'Utilities/helpers';\n\nconst CSV_FILE_PREFIX = 'compliance-export';\nconst CSV_DELIMITER = ',';\nconst ENCODINGS = {\n  csv: 'text/csv',\n  json: 'application/json',\n};\n\nconst filename = (format) =>\n  CSV_FILE_PREFIX + '-' + new Date().toISOString() + '.' + format;\n\nconst encoding = (format) => `data:${ENCODINGS[format]};charset=utf-8`;\n\nexport const linkAndDownload = (data, filename) => {\n  const link = document.createElement('a');\n  link.href = data;\n  link.download = filename;\n  link.click();\n};\n\nconst textForCell = (row, column) => {\n  const { exportKey, renderExport } = column;\n  let cell = exportKey ? getProperty(row, exportKey) : row;\n  if (renderExport) {\n    return renderExport(cell);\n  } else {\n    return cell;\n  }\n};\n\nexport const csvForItems = ({ items, columns }) => {\n  const header = columns\n    .map((column) => column.original || column.title)\n    .join(CSV_DELIMITER);\n  const csvRows = [\n    header,\n    ...items.map((row) =>\n      columns\n        .map((column) => `\"${textForCell(row, column)}\"`)\n        .join(CSV_DELIMITER)\n    ),\n  ];\n\n  return encodeURI(`${encoding('csv')},${csvRows.join('\\n')}`);\n};\n\nexport const jsonForItems = ({ items, columns }) => {\n  const result = items.map((row) =>\n    columns.reduce((object, column) => {\n      const key = camelCase(column.original || column.title);\n      const value = textForCell(row, column);\n\n      object[key] = value;\n      return object;\n    }, {})\n  );\n\n  return encodeURI(`${encoding('json')},${JSON.stringify(result)}`);\n};\n\nconst useExport = ({ exporter, columns = [], isDisabled = false }) => {\n  const exportableColumns = columns.filter(\n    (column) =>\n      column.export !== false && (column.exportKey || column.renderExport)\n  );\n  const exportWithFormat = async (format) => {\n    const items = await exporter();\n    const formater = format === 'csv' ? csvForItems : jsonForItems;\n\n    if (items) {\n      return linkAndDownload(\n        formater({\n          items,\n          columns: exportableColumns,\n        }),\n        filename(format)\n      );\n    } else {\n      console.info('No items returned for export');\n      return;\n    }\n  };\n\n  return {\n    toolbarProps: {\n      exportConfig: {\n        isDisabled,\n        onSelect: (_, format) => exportWithFormat(format),\n      },\n    },\n  };\n};\n\nexport const useExportWithItems = (items, columns, options = {}) => {\n  const exportEnabled = options?.exportable;\n  const { columns: exportableColumns } =\n    typeof options.exportable === 'object' ? options.exportable : {};\n  const exportProps = useExport({\n    exporter: () => items,\n    columns: exportableColumns || columns,\n    isDisabled: items.length === 0,\n  });\n\n  return exportEnabled ? exportProps : {};\n};\n\nexport default useExport;\n","export const stringToId = (string) => string.split(' ').join('').toLowerCase();\n","import { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\nimport { stringToId } from './Helpers';\n\nclass FilterBuilder {\n  constructor(filterConfig) {\n    this.filterConfig = filterConfig;\n    this.config = this.filterConfig.config;\n  }\n\n  buildFilterFilterString = (configItem, value) => {\n    const { type, filterString } = configItem;\n\n    if (type !== 'hidden' && !value) {\n      return [];\n    }\n\n    switch (type) {\n      case conditionalFilterType.text:\n        return [filterString(value)];\n      case conditionalFilterType.checkbox:\n        return value.map((filter) => filterString(filter));\n\n      case conditionalFilterType.group:\n        return filterString(value);\n\n      case 'hidden':\n        return filterString();\n\n      default:\n        return [];\n    }\n  };\n\n  combineFilterStrings = (filterStringArray) => {\n    const moreThanTwo =\n      filterStringArray.map((f) => f.length).filter((fl) => fl > 0).length >= 2;\n    return filterStringArray\n      .map((fs) => fs.join(' or '))\n      .join(moreThanTwo ? ' and ' : '');\n  };\n\n  buildFilterString = (filters) => {\n    const filterStringArray = this.config\n      .map((configItem) =>\n        this.buildFilterFilterString(\n          configItem,\n          filters[stringToId(configItem.label)]\n        )\n      )\n      .filter((f) => f.length > 0);\n    return this.combineFilterStrings(filterStringArray);\n  };\n}\n\nexport default FilterBuilder;\n","import { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\n\nconst findWithString = (value) => (item) =>\n  String(item.value) === String(value);\n\nclass ChipBuilder {\n  constructor(filterConfig) {\n    this.filterConfig = filterConfig;\n    this.config = this.filterConfig.config;\n  }\n\n  textFilterChip = (category, currentValue) =>\n    currentValue && currentValue !== ''\n      ? {\n          category,\n          chips: [{ name: currentValue }],\n        }\n      : null;\n\n  checkboxFilterChip = (category, currentValue) =>\n    currentValue && currentValue.length > 0\n      ? {\n          category,\n          chips: currentValue.map((value) => ({\n            name: this.filterConfig.labelForValue(value, category),\n          })),\n        }\n      : null;\n\n  radioFilterChip = (category, currentValue) =>\n    currentValue && currentValue !== ''\n      ? {\n          category,\n          chips: [\n            { name: this.filterConfig.labelForValue(currentValue, category) },\n          ],\n        }\n      : null;\n\n  groupFilterChip = (category, currentValue = {}, categoryConfig) => {\n    const items = Object.keys(currentValue)\n      .flatMap((groupValue) => {\n        const group = categoryConfig.items.find(findWithString(groupValue));\n\n        return Object.keys(currentValue[groupValue]).map((itemValue) =>\n          currentValue[groupValue][itemValue]\n            ? group?.items.find(findWithString(itemValue))\n            : null\n        );\n      })\n      .filter((v) => !!v);\n\n    return currentValue && items.length > 0\n      ? {\n          category,\n          chips: items.map((item) => ({ name: item.label })),\n        }\n      : null;\n  };\n\n  chipFor = (filter, currentValue) => {\n    const categoryConfig = this.filterConfig.getCategoryForLabel(filter);\n    const { label, type } = categoryConfig\n      ? categoryConfig\n      : { label: filter, type: null };\n\n    switch (type) {\n      case conditionalFilterType.text:\n        return this.textFilterChip(label, currentValue);\n\n      case conditionalFilterType.checkbox:\n        return this.checkboxFilterChip(label, currentValue);\n\n      case conditionalFilterType.radio:\n        return this.radioFilterChip(label, currentValue);\n\n      case conditionalFilterType.group:\n        return this.groupFilterChip(label, currentValue, categoryConfig);\n\n      default:\n        return null;\n    }\n  };\n\n  chipsFor = (filters) =>\n    Object.keys(filters)\n      .map((filter) => this.chipFor(filter, filters[filter]))\n      .filter((f) => !!f);\n}\n\nexport default ChipBuilder;\n","import { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\nimport FilterBuilder from './FilterBuilder';\nimport ChipBuilder from './ChipBuilder';\nimport { stringToId } from './Helpers';\n\nconst defaultPlaceholder = (label) => `Filter by ${label.toLowerCase()}`;\n\nclass FilterConfigBuilder {\n  chipBuilder = null;\n  filterBuilder = null;\n\n  constructor(config) {\n    this.config = config;\n  }\n\n  addConfigItem = (item) =>\n    (this.config = this.config\n      .filter((i) => i.label !== item.label)\n      .concat(item));\n\n  getChipBuilder = (config) => {\n    if (config) {\n      this.config = config;\n    }\n\n    return (this.chipBuilder = this.chipBuilder\n      ? this.chipBuilder\n      : new ChipBuilder(this));\n  };\n\n  getFilterBuilder = (config) => {\n    if (config) {\n      this.config = config;\n    }\n\n    return (this.filterBuilder = this.filterBuilder\n      ? this.filterBuilder\n      : new FilterBuilder(this));\n  };\n\n  toTextFilterConfig = (item, handler, value) => ({\n    type: conditionalFilterType.text,\n    label: item.label,\n    placeholder: defaultPlaceholder(item.label),\n    id: stringToId(item.label),\n    filterValues: {\n      value,\n      [item.event || 'onChange']: (_event, selectedValues) => {\n        handler(stringToId(item.label), selectedValues);\n      },\n    },\n  });\n\n  toCheckboxFilterConfig = (item, handler, value) => ({\n    type: conditionalFilterType.checkbox,\n    label: item.label,\n    placeholder: defaultPlaceholder(item.label),\n    id: stringToId(item.label),\n    filterValues: {\n      value,\n      items: item.items,\n      onChange: (_event, selectedValues) => {\n        handler(stringToId(item.label), selectedValues);\n      },\n    },\n  });\n\n  toRadioFilterConfig = (item, handler, value) => ({\n    type: conditionalFilterType.radio,\n    label: item.label,\n    placeholder: defaultPlaceholder(item.label),\n    id: stringToId(item.label),\n    filterValues: {\n      value,\n      items: item.items,\n      onChange: (_event, selectedValues) => {\n        handler(stringToId(item.label), selectedValues);\n      },\n    },\n  });\n\n  toGroupedFilterConfig = (item, handler, value) => ({\n    type: conditionalFilterType.group,\n    label: item.label,\n    id: stringToId(item.label),\n    filterValues: {\n      selected: value,\n      onChange: (_event, selectedValues) => {\n        handler(stringToId(item.label), selectedValues);\n      },\n      groups: item.items.map((item) => ({\n        ...item,\n        type: 'checkbox',\n        items: item.items.map((subItem) => ({\n          ...subItem,\n          type: 'checkbox',\n        })),\n      })),\n    },\n  });\n\n  toFilterConfigItem = (item, handler, value) => {\n    switch (item.type) {\n      case conditionalFilterType.text:\n        return this.toTextFilterConfig(item, handler, value);\n\n      case conditionalFilterType.checkbox:\n        return this.toCheckboxFilterConfig(item, handler, value);\n\n      case conditionalFilterType.radio:\n        return this.toRadioFilterConfig(item, handler, value);\n\n      case conditionalFilterType.group:\n        return this.toGroupedFilterConfig(item, handler, value);\n\n      default:\n        return null;\n    }\n  };\n\n  buildConfiguration = (handler, states, props = {}, initConfig) => ({\n    ...props,\n    items: (initConfig || this.config)\n      .map((item) =>\n        this.toFilterConfigItem(item, handler, states[stringToId(item.label)])\n      )\n      .filter((v) => !!v),\n  });\n\n  defaultValueForFilter = (filter) => {\n    switch (filter.type) {\n      case conditionalFilterType.text:\n        return '';\n      case conditionalFilterType.checkbox:\n        return [];\n      case 'hidden':\n        return filter.default || false;\n      default:\n        return;\n    }\n  };\n\n  initialDefaultState = (defaultStates = {}, initConfig) => {\n    let initialState = {};\n    (initConfig || this.config).forEach((filter) => {\n      const filterStateName = stringToId(filter.key || filter.label);\n      initialState[filterStateName] =\n        defaultStates[filterStateName] || this.defaultValueForFilter(filter);\n    });\n\n    return initialState;\n  };\n\n  categoryLabelForValue = (value) => {\n    const category = this.config.filter((category) =>\n      category.items\n        ? category.items.map((item) => item.value).includes(value)\n        : false\n    )[0];\n\n    return category ? category.label : value;\n  };\n\n  getCategoryForLabel = (query) =>\n    this.config.filter(\n      (item) => stringToId(item.key || item.label) === stringToId(query)\n    )[0] || {};\n\n  getItemByLabelOrValue = (query, category) => {\n    const categoryConfig = this.getCategoryForLabel(category);\n    const items =\n      categoryConfig.type !== conditionalFilterType.group\n        ? categoryConfig.items\n        : categoryConfig.items.flatMap((item) =>\n            item.items.map((subItem) => ({\n              ...subItem,\n              parentValue: item.value,\n            }))\n          );\n    const results = (items || []).filter(\n      (item) => item.value === query || item.label === query\n    );\n\n    if (results.length === 1) {\n      return results[0];\n    } else if (results.length > 1) {\n      // eslint-disable-next-line no-console\n      console.info(\n        `Multiple items found for ${query} in ${category}! Returning first one.`\n      );\n      return results[0];\n    } else {\n      // eslint-disable-next-line no-console\n      console.info('No item found for ' + query + ' in ', category);\n    }\n  };\n\n  labelForValue = (value, category) => {\n    const item = this.getItemByLabelOrValue(value, category);\n    return item ? item.label : value;\n  };\n\n  valueForLabel = (label, category) => {\n    const item = this.getItemByLabelOrValue(label, category);\n    return item ? item.value : label;\n  };\n\n  applyFilterToObjectArray = (objects, activeFilters) => {\n    let filteredObjects = [...objects];\n\n    Object.keys(activeFilters).forEach((filter) => {\n      const category = this.getCategoryForLabel(filter);\n      const value = activeFilters[filter];\n      if (!category || !value) {\n        return;\n      }\n\n      if (\n        value.length > 0 ||\n        (category.type === 'hidden' && typeof value === 'boolean')\n      ) {\n        filteredObjects = category.filter(filteredObjects, value);\n      }\n    });\n\n    return filteredObjects;\n  };\n\n  removeFilterFromFilterState = (currentState, filter) =>\n    typeof currentState === 'string'\n      ? ''\n      : currentState.filter((value) => value !== filter);\n\n  removeFilterFromGroupFilterState = (currentState, filter, chipItem) => {\n    // eslint-disable-next-line\n        const { [chipItem.value]: _remove, ...newGroupState } = currentState[chipItem.parentValue];\n    return {\n      ...currentState,\n      [chipItem.parentValue]: newGroupState,\n    };\n  };\n\n  removeFilterWithChip = (chips, activeFilters) => {\n    const chipCategory = chips.category;\n    const chipLabel = chips.chips[0].name;\n    const chipItem = this.getItemByLabelOrValue(chipLabel, chipCategory);\n    const chipValue = chipItem ? chipItem.value : chipLabel;\n    const stateProp = stringToId(chipCategory);\n    const currentState = activeFilters[stateProp];\n    const categoryConfig = this.getCategoryForLabel(chipCategory);\n    const isGroup = categoryConfig.type === conditionalFilterType.group;\n    const newFilterState = (\n      isGroup\n        ? this.removeFilterFromGroupFilterState\n        : this.removeFilterFromFilterState\n    )(currentState, chipValue, chipItem);\n\n    return {\n      ...activeFilters,\n      [stateProp]: newFilterState,\n    };\n  };\n}\n\nexport default FilterConfigBuilder;\n","import React from 'react';\nimport { Switch } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\n\nconst SelectedFilterSwitch = ({ isChecked, setActiveFilter }) => (\n  <Switch\n    label=\"Selected only\"\n    isChecked={isChecked}\n    onChange={() => setActiveFilter('selected', !isChecked)}\n  />\n);\n\nSelectedFilterSwitch.propTypes = {\n  isChecked: propTypes.bool,\n  setActiveFilter: propTypes.func,\n};\n\nexport default SelectedFilterSwitch;\n","import React from 'react';\nimport SelectedFilterSwitch from './Components/SelectedFilterSwitch';\n\nconst useSelectedFilter = ({\n  setActiveFilter,\n  activeFilters,\n  selectedFilter,\n}) => {\n  const enableSelectedFilter = !!selectedFilter;\n  const filterKey = 'selected';\n  const filterItem = {\n    type: 'hidden',\n    label: 'selectFilter',\n    key: filterKey,\n    default: true,\n    filter: (items, value) => {\n      return items.filter((item) => item?.rowProps?.selected === value);\n    },\n  };\n  const isChecked = activeFilters[filterKey] === true;\n  const selectedToggle = (\n    <SelectedFilterSwitch\n      {...{\n        setActiveFilter,\n        isChecked,\n      }}\n    />\n  );\n\n  return enableSelectedFilter\n    ? {\n        filterItem,\n        toolbarProps: {\n          dedicatedAction: selectedToggle,\n        },\n      }\n    : {};\n};\n\nexport default useSelectedFilter;\n","import { useState, useEffect, useMemo } from 'react';\nimport FilterConfigBuilder from './FilterConfigBuilder/FilterConfigBuilder';\nimport useSelectedFilter from './useSelectedFilter';\n\nconst filterValues = (activeFilters) =>\n  Object.values(activeFilters).filter((value) => {\n    if (typeof value === Object) {\n      return Object.values(value).length > 0;\n    }\n\n    if (typeof value === Array) {\n      return value.length > 0;\n    }\n\n    return !!value;\n  });\n\nconst filterConfigBuilder = new FilterConfigBuilder([]);\n\nconst useFilterConfig = (options = {}) => {\n  const { filters, setPage, selectedFilter } = options;\n  const enableFilters = !!filters;\n  const { filterConfig = [], activeFilters: initialActiveFilters } =\n    filters || {};\n  const [activeFilters, setActiveFilters] = useState(\n    filterConfigBuilder.initialDefaultState(initialActiveFilters, filterConfig)\n  );\n  const onFilterUpdate = (filter, value) => {\n    setActiveFilters({\n      ...activeFilters,\n      [filter]: value,\n    });\n\n    setPage && setPage(1);\n  };\n\n  const addConfigItem = (item) => {\n    filterConfigBuilder.addConfigItem(item);\n    setActiveFilters(filterConfigBuilder.initialDefaultState(activeFilters));\n  };\n\n  const clearAllFilter = () =>\n    setActiveFilters(filterConfigBuilder.initialDefaultState());\n\n  const deleteFilter = (chips) =>\n    setActiveFilters(\n      filterConfigBuilder.removeFilterWithChip(chips, activeFilters)\n    );\n  const onFilterDelete = (_event, chips, clearAll = false) =>\n    clearAll ? clearAllFilter() : deleteFilter(chips[0]);\n\n  const filter = (items) =>\n    filterConfigBuilder.applyFilterToObjectArray(items, activeFilters);\n\n  const {\n    toolbarProps: selectedFilterToolbarProps,\n    filterItem: selectFilterItem,\n  } = useSelectedFilter({\n    activeFilters,\n    setActiveFilter: onFilterUpdate,\n    selectedFilter,\n  });\n\n  const activeFilterValues = useMemo(\n    () => filterValues(activeFilters),\n    [activeFilters]\n  );\n\n  const filterConfigWithSelected = [\n    ...filterConfig,\n    ...(selectFilterItem ? [selectFilterItem] : []),\n  ];\n\n  useEffect(() => {\n    filterConfigBuilder.config = [];\n    filterConfigWithSelected.filter((v) => !!v).forEach(addConfigItem);\n    setActiveFilters(\n      filterConfigBuilder.initialDefaultState(initialActiveFilters || []),\n      filterConfig\n    );\n\n    return () => {\n      filterConfigBuilder.config = [];\n    };\n  }, []);\n\n  return enableFilters\n    ? {\n        filter,\n        selectedFilterToolbarProps,\n        toolbarProps: {\n          filterConfig: filterConfigBuilder.buildConfiguration(\n            onFilterUpdate,\n            activeFilters,\n            {},\n            filterConfigWithSelected\n          ),\n          activeFiltersConfig: {\n            filters: filterConfigBuilder\n              .getChipBuilder(filterConfigWithSelected)\n              .chipsFor(activeFilters),\n            onDelete: onFilterDelete,\n          },\n        },\n        setActiveFilter: onFilterUpdate,\n        activeFilters,\n        activeFilterValues,\n        addConfigItem,\n        filterConfigBuilder,\n        filterString: () =>\n          filterConfigBuilder\n            .getFilterBuilder(filterConfigWithSelected)\n            .buildFilterString(activeFilters),\n      }\n    : {};\n};\n\nexport default useFilterConfig;\n","export const NEVER = 'Never';\n\nexport const profilesRulesFailed = (profiles) =>\n  profiles.flatMap(\n    (profile) =>\n      profile.rules && profile.rules.filter((rule) => !rule.compliant)\n  );\n\nexport const profilesRulesPassed = (profiles) =>\n  profiles.flatMap(\n    (profile) => profile.rules && profile.rules.filter((rule) => rule.compliant)\n  );\n\nexport const systemRulesPassed = (system) =>\n  system.testResultProfiles\n    ? profilesRulesPassed(system.testResultProfiles)\n    : [];\n\nexport const systemRulesFailed = (system) =>\n  system.testResultProfiles\n    ? profilesRulesFailed(system.testResultProfiles)\n    : [];\n\nexport const systemSupportedByProfiles = (profiles = []) =>\n  profiles.reduce((acc, profile) => acc && !!profile.supported, true);\n\nexport const systemsWithRuleObjectsFailed = (systems) =>\n  systems.map((system) => ({\n    ...system,\n    ruleObjectsFailed: systemRulesFailed(system),\n    supported: systemSupportedByProfiles(system.testResultProfiles),\n    profiles: system.testResultProfiles,\n  }));\n\nexport const toRulesArrayWithProfile = (profilesWithRules) =>\n  profilesWithRules.flatMap((profileWithRules) =>\n    profileWithRules.rules.map((rule) => {\n      const identifier = rule.identifier && JSON.parse(rule.identifier);\n      return {\n        ...rule,\n        references: rule.references ? JSON.parse(rule.references) : [],\n        identifier: identifier && identifier.label ? identifier : null,\n        profile: profileWithRules.profile,\n      };\n    })\n  );\n\nexport const complianceScoreData = (profiles) => {\n  const scoreTotal = profiles.reduce((acc, profile) => acc + profile.score, 0);\n  const rulesPassed = profilesRulesPassed(profiles).length;\n  const rulesFailed = profilesRulesFailed(profiles).length;\n  const numScored = profiles.reduce((acc, profile) => {\n    if (\n      profilesRulesPassed([profile]).length +\n        profilesRulesFailed([profile]).length >\n      0\n    ) {\n      return acc + 1;\n    }\n\n    return acc;\n  }, 0);\n  const score = numScored ? scoreTotal / numScored : 0;\n  const compliant = profiles.every(\n    (profile) => profile.lastScanned === NEVER || profile.compliant === true\n  );\n\n  return {\n    score,\n    rulesPassed,\n    rulesFailed,\n    compliant,\n    supported: systemSupportedByProfiles(profiles),\n  };\n};\n"],"names":["QUERY","gql","ComplianceEmptyState","title","mainButton","client","useQuery","fetchPolicy","data","error","loading","Spinner","errorMsg","message","policiesCount","profiles","totalCount","policyWord","haveWord","Bullseye","EmptyState","EmptyStateIcon","style","fontWeight","color","size","icon","CloudSecurityIcon","Title","headingLevel","EmptyStateBody","TextContent","href","EmptyStatePrimary","EmptyStateSecondaryActions","Button","variant","component","target","rel","propTypes","defaultProps","ApolloClient","link","HttpLink","uri","COMPLIANCE_API_ROOT","credentials","cache","InMemoryCache","FallbackButton","isDisabled","ComplianceRemediationButton","profile","system","majorOsVersion","refId","id","split","description","systems","issues","issueIds","map","issue","filter","index","originalIssueIndex","indexOf","Array","from","Set","concat","rule","find","rules","profileRule","console","log","remediationAvailable","ruleProfile","supported","compliant","formatRule","props","allSystems","selectedRules","result","forEach","push","length","rulesWithRemediations","ruleObjectsFailed","Promise","all","then","uniqIssuesBySystem","flatten","dataProvider","flatMap","some","addNotification","this","RemediationButton","notEmptyData","onRemediationCreated","getNotification","buttonProps","ouiaId","fallback","React","name","severity","rationale","identifier","references","connect","dispatch","notification","ReduxFormTextInput","field","TextInput","value","input","defaultValue","onChange","ReduxFormTextArea","TextArea","ruleProps","Rule","Text","TextVariants","label","Policy","HighSeverity","className","MediumSeverity","LowSeverityIcon","width","height","viewBox","role","verticalAlign","xmlns","d","fill","fillRule","LowSeverity","UnknownSeverity","Severity","high","medium","low","toLowerCase","Passed","Ansible","Name","sortByProp","renderExport","renderFunc","renderComponent","sortByFunction","PolicyCell","exportKey","transforms","fitContent","sortByArray","SeverityCell","PassedCell","original","tooltip","AnsibleCell","RuleDetailsRow","key","marginTop","Stack","StackItem","marginBottom","isFilled","Grid","GridItem","span","ident","idx","reduce","prev","next","ref","columns","cells","EmptyTable","EmptyStateVariant","colSpan","HIGH_SEVERITY","MEDIUM_SEVERITY","LOW_SEVERITY","UNKNOWN_SEVERITY","filterRulesWithAllValues","values","valueCheck","v","anyFilterApply","filteredRules","BASE_FILTER_CONFIGURATION","type","conditionalFilterType","includes","reference","items","PASS_FILTER_CONFIG","REMEDIATION_AVAILABLE_FILTER_CONFIG","showPassFailFilter","policies","remediationAvailableFilter","config","policy","policiesFilterConfig","RulesTable","profileRules","Columns","remediationsEnabled","selectedFilter","handleSelect","selectedRefIds","hidePassed","options","rulesTableProps","toRulesArrayWithProfile","c","isStickyHeader","filters","filterConfig","buildFilterConfig","activeFilters","passed","item","selectable","onSelect","preselected","detailsComponent","emptyRows","dedicatedAction","selected","testResultProfiles","exportable","newOsMinorVersion","osMajorVersion","osMinorVersion","ProfileSystemCount","count","Badge","isRead","pluralize","SSGVersionText","ssgVersion","Popover","position","bodyContent","SSGPopoverBody","footerContent","cursor","fontSize","BENCHMARK_QUERY","ProfileTabContent","systemCount","selectedRuleRefIds","variables","benchmark","skip","stateValues","stateKey","matchesSelectionItem","selectionItem","selectedRuleRefIdsForTab","tabSelection","ruleRefIds","profilesWithRulesToSelection","prevSelection","only","additionalSelection","foundSelection","tabsDataToOsMinorMap","tabsData","osMinorMap","extendProfilesByOsMinor","undefined","eventKey","getDefaultTab","defaultTab","firstTab","TabbedRules","setSelectedRuleRefIds","level","profileSelectedRuleRefIds","filteredSelection","newItem","Tab","isRequired","PolicyNameCell","policyType","Link","to","_data","_id","totalHostCount","businessObjective","complianceThreshold","Table","rows","RowLoader","TableHeader","TableBody","ErrorPage","networkError","statusCode","window","insights","chrome","auth","logout","NotAuthorized","serviceName","InvalidObject","onClick","history","goBack","ErrorCard","Card","CardHeader","CardBody","GreySmallText","children","CheckboxFieldArray","inputValue","defaultChecked","Checkbox","isChecked","checked","arr","splice","handleChange","InUseProfileLabel","Tooltip","content","Label","lineHeight","ProfileTypeSelect","selectedProfile","hasGutter","disabled","rowSpan","Radio","Truncate","inline","text","JSON","stringify","_","event","currentTarget","CompliantIcon","rulesPassed","rulesFailed","complianceScoreString","fixedPercentage","score","speed","backgroundcolor","foregroundcolor","x","y","rx","ry","primaryColor","secondaryColor","cx","cy","r","PolicyDetailsDescription","linkifyHtml","PropTypes","Dt","TextListItem","TextListItemVariants","Dd","PolicyDescription","TextList","TextListVariants","version","ReportDetailsDescription","ProgressBar","percent","failed","ProgressVariant","Progress","ContentTab","findTab","tabs","tab","useAnchorLevels","defaultAnchor","levels","useAnchor","currentAnchor","TabSwitcher","activeKey","currentTab","activeTab","RoutedTabSwitcher","RoutedTabs","useHistory","useLocation","pathname","state","tabAvailable","tabAnchor","Tabs","e","preventDefault","tabToActivate","replace","hash","slice","join","StateViewPart","StateView","child","StateViewWithError","WARNING_TEXT","WithOptionalToolTip","showTooltip","TooltipPosition","SystemsCountWarning","WarningText","BackgroundLink","desiredState","backgroundLocation","background","RouterLink","BreadcrumbLinkItem","BreadcrumbItem","marginRight","OperatingSystem","unsupportedHostCount","CompliantSystems","testResultHostCount","compliantHostCount","measureLocation","tooltipText","marginLeft","NameCell","OperatingSystemCell","CompliantSystemsCell","PDFExportDownload","exportableColumns","policyNameFilter","lowerCaseValue","policyTypeFilter","policyTypes","operatingSystemFilter","operatingSystems","operatingSystem","policyComplianceFilter","compliantHostsPercent","Math","round","min","max","i","ReportsTable","pdfReportEnabled","useFeature","uniq","PolicyPopover","headerContent","isInline","Fragment","NoResultsTable","nameFilter","DedicatedAction","PoliciesTable","location","Object","Filters","actionResolver","_event","_index","policyId","itemId","withRouter","ProfileThresholdField","validThreshold","thresholdValid","previousThreshold","threshold","setState","FormGroup","fieldId","validated","helperTextInvalid","helperText","labelIcon","Field","handleThresholdChange","display","reduxForm","form","destroyOnUnmount","forceUnregisterOnUnmount","supportedConfigsLink","UNSUPPORTED_PLURAL_MESSAGE","WarningWithPopover","maxWidth","WarningWithTooltip","TooltipOrPopover","tooltipProps","Component","componentProps","popover","showHeader","showPopupHeader","messageVariant","UnsupportedSSGVersion","showWarningIcon","showHelpIcon","iconProps","defaultStyle","SubPageTitle","ConditionalLink","additionalProps","ComplianceModal","Modal","validateBenchmarkPage","validateDetailsPage","validateRulesPage","validateSystemsPage","systemIds","fixed","withPercent","fixedValue","toFixed","singular","plural","collection","sortingByProp","propName","order","objA","objB","descending","propA","propB","natsort","desc","sorter","entity","getSortable","property","orderArrayByProp","objects","direction","sort","a","b","String","localeCompare","orderByArray","objectArray","orderProp","orderArray","sortedObjectArray","orderKey","reverse","getProperty","obj","path","parts","shift","camelCase","string","trim","toUpperCase","substring","addSortableTransform","column","isSortable","sortable","columnOffset","useTableSortWithItems","useState","sortBy","setSortBy","onSort","currentSortableColumn","tableProps","useTableSort","perPage","enablePagination","pagination","page","paginationState","setPaginationState","setPagination","newState","onSetPage","onPerPageSelect","paginator","start","end","setPage","nextPage","toolbarProps","kind","columnProp","primeItem","transformers","transformer","applyTransformers","buildRow","rowTransformer","row","rowProps","itemRow","EmptyRowsComponent","transformedItems","filteredItems","sortedItems","paginatedItems","itemCount","getIdProp","idProp","identify","itemDetailsRow","DetailsComponent","parent","fullWidth","rowId","childRowForRule","enableExpanbale","openItems","setOpenItems","_columns","rowIndex","isOpen","onCollapse","_isOpen","enableDedicatedAction","DedicatedActionOption","AdditionalDedicatedActions","TableToolsTable","toolbarPropsOption","tablePropsOption","identifiedItems","useItemIdentify","usePaginate","pagintionToolbarProps","useFilterConfig","conditionalFilterProps","selectedFilterToolbarProps","useExpandable","openItem","expandableProps","sortableTableProps","useBulkSelectWithItems","selectItem","bulkSelectToolbarProps","bulkSelectTableProps","selectedItems","dedicatedActionToolbarProps","useDedicatedAction","additionalDedicatedActions","filteredAndSortedItems","filtered","exportToolbarProps","useExportWithItems","useRowsBuilder","rowBuilderToolbarProps","rowBuilderTableProps","useTableTools","PrimaryToolbar","TableToolbar","isFooter","Pagination","PaginationVariant","sortByProperty","filterSelected","selectedIds","selectOrUnselect","itemIds","mergeArraysUniqly","arrayA","arrayB","useBulkSelect","selectedItemsTotal","total","itemIdsInTable","itemIdsOnPage","enableBulkSelect","setSelectedItemIds","selectedIdsTotal","paginatedTotal","allSelected","noneSelected","currentPageSelected","selection","allItemsIncluded","itemsTotal","titleOption","compileTitle","onSelectCallback","func","newSelectedItemsIds","selectItems","unselectItems","unselectAll","selectNone","selectPage","currentPageIds","useEffect","canSelectAll","bulkSelect","toggleProps","selectItemTransformer","propItems","filteredTotal","allCount","setPageMemo","useMemo","clearSelection","ENCODINGS","csv","json","filename","format","CSV_FILE_PREFIX","Date","toISOString","encoding","linkAndDownload","document","createElement","download","click","textForCell","cell","csvForItems","csvRows","encodeURI","jsonForItems","object","useExport","exporter","export","exportWithFormat","formater","info","exportConfig","exportEnabled","exportProps","stringToId","configItem","filterString","filterStringArray","moreThanTwo","f","fl","fs","buildFilterFilterString","combineFilterStrings","findWithString","category","currentValue","chips","labelForValue","categoryConfig","keys","groupValue","group","itemValue","getCategoryForLabel","textFilterChip","checkboxFilterChip","radioFilterChip","groupFilterChip","chipFor","defaultPlaceholder","SelectedFilterSwitch","setActiveFilter","Switch","enableSelectedFilter","filterItem","default","filterValues","filterConfigBuilder","chipBuilder","ChipBuilder","filterBuilder","FilterBuilder","handler","placeholder","selectedValues","groups","subItem","toTextFilterConfig","toCheckboxFilterConfig","toRadioFilterConfig","toGroupedFilterConfig","states","initConfig","toFilterConfigItem","defaultStates","initialState","filterStateName","defaultValueForFilter","query","results","parentValue","getItemByLabelOrValue","filteredObjects","currentState","chipItem","newGroupState","chipCategory","chipLabel","chipValue","stateProp","newFilterState","removeFilterFromGroupFilterState","removeFilterFromFilterState","enableFilters","initialActiveFilters","initialDefaultState","setActiveFilters","onFilterUpdate","addConfigItem","clearAllFilter","deleteFilter","removeFilterWithChip","onFilterDelete","clearAll","applyFilterToObjectArray","useSelectedFilter","selectFilterItem","activeFilterValues","filterConfigWithSelected","buildConfiguration","activeFiltersConfig","getChipBuilder","chipsFor","onDelete","getFilterBuilder","buildFilterString","NEVER","profilesRulesFailed","profilesRulesPassed","systemRulesFailed","systemSupportedByProfiles","acc","systemsWithRuleObjectsFailed","profilesWithRules","profileWithRules","parse","complianceScoreData","scoreTotal","numScored","every","lastScanned"],"sourceRoot":""}