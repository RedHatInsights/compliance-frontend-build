{"version":3,"sources":["webpack:///./src/SmartComponents/CompliancePolicies/CompliancePolicies.js"],"names":["QUERY","gql","CompliancePolicies","policies","location","useLocation","createLink","to","variant","useQuery","data","error","loading","refetch","useEffect","undefined","profiles","edges","map","profile","node","Fragment","className","title","stateValues","stateKey","length","hasGutter","mainButton"],"mappings":"03BAsBA,IAAMA,EAAQC,IAAH,KA0BEC,EAAqB,WAC9B,IAMIC,EANEC,EAAWC,cACXC,EAAa,kBAAC,IAAD,CAAgBC,GAAG,qBAClC,kBAAC,SAAD,CAAQC,QAAQ,WAAhB,sBAHgC,EAKIC,mBAAST,GAA3CU,EAL8B,EAK9BA,KAAMC,EALwB,EAKxBA,MAAOC,EALiB,EAKjBA,QAASC,EALQ,EAKRA,QAS5B,OARAC,qBAAU,WAAQD,MAAc,CAACT,IAG7BM,IACAC,OAAQI,EAAWH,OAAUG,EAC7BZ,EAAWO,EAAKM,SAASC,MAAMC,KAAI,SAAAC,GAAO,OAAIA,EAAQC,SAGnD,kBAAC,IAAMC,SAAP,KACH,kBAAC,aAAD,CAAYC,UAAU,eAClB,kBAAC,kBAAD,CAAiBC,MAAM,mBAE3B,kBAAC,OAAD,KACI,kBAAC,IAAD,CAAWC,YAAc,CAAEb,QAAOD,OAAME,YACpC,kBAAC,IAAD,CAAea,SAAS,SACpB,kBAAC,IAAD,CAAWd,MAAOA,KAEtB,kBAAC,IAAD,CAAec,SAAS,WACpB,kBAAC,IAAD,OAEJ,kBAAC,IAAD,CAAeA,SAAS,QAClBtB,GAAgC,IAApBA,EAASuB,OACnB,kBAAC,OAAD,CAAMC,WAAS,GAAC,kBAAC,uBAAD,CAAsBJ,MAAM,cACxCK,WAAatB,KACjB,kBAAC,IAAD,CAAeH,SAAWA,SAQnCD","file":"js/CompliancePolicies-c9d4ad194486b69136b9.js","sourcesContent":["import React, { useEffect } from 'react';\nimport gql from 'graphql-tag';\nimport { useLocation } from 'react-router-dom';\nimport { useQuery } from '@apollo/react-hooks';\nimport {\n    Button,\n    Grid\n} from '@patternfly/react-core';\nimport { PageHeader, PageHeaderTitle, Main } from '@redhat-cloud-services/frontend-components';\nimport { ComplianceEmptyState } from '@redhat-cloud-services/frontend-components-inventory-compliance';\nimport {\n    BackgroundLink,\n    ErrorPage,\n    LoadingPoliciesTable,\n    StateView,\n    StateViewPart\n} from 'PresentationalComponents';\n\nimport {\n    PoliciesTable\n} from 'SmartComponents';\n\nconst QUERY = gql`\n{\n    profiles(search: \"external = false and canonical = false\") {\n        edges {\n            node {\n                id\n                name\n                refId\n                complianceThreshold\n                totalHostCount\n                majorOsVersion\n                benchmark {\n                    id\n                    title\n                    version\n                }\n                businessObjective {\n                    id\n                    title\n                }\n            }\n        }\n    }\n}\n`;\n\nexport const CompliancePolicies = () => {\n    const location = useLocation();\n    const createLink = <BackgroundLink to='/scappolicies/new'>\n        <Button variant='primary'>Create new policy</Button>\n    </BackgroundLink>;\n    let { data, error, loading, refetch } = useQuery(QUERY);\n    useEffect(() => { refetch(); }, [location]);\n    let policies;\n\n    if (data) {\n        error = undefined; loading = undefined;\n        policies = data.profiles.edges.map(profile => profile.node);\n    }\n\n    return <React.Fragment>\n        <PageHeader className='page-header'>\n            <PageHeaderTitle title=\"SCAP policies\" />\n        </PageHeader>\n        <Main>\n            <StateView stateValues={ { error, data, loading } }>\n                <StateViewPart stateKey='error'>\n                    <ErrorPage error={error}/>\n                </StateViewPart>\n                <StateViewPart stateKey='loading'>\n                    <LoadingPoliciesTable />\n                </StateViewPart>\n                <StateViewPart stateKey='data'>\n                    { policies && policies.length === 0 ?\n                        <Grid hasGutter><ComplianceEmptyState title='No policies'\n                            mainButton={ createLink } /></Grid> :\n                        <PoliciesTable policies={ policies } />\n                    }\n                </StateViewPart>\n            </StateView>\n        </Main>\n    </React.Fragment>;\n};\n\nexport default CompliancePolicies;\n"],"sourceRoot":""}