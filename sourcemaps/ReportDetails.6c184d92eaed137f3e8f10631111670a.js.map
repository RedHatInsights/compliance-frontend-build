{"version":3,"file":"js/ReportDetails.d1b2fa217498658a5442.js","mappings":"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","sources":["webpack:///./src/SmartComponents/ReportDetails/Components/ReportedSystemRow.js","webpack:///./src/SmartComponents/ReportDetails/ReportDetailsWithNotReportedSystems.js","webpack:///./src/SmartComponents/ReportDetails/ReportDetails.js","webpack:///./src/SmartComponents/ReportDownload/constants.js","webpack:///./src/SmartComponents/ReportDownload/ExportPDFForm/ExportPDFForm.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components-utilities/esm/useExportPDF/useExportPDF.js","webpack:///./src/SmartComponents/ReportDownload/ReportDownload.js","webpack:///./src/SmartComponents/ReportDownload/hooks/useExportSettings.js"],"sourcesContent":["import React from 'react';\nimport propTypes from 'prop-types';\nimport { RowWrapper } from '@patternfly/react-table';\n\nconst ReportedSystemRow = ({ row, children }) => (\n  <RowWrapper\n    style={\n      row.testResultProfiles?.length === 0\n        ? {\n            background: '#F0F0F0',\n            borderLeft:\n              'var(--pf-c-table--border-width--base) solid var(--pf-c-table--BorderColor)',\n            borderRight:\n              'var(--pf-c-table--border-width--base) solid var(--pf-c-table--BorderColor)',\n          }\n        : {}\n    }\n  >\n    {children}\n  </RowWrapper>\n);\n\nReportedSystemRow.propTypes = {\n  row: propTypes.node,\n  children: propTypes.node,\n};\n\nexport default ReportedSystemRow;\n","/* eslint-disable react/display-name */\nimport React from 'react';\nimport propTypes from 'prop-types';\nimport { useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Grid,\n  GridItem,\n} from '@patternfly/react-core';\nimport PageHeader, {\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport EmptyTable from '@redhat-cloud-services/frontend-components/EmptyTable';\nimport Spinner from '@redhat-cloud-services/frontend-components/Spinner';\nimport {\n  BackgroundLink,\n  BreadcrumbLinkItem,\n  ReportDetailsContentLoader,\n  ReportDetailsDescription,\n  StateViewWithError,\n  StateViewPart,\n  SubPageTitle,\n  LinkButton,\n} from 'PresentationalComponents';\nimport { useTitleEntity } from 'Utilities/hooks/useDocumentTitle';\nimport useFeature from 'Utilities/hooks/useFeature';\nimport { SystemsTable } from 'SmartComponents';\nimport '@/Charts.scss';\nimport './ReportDetails.scss';\nimport * as Columns from '../SystemsTable/Columns';\nimport ReportedSystemRow from './Components/ReportedSystemRow';\nimport ReportChart from './Components/ReportChart';\n\nexport const QUERY = gql`\n  query RDWNRS_Profile($policyId: String!) {\n    profile(id: $policyId) {\n      id\n      name\n      refId\n      totalHostCount\n      testResultHostCount\n      compliantHostCount\n      unsupportedHostCount\n      complianceThreshold\n      osMajorVersion\n      lastScanned\n      policyType\n      policy {\n        id\n        name\n        profiles {\n          benchmark {\n            version\n          }\n        }\n      }\n      businessObjective {\n        id\n        title\n      }\n    }\n  }\n`;\n\nexport const ReportDetails = ({ route }) => {\n  const { report_id: policyId } = useParams();\n  const pdfReportEnabled = useFeature('pdfReport');\n  const { data, error, loading } = useQuery(QUERY, {\n    variables: { policyId },\n    fetchPolicy: 'no-cache',\n  });\n  let profile = {};\n  let policyName;\n  let pageTitle;\n  let ssgVersions = [];\n\n  if (!loading && data) {\n    profile = data.profile;\n    policyName = profile.policy.name;\n    pageTitle = `Report: ${policyName}`;\n    ssgVersions = [\n      ...new Set(\n        profile.policy.profiles.flatMap(({ benchmark: { version } }) => version)\n      ),\n    ];\n  }\n\n  useTitleEntity(route, policyName);\n\n  return (\n    <StateViewWithError stateValues={{ error, data, loading }}>\n      <StateViewPart stateKey=\"loading\">\n        <PageHeader>\n          <ReportDetailsContentLoader />\n        </PageHeader>\n        <section className=\"pf-c-page__main-section\">\n          <EmptyTable>\n            <Spinner />\n          </EmptyTable>\n        </section>\n      </StateViewPart>\n      <StateViewPart stateKey=\"data\">\n        <PageHeader>\n          <Breadcrumb ouiaId=\"ReportDetailsPathBreadcrumb\">\n            <BreadcrumbLinkItem to=\"/\">Compliance</BreadcrumbLinkItem>\n            <BreadcrumbLinkItem to=\"/reports\">Reports</BreadcrumbLinkItem>\n            <BreadcrumbItem isActive>{pageTitle}</BreadcrumbItem>\n          </Breadcrumb>\n          <Grid hasGutter>\n            <GridItem sm={9} md={9} lg={9} xl={9}>\n              <PageHeaderTitle title={pageTitle} />\n              <SubPageTitle>{profile.policyType}</SubPageTitle>\n            </GridItem>\n            <GridItem\n              className=\"report-details-button\"\n              sm={3}\n              md={3}\n              lg={3}\n              xl={3}\n            >\n              {pdfReportEnabled && (\n                <BackgroundLink\n                  state={{ profile }}\n                  to={`/reports/${profile.id}/pdf`}\n                  component={LinkButton}\n                  ouiaId=\"ReportDetailsDownloadReportPDFLink\"\n                  variant=\"primary\"\n                  className=\"pf-u-mr-md\"\n                >\n                  Download PDF\n                </BackgroundLink>\n              )}\n              <BackgroundLink\n                state={{ profile }}\n                to={`/reports/${profile.id}/delete`}\n                component={LinkButton}\n                variant=\"link\"\n                ouiaId=\"ReportDetailsDeleteReportLink\"\n                isInline\n              >\n                Delete report\n              </BackgroundLink>\n            </GridItem>\n          </Grid>\n          <Grid hasGutter>\n            <GridItem sm={12} md={12} lg={12} xl={6}>\n              <ReportChart\n                profile={profile}\n                hasLegend={true}\n                chartClass=\"report-details-chart-container\"\n              />\n            </GridItem>\n            <GridItem sm={12} md={12} lg={12} xl={6}>\n              <ReportDetailsDescription profile={profile} />\n            </GridItem>\n          </Grid>\n        </PageHeader>\n        <section className=\"pf-c-page__main-section\">\n          <Grid hasGutter>\n            <GridItem span={12}>\n              <SystemsTable\n                showOsMinorVersionFilter={[profile.osMajorVersion]}\n                ssgVersions={ssgVersions}\n                columns={[\n                  Columns.customName({\n                    showLink: true,\n                    showOsInfo: true,\n                  }),\n                  Columns.inventoryColumn('tags'),\n                  Columns.SsgVersion,\n                  Columns.FailedRules,\n                  Columns.ComplianceScore,\n                  Columns.LastScanned,\n                ]}\n                compliantFilter\n                defaultFilter={`policy_id = ${profile.id}`}\n                policyId={profile.id}\n                tableProps={{\n                  rowWrapper: ReportedSystemRow,\n                }}\n                ruleSeverityFilter\n              />\n            </GridItem>\n          </Grid>\n        </section>\n      </StateViewPart>\n    </StateViewWithError>\n  );\n};\n\nReportDetails.propTypes = {\n  route: propTypes.object,\n};\n\nexport default ReportDetails;\n","/* eslint-disable react/display-name */\nimport React from 'react';\nimport propTypes from 'prop-types';\nimport { useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Grid,\n  GridItem,\n} from '@patternfly/react-core';\nimport PageHeader, {\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\n\nimport EmptyTable from '@redhat-cloud-services/frontend-components/EmptyTable';\nimport Spinner from '@redhat-cloud-services/frontend-components/Spinner';\nimport {\n  BackgroundLink,\n  BreadcrumbLinkItem,\n  ReportDetailsContentLoader,\n  ReportDetailsDescription,\n  StateViewWithError,\n  StateViewPart,\n  SubPageTitle,\n  LinkButton,\n} from 'PresentationalComponents';\nimport { useTitleEntity } from 'Utilities/hooks/useDocumentTitle';\nimport useFeature from 'Utilities/hooks/useFeature';\nimport { SystemsTable } from 'SmartComponents';\nimport '@/Charts.scss';\nimport './ReportDetails.scss';\nimport * as Columns from '../SystemsTable/Columns';\nimport { default as ReportDetailsWithNotReportedSystems } from './ReportDetailsWithNotReportedSystems';\nimport ReportChart from './Components/ReportChart';\n\nexport const QUERY = gql`\n  query RD_Profile($policyId: String!) {\n    profile(id: $policyId) {\n      id\n      name\n      refId\n      testResultHostCount\n      compliantHostCount\n      unsupportedHostCount\n      complianceThreshold\n      osMajorVersion\n      lastScanned\n      policyType\n      policy {\n        id\n        name\n      }\n      businessObjective {\n        id\n        title\n      }\n    }\n  }\n`;\n\nexport const ReportDetails = ({ route }) => {\n  const { report_id: policyId } = useParams();\n  const pdfReportEnabled = useFeature('pdfReport');\n  const { data, error, loading } = useQuery(QUERY, {\n    variables: { policyId },\n    fetchPolicy: 'no-cache',\n  });\n  let profile = {};\n  let policyName;\n  let pageTitle;\n\n  if (!loading && data) {\n    profile = data.profile;\n    policyName = profile.policy.name;\n    pageTitle = `Report: ${policyName}`;\n  }\n\n  useTitleEntity(route, policyName);\n\n  return (\n    <StateViewWithError stateValues={{ error, data, loading }}>\n      <StateViewPart stateKey=\"loading\">\n        <PageHeader>\n          <ReportDetailsContentLoader />\n        </PageHeader>\n        <section className=\"pf-c-page__main-section\">\n          <EmptyTable>\n            <Spinner />\n          </EmptyTable>\n        </section>\n      </StateViewPart>\n      <StateViewPart stateKey=\"data\">\n        <PageHeader>\n          <Breadcrumb ouiaId=\"ReportDetailsPathBreadcrumb\">\n            <BreadcrumbLinkItem to=\"/\">Compliance</BreadcrumbLinkItem>\n            <BreadcrumbLinkItem to=\"/reports\">Reports</BreadcrumbLinkItem>\n            <BreadcrumbItem isActive>{pageTitle}</BreadcrumbItem>\n          </Breadcrumb>\n          <Grid hasGutter>\n            <GridItem sm={9} md={9} lg={9} xl={9}>\n              <PageHeaderTitle title={pageTitle} />\n              <SubPageTitle>{profile.policyType}</SubPageTitle>\n            </GridItem>\n            <GridItem\n              className=\"report-details-button\"\n              sm={3}\n              md={3}\n              lg={3}\n              xl={3}\n            >\n              {pdfReportEnabled && (\n                <BackgroundLink\n                  state={{ profile }}\n                  to={`/reports/${profile.id}/pdf`}\n                  component={LinkButton}\n                  ouiaId=\"ReportDetailsDownloadReportPDFLink\"\n                  variant=\"plain\"\n                  className=\"pf-u-mr-md\"\n                >\n                  Download PDF\n                </BackgroundLink>\n              )}\n              <BackgroundLink\n                state={{ profile }}\n                to={`/reports/${profile.id}/delete`}\n                component={LinkButton}\n                variant=\"link\"\n                ouiaId=\"ReportDetailsDeleteReportLink\"\n                isInline\n              >\n                Delete report\n              </BackgroundLink>\n            </GridItem>\n          </Grid>\n          <Grid hasGutter>\n            <GridItem sm={12} md={12} lg={12} xl={6}>\n              <div className=\"chart-inline\">\n                <div className=\"chart-container\">\n                  <ReportChart\n                    profile={profile}\n                    hasLegend={true}\n                    chartClass=\"report-details-chart-container\"\n                  />\n                </div>\n              </div>\n            </GridItem>\n            <GridItem sm={12} md={12} lg={12} xl={6}>\n              <ReportDetailsDescription profile={profile} />\n            </GridItem>\n          </Grid>\n        </PageHeader>\n        <section className=\"pf-c-page__main-section\">\n          <Grid hasGutter>\n            <GridItem span={12}>\n              <SystemsTable\n                showOsMinorVersionFilter={[profile.osMajorVersion]}\n                columns={[\n                  Columns.customName({\n                    showLink: true,\n                    showOsInfo: true,\n                  }),\n                  Columns.inventoryColumn('tags'),\n                  Columns.SsgVersion,\n                  Columns.FailedRules,\n                  Columns.ComplianceScore,\n                  Columns.LastScanned,\n                ]}\n                showOnlySystemsWithTestResults\n                compliantFilter\n                defaultFilter={`with_results_for_policy_id = ${profile.id}`}\n                policyId={profile.id}\n              />\n            </GridItem>\n          </Grid>\n        </section>\n      </StateViewPart>\n    </StateViewWithError>\n  );\n};\n\nReportDetails.propTypes = {\n  route: propTypes.object,\n};\n\nconst ReportDetailsFeatureWrapper = (props) => {\n  const systemsNotReporting = useFeature('systemsNotReporting');\n\n  return systemsNotReporting ? (\n    <ReportDetailsWithNotReportedSystems {...props} />\n  ) : (\n    <ReportDetails {...props} />\n  );\n};\n\nexport default ReportDetailsFeatureWrapper;\n","import gql from 'graphql-tag';\n\nexport const DEFAULT_EXPORT_SETTINGS = {\n  compliantSystems: false,\n  nonCompliantSystems: true,\n  unsupportedSystems: true,\n  nonReportingSystems: true,\n  topTenFailedRules: true,\n  userNotes: undefined,\n};\n\nexport const GET_PROFILE = gql`\n  query PDF_Profile($policyId: String!) {\n    profile(id: $policyId) {\n      id\n      name\n      refId\n      testResultHostCount\n      compliantHostCount\n      unsupportedHostCount\n      complianceThreshold\n      osMajorVersion\n      lastScanned\n      policyType\n      totalHostCount\n      policy {\n        id\n        name\n      }\n      benchmark {\n        id\n      }\n      businessObjective {\n        id\n        title\n      }\n    }\n  }\n`;\n\nexport const GET_RULES = gql`\n  query PDF_Profiles($filter: String!, $policyId: ID!) {\n    profiles(search: $filter) {\n      totalCount\n      edges {\n        node {\n          topFailedRules(policyId: $policyId) {\n            refId\n            title\n            remediationAvailable\n            severity\n            identifier\n            failedCount\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport {\n  Form,\n  FormGroup,\n  Text,\n  TextArea,\n  Checkbox,\n} from '@patternfly/react-core';\nimport useFeature from 'Utilities/hooks/useFeature';\n\nconst ExportPDFForm = ({ policy, setExportSetting, exportSettings }) => {\n  const systemsNotReporting = useFeature('systemsNotReporting');\n\n  return (\n    <Form>\n      <FormGroup isInline fieldId=\"simple-form-checkbox-group\" label=\"Policy\">\n        <Text>{policy.name}</Text>\n      </FormGroup>\n\n      <FormGroup\n        fieldId=\"simple-form-checkbox-group\"\n        label=\"System data to include\"\n      >\n        <Checkbox\n          label=\"Non-compliant systems\"\n          id=\"non-compliant-systems-export-setting\"\n          aria-label=\"Non-compliant systems\"\n          onChange={setExportSetting('nonCompliantSystems')}\n          isChecked={exportSettings.nonCompliantSystems}\n        />\n        <Checkbox\n          label=\"Systems with unsupported configuration\"\n          id=\"unsupported-systems-export-setting\"\n          aria-label=\"Systems with unsupported configuration\"\n          onChange={setExportSetting('unsupportedSystems')}\n          isChecked={exportSettings.unsupportedSystems}\n        />\n        {systemsNotReporting && (\n          <Checkbox\n            label=\"Systems with no reports\"\n            id=\"nonreporting-systems-export-setting\"\n            aria-label=\"Systems never reported\"\n            onChange={setExportSetting('nonReportingSystems')}\n            isChecked={exportSettings.nonReportingSystems}\n          />\n        )}\n        <Checkbox\n          id=\"compliant-systems-export-setting\"\n          onChange={setExportSetting('compliantSystems')}\n          isChecked={exportSettings.compliantSystems}\n          label=\"Compliant systems\"\n          aria-label=\"Compliant systems\"\n        />\n      </FormGroup>\n\n      <FormGroup label=\"Rule data to include\" fieldId=\"checkbox01\">\n        <Checkbox\n          id=\"failed-rules-export-setting\"\n          label=\"Top failed rules (Up to 10)\"\n          aria-label=\"Rule data to include\"\n          onChange={setExportSetting('topTenFailedRules')}\n          isChecked={exportSettings.topTenFailedRules}\n        />\n      </FormGroup>\n\n      <FormGroup label=\"User notes (optional)\" fieldId=\"checkbox01\">\n        <TextArea\n          aria-label=\"User notes (optional)\"\n          onChange={setExportSetting('userNotes')}\n          value={exportSettings.userNotes}\n        />\n      </FormGroup>\n    </Form>\n  );\n};\n\nExportPDFForm.propTypes = {\n  policy: propTypes.object,\n  exportSettings: propTypes.object,\n  setExportSetting: propTypes.func,\n};\n\nexport default ExportPDFForm;\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\nvar CRC_PDF_GENERATE_API = '/api/crc-pdf-generator/v1/generate';\nexport var pdfGeneratorURL = new URL(CRC_PDF_GENERATE_API, window.location.origin);\nvar fetchPDF = function (service, template, params) {\n    return fetch(pdfGeneratorURL, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n            service: service,\n            template: template,\n            params: params,\n        }),\n    }).then(function (response) { return response.blob(); });\n};\nvar renderPDF = function (pdfBlob, fileName) {\n    if (fileName === void 0) { fileName = 'new-report'; }\n    var url = window.URL.createObjectURL(pdfBlob);\n    var a = document.createElement('a');\n    a.href = url;\n    a.download = fileName;\n    document.body.appendChild(a);\n    a.click();\n    a.remove();\n};\nvar usePDFExport = function (service, dispatch) {\n    var exportPDF = function (template, filename, exportSettings) { return __awaiter(void 0, void 0, void 0, function () {\n        var pdfBlob, e_1;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    dispatch(addNotification({\n                        variant: 'info',\n                        title: 'Preparing export',\n                        description: 'Once complete, your download will start automatically.',\n                    }));\n                    _a.label = 1;\n                case 1:\n                    _a.trys.push([1, 3, , 4]);\n                    return [4, fetchPDF(service, template, exportSettings)];\n                case 2:\n                    pdfBlob = _a.sent();\n                    renderPDF(pdfBlob, filename);\n                    dispatch(addNotification({\n                        variant: 'success',\n                        title: 'Downloading export',\n                    }));\n                    return [3, 4];\n                case 3:\n                    e_1 = _a.sent();\n                    dispatch(addNotification({\n                        variant: 'danger',\n                        title: 'Couldn’t download export',\n                        description: 'Reinitiate this export to try again.',\n                    }));\n                    return [3, 4];\n                case 4: return [2];\n            }\n        });\n    }); };\n    return exportPDF;\n};\nexport default usePDFExport;\n//# sourceMappingURL=useExportPDF.js.map","import React from 'react';\nimport { Button, Spinner } from '@patternfly/react-core';\nimport { useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport {\n  ComplianceModal,\n  StateViewWithError,\n  StateViewPart,\n} from 'PresentationalComponents';\nimport { useLinkToBackground } from 'Utilities/Router';\nimport { GET_PROFILE } from './constants';\nimport ExportPDFForm from './ExportPDFForm/ExportPDFForm';\nimport usePDFExport from '@redhat-cloud-services/frontend-components-utilities/useExportPDF';\nimport useExportSettings from './hooks/useExportSettings';\nimport { useDispatch } from 'react-redux';\n\n// Provides that export settings modal accessible in the report details\nexport const ReportDownload = () => {\n  const { report_id: policyId } = useParams();\n  const dispatch = useDispatch();\n  const linkToReport = useLinkToBackground('/reports/' + policyId);\n  const { data, loading, error } = useQuery(GET_PROFILE, {\n    variables: { policyId },\n  });\n  const policy = data?.profile;\n  const {\n    exportSettings,\n    setExportSetting,\n    isValid: settingsValid,\n  } = useExportSettings();\n\n  const exportPDF = usePDFExport('compliance', dispatch);\n\n  const buttonLabel = 'Export report';\n  const buttonProps = {\n    ouiaId: 'ExportReportButton',\n    variant: 'primary',\n    isDisabled: !settingsValid,\n  };\n\n  const downloadReport = () => {\n    const exportFileName = `compliance-report--${\n      new Date().toISOString().split('T')[0]\n    }`;\n    exportPDF('report', exportFileName, exportSettings);\n  };\n\n  const actions = [\n    <Button\n      key=\"export\"\n      onClick={downloadReport}\n      {...buttonProps}\n      className=\"pf-u-mr-sm\"\n    >\n      {buttonLabel}\n    </Button>,\n    <Button\n      variant=\"secondary\"\n      key=\"cancel\"\n      ouiaId=\"ExportReportCancelButton\"\n      onClick={(event) => {\n        event.preventDefault();\n        window.history.back();\n      }}\n    >\n      Cancel\n    </Button>,\n  ];\n\n  return (\n    <ComplianceModal\n      isOpen\n      width=\"440px\"\n      ouiaId=\"DownloadReportModal\"\n      title=\"Compliance report\"\n      onClose={() => linkToReport()}\n      actions={actions}\n    >\n      <StateViewWithError stateValues={{ error, data, loading }}>\n        <StateViewPart stateKey=\"loading\">\n          <Spinner />\n        </StateViewPart>\n        <StateViewPart stateKey=\"data\">\n          <ExportPDFForm {...{ policy, setExportSetting, exportSettings }} />\n        </StateViewPart>\n      </StateViewWithError>\n    </ComplianceModal>\n  );\n};\n\nexport default ReportDownload;\n","import { useState } from 'react';\nimport pickBy from 'lodash/pickBy';\nimport useFeature from 'Utilities/hooks/useFeature';\nimport { DEFAULT_EXPORT_SETTINGS } from '../constants';\n\nconst preparedSettings = (withReporting) =>\n  pickBy(\n    DEFAULT_EXPORT_SETTINGS,\n    (_value, key) => !(key === 'nonReportingSystems' && !withReporting)\n  );\n\nconst useExportSettings = () => {\n  const systemsNotReporting = useFeature('systemsNotReporting');\n  const [exportSettings, setExportSettings] = useState(\n    preparedSettings(systemsNotReporting)\n  );\n\n  const setExportSetting = (setting) => (value) =>\n    setExportSettings({\n      ...exportSettings,\n      [setting]: value,\n    });\n\n  const isValid = () =>\n    Object.keys(exportSettings).some(\n      (key) => (key !== 'userNotes' && !!exportSettings[key]) === true\n    );\n\n  return {\n    exportSettings,\n    setExportSetting,\n    isValid: isValid(),\n  };\n};\n\nexport default useExportSettings;\n"],"names":["ReportedSystemRow","_ref","_row$testResultProfil","row","children","React","RowWrapper","style","testResultProfiles","length","background","borderLeft","borderRight","propTypes","QUERY","gql","_templateObject","_taggedTemplateLiteral","ReportDetails","policyName","pageTitle","route","policyId","useParams","report_id","pdfReportEnabled","useFeature","_useQuery","useQuery","variables","fetchPolicy","data","error","loading","profile","ssgVersions","policy","name","concat","_toConsumableArray","Set","profiles","flatMap","_ref2","benchmark","version","useTitleEntity","StateViewWithError","stateValues","StateViewPart","stateKey","PageHeader","ReportDetailsContentLoader","className","EmptyTable","Spinner","Breadcrumb","ouiaId","BreadcrumbLinkItem","to","BreadcrumbItem","isActive","Grid","hasGutter","GridItem","sm","md","lg","xl","PageHeaderTitle","title","SubPageTitle","policyType","BackgroundLink","state","id","component","LinkButton","variant","isInline","ReportChart","hasLegend","chartClass","ReportDetailsDescription","span","SystemsTable","showOsMinorVersionFilter","osMajorVersion","columns","Columns","showLink","showOsInfo","compliantFilter","defaultFilter","tableProps","rowWrapper","ruleSeverityFilter","showOnlySystemsWithTestResults","props","ReportDetailsWithNotReportedSystems","DEFAULT_EXPORT_SETTINGS","compliantSystems","nonCompliantSystems","unsupportedSystems","nonReportingSystems","topTenFailedRules","userNotes","undefined","GET_PROFILE","_templateObject2","ExportPDFForm","setExportSetting","exportSettings","systemsNotReporting","Form","FormGroup","fieldId","label","Text","Checkbox","onChange","isChecked","TextArea","value","pdfGeneratorURL","URL","window","location","origin","fetchPDF","service","template","params","fetch","method","headers","body","JSON","stringify","then","response","blob","dispatch","filename","thisArg","_arguments","generator","f","y","t","g","_","sent","trys","ops","next","verb","Symbol","iterator","this","n","v","op","TypeError","call","done","pop","push","e","step","__generator","_a","description","pdfBlob","fileName","url","createObjectURL","a","document","createElement","href","download","appendChild","click","remove","renderPDF","P","Promise","resolve","reject","fulfilled","rejected","result","apply","ReportDownload","useDispatch","linkToReport","useLinkToBackground","_useExportSettings","withReporting","_useState","useState","pickBy","_value","key","_useState2","_slicedToArray","setExportSettings","setting","_objectSpread","_defineProperty","isValid","Object","keys","some","useExportSettings","settingsValid","exportPDF","usePDFExport","buttonProps","isDisabled","actions","Button","_extends","onClick","exportFileName","Date","toISOString","split","event","preventDefault","history","back","ComplianceModal","isOpen","width","onClose"],"sourceRoot":""}