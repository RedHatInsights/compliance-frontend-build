{"version":3,"sources":["webpack:///./src/Utilities/graphql/mutations.js","webpack:///./src/Utilities/Dispatcher.js","webpack:///./src/SmartComponents/DeletePolicy/DeletePolicy.js"],"names":["CREATE_PROFILE","gql","ASSOCIATE_SYSTEMS_TO_PROFILES","UPDATE_PROFILE","CREATE_BUSINESS_OBJECTIVE","DELETE_PROFILE","DELETE_REPORT","dispatchAction","actionCreator","getStore","dispatch","DeletePolicy","location","useLocation","history","useHistory","state","policy","name","id","onClose","push","useMutation","onCompleted","addNotification","variant","title","onError","error","description","message","deletePolicy","ModalVariant","small","isOpen","actions","key","aria-label","onClick","variables","input","propTypes","object"],"mappings":"sjEAEO,IAAMA,EAAiBC,IAAH,KAUdC,EAAgCD,IAAH,KAyB7BE,GAf+BF,IAAH,KAeXA,IAAH,MAcdG,EAA4BH,IAAH,KAWzBI,EAAiBJ,IAAH,KAUdK,EAAgBL,IAAH,M,iCCxE1B,+CAEO,SAASM,EAAeC,GAE3B,OADcC,cACDC,SAASF,K,sKCUpBG,EAAe,WACjB,IAAMC,EAAWC,cACXC,EAAUC,cAFO,EAGFH,EAASI,MAAMC,OAA5BC,EAHe,EAGfA,KAAMC,EAHS,EAGTA,GACRC,EAAU,WACZN,EAAQO,KAAK,kBALM,EAQAC,sBAAYjB,IAAgB,CAC/CkB,YAAa,WACThB,YAAeiB,0BAAgB,CAC3BC,QAAS,UACTC,MAAO,kBAAF,OAAqBR,MAE9BE,KAEJO,QAAS,SAACC,GACNrB,YAAeiB,0BAAgB,CAC3BC,QAAS,SACTC,MAAO,wBACPG,YAAaD,EAAME,WAEvBV,OAdDW,EARgB,YA0BvB,OACI,kBAAC,QAAD,CACIN,QAAUO,eAAaC,MACvBP,MAAM,gBACNQ,QAAM,EACNd,QAAUA,EACVe,QAAS,CACL,kBAAC,SAAD,CAAQC,IAAI,UACRC,aAAW,SACXZ,QAAQ,SACRa,QAAS,kBAAMP,EAAa,CAAEQ,UAAW,CAAEC,MAAO,CAAErB,WAHxD,iBAMA,kBAAC,SAAD,CAAQiB,IAAI,SAASX,QAAQ,YAAYa,QAAUlB,GAAnD,YAKJ,kBAAC,cAAD,wCACoC,2BAAKF,GADzC,8BAQZP,EAAa8B,UAAY,CACrBxB,OAAQwB,IAAUC,QAGP/B","file":"js/DeletePolicy-0561b67d585555023501.js","sourcesContent":["import gql from 'graphql-tag';\n\nexport const CREATE_PROFILE = gql`\nmutation CreateProfile($input: createProfileInput!) {\n    createProfile(input: $input) {\n        profile {\n            id\n        }\n    }\n}\n`;\n\nexport const ASSOCIATE_SYSTEMS_TO_PROFILES = gql`\nmutation associateSystems($input: associateSystemsInput!) {\n    associateSystems(input: $input) {\n        profile {\n            id\n        }\n    }\n}\n`;\n\nexport const ASSOCIATE_PROFILES_TO_SYSTEM = gql`\nmutation associateProfiles($input: associateProfilesInput!) {\n    associateProfiles(input: $input) {\n        system {\n            id\n            name\n            profiles {\n                id\n                name\n            }\n        }\n    }\n}\n`;\n\nexport const UPDATE_PROFILE = gql`\nmutation UpdateProfile($input: UpdateProfileInput!) {\n    updateProfile(input: $input) {\n        profile {\n            id,\n            name,\n            complianceThreshold,\n            businessObjectiveId,\n            description\n        }\n    }\n}\n`;\n\nexport const CREATE_BUSINESS_OBJECTIVE = gql`\nmutation createBusinessObjective($input: createBusinessObjectiveInput!) {\n    createBusinessObjective(input: $input) {\n        businessObjective {\n            id\n            title\n        }\n    }\n}\n`;\n\nexport const DELETE_PROFILE = gql`\nmutation DeleteProfile($input: deleteProfileInput!) {\n    deleteProfile(input: $input) {\n        profile {\n            id\n        }\n    }\n}\n`;\n\nexport const DELETE_REPORT = gql`\nmutation DeleteReport($input: deleteTestResultsInput!) {\n    deleteTestResults(input: $input) {\n        profile {\n            id\n        }\n    }\n}\n`;\n","import { getStore } from 'Store';\n\nexport function dispatchAction(actionCreator) {\n    const store = getStore();\n    return store.dispatch(actionCreator);\n}\n","import {\n    Button,\n    Modal,\n    ModalVariant,\n    TextContent\n} from '@patternfly/react-core';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { useMutation } from '@apollo/react-hooks';\nimport { DELETE_PROFILE } from 'Utilities/graphql/mutations';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { dispatchAction } from 'Utilities/Dispatcher';\n\nconst DeletePolicy = () => {\n    const location = useLocation();\n    const history = useHistory();\n    const { name, id } = location.state.policy;\n    const onClose = () => {\n        history.push('/scappolicies');\n    };\n\n    const [deletePolicy] = useMutation(DELETE_PROFILE, {\n        onCompleted: () => {\n            dispatchAction(addNotification({\n                variant: 'success',\n                title: `Removed policy ${ name }`\n            }));\n            onClose();\n        },\n        onError: (error) => {\n            dispatchAction(addNotification({\n                variant: 'danger',\n                title: 'Error removing policy',\n                description: error.message\n            }));\n            onClose();\n        }\n    });\n\n    return (\n        <Modal\n            variant={ ModalVariant.small }\n            title='Delete policy'\n            isOpen\n            onClose={ onClose }\n            actions={[\n                <Button key='destroy'\n                    aria-label=\"delete\"\n                    variant='danger'\n                    onClick={() => deletePolicy({ variables: { input: { id } } })}>\n                    Delete policy\n                </Button>,\n                <Button key='cancel' variant='secondary' onClick={ onClose }>\n                    Cancel\n                </Button>\n            ]}\n        >\n            <TextContent>\n                Are you sure you want to delete <b>{ name }</b>?\n                This cannot be undone.\n            </TextContent>\n        </Modal>\n    );\n};\n\nDeletePolicy.propTypes = {\n    policy: propTypes.object\n};\n\nexport default DeletePolicy;\n"],"sourceRoot":""}