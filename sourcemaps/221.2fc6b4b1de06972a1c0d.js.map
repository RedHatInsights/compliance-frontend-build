{"version":3,"sources":["webpack:///./src/PresentationalComponents/ReduxFormWrappers/ReduxFormWrappers.js","webpack:///./src/PresentationalComponents/RulesTable/Cells.js","webpack:///./src/PresentationalComponents/RulesTable/Columns.js","webpack:///./src/PresentationalComponents/TabbedRules/OsVersionText.js","webpack:///./src/PresentationalComponents/TabbedRules/ProfileTabContent.js","webpack:///./src/PresentationalComponents/TabbedRules/ruleSelection.js","webpack:///./src/PresentationalComponents/TabbedRules/TabbedRules.js","webpack:///./src/PresentationalComponents/LoadingPoliciesTable/LoadingPoliciesTable.js","webpack:///./src/PresentationalComponents/ErrorPage/ErrorPage.js","webpack:///./src/PresentationalComponents/GreySmallText/GreySmallText.js","webpack:///./src/PresentationalComponents/CheckboxGroup/CheckboxGroup.js","webpack:///./src/PresentationalComponents/ProfileTypeSelect/ProfileTypeSelect.js","webpack:///./src/PresentationalComponents/ComplianceScore/ComplianceScore.js","webpack:///./src/PresentationalComponents/PolicyDetailsContentLoader/PolicyDetailsContentLoader.js","webpack:///./src/PresentationalComponents/ReportDetailsContentLoader/ReportDetailsContentLoader.js","webpack:///./src/PresentationalComponents/PolicyDetailsDescription/PolicyDetailsDescription.js","webpack:///./src/PresentationalComponents/ReportDetailsDescription/ReportDetailsDescription.js","webpack:///./src/PresentationalComponents/ProgressBar/ProgressBar.js","webpack:///./src/PresentationalComponents/TabSwitcher/TabSwitcher.js","webpack:///./src/PresentationalComponents/StateView/StateView.js","webpack:///./src/PresentationalComponents/SystemsCountWarning/SystemsCountWarning.js","webpack:///./src/PresentationalComponents/WarningText/WarningText.js","webpack:///./src/PresentationalComponents/BackgroundLink/BackgroundLink.js","webpack:///./src/PresentationalComponents/BreadcrumbLinkItem/BreadcrumbLinkItem.js","webpack:///./src/PresentationalComponents/ReportsTable/Cells.js","webpack:///./src/PresentationalComponents/ReportsTable/Filters.js","webpack:///./src/PresentationalComponents/ReportsTable/ReportsTable.js","webpack:///./src/Utilities/hooks/useTableSort.js","webpack:///./src/PresentationalComponents/ReportsEmptyState/ReportsEmptyState.js","webpack:///./src/PresentationalComponents/PolicyPopover/PolicyPopover.js","webpack:///./src/PresentationalComponents/PolicyThresholdTooltip/PolicyThresholdTooltip.js","webpack:///./src/PresentationalComponents/PolicyBusinessObjectiveTooltip/PolicyBusinessObjectiveTooltip.js","webpack:///./src/PresentationalComponents/NoResultsTable/NoResultsTable.js","webpack:///./src/PresentationalComponents/PoliciesTable/PoliciesTable.js","webpack:///./src/PresentationalComponents/ProfileThresholdField/ProfileThresholdField.js","webpack:///./src/PresentationalComponents/SupportedSSGVersionsLink/SupportedSSGVersionsLink.js","webpack:///./src/PresentationalComponents/UnsupportedSSGVersion/UnsupportedSSGVersion.js","webpack:///./src/PresentationalComponents/SubPageTitle/SubPageTitle.js","webpack:///./src/PresentationalComponents/OperatingSystemBadge/OperatingSystemBadge.js","webpack:///./src/PresentationalComponents/NoSystemsTableWithWarning/NoSystemsTableWithWarning.js","webpack:///./src/Utilities/hooks/useTableTools/FilterConfigBuilder/Helpers.js","webpack:///./src/Utilities/hooks/useTableTools/FilterConfigBuilder/FilterBuilder.js","webpack:///./src/Utilities/hooks/useTableTools/FilterConfigBuilder/ChipBuilder.js","webpack:///./src/Utilities/hooks/useTableTools/FilterConfigBuilder/FilterConfigBuilder.js","webpack:///./src/Utilities/hooks/useTableTools/Components/SelectedFilterSwitch.js","webpack:///./src/Utilities/hooks/useTableTools/useSelectedFilter.js","webpack:///./src/Utilities/hooks/useTableTools/useFilterConfig.js","webpack:///./src/Utilities/hooks/useTableTools/useTableSort.js","webpack:///./src/Utilities/hooks/useTableTools/usePaginate.js","webpack:///./src/Utilities/hooks/useTableTools/Components/NoResultsTable.js","webpack:///./src/Utilities/hooks/useTableTools/useRowsBuilder.js","webpack:///./src/Utilities/hooks/useTableTools/useBulkSelect.js","webpack:///./src/Utilities/hooks/useTableTools/helper.js","webpack:///./src/Utilities/hooks/useTableTools/useItemIdentify.js","webpack:///./src/Utilities/hooks/useTableTools/useExpandable.js","webpack:///./src/Utilities/hooks/useTableTools/useDedicatedAction.js","webpack:///./src/Utilities/hooks/useTableTools/Components/TableToolsTable.js","webpack:///./src/Utilities/hooks/useTableTools/useTableTools.js","webpack:///./src/PresentationalComponents/RulesTable/RuleDetailsRow.js","webpack:///./src/PresentationalComponents/RulesTable/EmptyRows.js","webpack:///./src/PresentationalComponents/RulesTable/Constants.js","webpack:///./src/PresentationalComponents/RulesTable/Filters.js","webpack:///./src/PresentationalComponents/RulesTable/RulesTable.js","webpack:///./src/SmartComponents/CreatePolicy/validate.js","webpack:///./src/Utilities/TextHelper.js","webpack:///./src/Utilities/helpers.js","webpack:///./src/Utilities/hooks/useFilterConfig.js","webpack:///./src/Utilities/ruleHelpers.js"],"names":["ReduxFormTextInput","field","TextInput","value","input","defaultValue","onChange","ReduxFormTextArea","TextArea","ruleProps","title","propTypes","identifier","profile","compliant","remediationAvailable","severity","Rule","TextContent","Text","component","TextVariants","label","Policy","name","HighSeverity","className","MediumSeverity","LowSeverityIcon","width","height","viewBox","role","style","verticalAlign","xmlns","d","fill","fillRule","LowSeverity","UnknownSeverity","Severity","high","medium","low","toLowerCase","Passed","Ansible","Name","sortByProp","renderFunc","renderComponent","sortByFunction","rule","PolicyCell","transforms","fitContent","sortByArray","SeverityCell","PassedCell","original","props","tooltip","AnsibleCell","newOsMinorVersion","osMajorVersion","osMinorVersion","ProfileSystemCount","count","Badge","isRead","pluralize","SSGVersionText","ssgVersion","Popover","position","bodyContent","SSGPopoverBody","footerContent","cursor","fontSize","BENCHMARK_QUERY","gql","ProfileTabContent","columns","handleSelect","systemCount","selectedRuleRefIds","rulesTableProps","useQuery","variables","id","benchmark","skip","data","error","loading","rules","Grid","stateValues","stateKey","Spinner","remediationAvailableFilter","remediationsEnabled","profileRules","selectedRefIds","matchesSelectionItem","selectionItem","selectedRuleRefIdsForTab","tabSelection","find","ruleRefIds","profilesWithRulesToSelection","profiles","prevSelection","options","only","additionalSelection","map","foundSelection","console","refId","filter","v","tabsDataToOsMinorMap","tabsData","osMinorMap","forEach","extendProfilesByOsMinor","flatMap","undefined","eventKey","getDefaultTab","defaultTab","length","firstTab","TabbedRules","setSelectedRuleRefIds","level","profileSelectedRuleRefIds","filteredSelection","newItem","Tab","key","isRequired","Table","aria-label","ouiaId","cells","rows","Array","RowLoader","colSpan","TableHeader","TableBody","ErrorPage","networkError","statusCode","window","insights","chrome","auth","logout","NotAuthorized","serviceName","InvalidObject","size","color","Title","headingLevel","message","Button","variant","onClick","history","goBack","GreySmallText","children","CheckboxFieldArray","inputValue","index","defaultChecked","Checkbox","isChecked","includes","checked","arr","Set","push","splice","indexOf","handleChange","InUseProfileLabel","Tooltip","content","Label","lineHeight","ProfileTypeSelect","hasGutter","description","disabled","GridItem","span","rowSpan","Field","type","JSON","stringify","Truncate","lines","defaultProps","CompliantIcon","system","rulesPassed","rulesFailed","complianceScoreString","supported","fixedPercentage","score","speed","backgroundcolor","foregroundcolor","x","y","rx","ry","primaryColor","secondaryColor","cx","cy","r","PolicyDetailsDescription","policy","Card","CardHeader","CardBody","complianceThreshold","businessObjective","text","linkifyHtml","inline","majorOsVersion","policyType","PropTypes","Dt","TextListItem","TextListItemVariants","Dd","PolicyDescription","TextList","TextListVariants","Link","to","version","ReportDetailsDescription","ProgressBar","percent","failed","ProgressVariant","Progress","ContentTab","useAnchorLevels","defaultAnchor","levels","useAnchor","split","currentAnchor","RoutedTabSwitcher","tab","c","RoutedTabs","useHistory","useLocation","pathname","state","Tabs","onSelect","e","preventDefault","tabToActivate","replace","tabAnchor","hash","slice","join","activeKey","StateViewPart","StateView","child","StateViewWithError","WARNING_TEXT","WithOptionalToolTip","showTooltip","TooltipPosition","SystemsCountWarning","WarningText","BackgroundLink","desiredState","backgroundLocation","background","RouterLink","href","BreadcrumbLinkItem","BreadcrumbItem","marginRight","OperatingSystem","unsupportedHostCount","CompliantSystems","testResultHostCount","compliantHostCount","measureLocation","tooltipText","marginLeft","policyNameFilter","conditionalFilterType","lowerCaseValue","policyComplianceFilter","values","compliantHostsPercent","Math","round","min","max","i","items","ReportsTable","sortable","sortByProperty","policyTypes","uniq","operatingSystems","useFilterConfig","policyTypeFilter","operatingSystem","operatingSystemFilter","conditionalFilter","array","useState","direction","sortBy","setSortBy","column","tableSort","onSort","_","sorted","orderArrayByProp","useTableSort","filtered","sortedProfiles","emptyRows","PrimaryToolbar","ComplianceEmptyState","mainButton","PolicyPopover","headerContent","isInline","Fragment","NoResultsTable","EmptyTable","Bullseye","EmptyState","EmptyStateVariant","EmptyStateBody","PolicyNameCell","FILTER_CONFIGURATION","policies","PoliciesTable","FilterConfigBuilder","filterConfigBuilder","getChipBuilder","getFilterBuilder","page","itemsPerPage","activeFilters","_event","changePage","setState","applyFilterToObjectArray","chips","removeFilterWithChip","initialDefaultState","clearAll","clearAllFilter","deleteFilter","_index","policyId","location","this","filteredPolicies","filterChips","chipBuilder","chipsFor","totalHostCount","policiesToRows","paginatedPolicies","filterConfig","buildConfiguration","onFilterUpdate","hideLabel","pagination","itemCount","dropDirection","onSetPage","setPage","onPerPageSelect","setPerPage","perPage","activeFiltersConfig","filters","onDelete","onFilterDelete","ToolbarItem","actionResolver","TableToolbar","isFooter","Pagination","PaginationVariant","React","withRouter","ProfileThresholdField","validThreshold","thresholdValid","previousThreshold","threshold","FormGroup","fieldId","validated","helperTextInvalid","helperText","labelIcon","handleThresholdChange","display","reduxForm","form","destroyOnUnmount","forceUnregisterOnUnmount","target","rel","supportedConfigsLink","UNSUPPORTED_PLURAL_MESSAGE","marginBottom","WarningWithPopover","maxWidth","WarningWithTooltip","TooltipOrPopover","tooltipProps","Component","componentProps","popover","showHeader","showPopupHeader","messageVariant","UnsupportedSSGVersion","showWarningIcon","showHelpIcon","iconProps","defaultStyle","SubPageTitle","OperatingSystemBadge","colorMap","default","7","8","fontWeight","stringToId","string","configItem","filterString","filterStringArray","moreThanTwo","f","fl","fs","config","buildFilterFilterString","combineFilterStrings","category","currentValue","labelForValue","getCategoryForLabel","textFilterChip","checkboxFilterChip","radioFilterChip","Object","keys","chipFor","defaultPlaceholder","item","concat","ChipBuilder","filterBuilder","FilterBuilder","handler","placeholder","filterValues","event","selectedValues","toTextFilterConfig","toCheckboxFilterConfig","toRadioFilterConfig","states","toFilterConfigItem","defaultStates","initialState","filterStateName","defaultValueForFilter","query","results","info","getItemByLabelOrValue","objects","filteredObjects","currentState","chipCategory","chipValue","valueForLabel","stateProp","newFilterState","removeFilterFromFilterState","SelectedFilterSwitch","setActiveFilter","Switch","enableSelectedFilter","selectedFilter","filterItem","rowProps","selected","toolbarProps","dedicatedAction","useMemo","enableFilters","initialActiveFilters","setActiveFilters","buildConfig","addConfigItem","useSelectedFilter","selectedFilterToolbarProps","selectFilterItem","useEffect","addSortableTransform","isSortable","columnOffset","detailsComponent","sorter","orderByArray","tableProps","enablePagination","paginationState","setPaginationState","setPagination","newState","paginator","start","end","nextPage","kind","columnProp","primeItem","transformers","transformer","applyTransformers","buildRow","rowTransformer","idx","row","itemId","itemRow","EmptyRowsComponent","transformedItems","filteredItems","sortedItems","paginatedItems","allItemsIncluded","selection","selectOrUnselect","itemIds","propItems","preselected","enableBulkSelect","selectedIds","setSelectedItemIds","selectItemTransformer","total","selectedItemsTotal","filterSelected","noneSelected","filteredTotal","allFiltertedSelected","paginatedTotal","currentPageSelected","selectedItems","checkCurrentPageSelected","itemsTotal","checkboxState","allCount","allSelected","isDisabled","onSelectCallback","func","newSelectedItemsIds","selectNone","selectItems","arrayA","arrayB","from","unselectItems","selectPage","currentPageIds","setPageMemo","rowId","canSelectAll","clearSelection","bulkSelect","toggleProps","currentFilteredIds","getIdProp","idProp","identify","itemDetailsRow","DetailsComponent","parent","childRowForRule","enableExpanbale","openItems","setOpenItems","_columns","rowIndex","isOpen","onCollapse","_isOpen","enableDedicatedAction","dedicatedActionOption","additionalDedicatedActions","DedicatedAction","TableToolsTable","toolbarPropsOption","tablePropsOption","identifiedItems","useItemIdentify","sortableTableProps","usePaginate","pagintionToolbarProps","conditionalFilterProps","useExpandable","openItem","expandableProps","useBulkSelect","selectItem","bulkSelectToolbarProps","bulkSelectTableProps","dedicatedActionToolbarProps","useDedicatedAction","useRowsBuilder","rowBuilderToolbarProps","rowBuilderTableProps","useTableTools","RuleDetailsRow","references","rationale","marginTop","Stack","StackItem","isFilled","ident","reduce","prev","next","ref","HIGH_SEVERITY","MEDIUM_SEVERITY","LOW_SEVERITY","UNKNOWN_SEVERITY","filterRulesWithAllValues","valueCheck","anyFilterApply","filteredRules","BASE_FILTER_CONFIGURATION","reference","PASS_FILTER_CONFIG","REMEDIATION_AVAILABLE_FILTER_CONFIG","showPassFailFilter","policiesFilterConfig","RulesTable","Columns","hidePassed","toRulesArrayWithProfile","buildFilterConfig","passed","selectable","selectedRules","ComplianceRemediationButton","allSystems","testResultProfiles","ruleObjectsFailed","validateBenchmarkPage","validateDetailsPage","validateRulesPage","validateSystemsPage","systemIds","fixed","withPercent","fixedValue","toFixed","singular","plural","collection","sortingByProp","propName","order","objA","objB","propA","propB","_data","_id","entity","getSortable","property","sort","a","b","String","localeCompare","objectArray","orderProp","orderArray","sortedObjectArray","orderKey","reverse","getProperty","obj","path","fallback","parts","shift","camelCase","trim","toUpperCase","substring","initialConfig","arrayToFilter","activeFilterValues","setActiveFilterValues","newActiveFilters","buildFilterString","profilesRulesFailed","profilesRulesPassed","systemRulesFailed","systemSupportedByProfiles","acc","systemsWithRuleObjectsFailed","systems","profilesWithRules","profileWithRules","parse"],"mappings":"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","file":"js/221.8dd95fdf703ecc74768b.js","sourcesContent":["import React from 'react';\nimport { rawComponents } from '@data-driven-forms/pf4-component-mapper';\nimport { TextInput, TextArea } from '@patternfly/react-core';\n\nexport const ReduxFormTextInput = field => (\n    <TextInput\n        value={field.input.value || field.defaultValue}\n        onChange={field.input.onChange}\n        {...field} />\n);\n\nexport const ReduxFormTextArea = field => (\n    <TextArea\n        value={field.input.value || field.defaultValue}\n        onChange={field.input.onChange}\n        {...field} />\n);\n\nexport const ReduxFormCreatableSelectInput = field => (\n    <rawComponents.RawSelect selectVariant=\"createable\"\n        value={field.selected}\n        onChange={field.input.onChange}\n        {...field} />\n);\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Text, TextVariants, TextContent } from '@patternfly/react-core';\nimport {\n    CheckCircleIcon, ExclamationCircleIcon, ExclamationTriangleIcon, QuestionCircleIcon\n} from '@patternfly/react-icons';\n\nconst ruleProps = {\n    title: propTypes.string,\n    identifier: propTypes.object,\n    profile: propTypes.object,\n    compliant: propTypes.bool,\n    remediationAvailable: propTypes.bool,\n    severity: propTypes.string\n};\n\nexport const Rule = ({ title, identifier }) => (\n    <TextContent>\n        { title }\n        { identifier ?\n            <Text component={ TextVariants.small }>{ identifier.label }</Text> : '' }\n    </TextContent>\n);\nRule.propTypes = ruleProps;\n\nexport const Policy = ({ profile }) => (\n    profile.name\n);\nPolicy.propTypes = ruleProps;\n\nexport const HighSeverity = () => (\n    <span>\n        <ExclamationCircleIcon className='ins-u-failed'/> High\n    </span>\n);\n\nexport const MediumSeverity = () => (\n    <span>\n        <ExclamationTriangleIcon className='ins-u-warning'/> Medium\n    </span>\n);\n\nexport const LowSeverityIcon = () => (\n    <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 18 18\" role=\"img\" style={ { verticalAlign: '-0.125em' } } xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M2 0h14a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2zm6.67 10.46a1.67 1.67 0 1 0 0 3.338 1.67 1.67 0 0 0 0-3.338zm-1.586-6l.27 4.935a.435.435 0 0 0 .434.411H9.55c.232 0 .422-.18.435-.411l.27-4.936A.435.435 0 0 0 9.818 4h-2.3c-.25 0-.448.21-.435.46z\" fill=\"#3A9CA6\" fillRule=\"evenodd\"/></svg> // eslint-disable-line\n);\n\nexport const LowSeverity = () => (\n    <span>\n        <LowSeverityIcon /> Low\n    </span>\n);\n\nexport const UnknownSeverity = () => (\n    <span>\n        <QuestionCircleIcon /> Unknown\n    </span>\n);\n\nexport const Severity = ({ severity }) => (\n    {\n        high: <HighSeverity />,\n        medium: <MediumSeverity />,\n        low: <LowSeverity />\n    }[severity?.toLowerCase()] || <UnknownSeverity />\n);\nSeverity.propTypes = ruleProps;\n\nexport const Passed = ({ compliant }) => (\n    compliant ?\n        <CheckCircleIcon className='ins-u-passed' /> :\n        <ExclamationCircleIcon className='ins-u-failed' />\n);\nPassed.propTypes = ruleProps;\n\nexport const Ansible = ({ remediationAvailable }) => (\n    remediationAvailable ? <CheckCircleIcon className='ins-u-passed' /> : 'No'\n);\nAnsible.propTypes = ruleProps;\n","import React from 'react';\nimport { fitContent } from '@patternfly/react-table';\nimport { AnsibeTowerIcon } from '@patternfly/react-icons';\nimport { renderComponent } from 'Utilities/helpers';\nimport {\n    Rule, Policy as PolicyCell, Severity as SeverityCell, Passed as PassedCell, Ansible as AnsibleCell\n} from './Cells';\n\nexport const Name = {\n    title: 'Name',\n    sortByProp: 'title',\n    renderFunc: renderComponent(Rule)\n};\n\nexport const Policy = {\n    title: 'Policy',\n    sortByFunction: (rule) => (rule?.profile?.name),\n    renderFunc: renderComponent(PolicyCell)\n};\n\nexport const Severity = {\n    title: 'Severity',\n    sortByProp: 'severity',\n    transforms: [fitContent],\n    sortByArray: ['high', 'medium', 'low', 'unknown'],\n    renderFunc: renderComponent(SeverityCell)\n};\n\nexport const Passed = {\n    title: 'Passed',\n    sortByProp: 'compliant',\n    renderFunc: renderComponent(PassedCell)\n};\n\nexport const Ansible = {\n    title: <span><AnsibeTowerIcon /> Ansible</span>,\n    original: 'Ansible',\n    props: {\n        tooltip: 'Ansible'\n    },\n    transforms: [fitContent],\n    sortByProp: 'remediationAvailable',\n    renderFunc: renderComponent(AnsibleCell)\n};\n","const OsVersionText = ({ profile, newOsMinorVersion }) => (\n    `RHEL${'\\u00A0'}${ profile.osMajorVersion }.${ (profile.osMinorVersion || newOsMinorVersion) }`\n);\n\nexport default OsVersionText;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport {\n    Text, TextVariants, TextContent, Grid, Spinner, Badge, Popover\n} from '@patternfly/react-core';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport { StateViewWithError, StateViewPart, SupportedSSGVersionsLink, RulesTable } from 'PresentationalComponents';\nimport { pluralize } from 'Utilities/TextHelper';\nimport OsVersionText from './OsVersionText';\n\nconst ProfileSystemCount = ({ count = 0 }) => (\n    <Badge isRead>\n        { `${count} ${ pluralize(count, 'system')}` }\n    </Badge>\n);\n\nProfileSystemCount.propTypes = {\n    profile: propTypes.object,\n    count: propTypes.number\n};\n\nconst SSGVersionText = ({ profile, newOsMinorVersion }) => (\n    <Text component={ TextVariants.p }>\n        SSG version: { profile.ssgVersion }\n        {' '}\n        <Popover\n            position='right'\n            bodyContent={ <SSGPopoverBody { ...{ profile, newOsMinorVersion } } /> }\n            footerContent={ <SupportedSSGVersionsLink /> }>\n            <span style={ { cursor: 'pointer' } }>\n                <OutlinedQuestionCircleIcon className=\"grey-icon\" />\n            </span>\n        </Popover>\n    </Text>\n);\n\nSSGVersionText.propTypes = {\n    profile: propTypes.object.isRequired,\n    newOsMinorVersion: propTypes.string\n};\n\nconst SSGPopoverBody = ({ profile, newOsMinorVersion }) => (\n    <TextContent style={ { fontSize: 'var(--pf-c-popover--FontSize)' } }>\n        <Text>\n            This is the latest supported version of the SCAP Security Guide (SSG) for\n            {' '}\n            <OsVersionText { ...{ profile, newOsMinorVersion } } />\n        </Text>\n        <Text>\n            <OsVersionText { ...{ profile, newOsMinorVersion } } /> systems assigned to this\n            policy will report using this rule list.\n        </Text>\n    </TextContent>\n);\n\nSSGPopoverBody.propTypes = {\n    profile: propTypes.object.isRequired,\n    newOsMinorVersion: propTypes.string\n};\n\nconst BENCHMARK_QUERY = gql`\nquery benchmarkQuery($id: String!) {\n    benchmark(id: $id) {\n        id\n        osMajorVersion\n        rules {\n            id\n            title\n            severity\n            rationale\n            refId\n            description\n            remediationAvailable\n            identifier\n        }\n    }\n}\n`;\n\nconst ProfileTabContent = ({\n    profile, columns, handleSelect, systemCount, selectedRuleRefIds, rulesTableProps, newOsMinorVersion\n}) => {\n    const { data: benchmark, error, loading } = useQuery(BENCHMARK_QUERY, {\n        variables: {\n            id: profile.benchmark.id\n        },\n        skip: !handleSelect || !profile.benchmark?.id\n    });\n    const rules = handleSelect ? benchmark?.benchmark?.rules : profile?.rules;\n\n    return <React.Fragment>\n        <Grid>\n            <TextContent className=\"pf-u-mt-md\">\n                <Text component={ TextVariants.h3 } >\n                    <span className='pf-u-pr-sm'>\n                        <OsVersionText { ...{ profile, newOsMinorVersion } } />\n                    </span>\n                    <ProfileSystemCount count={ systemCount } />\n                </Text>\n                <SSGVersionText { ...{ profile, newOsMinorVersion } } />\n            </TextContent>\n        </Grid>\n        <StateViewWithError stateValues={ { error, loading, rules } }>\n            <StateViewPart stateKey=\"loading\">\n                <Spinner />\n            </StateViewPart>\n            <StateViewPart stateKey=\"rules\">\n\n                <RulesTable\n                    remediationAvailableFilter\n                    remediationsEnabled={false}\n                    columns={ columns }\n                    profileRules={ [{ profile, rules: (rules || []) }] }\n                    selectedRefIds={ selectedRuleRefIds }\n                    handleSelect={\n                        handleSelect && ((selectedRuleRefIds) =>\n                            handleSelect(profile, newOsMinorVersion, selectedRuleRefIds)\n                        )\n                    }\n                    { ...rulesTableProps } />\n\n            </StateViewPart>\n        </StateViewWithError>\n    </React.Fragment>;\n};\n\nProfileTabContent.propTypes = {\n    profile: propTypes.object,\n    newOsMinorVersion: propTypes.string,\n    columns: propTypes.array,\n    handleSelect: propTypes.func,\n    systemCount: propTypes.object,\n    selectedRuleRefIds: propTypes.array,\n    rulesTableProps: propTypes.object\n};\n\nexport default ProfileTabContent;\n","// Rule selection utilities\n\nexport const matchesSelectionItem = (selectionItem, profile, newOsMinorVersion) => (\n    selectionItem.id === profile.id\n    && selectionItem.osMinorVersion === (newOsMinorVersion || profile.osMinorVersion)\n);\n\nexport const selectedRuleRefIdsForTab = (selectedRuleRefIds, profile, newOsMinorVersion) => {\n    const tabSelection = (selectedRuleRefIds || []).find((selectionItem) =>\n        matchesSelectionItem(selectionItem, profile, newOsMinorVersion)\n    );\n    return tabSelection?.ruleRefIds || [];\n};\n\nexport const profilesWithRulesToSelection = (profiles, prevSelection = [], options = {}) => {\n    const { only } = options;\n    const additionalSelection = profiles.map((profile) => {\n        const foundSelection = prevSelection.find((selectionItem) =>\n            matchesSelectionItem(selectionItem, profile)\n        );\n        if (!foundSelection) {\n            if (!profile.rules) {\n                console.error(`Profile ${profile.id} is missing rules for selection!`);\n            }\n\n            if (!profile.osMinorVersion) {\n                console.error(`Profile ${profile.id} is missing osMinorVersion for selection!`);\n            }\n\n            return {\n                id: profile.id,\n                osMinorVersion: profile.osMinorVersion,\n                ruleRefIds: profile.rules?.map((rule) => (rule.refId)) || []\n            };\n        } else if (only) {\n            return foundSelection;\n        }\n    }).filter((v) => !!v);\n\n    return only ? additionalSelection : [...prevSelection, ...additionalSelection];\n};\n\nexport const tabsDataToOsMinorMap = (tabsData) => {\n    const osMinorMap = {};\n    tabsData.forEach(({ profile, newOsMinorVersion }) => {\n        if (profile?.id) {\n            const osMinorVersion = newOsMinorVersion || profile.osMinorVersion;\n            osMinorMap[profile.id] = [\n                ...(osMinorMap[profile.id] || []),\n                osMinorVersion\n            ];\n        }\n    });\n    return osMinorMap;\n};\n\nexport const extendProfilesByOsMinor = (profiles, osMinorMap) => (\n    profiles.flatMap((profile) => (\n        (osMinorMap[profile.id] || [undefined]).map((osMinorVersion) => (\n            { ...profile, osMinorVersion }\n        ))\n    ))\n);\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Tab, Badge } from '@patternfly/react-core';\nimport { RoutedTabs } from 'PresentationalComponents';\nimport ProfileTabContent from './ProfileTabContent';\nimport OsVersionText from './OsVersionText';\nimport { selectedRuleRefIdsForTab, matchesSelectionItem } from './ruleSelection';\n\nconst eventKey = ({ id, osMinorVersion }, newOsMinorVersion) => (\n    `rules-${id}-${osMinorVersion || newOsMinorVersion}`\n);\n\nconst getDefaultTab = (tabsData, defaultTab) => {\n    if (!tabsData || tabsData.length === 0) {\n        return;\n    }\n\n    if (!defaultTab) {\n        const firstTab = tabsData[0];\n        defaultTab = {\n            id: firstTab.profile.id,\n            osMinorVersion: firstTab.profile.osMinorVersion || firstTab.newOsMinorVersion\n        };\n    }\n\n    return eventKey(defaultTab);\n};\n\nconst TabbedRules = ({\n    tabsData, defaultTab, selectedRuleRefIds, setSelectedRuleRefIds, columns, level = 0, ...rulesTableProps\n}) => {\n    const handleSelect = (profile, newOsMinorVersion, profileSelectedRuleRefIds) => {\n        const filteredSelection = (selectedRuleRefIds || []).filter((selectionItem) =>\n            !matchesSelectionItem(selectionItem, profile, newOsMinorVersion)\n        );\n\n        const newItem = {\n            id: profile.id,\n            osMinorVersion: newOsMinorVersion || profile.osMinorVersion,\n            ruleRefIds: profileSelectedRuleRefIds\n        };\n        setSelectedRuleRefIds([newItem, ...filteredSelection]);\n    };\n\n    return <RoutedTabs level={ level } defaultTab={ getDefaultTab(tabsData, defaultTab) }>\n        {\n            tabsData?.map(({ profile, newOsMinorVersion, systemCount }) => (\n                <Tab\n                    key={ eventKey(profile, newOsMinorVersion) }\n                    eventKey={ eventKey(profile, newOsMinorVersion) }\n                    title={\n                        <span>\n                            <span className='pf-u-pr-sm'>\n                                <OsVersionText profile={ profile } newOsMinorVersion={newOsMinorVersion} />\n                            </span>\n                            <Badge isRead>{ systemCount }</Badge>\n                        </span>\n                    }>\n                    <ProfileTabContent\n                        { ...{\n                            profile,\n                            newOsMinorVersion,\n                            columns,\n                            rulesTableProps,\n                            systemCount,\n                            selectedRuleRefIds: selectedRuleRefIdsForTab(\n                                selectedRuleRefIds, profile, newOsMinorVersion\n                            ),\n                            handleSelect: setSelectedRuleRefIds ? handleSelect : undefined\n                        } } />\n                </Tab>\n            ))\n        }\n    </RoutedTabs>;\n};\n\nTabbedRules.propTypes = {\n    tabsData: propTypes.arrayOf(\n        propTypes.shape({\n            profile: propTypes.object.isRequired,\n            selectedRuleRefIds: propTypes.arrayOf(propTypes.string),\n            newOsMinorVersion: propTypes.string,\n            systemCount: propTypes.number\n        })\n    ).isRequired,\n    selectedRuleRefIds: propTypes.arrayOf(\n        propTypes.shape({\n            id: propTypes.string,\n            ruleRefIds: propTypes.arrayOf(propTypes.string)\n        })\n    ),\n    setSelectedRuleRefIds: propTypes.func,\n    columns: propTypes.arrayOf(propTypes.object),\n    defaultTab: propTypes.shape({\n        id: propTypes.string,\n        osMinorVersion: propTypes.string\n    }),\n    level: propTypes.number\n};\n\nexport default TabbedRules;\n","import React from 'react';\nimport { Table, TableHeader, TableBody } from '@patternfly/react-table';\nimport RowLoader from '@redhat-cloud-services/frontend-components-utilities/RowLoader';\n\nconst LoadingPoliciesTable = () => (\n    <Table\n        aria-label='policies-table'\n        ouiaId=\"PoliciesTable\"\n        cells={ [\n            { title: 'Policy name' },\n            { title: 'Operating system' },\n            { title: 'Systems' },\n            { title: 'Business initiative' },\n            { title: 'Compliance threshold' }\n        ] }\n        rows={ [...Array(5)].map(() => ({\n            cells: [{\n                title: <RowLoader />,\n                colSpan: 5\n            }]\n        })) }>\n        <TableHeader />\n        <TableBody />\n    </Table>\n);\n\nexport default LoadingPoliciesTable;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport {\n    Title,\n    Button,\n    Text\n} from '@patternfly/react-core';\nimport {\n    ExclamationCircleIcon\n} from '@patternfly/react-icons';\nimport InvalidObject from '@redhat-cloud-services/frontend-components/InvalidObject';\nimport NotAuthorized from '@redhat-cloud-services/frontend-components/NotAuthorized';\n\nconst ErrorPage = ({ error, ...props }) => {\n    if (error.networkError && error.networkError.statusCode === 401) {\n        window.insights.chrome.auth.logout(true);\n        return false;\n    }\n\n    if (error.networkError && error.networkError.statusCode === 403) {\n        return <NotAuthorized serviceName='Compliance' />;\n    }\n\n    if (error.networkError && error.networkError.statusCode === 404) {\n        return <InvalidObject />;\n    }\n\n    return <section {...props} className=\"pf-l-page__main-section pf-c-page__main-section ins-c-component_invalid-componet\">\n        <ExclamationCircleIcon size=\"xl\" style={ { color: 'var(--pf-global--danger-color--100)' } } />\n        <Title headingLevel='h1'>There was an error</Title>\n        <Text>\n            If you need to contact Red Hat Support about this, this is the exact error:\n            <Text>\n                { error.message }\n            </Text>\n        </Text>\n        <Button\n            variant=\"link\"\n            ouiaId=\"ErrorPageGoBackButton\"\n            onClick={ history.goBack }>\n                Go back\n        </Button>\n    </section>;\n};\n\nErrorPage.propTypes = {\n    error: propTypes.object\n};\n\nexport default ErrorPage;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Text, TextVariants } from '@patternfly/react-core';\n\nexport const GreySmallText = ({ children }) => (\n    <Text\n        style={{ color: 'var(--pf-global--Color--200)' }}\n        component={ TextVariants.small }>{ children }</Text>\n);\n\nGreySmallText.propTypes = {\n    children: propTypes.node\n};\n\nexport default GreySmallText;\n","import React from 'react';\nimport { Field } from 'redux-form';\nimport propTypes from 'prop-types';\nimport { Checkbox } from '@patternfly/react-core';\n\nconst CheckboxFieldArray = ({ input, options }) => {\n    const { name, onChange } = input;\n    const inputValue = input.value;\n\n    const handleChange = (checked, value) => {\n        const arr = [...new Set(inputValue)];\n        if (checked) {\n            arr.push(value);\n        } else {\n            arr.splice(arr.indexOf(value), 1);\n        }\n\n        return onChange(arr);\n    };\n\n    return (\n        <React.Fragment>\n            {\n                options.map(({ label, value, defaultChecked }, index) => (\n                    <Checkbox key={value} id={value} label={label}\n                        name={`${name}[${index}]`} value={value}\n                        isChecked={inputValue === '' ? defaultChecked : inputValue.includes(value)}\n                        onChange={(checked) => handleChange(checked, value)}\n                    />\n                ))\n            }\n        </React.Fragment>\n    );\n};\n\nCheckboxFieldArray.propTypes = {\n    input: propTypes.shape({\n        name: propTypes.string.isRequired,\n        onChange: propTypes.func,\n        value: propTypes.string\n    }),\n    options: propTypes.arrayOf(propTypes.shape({\n        label: propTypes.string.isRequired,\n        value: propTypes.string.isRequired,\n        defaultChecked: propTypes.bool\n    })).isRequired\n};\n\nconst CheckboxGroup = (props) => (\n    <Field {...props} type=\"checkbox\" component={CheckboxFieldArray} />\n);\n\nCheckboxGroup.propTypes = {\n    options: propTypes.arrayOf(propTypes.shape({\n        label: propTypes.string.isRequired,\n        value: propTypes.string.isRequired,\n        defaultChecked: propTypes.bool\n    })).isRequired\n};\n\nexport { CheckboxFieldArray };\nexport default CheckboxGroup;\n","import React from 'react';\nimport { Field } from 'redux-form';\nimport propTypes from 'prop-types';\nimport Truncate from 'react-truncate';\nimport {\n    Grid,\n    GridItem,\n    Label,\n    TextContent,\n    TextVariants,\n    Text,\n    Tooltip\n} from '@patternfly/react-core';\n\nconst InUseProfileLabel = () => (\n    <Tooltip\n        position=\"right\"\n        content=\"A policy of this type is already in use.\n        Only one policy per policy type can be created for a major release of RHEL.\"\n    >\n        <Label color=\"orange\" style={ { lineHeight: '1.5em' } }>In use</Label>\n    </Tooltip>\n);\n\nconst ProfileTypeSelect  = ({ profiles, onClick }) => (\n    <React.Fragment>\n        { profiles?.length === 0 && (\n            <TextContent style={{ color: 'var(--pf-c-content--blockquote--Color)' }}>\n                <Text>\n                    Select an operating system to view policy types.\n                </Text>\n            </TextContent>\n        )}\n\n        <Grid hasGutter>\n            { profiles.map((profile) => {\n                const { description, name, id, disabled } = profile;\n                return (\n                    <React.Fragment key={`profile-select-${id}`}>\n                        <GridItem span={8} rowSpan={2}>\n                            <TextContent\n                                style={ {\n                                    lineHeight: '2em',\n                                    color: disabled ? 'var(--pf-c-content--blockquote--Color)' : ''\n                                } }>\n                                <Text >\n                                    <Field component='input'\n                                        type='radio'\n                                        name='profile'\n                                        value={JSON.stringify(profile)}\n                                        onClick={ () => onClick(JSON.stringify(profile)) }\n                                        disabled={ disabled }\n                                    />\n                                    { ` ${name} ` }\n                                    { disabled && <InUseProfileLabel /> }\n                                </Text>\n                            </TextContent>\n                            <TextContent style={ { color: 'var(--pf-c-content--blockquote--Color)' } }>\n                                <Text component={ TextVariants.p }>\n                                    <Truncate\n                                        key={`profile-select-text-${id}`}\n                                        lines={3}>\n                                        { description }\n                                    </Truncate>\n                                </Text>\n                            </TextContent>\n                        </GridItem>\n                    </React.Fragment>);\n            })}\n        </Grid>\n    </React.Fragment>\n);\n\nProfileTypeSelect.propTypes = {\n    profiles: propTypes.array,\n    onClick: propTypes.func\n};\n\nProfileTypeSelect.defaultProps = {\n    profiles: [],\n    onClick: () => ({})\n};\n\nexport default ProfileTypeSelect;\n","import React from 'react';\nimport {\n    QuestionCircleIcon,\n    CheckCircleIcon,\n    ExclamationCircleIcon\n} from '@patternfly/react-icons';\nimport { Text, Tooltip } from '@patternfly/react-core';\nimport { fixedPercentage } from 'Utilities/TextHelper';\n\nconst CompliantIcon = (system) => {\n    if ((system.rulesPassed + system.rulesFailed) === 0) {\n        return <QuestionCircleIcon color='var(--pf-global--disabled-color--100)' />;\n    } else {\n        return system.compliant ?\n            <CheckCircleIcon color='var(--pf-global--success-color--200)' /> :\n            <ExclamationCircleIcon color='var(--pf-global--danger-color--100)' />;\n    }\n};\n\nexport const complianceScoreString = (system) => {\n    if (system.supported === false) {\n        return ' Unsupported';\n    } else if ((system.rulesPassed + system.rulesFailed) === 0) {\n        return ' N/A';\n    }\n\n    return ' ' + fixedPercentage(system.score);\n};\n\nconst ComplianceScore = (system) => (\n    <Text>\n        { system.supported ?\n            <Tooltip content={\n                'The system compliance score is calculated by OpenSCAP and ' +\n                'is a normalized weighted sum of rules selected for this policy.'\n            }>\n                <CompliantIcon key={ `system-compliance-icon-${system.id}` } { ...system } />\n                { complianceScoreString(system) }\n            </Tooltip>\n            :\n            complianceScoreString(system) }\n    </Text>\n);\n\nexport default ComplianceScore;\n","import React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nconst PolicyDetailsContentLoader = () => (\n    <ContentLoader\n        speed={2}\n        width={1000}\n        height={400}\n        viewBox='0 0 1000 400'\n        backgroundcolor='#f3f3f3'\n        foregroundcolor='#ecebeb'\n    >\n        <rect x='-3' y='7' rx='3' ry='3' width='760' height='19' />\n        <rect x='823' y='3' rx='3' ry='3' width='67' height='29' />\n        <rect x='910' y='3' rx='3' ry='3' width='67' height='29' />\n        <rect x='6' y='54' rx='0' ry='0' width='46' height='19' />\n        <rect x='68' y='54' rx='0' ry='0' width='46' height='19' />\n        <rect x='133' y='54' rx='0' ry='0' width='46' height='19' />\n        <rect x='3' y='110' rx='0' ry='0' width='255' height='17' />\n        <rect x='1' y='149' rx='0' ry='0' width='47' height='16' />\n        <rect x='1' y='185' rx='0' ry='0' width='255' height='17' />\n        <rect x='-1' y='224' rx='0' ry='0' width='187' height='16' />\n        <rect x='-4' y='267' rx='0' ry='0' width='255' height='17' />\n        <rect x='-6' y='306' rx='0' ry='0' width='47' height='16' />\n        <rect x='-6' y='342' rx='0' ry='0' width='255' height='17' />\n        <rect x='-8' y='381' rx='0' ry='0' width='187' height='16' />\n    </ContentLoader>\n);\n\nexport default PolicyDetailsContentLoader;\n","import React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nconst ReportDetailsContentLoader = () => (\n    <ContentLoader\n        height={320}\n        width={1550}\n        speed={2}\n        primaryColor=\"#f3f3f3\"\n        secondaryColor=\"#ecebeb\">\n        <rect x=\"18\" y=\"50\" rx=\"4\" ry=\"4\" width=\"478\" height=\"15\" />\n        <rect x=\"19\" y=\"18\" rx=\"3\" ry=\"3\" width=\"220\" height=\"9\" />\n        <circle cx=\"118\" cy=\"156\" r=\"73\" />\n        <rect x=\"1002\" y=\"40\" rx=\"0\" ry=\"0\" width=\"69\" height=\"23\" />\n        <rect x=\"47\" y=\"77\" rx=\"0\" ry=\"0\" width=\"0\" height=\"0\" />\n        <rect x=\"36\" y=\"77\" rx=\"0\" ry=\"0\" width=\"16\" height=\"0\" />\n        <rect x=\"409\" y=\"149\" rx=\"0\" ry=\"0\" width=\"0\" height=\"0\" />\n        <rect x=\"214\" y=\"145\" rx=\"0\" ry=\"0\" width=\"205\" height=\"9\" />\n        <rect x=\"216\" y=\"119\" rx=\"0\" ry=\"0\" width=\"205\" height=\"9\" />\n        <rect x=\"526\" y=\"100\" rx=\"0\" ry=\"0\" width=\"431\" height=\"8\" />\n        <rect x=\"526\" y=\"122\" rx=\"0\" ry=\"0\" width=\"431\" height=\"8\" />\n        <rect x=\"526\" y=\"146\" rx=\"0\" ry=\"0\" width=\"431\" height=\"8\" />\n        <rect x=\"527\" y=\"170\" rx=\"0\" ry=\"0\" width=\"431\" height=\"8\" />\n        <rect x=\"527\" y=\"194\" rx=\"0\" ry=\"0\" width=\"431\" height=\"8\" />\n        <rect x=\"527\" y=\"218\" rx=\"0\" ry=\"0\" width=\"431\" height=\"8\" />\n        <rect x=\"529\" y=\"275\" rx=\"0\" ry=\"0\" width=\"231\" height=\"7\" />\n    </ContentLoader>\n);\n\nexport default ReportDetailsContentLoader;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { fixedPercentage } from 'Utilities/TextHelper';\nimport {\n    PolicyBusinessObjectiveTooltip,\n    PolicyThresholdTooltip\n} from 'PresentationalComponents';\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n    TextContent,\n    TextVariants,\n    Text\n} from '@patternfly/react-core';\nimport Truncate from '@redhat-cloud-services/frontend-components/Truncate';\nimport linkifyHtml from 'linkifyjs/html';\n\nconst PolicyDetailsDescription = ({ policy }) => (\n    <Card ouiaId=\"PolicyDetailsCard\">\n        <CardHeader>\n            <Text style={ { fontSize: 20 } }>\n                <b>Policy details</b>\n            </Text>\n        </CardHeader>\n        <CardBody>\n            <TextContent>\n                <Text component={TextVariants.h5}>\n                    Compliance threshold\n                    <PolicyThresholdTooltip />\n                </Text>\n                <Text className='threshold-tooltip' component={TextVariants.p}>\n                    { fixedPercentage(policy.complianceThreshold, 1) }\n                </Text>\n                <Text component={TextVariants.h5}>\n                    Business objective\n                    <PolicyBusinessObjectiveTooltip />\n                </Text>\n                <Text component={TextVariants.p}>\n                    { policy.businessObjective && policy.businessObjective.title || '-' }\n                </Text>\n                <Text component={TextVariants.h5}>Policy description</Text>\n                <Text component={TextVariants.p}>\n                    <Truncate text={linkifyHtml(policy.description || '')} length={380} inline={true} />\n                </Text>\n                <Text component={TextVariants.h5}>\n                    Operating system\n                </Text>\n                <Text component={TextVariants.p}>\n                    RHEL { policy.majorOsVersion }\n                </Text>\n                <Text component={TextVariants.h5}>Policy type </Text>\n                <Text component={TextVariants.p}>{ policy.policyType }</Text>\n                <Text component={TextVariants.h5}>Reference ID</Text>\n                <Text component={TextVariants.p}>{ policy.refId }</Text>\n            </TextContent>\n        </CardBody>\n    </Card>\n);\n\nPolicyDetailsDescription.propTypes = {\n    policy: propTypes.object\n};\n\nexport default PolicyDetailsDescription;\n","import React from 'react';\nimport { fixedPercentage } from 'Utilities/TextHelper';\nimport propTypes from 'prop-types';\nimport {\n    Text,\n    TextContent,\n    TextList,\n    TextListVariants,\n    TextListItem,\n    TextListItemVariants\n} from '@patternfly/react-core';\nimport {\n    Link\n} from 'react-router-dom';\n\nconst PropTypes = {\n    children: propTypes.node\n};\n\nconst Dt = ({ children, ...props }) => (\n    <TextListItem { ...props } component={ TextListItemVariants.dt }>\n        { children }\n    </TextListItem>\n);\nDt.propTypes = PropTypes;\n\nconst Dd = ({ children, ...props }) => (\n    <TextListItem { ...props } component={ TextListItemVariants.dd }>\n        { children }\n    </TextListItem>\n);\nDd.propTypes = PropTypes;\n\nconst PolicyDescription = ({ profile }) => (\n    <React.Fragment>\n        <TextList component={TextListVariants.dl}>\n            <Dt>\n                <Text className='ins-c-non-bold-h2'>\n                    Policy details\n                </Text>\n            </Dt>\n            <Dt>\n                Operating system\n            </Dt>\n            <Dd>\n                RHEL { profile.majorOsVersion }\n            </Dd>\n            <Dt>\n                Compliance threshold\n            </Dt>\n            <Dd>\n                { fixedPercentage(profile.complianceThreshold, 1) }\n            </Dd>\n            <Dt>\n                Business objective\n            </Dt>\n            <Dd>\n                { profile.businessObjective ? profile.businessObjective.title : '--' }\n            </Dd>\n        </TextList>\n        <Link to={'/scappolicies/' + profile.policy.id} >\n            View policy\n        </Link>\n    </React.Fragment>\n);\n\nPolicyDescription.propTypes = {\n    profile: propTypes.shape({\n        id: propTypes.string,\n        complianceThreshold: propTypes.number,\n        businessObjective: propTypes.object,\n        majorOsVersion: propTypes.string,\n        policy: propTypes.shape({\n            id: propTypes.string\n        }),\n        benchmark: propTypes.shape({\n            version: propTypes.string\n        })\n    })\n};\n\nconst ReportDetailsDescription = ({ profile }) => (\n    <TextContent className='policy-details'>\n        <PolicyDescription { ...{ profile }} />\n    </TextContent>\n);\n\nReportDetailsDescription.propTypes = {\n    profile: propTypes.object\n};\n\nexport default ReportDetailsDescription;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport {\n    Progress, ProgressVariant\n} from '@patternfly/react-core/dist/js/components/Progress';\n\nconst ProgressBar = ({ percent, failed }) => {\n    let variant;\n    let title;\n\n    if (percent === 100) {\n        title = 'Success';\n        variant = ProgressVariant.success;\n    } else if (failed) {\n        title = 'Error';\n        variant = ProgressVariant.danger;\n    } else {\n        title = 'Progress';\n        variant = ProgressVariant.info;\n    }\n\n    return <Progress\n        id={'finished-create-policy'}\n        value={percent}\n        title={title}\n        variant={variant}\n        className='wizard-progress-bar'\n    />;\n};\n\nProgressBar.propTypes = {\n    percent: propTypes.number,\n    failed: propTypes.bool\n};\n\nexport default ProgressBar;\n","import React from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport propTypes from 'prop-types';\nimport { Tabs } from '@patternfly/react-core';\nimport { useAnchor } from 'Utilities/Router';\n\nexport const ContentTab = ({ children }) => (children);\n\nconst useAnchorLevels = (defaultAnchor, level) => {\n    const anchor = useAnchor(defaultAnchor);\n    const levels = anchor.split('|');\n    const currentAnchor = levels[level] || defaultAnchor;\n\n    return {\n        levels,\n        currentAnchor\n    };\n};\n\nconst TabSwitcher = (props) => (\n    props.children.map((tab) => (\n        tab.props.eventKey === props.activeKey ? tab : undefined\n    )).filter((c) => (!!c))\n);\n\nTabSwitcher.propTypes = {\n    activeTab: propTypes.number,\n    children: propTypes.node\n};\n\nexport const RoutedTabSwitcher = ({ children, defaultTab, level }) => {\n    const { currentAnchor } = useAnchorLevels(defaultTab, level);\n\n    return children.map((tab) => (\n        tab.props.eventKey === currentAnchor ? tab : undefined\n    )).filter((c) => (!!c));\n};\n\nRoutedTabSwitcher.propTypes = {\n    children: propTypes.node,\n    defaultTab: propTypes.string,\n    level: propTypes.number\n};\n\nRoutedTabSwitcher.defaultProps = {\n    level: 0\n};\n\nexport const RoutedTabs = ({ children, defaultTab, level, ...props }) => {\n    const { push } = useHistory();\n    const { pathname, state } = useLocation();\n    const { currentAnchor, levels } = useAnchorLevels(defaultTab, level);\n    const handleTabSelect = (e, eventKey) => {\n        e.preventDefault();\n        const tabToActivate = eventKey.replace('#', '');\n        let tabAnchor = levels;\n        tabAnchor[level] = tabToActivate;\n\n        push({\n            state,\n            to: pathname,\n            hash: tabAnchor.slice(0, (level + 1)).join('|')\n        });\n    };\n\n    return <Tabs\n        { ...props }\n        onSelect={ handleTabSelect }\n        activeKey={ currentAnchor }>\n        { children }\n    </Tabs>;\n};\n\nRoutedTabs.defaultProps = {\n    level: 0\n};\n\nRoutedTabs.propTypes = {\n    children: propTypes.node,\n    defaultTab: propTypes.string,\n    level: propTypes.number\n};\n\nexport default TabSwitcher;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport {\n    ErrorPage\n} from 'PresentationalComponents';\n\nexport const StateViewPart = ({ children }) => (children);\n\nconst props = {\n    stateValues: propTypes.object,\n    children: propTypes.node\n};\n\nexport const StateView = ({ stateValues, children }) => (\n    children.flatMap((c) => (c)).filter((child) => (\n        stateValues[child.props.stateKey]\n    ))\n);\n\nStateView.propTypes = props;\n\nexport const StateViewWithError = ({ stateValues, children }) => (\n    <StateView stateValues={ stateValues }>\n        <StateViewPart key='error-state' stateKey='error'>\n            <ErrorPage error={ stateValues.error } />\n        </StateViewPart>\n        { children }\n    </StateView>\n);\n\nStateViewWithError.propTypes = props;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport {\n    Tooltip,\n    TooltipPosition\n} from '@patternfly/react-core';\nimport {\n    WarningText\n} from 'PresentationalComponents';\n\nconst WARNING_TEXT = 'Policies without systems will not have reports.';\n\nconst WithOptionalToolTip = ({ showTooltip, children }) => (\n    showTooltip ? <Tooltip\n        position={ TooltipPosition.bottom }\n        content={ WARNING_TEXT }>\n        { children }\n    </Tooltip> : children\n);\n\nWithOptionalToolTip.propTypes = {\n    showTooltip: propTypes.bool,\n    children: propTypes.node\n};\n\nconst SystemsCountWarning = ({ count, variant }) => {\n    let text;\n\n    switch (variant) {\n        case 'count':\n            text = count;\n            break;\n        case 'compact':\n            text = 'No Systems';\n            break;\n        case 'full':\n            text = WARNING_TEXT;\n            break;\n        default:\n            text = count;\n    }\n\n    return <WithOptionalToolTip showTooltip={ variant === 'count' || variant === 'compact' }>\n        <WarningText>\n            { text }\n        </WarningText>\n    </WithOptionalToolTip>;\n};\n\nSystemsCountWarning.defaultProps = {\n    variant: 'compact'\n};\n\nSystemsCountWarning.propTypes = {\n    count: propTypes.number.isRequired,\n    variant: propTypes.string\n};\n\nexport { WARNING_TEXT };\nexport default SystemsCountWarning;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport {\n    Text\n} from '@patternfly/react-core';\nimport {\n    ExclamationTriangleIcon\n} from '@patternfly/react-icons';\n\nconst WarningText = ({ children }) => (\n    <React.Fragment>\n        <ExclamationTriangleIcon className='ins-u-warning'/>\n        <Text component=\"span\" className='ins-c-warning-text'>\n            &nbsp;{ children }\n        </Text>\n    </React.Fragment>\n);\n\nWarningText.propTypes = {\n    children: propTypes.node\n};\n\nexport default WarningText;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst BackgroundLink = ({\n    to, hash, children, state: desiredState, backgroundLocation, ...props\n}) => {\n    const currentLocation = useLocation();\n    const background = { ...currentLocation, ...backgroundLocation };\n    const state = { ...desiredState, background };\n\n    return <Link\n        to={{ pathname: to, state, hash }}\n        { ...props }>\n        { children }\n    </Link>;\n};\n\nBackgroundLink.propTypes = {\n    backgroundLocation: propTypes.object,\n    children: propTypes.node,\n    hash: propTypes.string,\n    state: propTypes.object,\n    to: propTypes.string.isRequired\n};\n\nexport default BackgroundLink;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Link as ReactRouterLink } from 'react-router-dom';\nimport { BreadcrumbItem } from '@patternfly/react-core';\n\nconst RouterLink = ({ href, ...props }) => (\n    <ReactRouterLink { ...props } to={ href } />\n);\n\nRouterLink.propTypes = {\n    href: propTypes.string\n};\n\nconst BreadcrumbLinkItem = ({ children, ...props }) => (\n    <BreadcrumbItem { ...props } component={ RouterLink }>\n        { children}\n    </BreadcrumbItem>\n);\n\nBreadcrumbLinkItem.propTypes = {\n    children: propTypes.node\n};\n\nexport default BreadcrumbLinkItem;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { TextContent, Text, Progress } from '@patternfly/react-core';\nimport { Link } from 'react-router-dom';\nimport { PolicyPopover, GreySmallText, UnsupportedSSGVersion, OperatingSystemBadge } from 'PresentationalComponents';\n\nexport const Name = (profile) => (\n    <TextContent>\n        <Link to={'/reports/' + profile.id} style={ { marginRight: '.5rem' }}>\n            { profile.policy.name }\n        </Link>\n        <React.Fragment>\n            <PolicyPopover { ...{ profile, position: 'right' } } />\n            <GreySmallText>{ profile.policyType }</GreySmallText>\n        </React.Fragment>\n    </TextContent>\n);\n\nName.propTypes = {\n    profile: propTypes.object\n};\n\nexport const OperatingSystem = ({ majorOsVersion, ssgVersion, unsupportedHostCount, policy }) => {\n    const supported = unsupportedHostCount === 0;\n    ssgVersion = 'SSG: ' + ssgVersion;\n\n    return <React.Fragment>\n        <OperatingSystemBadge { ...{ majorOsVersion } } />\n        { policy === null && ssgVersion && <Text>\n            <GreySmallText>\n                { supported ? ssgVersion : <UnsupportedSSGVersion>{ ssgVersion }</UnsupportedSSGVersion> }\n            </GreySmallText>\n        </Text> }\n    </React.Fragment>;\n};\n\nOperatingSystem.propTypes = {\n    majorOsVersion: propTypes.string,\n    ssgVersion: propTypes.string,\n    unsupportedHostCount: propTypes.number,\n    policy: propTypes.object\n};\n\nexport const CompliantSystems = ({ testResultHostCount = 0, compliantHostCount = 0, unsupportedHostCount = 0 }) => {\n    const tooltipText = 'Insights cannot provide a compliance score for systems running an unsupported ' +\n        'version of the SSG at the time this report was created, as the SSG version was not supported by RHEL.';\n    return <React.Fragment>\n        <Progress\n            measureLocation={ 'outside' }\n            value={ testResultHostCount ? (100 / testResultHostCount) * compliantHostCount : 0 } />\n        <GreySmallText>\n            { `${ compliantHostCount } of ${ testResultHostCount } systems ` }\n\n            { unsupportedHostCount > 0 && <UnsupportedSSGVersion { ...{ tooltipText } } style={ { marginLeft: '.5em' } }>\n                <strong className='ins-c-warning-text'>{ unsupportedHostCount } unsupported</strong>\n            </UnsupportedSSGVersion> }\n        </GreySmallText>\n    </React.Fragment>;\n};\n\nCompliantSystems.propTypes = {\n    testResultHostCount: propTypes.number,\n    compliantHostCount: propTypes.number,\n    unsupportedHostCount: propTypes.number\n};\n","import { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\n\nexport const policyNameFilter = [{\n    type: conditionalFilterType.text,\n    label: 'Policy name',\n    filter: (profiles, value) => {\n        const lowerCaseValue = value.toLowerCase();\n        return profiles.filter((profile) => (\n            [\n                profile.name,\n                profile.policy.name\n            ].join().toLowerCase().includes(lowerCaseValue)\n        ));\n    }\n}];\n\nexport const policyTypeFilter = (policyTypes) => ([{\n    type: conditionalFilterType.checkbox,\n    label: 'Policy type',\n    filter: (profiles, values) => (\n        profiles.filter(({ policyType }) => values.includes(policyType))\n    ),\n    items: policyTypes.map((policyType) => ({\n        label: policyType,\n        value: policyType\n    }))\n}]);\n\nexport const operatingSystemFilter = (operatingSystems) => ([{\n    type: conditionalFilterType.checkbox,\n    label: 'Operating system',\n    filter: (profiles, values) => (\n        profiles.filter(({ majorOsVersion }) => (\n            values.includes(majorOsVersion)\n        ))\n    ),\n    items: operatingSystems.map((operatingSystem) => ({\n        label: `RHEL ${operatingSystem}`,\n        value: operatingSystem\n    }))\n}]);\n\nexport const policyComplianceFilter = [{\n    type: conditionalFilterType.checkbox,\n    label: 'Systems meeting compliance',\n    filter: (profiles, values) => (\n        profiles.filter(({ testResultHostCount, compliantHostCount }) => {\n            const compliantHostsPercent = Math.round((100 / testResultHostCount) * compliantHostCount);\n            const matching = values.map((value) => {\n                const [min, max] = value.split('-');\n                return compliantHostsPercent >= min && compliantHostsPercent <= max;\n            }).filter((i) => (!!i));\n            return matching.length > 0;\n        })\n    ),\n    items: [\n        { label: '90 - 100%', value: '90-100' },\n        { label: '70 - 89%', value: '70-89' },\n        { label: '50 - 69%', value: '50-69' },\n        { label: 'Less than 50%', value: '0-49' }\n    ]\n}];\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Table, TableBody, TableHeader, sortable, fitContent } from '@patternfly/react-table';\nimport PrimaryToolbar from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport { emptyRows } from 'PresentationalComponents';\nimport useFilterConfig from 'Utilities/hooks/useFilterConfig';\nimport useTableSort from 'Utilities/hooks/useTableSort';\nimport { Name, OperatingSystem, CompliantSystems } from './Cells';\nimport { uniq } from 'Utilities/helpers';\nimport {\n    policyNameFilter, policyTypeFilter, operatingSystemFilter, policyComplianceFilter\n} from './Filters';\n\nconst ReportsTable = ({ profiles }) => {\n    const columns = [\n        {\n            title: 'Policy',\n            transforms: [sortable],\n            sortByProperty: 'name',\n            props: {\n                width: 55\n            }\n        },\n        {\n            title: 'Operating system',\n            transforms: [sortable, fitContent],\n            sortByProperty: 'majorOsVersion',\n            props: {\n                width: 20\n            }\n        },\n        {\n            title: 'Systems meeting compliance',\n            transforms: [sortable, fitContent],\n            sortByFunction: ({ testResultHostCount, compliantHostCount }) => (\n                (100 / testResultHostCount) * compliantHostCount\n            ),\n            props: {\n                width: 25\n            }\n        }\n    ];\n    const policyTypes = uniq(profiles.map(({ policyType }) => (policyType)).filter((i) => (!!i)));\n    const operatingSystems = uniq(profiles.map(({ majorOsVersion }) => (majorOsVersion)).filter((i) => (!!i)));\n    const { conditionalFilter, filtered: filteredProfiles } = useFilterConfig([\n        ...policyNameFilter,\n        ...policyTypes.length > 0 && policyTypeFilter(policyTypes) || [],\n        ...operatingSystems.length > 0 && operatingSystemFilter(operatingSystems) || [],\n        ...policyComplianceFilter\n    ], profiles);\n    const { tableSort, sorted: sortedProfiles } = useTableSort(filteredProfiles, columns);\n    const rows = sortedProfiles.length > 0 ? sortedProfiles.map((profile) => ({\n        cells: [\n            { title: <Name { ...profile } /> },\n            { title: <OperatingSystem { ...profile } /> },\n            { title: <CompliantSystems { ...profile } /> }\n        ]\n    })) : emptyRows;\n\n    return <React.Fragment>\n        <PrimaryToolbar { ...conditionalFilter } />\n        <Table\n            aria-label='Reports'\n            ouiaId=\"ReportsTable\"\n            cells={ columns }\n            rows={ rows }\n            { ...tableSort }>\n            <TableHeader />\n            <TableBody />\n        </Table>\n    </React.Fragment>;\n};\n\nReportsTable.propTypes = {\n    profiles: propTypes.array\n};\n\nexport default ReportsTable;\n","import { useState } from 'react';\nimport { orderArrayByProp } from 'Utilities/helpers';\n\nconst useTableSort = (array, columns) => {\n    const [sortBy, setSortBy] = useState({\n        index: 0,\n        direction: 'desc'\n    });\n    const column = columns[sortBy.index];\n    const onSort = (_, index, direction) => (\n        setSortBy({\n            index,\n            direction\n        })\n    );\n\n    return {\n        tableSort: {\n            onSort,\n            sortBy\n        },\n        sorted: orderArrayByProp(\n            (column?.sortByProperty || column?.sortByFunction), array, sortBy.direction\n        )\n    };\n};\n\nexport default useTableSort;\n","import React from 'react';\nimport { Button } from '@patternfly/react-core';\nimport ComplianceEmptyState from '@redhat-cloud-services/frontend-components-inventory-compliance/ComplianceEmptyState';\nimport { BackgroundLink } from 'PresentationalComponents';\n\nconst ReportsEmptyState = () => (\n    <ComplianceEmptyState\n        title={ 'No policies are reporting' }\n        mainButton={ <BackgroundLink to='/scappolicies/new'>\n            <Button variant='primary' ouiaId=\"CreateNewPolicyButton\">Create new policy</Button>\n        </BackgroundLink> }\n    />\n);\n\nexport default ReportsEmptyState;\n","import React from 'react';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport {\n    Button,\n    Popover,\n    Text,\n    TextList,\n    TextListVariants,\n    TextListItem,\n    TextListItemVariants,\n    TextContent,\n    TextVariants\n} from '@patternfly/react-core';\nimport { fixedPercentage } from 'Utilities/TextHelper';\nimport {\n    Link\n} from 'react-router-dom';\nimport propTypes from 'prop-types';\n\nconst PolicyPopover = ({ profile, position = 'top' }) => {\n    const { policy, policyType, complianceThreshold, majorOsVersion, businessObjective } = profile;\n    return (\n        <Popover\n            { ...{ position } }\n            headerContent={\n                <TextContent>\n                    { policy.name }\n                    <Text component={ TextVariants.small }>{ policyType }</Text>\n                </TextContent>\n            }\n            footerContent={\n                <Link to={'/scappolicies/' + policy.id} >\n                    View policy\n                </Link>\n            }\n            bodyContent={\n                <TextContent className='policy-details'>\n                    <TextList component={TextListVariants.dl}>\n                        <TextListItem component={TextListItemVariants.dt}>\n                            Operating system\n                        </TextListItem>\n                        <TextListItem component={TextListItemVariants.dd}>\n                            RHEL { majorOsVersion }\n                        </TextListItem>\n                        <TextListItem component={TextListItemVariants.dt}>\n                            Compliance threshold\n                        </TextListItem>\n                        <TextListItem component={TextListItemVariants.dd}>\n                            { fixedPercentage(complianceThreshold, 1) }\n                        </TextListItem>\n                        { businessObjective &&\n                        <React.Fragment>\n                            <TextListItem component={TextListItemVariants.dt}>\n                                Business objective\n                            </TextListItem>\n                            <TextListItem component={TextListItemVariants.dd}>\n                                { businessObjective.title }\n                            </TextListItem>\n                        </React.Fragment> }\n                    </TextList>\n                </TextContent>\n            }\n        >\n            <Button variant=\"link\" ouiaId=\"PopoverViewPolicyLink\" isInline>\n                <OutlinedQuestionCircleIcon className='grey-icon'/>\n            </Button>\n        </Popover>\n    );\n};\n\nPolicyPopover.propTypes = {\n    profile: propTypes.object,\n    position: propTypes.string\n};\n\nexport default PolicyPopover;\n","import React, { Fragment } from 'react';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport { Tooltip } from '@patternfly/react-core';\n\nconst PolicyThresholdTooltip = () => (\n    <Tooltip\n        position='right'\n        content={\n            <Fragment>\n                The compliance threshold defines what percentage of rules must be\n                met in order for a system to be determined &quot;compliant&quot;.\n            </Fragment>\n        }\n    >\n        <span>\n            &nbsp;<OutlinedQuestionCircleIcon className='grey-icon'/>\n        </span>\n    </Tooltip>\n);\n\nexport default PolicyThresholdTooltip;\n","import React, { Fragment } from 'react';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport { Tooltip } from '@patternfly/react-core';\n\nconst PolicyBusinessObjectiveTooltip = () => (\n    <Tooltip\n        position='right'\n        content={\n            <Fragment>\n                This is an optional field that can be used to label policies that\n                are related to specific business objectives.\n            </Fragment>\n        }\n    >\n        <span>\n            &nbsp;<OutlinedQuestionCircleIcon className='grey-icon'/>\n        </span>\n    </Tooltip>\n);\n\nexport default PolicyBusinessObjectiveTooltip;\n","import React from 'react';\nimport {\n    Bullseye, EmptyState, EmptyStateBody, EmptyStateVariant, Title\n} from '@patternfly/react-core';\nimport EmptyTable from '@redhat-cloud-services/frontend-components/EmptyTable';\n\nconst NoResultsTable = () => (\n    <EmptyTable>\n        <Bullseye>\n            <EmptyState variant={ EmptyStateVariant.full }>\n                <Title headingLevel=\"h5\" size=\"lg\">\n                    No matching policies found\n                </Title>\n                <EmptyStateBody>\n                    This filter criteria matches no policies. <br /> Try changing your filter settings.\n                </EmptyStateBody>\n            </EmptyState>\n        </Bullseye>\n    </EmptyTable>\n);\n\nexport const emptyRows = [{\n    cells: [\n        {\n            title: () => (<NoResultsTable />),  // eslint-disable-line\n            props: {\n                colSpan: 3\n            }\n        }\n    ]\n}];\n\nexport default NoResultsTable;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Table, TableHeader, TableBody, fitContent } from '@patternfly/react-table';\nimport { Button, Pagination, PaginationVariant, ToolbarItem, TextContent } from '@patternfly/react-core';\nimport PrimaryToolbar from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport TableToolbar from '@redhat-cloud-services/frontend-components/TableToolbar';\nimport { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\nimport { FilterConfigBuilder } from '@redhat-cloud-services/frontend-components-inventory-compliance/Utilities';\nimport {\n    BackgroundLink, GreySmallText, SystemsCountWarning, emptyRows, OperatingSystemBadge\n} from 'PresentationalComponents';\n\nexport const PolicyNameCell = ({ profile }) => (\n    <TextContent>\n        <Link to={'/scappolicies/' + profile.id}>{ profile.policy.name }</Link>\n        <GreySmallText>{ profile.policyType }</GreySmallText>\n    </TextContent>\n);\n\nPolicyNameCell.propTypes = {\n    profile: propTypes.object\n};\n\nconst policiesToRows = (policies) => (\n    policies.map((policy) => (\n        {\n            policyId: policy.id,\n            cells: [\n                { title: <PolicyNameCell profile={policy} /> },\n                { title: <OperatingSystemBadge majorOsVersion={ policy.majorOsVersion } /> },\n                { title: policy.totalHostCount > 0 ? policy.totalHostCount :\n                    <SystemsCountWarning count={ policy.totalHostCount } variant='count' /> },\n                policy.businessObjective && policy.businessObjective.title || '--',\n                `${policy.complianceThreshold}%`\n            ]\n        }\n    ))\n);\n\nconst FILTER_CONFIGURATION = [\n    {\n        type: conditionalFilterType.text,\n        label: 'Name',\n        filter: (policies, value) => (\n            policies.filter((policy) => policy.name.includes(value))\n        )\n    }\n];\n\nexport class PoliciesTable extends React.Component {\n    filterConfigBuilder = new FilterConfigBuilder(FILTER_CONFIGURATION);\n    chipBuilder = this.filterConfigBuilder.getChipBuilder();\n    filterBuilder = this.filterConfigBuilder.getFilterBuilder();\n    columns = [\n        { title: 'Name' },\n        { title: 'Operating system' },\n        { title: 'Systems' },\n        { title: 'Business objective', transforms: [fitContent] },\n        { title: 'Compliance threshold', transforms: [fitContent] }\n    ]\n    state = {\n        page: 1,\n        itemsPerPage: 10,\n        activeFilters: {}\n    }\n\n    setPage = (_event, page) => (\n        this.changePage(page, this.state.itemsPerPage)\n    )\n\n    setPerPage = (_event, itemsPerPage) => (\n        this.changePage(1, itemsPerPage)\n    )\n\n    changePage = (page, itemsPerPage) => (\n        this.setState({\n            page,\n            itemsPerPage\n        })\n    )\n\n    paginatedPolicies = (policies) => (\n        policies.slice(\n            (this.state.page - 1) * this.state.itemsPerPage,\n            this.state.page * this.state.itemsPerPage\n        )\n    )\n\n    filteredPolicies = () => (\n        this.filterConfigBuilder.applyFilterToObjectArray(\n            this.props.policies, this.state.activeFilters\n        )\n    )\n\n    onFilterUpdate = (filter, value) => {\n        this.setState({\n            page: 1,\n            activeFilters: {\n                ...this.state.activeFilters,\n                [filter]: value\n            }\n        });\n    }\n\n    deleteFilter = (chips) => {\n        const activeFilters =  this.filterConfigBuilder.removeFilterWithChip(\n            chips, this.state.activeFilters\n        );\n        this.setState({\n            activeFilters\n        });\n    }\n\n    clearAllFilter = () => (\n        this.setState({\n            activeFilters: this.filterConfigBuilder.initialDefaultState()\n        })\n    )\n\n    onFilterDelete = (_event, chips, clearAll = false) => (\n        clearAll ? this.clearAllFilter() : this.deleteFilter(chips[0])\n    )\n\n    actionResolver = () => ([\n        {\n            title: 'Delete policy',\n            onClick: (_event, _index, { policyId }) => {\n                const policy = this.props.policies.find((policy) => (\n                    policy.id === policyId\n                ));\n                this.props.history.push(`/scappolicies/${ policyId }/delete`, {\n                    policy,\n                    background: this.props.location\n                });\n            }\n        },\n        {\n            title: 'Edit policy',\n            onClick: (_event, _index, { policyId }) => {\n                const policy = this.props.policies.find((policy) => (\n                    policy.id === policyId\n                ));\n                this.props.history.push(`/scappolicies/${ policyId }/edit`, {\n                    policy,\n                    background: this.props.location,\n                    state: { policy }\n                });\n            }\n        }\n    ]);\n\n    render() {\n        const { page, itemsPerPage } = this.state;\n        const policies = this.filteredPolicies();\n        const filterChips = this.chipBuilder.chipsFor(this.state.activeFilters);\n        const rows = policiesToRows(this.paginatedPolicies(policies));\n        const filterConfig = this.filterConfigBuilder.buildConfiguration(\n            this.onFilterUpdate,\n            this.state.activeFilters,\n            { hideLabel: true }\n        );\n        const pagination = {\n            page,\n            itemCount: policies.length,\n            dropDirection: 'down',\n            onSetPage: this.setPage,\n            onPerPageSelect: this.setPerPage,\n            perPage: itemsPerPage\n        };\n\n        return <React.Fragment>\n            <PrimaryToolbar\n                filterConfig={ filterConfig }\n                activeFiltersConfig={{\n                    filters: filterChips,\n                    onDelete: this.onFilterDelete\n                }}\n                pagination={{\n                    ...pagination,\n                    dropDirection: 'down',\n                    ouiaId: 'PoliciesCompactPagination'\n                }}>\n                <ToolbarItem>\n                    <BackgroundLink to='/scappolicies/new'>\n                        <Button variant='primary' ouiaId=\"CreateNewPolicyButton\">Create new policy</Button>\n                    </BackgroundLink>\n                </ToolbarItem>\n                <ToolbarItem>\n                    { policies.length } results\n                </ToolbarItem>\n            </PrimaryToolbar>\n            <Table\n                aria-label='policies'\n                ouiaId=\"PoliciesTable\"\n                className='compliance-policies-table'\n                cells={ this.columns }\n                actionResolver={ rows.length > 0 && this.actionResolver }\n                rows={ (rows.length === 0) ? emptyRows : rows }>\n                <TableHeader />\n                <TableBody />\n            </Table>\n            <TableToolbar isFooter className=\"ins-c-inventory__table--toolbar\">\n                <Pagination\n                    { ...pagination }\n                    dropDirection='up'\n                    ouiaId=\"PoliciesPagination\"\n                    variant={ PaginationVariant.bottom }\n                />\n            </TableToolbar>\n        </React.Fragment>;\n    }\n}\n\nPoliciesTable.propTypes = {\n    policies: propTypes.array.isRequired,\n    history: propTypes.object.isRequired,\n    location: propTypes.object.isRequired\n};\n\nPoliciesTable.defaultProps = {\n    policies: []\n};\n\nexport { policiesToRows };\n\nexport default withRouter(PoliciesTable);\n","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { FormGroup } from '@patternfly/react-core';\nimport { ReduxFormTextInput } from 'PresentationalComponents/ReduxFormWrappers/ReduxFormWrappers';\nimport propTypes from 'prop-types';\nimport round from 'lodash/round';\nimport { thresholdValid } from '../../SmartComponents/CreatePolicy/validate';\nimport { PolicyThresholdTooltip } from 'PresentationalComponents';\n\nexport class ProfileThresholdField extends React.Component {\n    state = {\n        validThreshold: thresholdValid(this.props.previousThreshold),\n        threshold: round(this.props.previousThreshold || 100, 1)\n    };\n\n    handleThresholdChange = (threshold) => (\n        this.setState({\n            validThreshold: thresholdValid(threshold),\n            threshold: round(threshold, 1)\n        })\n    )\n\n    render() {\n        const { threshold, validThreshold } = this.state;\n\n        return (\n            <React.Fragment>\n                <FormGroup fieldId='policy-threshold'\n                    validated={ validThreshold ? 'default' : 'error' }\n                    helperTextInvalid='Threshold has to be a number between 0 and 100'\n                    helperText=\"A value of 95% or higher is recommended\"\n                    labelIcon={ <PolicyThresholdTooltip /> }\n                    label='Compliance threshold (%)'>\n                    <Field name='complianceThreshold' id='complianceThreshold' isRequired={true}\n                        onChange={this.handleThresholdChange}\n                        validated={ validThreshold ? 'default' : 'error' }\n                        defaultValue={threshold}\n                        aria-label=\"compliance threshold\"\n                        component={ReduxFormTextInput} type='number'\n                        style={ { width: '60%', display: 'block' } } />\n                </FormGroup>\n            </React.Fragment>\n        );\n    }\n}\n\nProfileThresholdField.propTypes = {\n    previousThreshold: propTypes.number\n};\n\nexport default reduxForm({\n    form: 'policyForm',\n    destroyOnUnmount: false,\n    forceUnregisterOnUnmount: true\n})(ProfileThresholdField);\n","import React from 'react';\nimport { supportedConfigsLink } from '@redhat-cloud-services/frontend-components-inventory-compliance';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\n\nconst SupportedSSGVersionsLink = () => (\n    <a target='_blank' rel='noopener noreferrer' href={ supportedConfigsLink }>\n        Supported SSG versions <ExternalLinkAltIcon />\n    </a>\n);\n\nexport default SupportedSSGVersionsLink;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Popover, Tooltip, Text } from '@patternfly/react-core';\nimport { ExclamationTriangleIcon, OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport { SupportedSSGVersionsLink } from 'PresentationalComponents';\n\nconst UNSUPPORTED_SINGULAR_MESSAGE =\n    'This system was using an incompatible version of the SSG at the time this report was generated. ' +\n    'Assessment of rules failed/passed on this system is a best-guess effort and may not be accurate.';\nconst UNSUPPORTED_PLURAL_MESSAGE = <React.Fragment>\n    <Text variant='p' style={ { marginBottom: '1rem' } }>\n        These systems are running unsupported versions of the SCAP Security Guide (SSG) for the version of RHEL installed on them.\n        Assessment of rules failed/passed on these systems is a best-guess effort and may not be accurate.\n    </Text>\n    <Text variant='p'>\n        The policy&apos;s compliance score excludes these systems.\n    </Text>\n</React.Fragment>;\n\nconst WarningWithPopover = ({ children, variant = 'plural' }) => (\n    <Popover\n        id='unsupported-popover'\n        maxWidth='25rem'\n        headerContent='Unsupported SSG versions'\n        bodyContent={ variant === 'plural' ? UNSUPPORTED_PLURAL_MESSAGE : UNSUPPORTED_SINGULAR_MESSAGE }\n        footerContent={ <SupportedSSGVersionsLink /> }>\n        { children }\n    </Popover>\n);\n\nWarningWithPopover.propTypes = {\n    children: propTypes.node,\n    variant: propTypes.oneOf(['singular', 'plural'])\n};\n\nconst WarningWithTooltip = ({ children, content }) => (\n    <Tooltip content={ content } position='bottom'>\n        { children }\n    </Tooltip>\n);\n\nWarningWithTooltip.propTypes = {\n    content: propTypes.string,\n    children: propTypes.node\n};;\n\nconst TooltipOrPopover = ({ variant, children, tooltipProps }) => {\n    const { Component, componentProps } = {\n        tooltip: {\n            Component: WarningWithTooltip,\n            componentProps: tooltipProps\n        },\n        popover: {\n            Component: WarningWithPopover,\n            componentProps: {\n                showHeader: tooltipProps.showPopupHeader,\n                variant: tooltipProps.messageVariant\n            }\n        }\n    }[variant];\n\n    return <Component { ...componentProps }>\n        { children }\n    </Component>;\n};\n\nTooltipOrPopover.propTypes = {\n    children: propTypes.node,\n    variant: propTypes.oneOf(['tooltip', 'popover']),\n    tooltipProps: propTypes.object\n};\n\nconst UnsupportedSSGVersion = ({\n    children, showWarningIcon = true, showHelpIcon = false, style, tooltipText, messageVariant\n}) => {\n    const tooltipProps = {\n        ...tooltipText && { content: <div>{ tooltipText }</div> },\n        messageVariant\n    };\n    const variant = tooltipText ? 'tooltip' : 'popover';\n    const iconProps = {\n        variant,\n        tooltipProps\n    };\n    const defaultStyle = !tooltipText ? { cursor: 'pointer' } : {};\n\n    return <span style={ { ...style, display: 'inline-block' } }>\n        { showWarningIcon && <TooltipOrPopover { ...iconProps }>\n            <span style={ defaultStyle } className='pf-u-mr-xs'>\n                <ExclamationTriangleIcon color='var(--pf-global--warning-color--100)' />\n            </span>\n        </TooltipOrPopover> }\n\n        { children }\n\n        { showHelpIcon &&  <TooltipOrPopover { ...iconProps }>\n            <span style={ defaultStyle } className='pf-u-ml-xs'>\n                <OutlinedQuestionCircleIcon />\n            </span>\n        </TooltipOrPopover> }\n    </span>;\n};\n\nUnsupportedSSGVersion.propTypes = {\n    showWarningIcon: propTypes.bool,\n    showHelpIcon: propTypes.bool,\n    style: propTypes.object,\n    tooltipText: propTypes.string,\n    children: propTypes.node,\n    variant: propTypes.string,\n    messageVariant: propTypes.string,\n    showPopupHeader: propTypes.bool\n};\n\nexport default UnsupportedSSGVersion;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Text } from '@patternfly/react-core';\n\nconst SubPageTitle = ({ children }) => (\n    <Text\n        component='h2'\n        style={ {\n            color: 'var(--pf-global--Color--200)',\n            lineHeight: '2rem'\n        } }>\n        { children }\n    </Text>\n);\n\nSubPageTitle.propTypes = {\n    children: propTypes.node\n};\n\nexport default SubPageTitle;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Label } from '@patternfly/react-core';\n\nconst OperatingSystemBadge = ({ majorOsVersion }) => {\n    const colorMap = {\n        default: 'var(--pf-global--disabled-color--200)',\n        7: 'cyan',\n        8: 'purple'\n    };\n    const color = colorMap[majorOsVersion] || colorMap.default;\n\n    return <Label { ...{ color } }>\n        RHEL { majorOsVersion }\n    </Label>;\n};\n\nOperatingSystemBadge.propTypes = {\n    majorOsVersion: propTypes.string\n};\n\nexport default OperatingSystemBadge;\n","import React from 'react';\nimport {\n    EmptyStateBody, EmptyState, EmptyStateVariant, Text, TextContent, TextVariants, Title, Bullseye\n} from '@patternfly/react-core';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\nimport { WARNING_TEXT } from 'PresentationalComponents';\n\nconst NoSystemsTableWithWarning = () => (\n    <Bullseye>\n        <EmptyState variant={ EmptyStateVariant.full }>\n            <Title headingLevel=\"h2\" size='lg' style={ { fontWeight: 'bold' }}>\n                No systems on this policy\n            </Title>\n            <EmptyStateBody>\n                <TextContent>\n                    <Text component={ TextVariants.p }>\n                        Add systems to this policy from the systems page\n                    </Text>\n                    <Text style={ { color: 'var(--pf-global--warning-color--100)' }}>\n                        <ExclamationTriangleIcon /> { WARNING_TEXT }\n                    </Text>\n                </TextContent>\n            </EmptyStateBody>\n        </EmptyState>\n    </Bullseye>\n);\n\nexport default NoSystemsTableWithWarning;\n","export const stringToId = (string) => (\n    string.split(' ').join('').toLowerCase()\n);\n","import { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\nimport { stringToId } from './Helpers';\n\nclass FilterBuilder {\n    constructor(filterConfig) {\n        this.filterConfig = filterConfig;\n        this.config = this.filterConfig.config;\n    }\n\n    buildFilterFilterString = (configItem, value) => {\n        const { type, filterString } = configItem;\n\n        if (type !== 'hidden' && !value) { return []; }\n\n        switch (type) {\n            case conditionalFilterType.text:\n                return [filterString(value)];\n            case conditionalFilterType.checkbox:\n                return value.map((filter) => (filterString(filter)));\n\n            case conditionalFilterType.group:\n                return filterString(value);\n\n            case 'hidden':\n                return filterString();\n\n            default:\n                return [];\n        }\n    }\n\n    combineFilterStrings = (filterStringArray) => {\n        const moreThanTwo = filterStringArray.map((f) => (f.length)).filter((fl) => (fl > 0)).length >= 2;\n        return filterStringArray.map((fs) => (fs.join(' or '))).join(moreThanTwo ? ' and ' : '');\n    }\n\n    buildFilterString = (filters) => {\n        const filterStringArray = this.config.map((configItem) => (\n            this.buildFilterFilterString(configItem, filters[stringToId(configItem.label)])\n        )).filter((f) => (f.length > 0));\n        return this.combineFilterStrings(filterStringArray);\n    }\n}\n\nexport default FilterBuilder;\n","import { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\n\nclass ChipBuilder {\n    constructor(filterConfig) {\n        this.filterConfig = filterConfig;\n        this.config = this.filterConfig.config;\n    }\n\n    textFilterChip = (category, currentValue) => (currentValue && currentValue !== '' ? {\n        category,\n        chips: [{ name: currentValue }]\n    } : null)\n\n    checkboxFilterChip = (category, currentValue) => (currentValue && currentValue.length > 0 ? {\n        category,\n        chips: currentValue.map((value) => (\n            { name: this.filterConfig.labelForValue(value, category) }\n        ))\n    } : null)\n\n    radioFilterChip = (category, currentValue) => (currentValue && currentValue !== '' ? {\n        category,\n        chips: [{ name: this.filterConfig.labelForValue(currentValue, category) }]\n    } : null)\n\n    chipFor = (filter, currentValue) => {\n        const categoryConfig = this.filterConfig.getCategoryForLabel(filter);\n        const { label, type } = categoryConfig ? categoryConfig : { label: filter, type: null };\n\n        switch (type) {\n            case conditionalFilterType.text:\n                return this.textFilterChip(label, currentValue);\n\n            case conditionalFilterType.checkbox:\n                return this.checkboxFilterChip(label, currentValue);\n\n            case conditionalFilterType.radio:\n                return this.radioFilterChip(label, currentValue);\n\n            default:\n                return null;\n        }\n    }\n\n    chipsFor = (filters) => (\n        Object.keys(filters).map((filter) => (\n            this.chipFor(filter, filters[filter])\n        )).filter((f) => (!!f))\n    )\n}\n\nexport default ChipBuilder;\n","import { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\nimport FilterBuilder from './FilterBuilder';\nimport ChipBuilder from './ChipBuilder';\nimport { stringToId } from './Helpers';\n\nconst defaultPlaceholder = (label) => (`Filter by ${ label.toLowerCase() }`);\n\nclass FilterConfigBuilder {\n    chipBuilder = null;\n    filterBuilder = null;\n\n    constructor(config) {\n        this.config = config;\n    }\n\n    addConfigItem = (item) => (\n        this.config = this.config.filter((i) => (\n            i.label !== item.label\n        )).concat(item)\n    )\n\n    getChipBuilder = () => (\n        this.chipBuilder = this.chipBuilder ? this.chipBuilder : new ChipBuilder(this)\n    )\n\n    getFilterBuilder = () => (\n        this.filterBuilder = this.filterBuilder ? this.filterBuilder : new FilterBuilder(this)\n    )\n\n    toTextFilterConfig = (item, handler, value) => ({\n        type: conditionalFilterType.text,\n        label: item.label,\n        placeholder: defaultPlaceholder(item.label),\n        id: stringToId(item.label),\n        filterValues: {\n            value,\n            [item.event || 'onChange']: (_event, selectedValues) => {\n                handler(stringToId(item.label), selectedValues);\n            }\n        }\n    });\n\n    toCheckboxFilterConfig = (item, handler, value) => ({\n        type: conditionalFilterType.checkbox,\n        label: item.label,\n        placeholder: defaultPlaceholder(item.label),\n        id: stringToId(item.label),\n        filterValues: {\n            value,\n            items: item.items,\n            onChange: (_event, selectedValues) => {\n                handler(stringToId(item.label), selectedValues);\n            }\n        }\n    });\n\n    toRadioFilterConfig = (item, handler, value) => ({\n        type: conditionalFilterType.radio,\n        label: item.label,\n        placeholder: defaultPlaceholder(item.label),\n        id: stringToId(item.label),\n        filterValues: {\n            value,\n            items: item.items,\n            onChange: (_event, selectedValues) => {\n                handler(stringToId(item.label), selectedValues);\n            }\n        }\n    });\n\n    toFilterConfigItem = (item, handler, value) => {\n        switch (item.type) {\n            case conditionalFilterType.text:\n                return this.toTextFilterConfig(item, handler, value);\n\n            case conditionalFilterType.checkbox:\n                return this.toCheckboxFilterConfig(item, handler, value);\n\n            case conditionalFilterType.radio:\n                return this.toRadioFilterConfig(item, handler, value);\n\n            default:\n                return null;\n        }\n    };\n\n    buildConfiguration = (handler, states, props = {}) => ({\n        ...props,\n        items: this.config.map((item) => (\n            this.toFilterConfigItem(item, handler, states[stringToId(item.label)])\n        )).filter((v) => (!!v))\n    });\n\n    defaultValueForFilter = (filter) => {\n        switch (filter.type) {\n            case conditionalFilterType.text:\n                return '';\n            case conditionalFilterType.checkbox:\n                return [];\n            case 'hidden':\n                return filter.default || false;\n            default:\n                return;\n        }\n    }\n\n    initialDefaultState = (defaultStates = {}) => {\n        let initialState = {};\n        this.config.forEach((filter) => {\n            const filterStateName = stringToId(filter.key || filter.label);\n            initialState[filterStateName] =\n                defaultStates[filterStateName] || this.defaultValueForFilter(filter);\n        });\n\n        return initialState;\n    }\n\n    categoryLabelForValue = (value) => {\n        const category = this.config.filter((category) => (\n            category.items ? category.items.map((item) => item.value).includes(value) : false\n        ))[0];\n\n        return category ? category.label : value;\n    };\n\n    getCategoryForLabel = (query) => (\n        this.config.filter((item) => (stringToId(item.key || item.label) === stringToId(query)))[0] || {}\n    )\n\n    getItemByLabelOrValue = (query, category) => {\n        const items = this.getCategoryForLabel(category).items;\n        const results = (items || []).filter((item) => (\n            item.value === query || item.label === query\n        ));\n\n        if (results.length === 1) {\n            return results[0];\n        } else if (results.length > 1) {\n            // eslint-disable-next-line no-console\n            console.info(`Multiple items found for ${query} in ${category}! Returning first one.`);\n            return results[0];\n        } else {\n            // eslint-disable-next-line no-console\n            console.info('No item found for ' + query + ' in ', category);\n        }\n    }\n\n    labelForValue = (value, category) => {\n        const item = this.getItemByLabelOrValue(value, category);\n        return item ? item.label : value;\n    };\n\n    valueForLabel = (label, category) => {\n        const item = this.getItemByLabelOrValue(label, category);\n        return item ? item.value : label;\n    };\n\n    applyFilterToObjectArray = (objects, activeFilters) => {\n        let filteredObjects = [...objects];\n\n        Object.keys(activeFilters).forEach((filter) => {\n            const category = this.getCategoryForLabel(filter);\n            const value = activeFilters[filter];\n            if ((!category || !value)) {\n                return;\n            }\n\n            if (value.length > 0 || (category.type === 'hidden' && typeof value === 'boolean')) {\n                filteredObjects = category.filter(filteredObjects, value);\n            }\n        });\n\n        return filteredObjects;\n    }\n\n    removeFilterFromFilterState = (currentState, filter) => (\n        (typeof(currentState) === 'string') ? '' :\n            currentState.filter((value) =>\n                value !== filter\n            )\n    )\n\n    removeFilterWithChip = (chips, activeFilters) => {\n        const chipCategory = chips.category;\n        const chipValue = this.valueForLabel(chips.chips[0].name, chipCategory);\n        const stateProp = stringToId(chipCategory);\n        const currentState = activeFilters[stateProp];\n        const newFilterState = this.removeFilterFromFilterState(currentState, chipValue);\n\n        return {\n            ...activeFilters,\n            [stateProp]: newFilterState\n        };\n    }\n}\n\nexport default FilterConfigBuilder;\n","import React from 'react';\nimport { Switch } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\n\nconst SelectedFilterSwitch = ({ isChecked, setActiveFilter }) => (\n    <Switch\n        label='Selected only'\n        isChecked={ isChecked }\n        onChange={ () => (\n            setActiveFilter('selected', !isChecked)\n        ) }\n    />\n);\n\nSelectedFilterSwitch.propTypes = {\n    isChecked: propTypes.bool,\n    setActiveFilter: propTypes.func\n};\n\nexport default SelectedFilterSwitch;\n","import React from 'react';\nimport SelectedFilterSwitch from './Components/SelectedFilterSwitch';\n\nconst useSelectedFilter = ({\n    setActiveFilter, activeFilters, selectedFilter\n}) => {\n    const enableSelectedFilter = !!selectedFilter;\n    const filterKey = 'selected';\n    const filterItem = {\n        type: 'hidden',\n        label: 'selectFilter',\n        key: filterKey,\n        default: true,\n        filter: (items, value) => {\n            return items.filter((item) => (item?.rowProps?.selected === value));\n        }\n    };\n    const isChecked = activeFilters[filterKey] === true;\n\n    return enableSelectedFilter ? {\n        filterItem,\n        toolbarProps: {\n            dedicatedAction: () => ( // eslint-disable-line\n                <SelectedFilterSwitch { ...{\n                    setActiveFilter,\n                    isChecked\n                }  } />\n            )\n        }\n    } : {};\n};\n\nexport default useSelectedFilter;\n","import { useState, useEffect, useMemo } from 'react';\nimport FilterConfigBuilder from './FilterConfigBuilder/FilterConfigBuilder';\nimport useSelectedFilter from './useSelectedFilter';\n\nconst useFilterConfig = (options = {}) => {\n    const filterConfigBuilder = useMemo(() => (\n        new FilterConfigBuilder([])\n    ), []);\n    const {\n        filters,\n        setPage,\n        selectedFilter\n    } = options;\n    const enableFilters = !!filters;\n    const { filterConfig = [], activeFilters: initialActiveFilters } = filters || {};\n    const [activeFilters, setActiveFilters] = useState({});\n    const onFilterUpdate = (filter, value) => {\n        setActiveFilters({\n            ...activeFilters,\n            [filter]: value\n        });\n\n        setPage && setPage(1);\n    };\n\n    const buildConfig = () => (\n        filterConfigBuilder.buildConfiguration(\n            onFilterUpdate,\n            activeFilters\n        )\n    );\n\n    const addConfigItem = (item) => {\n        filterConfigBuilder.addConfigItem(item);\n        setActiveFilters(filterConfigBuilder.initialDefaultState(\n            activeFilters\n        ));\n    };\n\n    const clearAllFilter = () => (\n        setActiveFilters(filterConfigBuilder.initialDefaultState())\n    );\n\n    const deleteFilter = (chips) => (\n        setActiveFilters(filterConfigBuilder.removeFilterWithChip(\n            chips, activeFilters\n        ))\n    );\n    const onFilterDelete = (_event, chips, clearAll = false) => (\n        clearAll ? clearAllFilter() : deleteFilter(chips[0])\n    );\n    const chipBuilder = filterConfigBuilder.getChipBuilder();\n    const filterChips = chipBuilder.chipsFor(activeFilters);\n\n    const filter = (items) => (\n        filterConfigBuilder.applyFilterToObjectArray(\n            items, activeFilters\n        )\n    );\n\n    const {\n        toolbarProps: selectedFilterToolbarProps, filterItem: selectFilterItem\n    } = useSelectedFilter({\n        activeFilters,\n        setActiveFilter: onFilterUpdate,\n        selectedFilter\n    });\n\n    useEffect(() => {\n        filterConfigBuilder.config = [];\n        [...filterConfig, selectFilterItem].filter((v) => (!!v)).forEach(addConfigItem);\n        setActiveFilters(filterConfigBuilder.initialDefaultState(\n            initialActiveFilters || []\n        ));\n\n        return () => {\n            filterConfigBuilder.config = [];\n        };\n    }, []);\n\n    return enableFilters ? {\n        filter,\n        selectedFilterToolbarProps,\n        toolbarProps: {\n            filterConfig: buildConfig(),\n            activeFiltersConfig: {\n                filters: filterChips,\n                onDelete: onFilterDelete\n            }\n        },\n        setActiveFilter: onFilterUpdate,\n        activeFilters,\n        addConfigItem,\n        filterConfigBuilder\n    } : {};\n};\n\nexport default useFilterConfig;\n","import { useState } from 'react';\nimport { sortable } from '@patternfly/react-table';\nimport { orderArrayByProp, orderByArray, uniq } from 'Utilities/helpers';\n\nconst isSortable = (column) => (\n    column.sortByProp || column.sortByFunction\n);\n\nconst addSortableTransform = (columns) => (\n    columns.map((column) => ({\n        ...column,\n        ...isSortable(column) ? {\n            transforms: uniq([\n                ...(column?.transforms || []),\n                sortable\n            ])\n        } : {}\n    }))\n);\n\nconst columnOffset = (options = {}) => (\n    (typeof options.onSelect === 'function') +\n    (typeof options.detailsComponent  !== 'undefined')\n);\n\nconst useTableSort = (columns, options = {}) => {\n    const [sortBy, setSortBy] = useState({\n        index: 0,\n        direction: 'desc'\n    });\n    const onSort = (_, index, direction) => (\n        setSortBy({\n            index,\n            direction\n        })\n    );\n\n    return {\n        sorter: (items) => {\n            const column = columns[sortBy.index - columnOffset(options)];\n            return column?.sortByArray ? orderByArray(\n                items, column?.sortByProp, column?.sortByArray, sortBy.direction\n            ) : orderArrayByProp(\n                (column?.sortByProp || column?.sortByFunction), items, sortBy.direction\n            );\n        },\n        tableProps: {\n            onSort,\n            sortBy,\n            cells: addSortableTransform(columns)\n        }\n    };\n};\n\nexport default useTableSort;\n","import { useState } from 'react';\n\nconst usePaginate = (options = {}) => {\n    const { perPage = 10 } = options;\n    const enablePagination = options?.pagination !== false;\n\n    const [paginationState, setPaginationState] = useState({\n        perPage,\n        page: 1\n    });\n    const setPagination = (newState) => (\n        setPaginationState({\n            ...paginationState,\n            ...newState\n        })\n    );\n\n    const onSetPage = (_, page) => (\n        setPagination({ ...paginationState, page })\n    );\n\n    const onPerPageSelect = (_, perPage) => (\n        setPagination({ page: 1, perPage })\n    );\n\n    const paginator = (items) => {\n        const { page, perPage } = paginationState;\n        const start = (page - 1) * perPage;\n        const end = start + perPage;\n\n        return items.slice(start, end);\n    };\n\n    const setPage = (page) => {\n        const nextPage = page < 0 ? paginationState.page + page : page;\n        setPagination({\n            page: nextPage > 0 ? nextPage : 1\n        });\n    };\n\n    return enablePagination ? {\n        paginator,\n        setPage,\n        toolbarProps: {\n            pagination: {\n                ...paginationState,\n                onSetPage,\n                onPerPageSelect\n            }\n        }\n    } : {};\n};\n\nexport default usePaginate;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport {\n    Bullseye, EmptyState, EmptyStateBody, EmptyStateVariant, Title\n} from '@patternfly/react-core';\nimport EmptyTable from '@redhat-cloud-services/frontend-components/EmptyTable';\n\nexport const NoResultsTable = ({ kind = 'results' }) => (\n    <EmptyTable>\n        <Bullseye>\n            <EmptyState variant={ EmptyStateVariant.full }>\n                <Title headingLevel=\"h5\" size=\"lg\">\n                    No matching { kind } found\n                </Title>\n                <EmptyStateBody>\n                    This filter criteria matches no { kind }.<br />\n                    Try changing your filter settings.\n                </EmptyStateBody>\n            </EmptyState>\n        </Bullseye>\n    </EmptyTable>\n);\n\nNoResultsTable.propTypes = {\n    kind: propTypes.string\n};\n\nexport const emptyRows = [{\n    cells: [\n        {\n            title: () => (<NoResultsTable />),  // eslint-disable-line\n            props: {\n                colSpan: 3\n            }\n        }\n    ]\n}];\n\nexport default NoResultsTable;\n","import { emptyRows } from './Components/NoResultsTable';\n\nconst columnProp = (column) => (\n    column.key || column.original?.toLowerCase() || column.title?.toLowerCase()\n);\n\nconst itemRow = (item, columns) => ({\n    ...item.rowProps,\n    itemId: item.itemId,\n    cells: columns.map((column) => ({\n        title: column.renderFunc ?\n            column.renderFunc(undefined, undefined, item) : item[columnProp(column)]\n    }))\n});\n\nconst primeItem = (item, transformers) => {\n    let newItem = item;\n\n    transformers.forEach((transformer) => {\n        if (transformer) {\n            newItem = transformer(newItem);\n        }\n    });\n\n    return newItem;\n};\n\nconst applyTransformers = (items, transformers = []) => (\n    items.map((item) => (\n        primeItem(item, transformers)\n    ))\n);\n\nconst buildRow = (item, columns, rowTransformer, idx) => (\n    rowTransformer.flatMap((transformer) => {\n        const row = itemRow(item, columns);\n        return transformer ? transformer(\n            row, item, columns, idx\n        ) : row;\n    })\n);\n\nconst useRowsBuilder = (items, columns, options = {}) => {\n    const { transformer = [], rowTransformer = [] } = options;\n    const EmptyRowsComponent = options.emptyRows || emptyRows;\n    const transformedItems = transformer ?\n        applyTransformers(items, transformer) : items;\n\n    const filteredItems = options?.filter ?\n        options.filter(transformedItems) : transformedItems;\n\n    const sortedItems = options?.sorter ?\n        options.sorter(filteredItems) : filteredItems;\n\n    const paginatedItems = options?.paginator ?\n        options?.paginator(sortedItems) : sortedItems;\n\n    const rows = paginatedItems.length > 0 ? paginatedItems.flatMap((item, idx) => (\n        buildRow(item, columns, rowTransformer, idx)\n    )).filter((v) => (!!v)) : EmptyRowsComponent;\n\n    const pagination = options?.pagination ? {\n        ...options.pagination,\n        itemCount: filteredItems.length\n    } : undefined ;\n\n    return {\n        tableProps: {\n            rows\n        },\n        toolbarProps: {\n            pagination\n        }\n    };\n};\n\nexport default useRowsBuilder;\n","import { useEffect, useMemo, useState } from 'react';\nimport { filterSelected } from './helper';\n\nconst compileTitle = (itemsTotal, titleOption) => {\n    if (typeof titleOption === 'string') {\n        return titleOption;\n    } else if (typeof titleOption === 'function') {\n        return titleOption(itemsTotal);\n    } else {\n        return `${ itemsTotal } selected`;\n    }\n};\n\nconst checkboxState = (selectedItemsTotal, itemsTotal) => {\n    if (selectedItemsTotal === 0) {\n        return false;\n    } else if (selectedItemsTotal === itemsTotal) {\n        return true;\n    } else {\n        return null;\n    }\n};\n\nconst allItemsIncluded = (items, selection = []) => (\n    items.filter((item) => (\n        selection.includes(item)\n    )).length === items.length\n);\n\nconst selectOrUnselect = (selected) => (\n    selected ? 'Unselect' : 'Select'\n);\n\nconst checkCurrentPageSelected = (items, selectedItems) => {\n    if (items.length === 0) {\n        return false;\n    } else {\n        return allItemsIncluded(items, selectedItems);\n    }\n};\n\nconst itemIds = (items) => (items.map((item) => (item.itemId)));\nconst mergeArraysUniqly = (arrayA, arrayB) => (\n    Array.from(new Set([...arrayA, ...arrayB]))\n);\n\nconst useBulkSelect = ({\n    onSelect,\n    items: propItems,\n    filter,\n    paginator,\n    sorter,\n    preselected,\n    setPage\n}) => {\n    const enableBulkSelect = !!onSelect;\n\n    const [selectedIds, setSelectedItemIds] = useState(preselected || []);\n    const selectItemTransformer = (item) => ({\n        ...item,\n        rowProps: {\n            selected: (selectedIds || []).includes(item.itemId)\n        }\n    });\n\n    const items = (sorter ? sorter(propItems) : propItems).map(selectItemTransformer);\n    const total = items.length;\n\n    const selectedItems = filterSelected(items, selectedIds);\n    const selectedItemsTotal = selectedItems.length;\n    const noneSelected = selectedItemsTotal === 0;\n\n    const filteredItems = filter ? filter(items) : items;\n    const filteredTotal = filteredItems.length;\n    const filtered = filteredTotal !== total;\n    const allFiltertedSelected = selectedIds?.length > 0 ?\n        allItemsIncluded(itemIds(filteredItems), selectedIds) : false;\n\n    const paginatedItems = paginator ? paginator(filteredItems) : filteredItems;\n    const paginatedTotal = paginatedItems.length;\n\n    const currentPageSelected = checkCurrentPageSelected(\n        itemIds(paginatedItems), selectedIds\n    );\n\n    const title = compileTitle(selectedItemsTotal);\n    const checked = checkboxState(selectedItemsTotal, total);\n    const allCount = filtered ? filteredTotal : total;\n    const allSelected = selectedItemsTotal === allCount;\n    const isDisabled = allCount === 0;\n\n    const onSelectCallback = (func) => {\n        const newSelectedItemsIds = func();\n        setSelectedItemIds(newSelectedItemsIds);\n        onSelect && onSelect(newSelectedItemsIds);\n    };\n\n    const selectNone = () => onSelectCallback(() =>([]));\n\n    const selectOne = (_, selected, key, row) => onSelectCallback(() => {\n        const newItemIds = selected ?\n            [...selectedIds, row.itemId] :\n            selectedIds.filter((rowId) => (rowId !== row.itemId));\n\n        return newItemIds;\n    });\n\n    const selectItems = (itemIds) => (\n        mergeArraysUniqly(selectedIds, itemIds)\n    );\n\n    const unselectItems = (itemIds) => (\n        selectedIds.filter((itemId) => (\n            !itemIds.includes(itemId)\n        ))\n    );\n\n    const selectPage = () => onSelectCallback(() => {\n        const currentPageIds = itemIds(paginatedItems);\n        return currentPageSelected ?\n            unselectItems(currentPageIds) : selectItems(currentPageIds);\n    });\n\n    const selectFiltered = () => onSelectCallback(() => {\n        const currentFilteredIds = itemIds(filteredItems);\n        return allFiltertedSelected ?\n            unselectItems(currentFilteredIds) : selectItems(currentFilteredIds);\n    });\n\n    const selectAll = () => onSelectCallback(() => (\n        itemIds(items)\n    ));\n\n    const selectFilteredOrAll = () => (\n        filtered ? selectFiltered() : selectAll()\n    );\n\n    const selectAllHandler = () => (\n        allSelected ? selectNone() : selectFilteredOrAll()\n    );\n    const setPageMemo = useMemo(() => (\n        setPage\n    ), []);\n\n    useEffect(() => {\n        if (paginatedTotal === 0) {\n            setPageMemo(-1);\n        }\n    }, [paginatedTotal, setPageMemo]);\n\n    useEffect(() => {\n        setSelectedItemIds(preselected);\n    }, [preselected]);\n\n    return enableBulkSelect ? {\n        transformer: selectItemTransformer,\n        tableProps: {\n            onSelect: paginatedTotal > 0 ? selectOne : undefined,\n            canSelectAll: false\n        },\n        selected: selectedIds,\n        clearSelection: selectNone,\n        toolbarProps: {\n            bulkSelect: {\n                toggleProps: { children: [title] },\n                isDisabled,\n                items: [{\n                    title: 'Select none',\n                    onClick: selectNone,\n                    props: {\n                        isDisabled: noneSelected\n                    }\n                }, {\n                    title: `${ selectOrUnselect(currentPageSelected) } page (${ paginatedTotal } items)`,\n                    onClick: selectPage\n                }, {\n                    title: `${ selectOrUnselect(filtered ? allFiltertedSelected : allSelected) } all (${ allCount } items)`,\n                    onClick: selectAllHandler\n                }],\n                checked,\n                onSelect: !isDisabled ? () => selectPage() : undefined\n            }\n        }\n    } : {};\n};\n\nexport default useBulkSelect;\n","export const filterSelected = (items, selectedIds = []) => (\n    items.filter((item) => (\n        selectedIds.includes(item.itemId)\n    ))\n);\n","const getIdProp = (item, idProp = 'id') => (item[idProp]);\n\nconst identify = (item, identifier) => {\n    if (typeof identifier === 'string') {\n        return {\n            ...item,\n            itemId: getIdProp(item, identifier)\n        };\n    } else {\n        return {\n            ...item,\n            itemId: identifier(item)\n        };\n    }\n};\n\nexport const useItemIdentify = (items, options = {}) => {\n    const identifier = options?.identifier || getIdProp;\n\n    return items.map((item) => identify(item, identifier));\n};\n\nexport default useItemIdentify;\n","import React, { useState } from 'react';\n\nconst childRowForRule = (item, idx, DetailsComponent) => ({\n    parent: idx * 2,\n    cells: [\n        { title: <DetailsComponent rule={ item } key={ 'item-' + item.rowId } /> }\n    ]\n});\n\nconst itemDetailsRow = (item, idx, options) => (\n    (typeof(options?.detailsComponent) !== 'undefined') && childRowForRule(item, idx, options.detailsComponent)\n);\n\nconst useExpandable = (options) => {\n    const enableExpanbale = !!options.detailsComponent;\n    const [openItems, setOpenItems] = useState([]);\n    const onCollapse = (_event, _index, _isOpen, row) => {\n        if (openItems.includes(row.itemId)) {\n            setOpenItems(openItems.filter((itemId) => (itemId !== row.itemId)));\n        } else {\n            setOpenItems([...openItems, row.itemId]);\n        }\n    };\n\n    const openItem = (row, item, _columns, rowIndex) => {\n        const isOpen = openItems.includes(item.itemId);\n        const newRow = {\n            ...row,\n            isOpen\n        };\n        const expandableRow = itemDetailsRow(item, rowIndex, options);\n\n        return [\n            newRow,\n            expandableRow\n        ];\n    };\n\n    return enableExpanbale ? {\n        transformer: openItem,\n        tableProps: {\n            onCollapse\n        }\n    } : {};\n};\n\nexport default useExpandable;\n","import React from 'react';\n\nconst useDedicatedAction = (options) => {\n    const enableDedicatedAction = !!options.dedicatedAction;\n    const {\n        dedicatedAction: dedicatedActionOption, additionalDedicatedActions, selected\n    } = options;\n\n    return enableDedicatedAction ? {\n        toolbarProps: {\n            dedicatedAction: [\n                dedicatedActionOption,\n                ...additionalDedicatedActions\n            ].filter((v) => (!!v)).map((DedicatedAction, idx) => (\n                <DedicatedAction key={ `dedicated-table-action-${ idx }`} { ...{ selected } } />\n            ))\n        }\n    } : {};\n};\n\nexport default useDedicatedAction;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Pagination, PaginationVariant } from '@patternfly/react-core';\nimport { Table, TableBody, TableHeader } from '@patternfly/react-table';\nimport PrimaryToolbar from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport TableToolbar from '@redhat-cloud-services/frontend-components/TableToolbar';\nimport useTableTools from '../useTableTools';\n\nconst TableToolsTable = ({\n    items = [], columns = [], filters = [], options = {},\n    toolbarProps: toolbarPropsProp, ...tablePropsRest\n}) => {\n    const { toolbarProps, tableProps } = useTableTools(items, columns, {\n        filters,\n        toolbarProps: toolbarPropsProp,\n        tableProps: tablePropsRest,\n        ...options\n    });\n\n    return <React.Fragment>\n\n        <PrimaryToolbar { ...toolbarProps } />\n\n        <Table { ...tableProps }>\n            <TableHeader />\n            <TableBody />\n        </Table>\n\n        <TableToolbar isFooter>\n            <Pagination\n                variant={ PaginationVariant.bottom }\n                { ...toolbarProps.pagination } />\n        </TableToolbar>\n\n    </React.Fragment>;\n};\n\nTableToolsTable.propTypes = {\n    items: propTypes.array.isRequired,\n    columns: propTypes.arrayOf(propTypes.shape({\n        title: propTypes.node,\n        transforms: propTypes.array,\n        sortByProperty: propTypes.string,\n        sortByArray: propTypes.array,\n        sortByFunction: propTypes.func,\n        renderFunc: propTypes.func\n    })).isRequired,\n    filters: propTypes.object,\n    options: propTypes.object,\n    toolbarProps: propTypes.object\n};\n\nexport default TableToolsTable;\n","import useFilterConfig from './useFilterConfig';\nimport useTableSort from './useTableSort';\nimport usePaginate from './usePaginate';\nimport useRowsBuilder from './useRowsBuilder';\nimport useBulkSelect from './useBulkSelect';\nimport useItemIdentify from './useItemIdentify';\nimport useExpandable from './useExpandable';\nimport useDedicatedAction from './useDedicatedAction';\n\nconst useTableTools = (items = [], columns = [], options = {}) => {\n    const {\n        toolbarProps: toolbarPropsOption, tableProps: tablePropsOption\n    } = options;\n\n    const identifiedItems = useItemIdentify(items, options);\n\n    const {\n        tableProps: sortableTableProps, sorter\n    } = useTableSort(columns, options);\n\n    const {\n        toolbarProps: pagintionToolbarProps, setPage, paginator\n    } = usePaginate(options);\n\n    const {\n        toolbarProps: conditionalFilterProps,\n        filter,\n        selectedFilterToolbarProps\n    } = useFilterConfig({\n        ...options,\n        setPage\n    });\n\n    const {\n        transformer: openItem, tableProps: expandableProps\n    } = useExpandable(options);\n\n    const {\n        transformer: selectItem,\n        toolbarProps: bulkSelectToolbarProps,\n        tableProps: bulkSelectTableProps,\n        selected\n    } = useBulkSelect({\n        ...options,\n        items: identifiedItems,\n        filter,\n        paginator,\n        sorter,\n        setPage\n    });\n\n    const {\n        toolbarProps: dedicatedActionToolbarProps\n    } = useDedicatedAction({\n        ...options,\n        additionalDedicatedActions: [\n            selectedFilterToolbarProps?.dedicatedAction\n        ],\n        selected\n    });\n\n    const {\n        toolbarProps: rowBuilderToolbarProps, tableProps: rowBuilderTableProps\n    } = useRowsBuilder(identifiedItems, sortableTableProps.cells, {\n        emptyRows: options.emptyRows,\n        transformer: [selectItem],\n        rowTransformer: [openItem],\n        pagination: pagintionToolbarProps?.pagination,\n        paginator,\n        filter,\n        sorter\n    });\n\n    const toolbarProps = {\n        ...pagintionToolbarProps,\n        ...bulkSelectToolbarProps,\n        ...conditionalFilterProps,\n        ...selectedFilterToolbarProps,\n        ...dedicatedActionToolbarProps,\n        ...rowBuilderToolbarProps,\n        ...toolbarPropsOption\n    };\n\n    const tableProps = {\n        cells: columns,\n        ...rowBuilderTableProps,\n        ...sortableTableProps,\n        ...bulkSelectTableProps,\n        ...expandableProps,\n        ...tablePropsOption\n    };\n\n    return {\n        toolbarProps,\n        tableProps\n    };\n};\n\nexport default useTableTools;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Grid, GridItem, Stack, StackItem, Text, TextVariants } from '@patternfly/react-core';\nimport ConditionalLink from 'PresentationalComponents';\n\nconst RuleDetailsRow = ({ rule }) => {\n    const { refId, description, identifier, references, rationale } = rule;\n    const key = `rule-child-row-${refId}`;\n\n    return <div key={ key } style={ { marginTop: 'var(--pf-global--spacer--lg)' } }>\n        <Stack id={ `rule-description-${key}` } className='margin-bottom-lg'>\n            <StackItem style={ { marginBottom: 'var(--pf-global--spacer--sm)' } }>\n                <Text className='pf-c-form__label' component={ TextVariants.h5 }><b>Description</b></Text>\n            </StackItem>\n            <StackItem isFilled>{ description }</StackItem>\n        </Stack>\n        <Stack id={ `rule-identifiers-references-${key}` } className='margin-bottom-lg'>\n            <Grid>\n                { identifier && identifier.length > 0 && <GridItem span={ 2 }>\n                    <Text className='pf-c-form__label' component={ TextVariants.h5 }><b>Identifier</b></Text>\n                    <Text>\n                        {\n                            identifier.map((ident, idx) => (\n                                <ConditionalLink\n                                    href={ ident.system }\n                                    target='_blank'\n                                    key={ `${refId}-identifier-${idx}` }>\n                                    { ident.label }\n                                </ConditionalLink>)\n                            ).reduce((prev, next) => ([prev, ', ', next]))\n                        }\n                    </Text>\n                </GridItem> }\n\n                { (references && references.length > 0) && <GridItem span={ 10 }>\n                    <Text className='pf-c-form__label' component={ TextVariants.h5 }><b>References</b></Text>\n                    <Text>\n                        {\n                            references.map((ref, idx) => (\n                                <ConditionalLink\n                                    href={ ref.href }\n                                    target='_blank'\n                                    key={ `${refId}-reference-${idx}` }>\n                                    { ref.label }\n                                </ConditionalLink>)\n                            ).reduce((prev, next) => ([prev, ', ', next]))\n                        }\n                    </Text>\n                </GridItem> }\n            </Grid>\n        </Stack>\n\n        { rationale &&\n            <Stack id={ `rule-rationale-${key}` } style={ { marginBottom: 'var(--pf-global--spacer--lg)' } }>\n                <StackItem style={ { marginBottom: 'var(--pf-global--spacer--sm)' } }>\n                    <Text className='pf-c-form__label' component={ TextVariants.h5 }><b>Rationale</b></Text>\n                </StackItem>\n                <StackItem isFilled>{ rationale }</StackItem>\n            </Stack>\n        }\n\n    </div>;\n};\n\nRuleDetailsRow.propTypes = {\n    rule: propTypes.object\n};\n\nexport default RuleDetailsRow;\n","import React from 'react';\nimport { Bullseye, EmptyState, EmptyStateBody, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { EmptyTable } from '@redhat-cloud-services/frontend-components/EmptyTable';\n\nconst emptyRows = (columns) => ([{\n    cells: [{\n        title: (\n            <EmptyTable>\n                <Bullseye>\n                    <EmptyState variant={ EmptyStateVariant.full }>\n                        <Title headingLevel=\"h5\" size=\"lg\">\n                                No matching rules found\n                        </Title>\n                        <EmptyStateBody>\n                                This filter criteria matches no rules. <br /> Try changing your filter settings.\n                        </EmptyStateBody>\n                    </EmptyState>\n                </Bullseye>\n            </EmptyTable>\n        ),\n        props: {\n            colSpan: columns.length\n        }\n    }]\n}]);\n\nexport default emptyRows;\n","import React from 'react';\nimport {\n    ExclamationCircleIcon, ExclamationTriangleIcon, QuestionCircleIcon\n} from '@patternfly/react-icons';\nimport { LowSeverityIcon } from './Cells';\n\nexport const HIGH_SEVERITY = <span><ExclamationCircleIcon className='ins-u-failed'/> High</span>;\nexport const MEDIUM_SEVERITY = <span><ExclamationTriangleIcon className='ins-u-warning'/> Medium</span>;\nexport const LOW_SEVERITY = <span><LowSeverityIcon /> Low</span>;\nexport const UNKNOWN_SEVERITY = <span><QuestionCircleIcon /> Unknown</span>;\n","import { HIGH_SEVERITY, MEDIUM_SEVERITY, LOW_SEVERITY, UNKNOWN_SEVERITY } from './Constants';\nimport { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\n\nconst filterRulesWithAllValues = (rules, values, valueCheck) => rules.filter((rule) => (\n    values.map((value) => valueCheck(rule, value)).filter(v => !!v).length > 0\n));\n\nconst anyFilterApply = (rules, values, valueCheck) => {\n    let filteredRules = [];\n    rules.forEach((rule) => {\n        if (values.map((value) => valueCheck(rule, value)).filter(v => !!v).length > 0) {\n            filteredRules.push(rule);\n        }\n    });\n    return filteredRules;\n};\n\nconst BASE_FILTER_CONFIGURATION = [{\n    type: conditionalFilterType.text,\n    label: 'Name',\n    filter: (rules, value) => filterRulesWithAllValues(rules, [value], (rule, value) => (\n        rule.title.toLowerCase().includes(value.toLowerCase()) ||\n        (rule.identifier && rule.identifier.label.toLowerCase().includes(value.toLowerCase())) ||\n        rule.references.filter((reference) => reference.label.toLowerCase().includes(value.toLowerCase())).length > 0\n    ))\n}, {\n    type: conditionalFilterType.checkbox,\n    label: 'Severity',\n    items: [\n        { label: HIGH_SEVERITY, value: 'high' },\n        { label: MEDIUM_SEVERITY, value: 'medium' },\n        { label: LOW_SEVERITY, value: 'low' },\n        { label: UNKNOWN_SEVERITY, value: 'unknown' }\n    ],\n    filter: (rules, values) => anyFilterApply(rules, values, (rule, value) => (\n        rule.severity === value\n    ))\n}];\n\nconst PASS_FILTER_CONFIG = {\n    type: conditionalFilterType.checkbox,\n    label: 'Passed',\n    items: [\n        { label: 'Passed rules', value: 'passed' },\n        { label: 'Failed rules', value: 'failed' }\n    ],\n    filter: (rules, values) => anyFilterApply(rules, values, (rule, value) => (\n        rule.compliant === (value === 'passed')\n    ))\n};\n\nexport const policiesFilterConfig = (policies) => ({\n    type: conditionalFilterType.checkbox,\n    label: 'Policy',\n    items: policies.map(policy => (\n        { label: policy.name, value: policy.id }\n    )),\n    filter: (rules, values) => filterRulesWithAllValues(rules, values, (rule, value) => (\n        (rule.profile.policy ? rule.profile.policy.id : rule.profile.id) === value\n    ))\n});\n\nexport const REMEDIATION_AVAILABLE_FILTER_CONFIG = {\n    type: conditionalFilterType.checkbox,\n    label: 'Remediation available',\n    items: [\n        { label: 'Remediation available', value: 'true' }\n    ],\n    filter: (rules, value) => (rules.filter((rule) => (\n        value[0] === 'true' ? rule.remediationAvailable === true : true\n    )))\n};\n\nconst buildFilterConfig = ({ showPassFailFilter, policies, remediationAvailableFilter }) => {\n    const config = [...BASE_FILTER_CONFIGURATION];\n\n    if (showPassFailFilter) {\n        config.push(PASS_FILTER_CONFIG);\n    }\n\n    if (policies && policies.length > 1) {\n        config.push(policiesFilterConfig(policies));\n    }\n\n    if (remediationAvailableFilter) {\n        config.push(REMEDIATION_AVAILABLE_FILTER_CONFIG);\n    }\n\n    return config;\n};\n\nexport default buildFilterConfig;\n","import React from 'react';\nimport propTypes from 'prop-types';\n// eslint-disable-next-line\nimport ComplianceRemediationButton from '@redhat-cloud-services/frontend-components-inventory-compliance/ComplianceRemediationButton';\nimport { TableToolsTable } from 'Utilities/hooks/useTableTools';\nimport { toRulesArrayWithProfile } from 'Utilities/ruleHelpers';\nimport RuleDetailsRow from './RuleDetailsRow';\nimport emptyRows from './EmptyRows';\nimport buildFilterConfig from './Filters';\nimport * as Columns from './Columns';\n\nconst RulesTable = ({\n    system,\n    profileRules,\n    columns = [\n        Columns.Name,\n        Columns.Policy,\n        Columns.Severity,\n        Columns.Passed,\n        Columns.Ansible\n    ],\n    remediationsEnabled = true,\n    remediationAvailableFilter = false,\n    selectedFilter = false,\n    handleSelect,\n    selectedRefIds = [],\n    hidePassed = false,\n    options,\n    ...rulesTableProps\n}) => {\n    const rules = toRulesArrayWithProfile(profileRules);\n    const showPassFailFilter = (columns.filter((c) => (c.title === 'Passed')).length > 0);\n    const policies = profileRules.filter(({ profile }) => !!profile).map(({ profile }) => (\n        {\n            id: profile.policy ? profile.policy.id : profile.id,\n            name: profile.name\n        }\n    ));\n\n    return <TableToolsTable\n        aria-label=\"Rules Table\"\n        items={ rules }\n        columns={ columns }\n        filters={{\n            filterConfig: buildFilterConfig({\n                showPassFailFilter,\n                policies,\n                remediationAvailableFilter\n            }),\n            activeFilters: {\n                passed: hidePassed ? 'failed' : undefined\n            }\n        }}\n        options={{\n            ...options,\n            identifier: (item) => (item.refId),\n            selectable: !!handleSelect || remediationsEnabled,\n            onSelect: handleSelect,\n            preselected: selectedRefIds,\n            detailsComponent: RuleDetailsRow,\n            emptyRows: emptyRows(columns),\n            selectedFilter,\n            dedicatedAction: ({ selected: selectedRules }) => ( // eslint-disable-line\n                remediationsEnabled && <ComplianceRemediationButton\n                    allSystems={ [{\n                        id: system.id,\n                        profiles: system.testResultProfiles,\n                        ruleObjectsFailed: [],\n                        supported: system.supported\n                    }] }\n                    selectedRules={ (selectedRules || []).filter((rule) => (rule.remediationAvailable)) } />\n            )\n        }}\n        { ...rulesTableProps } />;\n};\n\nRulesTable.propTypes = {\n    profileRules: propTypes.array,\n    loading: propTypes.bool,\n    hidePassed: propTypes.bool,\n    system: propTypes.object,\n    remediationsEnabled: propTypes.bool,\n    remediationAvailableFilter: propTypes.bool,\n    selectedRefIds: propTypes.array,\n    selectedFilter: propTypes.bool,\n    handleSelect: propTypes.func,\n    columns: propTypes.array,\n    options: propTypes.object\n};\n\nexport default RulesTable;\n","export const validateBenchmarkPage = (benchmark, osMajorVersion, profile) => {\n    if (benchmark && osMajorVersion && profile) {\n        return true;\n    } else {\n        return false;\n    }\n};\n\nexport const thresholdValid = (threshold) => (\n    threshold < 101 && threshold >= 0\n);\n\nexport const validateDetailsPage = (name, refId, complianceThreshold) => (\n    !name || !refId  || !complianceThreshold || !thresholdValid(complianceThreshold) ? false : true\n);\n\nexport const validateRulesPage = (selectedRuleRefIds) => (\n    selectedRuleRefIds?.length > 0\n);\n\nexport const validateSystemsPage = (systemIds) => {\n    if (systemIds) {\n        return systemIds.length > 0;\n    } else {\n        return false;\n    }\n};\n","export const isNumberRange = (value) => value && !!value.match(/\\d\\d*-\\d\\d*/);\n\nexport const fixedPercentage = (value, fixed = 0, withPercent = true) => {\n    const fixedValue = (value)?.toFixed(fixed);\n    return fixedValue ? (fixedValue + (withPercent ? '%' : '')) : 'N/A';\n};\n\nexport const pluralize = (value, singular, plural) => {\n    if (!plural) {\n        plural = singular + 's';\n    }\n\n    return (value > 1 || value === 0 ? plural : singular);\n};\n\nexport const stringToId = (string) => (\n    string.replace(' ', '').toLowerCase()\n);\n","import React from 'react';\n\nexport const uniq = (collection) => [...new Set(collection)];\n\nexport const sortingByProp = (propName, order = 'asc') => (\n    (objA, objB) => {\n        const propA = (objA && objA[propName]) || '';\n        const propB = (objB && objB[propName]) || '';\n        if (propA === propB) {\n            return 0;\n        } else if (order === 'asc') {\n            return propA < propB ? -1 : 1;\n        } else {\n            return propA < propB ? 1 : -1;\n        }\n    }\n);\n\nexport const renderComponent = (Component, props) => (\n    (_data, _id, entity) => ( // eslint-disable-line react/display-name\n        <Component { ...entity } { ...props } />\n    )\n);\n\nconst getSortable = (property, item) => {\n    if (typeof(property) === 'function') {\n        return property(item);\n    } else {\n        return item[property];\n    }\n};\n\nexport const orderArrayByProp = (property, objects, direction) => (\n    objects.sort((a, b) => {\n        if (direction === 'asc') {\n            return String(getSortable(property, a)).localeCompare(String(getSortable(property, b)));\n        } else {\n            return -String(getSortable(property, a)).localeCompare(String(getSortable(property, b)));\n        }\n    })\n);\n\nexport const orderByArray = (objectArray, orderProp, orderArray, direction) => {\n    const sortedObjectArray = orderArray.flatMap((orderKey) => (\n        objectArray.filter((item) => (item[orderProp] === orderKey))\n    ));\n    return (direction !== 'asc' ? sortedObjectArray.reverse() : sortedObjectArray);\n};\n\nexport const getProperty = (obj, path, fallback) => {\n    const parts = path.split('.');\n    const key = parts.shift();\n    if (typeof obj[key] !== 'undefined') {\n        return parts.length > 0 ?\n            getProperty(obj[key], parts.join('.'), fallback) :\n            obj[key];\n    }\n\n    return fallback;\n};\n\nexport const camelCase = (string) => (\n    string.split(/[-_\\W]+/g)\n    .map((string) => (string.trim()))\n    .map((string) => string[0].toUpperCase() + string.substring(1))\n    .join('')\n);\n","import { useState } from 'react';\nimport { FilterConfigBuilder } from '@redhat-cloud-services/frontend-components-inventory-compliance/Utilities';\n\nconst filterValues = (activeFilters) => (\n    Object.values(activeFilters).filter((value) => {\n        if (typeof value === Object) {\n            return Object.values(value).length > 0;\n        }\n\n        if (typeof value === Array) {\n            return value?.length > 0;\n        }\n\n        return !!value;\n    })\n);\n\nconst useFilterConfig = (initialConfig, arrayToFilter) => {\n    const filterConfigBuilder = new FilterConfigBuilder(initialConfig);\n    const [activeFilters, setActiveFilters] = useState(filterConfigBuilder.initialDefaultState());\n    const [activeFilterValues, setActiveFilterValues] = useState([]);\n    const onFilterUpdate = (filter, value) => {\n        const newActiveFilters = {\n            ...activeFilters,\n            [filter]: value\n        };\n        setActiveFilters(newActiveFilters);\n        setActiveFilterValues(filterValues(newActiveFilters));\n    };\n\n    const clearAllFilter = () => (\n        setActiveFilters(filterConfigBuilder.initialDefaultState())\n    );\n\n    const deleteFilter = (chips) => {\n        const newActiveFilters = filterConfigBuilder.removeFilterWithChip(\n            chips, activeFilters\n        );\n        setActiveFilters(newActiveFilters);\n        setActiveFilterValues(filterValues(newActiveFilters));\n    };\n\n    const onFilterDelete = (_event, chips, clearAll = false) => (\n        clearAll ? clearAllFilter() : deleteFilter(chips[0])\n    );\n\n    const chipBuilder = filterConfigBuilder.getChipBuilder();\n    const filterConfig = filterConfigBuilder.buildConfiguration(\n        onFilterUpdate,\n        activeFilters\n    );\n    const filterChips = chipBuilder.chipsFor(activeFilters);\n    const filteredArray = arrayToFilter ? filterConfigBuilder.applyFilterToObjectArray(\n        arrayToFilter, activeFilters\n    ) : undefined;\n\n    return {\n        conditionalFilter: {\n            filterConfig,\n            activeFiltersConfig: {\n                filters: filterChips,\n                onDelete: onFilterDelete\n            }\n        },\n        filtered: filteredArray,\n        activeFilters,\n        activeFilterValues,\n        filterString: !arrayToFilter ? filterConfigBuilder.getFilterBuilder().buildFilterString(activeFilters) : ''\n    };\n};\n\nexport default useFilterConfig;\n","export const profilesRulesFailed = (profiles) => (\n    profiles.flatMap(profile => profile.rules && profile.rules.filter(rule => !rule.compliant))\n);\n\nexport const profilesRulesPassed = (profiles) => (\n    profiles.flatMap(profile => profile.rules && profile.rules.filter(rule => rule.compliant))\n);\n\nexport const systemRulesPassed = (system) => (\n    system.testResultProfiles ? profilesRulesPassed(system.testResultProfiles) : []\n);\n\nexport const systemRulesFailed = (system) => (\n    system.testResultProfiles ? profilesRulesFailed(system.testResultProfiles) : []\n);\n\nexport const systemSupportedByProfiles = (profiles = []) => (\n    profiles.reduce((acc, profile) => acc && !!profile.supported, true)\n);\n\nexport const systemsWithRuleObjectsFailed = (systems) => (\n    systems.map(system => (\n        {\n            ...system,\n            ruleObjectsFailed: systemRulesFailed(system),\n            supported: systemSupportedByProfiles(system.testResultProfiles),\n            profiles: system.testResultProfiles\n        }\n    ))\n);\n\nexport const toRulesArrayWithProfile = (profilesWithRules) => (\n    profilesWithRules.flatMap((profileWithRules) => (\n        profileWithRules.rules.map((rule) => {\n            const identifier = rule.identifier && JSON.parse(rule.identifier);\n            return {\n                ...rule,\n                references: rule.references ? JSON.parse(rule.references) : [],\n                identifier: identifier && identifier.label ? identifier : null,\n                profile: profileWithRules.profile\n            };\n        })\n    ))\n);\n"],"sourceRoot":""}