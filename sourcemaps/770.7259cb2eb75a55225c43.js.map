{"version":3,"sources":["webpack:///./src/Routes.js","webpack:///./src/Utilities/hooks/useFeature.js","webpack:///./src/App.js","webpack:///./src/Utilities/Router.js","webpack:///./src/Utilities/hooks/useDocumentTitle.js","webpack:///./src/constants.js","webpack:///./src/store/index.js"],"names":["defaultReportTitle","reportsRoutes","path","title","component","lazy","defaultTitle","modal","defaultPoliciesTitle","policiesRoutes","defaultSystemsTitle","systemsRoutes","routes","Routes","props","Router","LOCAL_STORE_FEATURE_PREFIX","setFeatureFlag","featureValue","feature","value","console","log","localStorage","setItem","removeItem","appNavClick","reports","redirect","insights","chrome","id","scappolicies","systems","App","search","history","useLocation","pathName","useHistory","URLSearchParams","forEach","push","useEffect","init","hideGlobalFilter","identifyApp","baseComponentUrl","location","pathname","split","unregister","on","event","domEvent","navId","childProps","propTypes","PropTypes","routerParams","Route","route","Component","setTitle","useDocumentTitle","isCurrent","matchPath","exact","requiresTitleEntity","includes","routeProps","key","replace","componentProps","background","state","fullPageRoutes","filter","modalRoutes","paths","map","Suspense","fallback","Fragment","Switch","render","some","p","Redirect","to","useLinkToBackground","fallbackRoute","args","hash","undefined","useAnchor","defaultAnchor","length","useTitleEntity","entityTitle","document","DEFAULT_TITLE_SUFFIX","defaultTitleSuffixed","DEFAULT_TITLE","COMPLIANCE_API_ROOT","DEFAULT_SYSTEMS_FILTER_CONFIGURATION","type","conditionalFilterType","label","filterString","systemsPolicyFilterConfiguration","policies","items","policy","name","majorOsVersionsFromProfiles","Array","from","Set","profile","majorOsVersion","systemsOsFilterConfiguration","osVersion","systemsOsMinorFilterConfiguration","osMajorVersions","osVersions","Object","keys","majorVersion","groupSelectable","minorVersion","flatMap","v","join","COMPLIANT_SYSTEMS_FILTER_CONFIGURATION","scoreRange","registry","middleware","getRegistry","promiseMiddleware","item","register","form","notifications","notificationsReducer","getStore"],"mappings":"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","file":"js/770.f05eb5fe0ba08bf63840.js","sourcesContent":["import React, { lazy } from 'react';\nimport Router from './Utilities/Router';\n\nconst defaultReportTitle = 'Reports';\nconst reportsRoutes = [\n    {\n        path: '/reports',\n        title: defaultReportTitle,\n        component: lazy(() =>\n            import(/* webpackChunkName: \"Reports\" */ './SmartComponents/Reports/Reports')\n        )\n    }, {\n        path: '/reports/:report_id',\n        title: `Report: $entityTitle - ${ defaultReportTitle }`,\n        defaultTitle: defaultReportTitle,\n        component: lazy(() =>\n            import(/* webpackChunkName: \"ReportDetails\" */ 'SmartComponents/ReportDetails/ReportDetails')\n        )\n    }, {\n        path: '/reports/:report_id/delete',\n        title: `Delete report - ${ defaultReportTitle }`,\n        component: lazy(() =>\n            import(/* webpackChunkName: \"DeleteReport\" */ 'SmartComponents/DeleteReport/DeleteReport')\n        ),\n        modal: true\n    }\n];\n\nconst defaultPoliciesTitle = 'SCAP policies';\nconst policiesRoutes = [\n    {\n        path: '/scappolicies',\n        title: defaultPoliciesTitle,\n        component: lazy(() =>\n            import(/* webpackChunkName: \"CompliancePolicies\" */ 'SmartComponents/CompliancePolicies/CompliancePolicies')\n        )\n    }, {\n        path: '/scappolicies/new',\n        title: defaultPoliciesTitle,\n        component: lazy(() =>\n            import(/* webpackChunkName: \"CreatePolicy\" */ 'SmartComponents/CreatePolicy/CreatePolicy')\n        ),\n        modal: true\n    }, {\n        path: '/scappolicies/:policy_id',\n        title: `$entityTitle - ${ defaultPoliciesTitle }`,\n        defaultTitle: defaultPoliciesTitle,\n        component: lazy(() =>\n            import(/* webpackChunkName: \"PolicyDetails\" */ 'SmartComponents/PolicyDetails/PolicyDetails')\n        )\n    }, {\n        path: '/scappolicies/:policy_id/edit',\n        title: `$entityTitle - ${ defaultPoliciesTitle }`,\n        defaultTitle: defaultPoliciesTitle,\n        component: lazy(() =>\n            import(/* webpackChunkName: \"EditPolicy\" */ 'SmartComponents/EditPolicy/EditPolicy')\n        ),\n        modal: true\n    }, {\n        path: '/scappolicies/:policy_id/delete',\n        title: `Delete policy - ${ defaultPoliciesTitle }`,\n        component: lazy(() =>\n            import(/* webpackChunkName: \"DeletePolicy\" */ 'SmartComponents/DeletePolicy/DeletePolicy')\n        ),\n        modal: true\n    }\n];\n\nconst defaultSystemsTitle = 'Systems';\nconst systemsRoutes = [\n    {\n        path: '/systems',\n        title: defaultSystemsTitle,\n        component: lazy(() =>\n            import(/* webpackChunkName: \"ComplianceSystems\" */ 'SmartComponents/ComplianceSystems/ComplianceSystems')\n        )\n    }, {\n        path: '/systems/:inventoryId',\n        title: `$entityTitle - ${ defaultSystemsTitle }`,\n        defaultTitle: defaultSystemsTitle,\n        component: lazy(() =>\n            import(/* webpackChunkName: \"SystemDetails\" */ 'SmartComponents/SystemDetails/SystemDetails')\n        )\n    }\n];\n\nexport const routes = [\n    ...policiesRoutes,\n    ...reportsRoutes,\n    ...systemsRoutes\n];\n\nexport const Routes = (...props) => (<Router { ...props } routes={ routes } />);\n","import { features } from '@/constants';\nimport { useLocation, useHistory } from 'react-router-dom';\nexport const LOCAL_STORE_FEATURE_PREFIX = 'insights:compliance';\n\nconst setFeatureFlag = (featureValue, feature) => {\n    const value = featureValue === 'enable';\n\n    if (!value) {\n        console.log(`Removing feature setting of ${feature}`);\n        localStorage.removeItem(`${LOCAL_STORE_FEATURE_PREFIX}:${feature}`);\n    } else {\n        console.log(`Setting feature value for ${feature} to ${value}`);\n        localStorage.setItem(`${LOCAL_STORE_FEATURE_PREFIX}:${feature}`, value);\n    }\n};\n\n// Allows setting feature flag values via ?feature|(enable/disable)\nexport const useSetFlagsFromUrl = () => {\n    const { search, pathName: path } = useLocation();\n    const history = useHistory();\n    if (!search) {\n        return;\n    }\n\n    const urlParams = new URLSearchParams(search);\n    urlParams.forEach(setFeatureFlag);\n\n    history.push(path);\n};\n\nconst getFlagValue = (feature) => {\n    const defaultValue = features[feature];\n    const storedValue = !!localStorage.getItem(`${LOCAL_STORE_FEATURE_PREFIX}:${feature}`);\n\n    return storedValue || defaultValue;\n};\n\n// A hook to query feature values\nconst useFeature = (feature) => {\n    if (!feature) {\n        return;\n    }\n\n    const featureEnabled = getFlagValue(feature);\n\n    console.log(`Feature ${feature} is set to ${featureEnabled}`);\n    return featureEnabled;\n};\n\nexport default useFeature;\n","import PropTypes from 'prop-types';\nimport React, { useEffect } from 'react';\nimport routerParams from '@redhat-cloud-services/frontend-components-utilities/RouterParams';\nimport { Routes } from './Routes';\nimport NotificationsPortal from '@redhat-cloud-services/frontend-components-notifications/NotificationPortal';\nimport './App.scss';\nimport { useSetFlagsFromUrl } from 'Utilities/hooks/useFeature';\n\nconst appNavClick = {\n    reports(redirect) { insights.chrome.appNavClick({ id: 'reports', redirect }); },\n    scappolicies(redirect) { insights.chrome.appNavClick({ id: 'scappolicies', redirect }); },\n    systems(redirect) { insights.chrome.appNavClick({ id: 'systems', redirect }); }\n};\n\nconst App = (props) => {\n    useSetFlagsFromUrl();\n    useEffect(() => {\n        insights.chrome.init();\n        insights.chrome?.hideGlobalFilter?.();\n        insights.chrome.identifyApp('compliance');\n        const baseComponentUrl = props.location.pathname.split('/')[1] || 'reports';\n        const unregister = insights.chrome.on('APP_NAVIGATION', event => {\n            if (event.domEvent) {\n                props.history.push(`/${event.navId}`);\n                appNavClick[baseComponentUrl](true);\n            }\n        });\n\n        return () => unregister();\n    }, []);\n\n    return (\n        <React.Fragment>\n            <NotificationsPortal />\n            <Routes childProps={props} />\n        </React.Fragment>\n    );\n};\n\nApp.propTypes = {\n    location: PropTypes.object,\n    history: PropTypes.object\n};\n\nexport default routerParams(App);\n","import React, { useEffect, Suspense, Fragment } from 'react';\nimport propTypes from 'prop-types';\nimport { Route as ReactRoute, Switch, Redirect, useHistory, useLocation, matchPath } from 'react-router-dom';\nimport useDocumentTitle from 'Utilities/hooks/useDocumentTitle';\n\nconst Route = (route) => {\n    const { component: Component, modal, path, props = {}, title } = route;\n    const location = useLocation();\n    const setTitle = useDocumentTitle();\n    const isCurrent = !!matchPath(location.pathname, { path, exact: true });\n    const requiresTitleEntity = title.includes('$entityTitle');\n    const routeProps  = {\n        exact: true,\n        key: `${ !modal ? 'fullpage' : 'modal' }-route-${ path.replace('/', '-')}`,\n        path\n    };\n    const componentProps = {\n        ...props,\n        route: { ...route, isCurrent, setTitle }\n    };\n\n    useEffect(() => {\n        isCurrent && !requiresTitleEntity && setTitle(title);\n    });\n\n    return <ReactRoute { ...routeProps }>\n        <Component { ...componentProps } />\n    </ReactRoute>;\n};\n\nRoute.propTypes = {\n    component: propTypes.node,\n    modal: propTypes.bool,\n    path: propTypes.string,\n    props: propTypes.object,\n    title: propTypes.string\n};\n\nconst Router = ({ routes }) => {\n    const location = useLocation();\n    const background = location?.state?.background;\n    const path = location.pathname;\n    const fullPageRoutes = routes.filter((route) => (!route.modal));\n    const modalRoutes = routes.filter((route) => (route.modal));\n    const paths = routes.map((route) => (route.path));\n    const defaultRedirectRender = () => (\n        paths.some(p => p === path) ? null : <Redirect to='/reports' />\n    );\n\n    return <Suspense fallback={ Fragment }>\n        <Switch location={ background || location }>\n            { fullPageRoutes.map(Route) }\n            <ReactRoute render={ defaultRedirectRender } />\n        </Switch>\n\n        { modalRoutes.map(Route) }\n    </Suspense>;\n};\n\nRouter.propTypes = {\n    routes: propTypes.array\n};\n\nexport const useLinkToBackground = (fallbackRoute) => {\n    const location = useLocation();\n    const history = useHistory();\n\n    return (args) => {\n        const background = location?.state?.background;\n\n        history.push({\n            pathname: background ? background.pathname : fallbackRoute,\n            hash: background ? background.hash : undefined,\n            ...args\n        });\n    };\n};\n\nexport const useAnchor = (defaultAnchor = '') => {\n    const location = useLocation();\n    const hash = location.hash && location.hash.length > 0 ? location.hash : undefined;\n    return (hash || defaultAnchor).replace('#', '');\n};\n\nexport default Router;\n","import { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nimport { DEFAULT_TITLE, DEFAULT_TITLE_SUFFIX } from '@/constants';\n\nconst defaultTitleSuffixed = (title) => (\n    `${ title }${ DEFAULT_TITLE_SUFFIX }`\n);\n\nexport const useTitleEntity = (route, entityTitle) => {\n    const location = useLocation();\n\n    useEffect(() => {\n        const title = entityTitle ?\n            route.title.replace('$entityTitle', entityTitle) : route.defaultTitle;\n        route.setTitle(title);\n    }, [entityTitle, location, route]);\n};\n\nconst useDocumentTitle = () => (\n    (title) => {\n        document.title = defaultTitleSuffixed(title || DEFAULT_TITLE);\n    }\n);\n\nexport default useDocumentTitle;\n","import { version } from './../package.json';\nimport { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\n\nexport const DEFAULT_TITLE = 'Compliance | Red Hat Insights';\nexport const DEFAULT_TITLE_SUFFIX = ` - ${ DEFAULT_TITLE }`;\n\nexport const COMPLIANCE_API_ROOT = '/api/compliance';\nexport const COMPLIANCE_UI_ROOT = '/rhel/compliance';\nexport const INVENTORY_API_ROOT = '/api/inventory/v1';\n\nexport const API_HEADERS = {\n    'X-Insights-Compliance': version,\n    'Content-Type': 'application/json',\n    Accept: 'application/json'\n};\n\nexport const DEFAULT_SYSTEMS_FILTER_CONFIGURATION = [\n    {\n        type: conditionalFilterType.text,\n        label: 'Name',\n        filterString: (value) => (`name ~ ${value}`)\n    }\n];\n\nexport const systemsPolicyFilterConfiguration = (policies) => ([{\n    type: conditionalFilterType.checkbox,\n    label: 'Policy',\n    filterString: (value) => `policy_id = ${value}`,\n    items: policies.map((policy) => ({\n        label: policy.name,\n        value: policy.id\n    }))\n}]);\n\nconst majorOsVersionsFromProfiles = (policies) => (\n    Array.from(new Set(policies.map((profile) => (\n        profile.majorOsVersion\n    ))))\n);\n\nexport const systemsOsFilterConfiguration = (policies) => ([{\n    type: conditionalFilterType.checkbox,\n    label: 'Operating system',\n    filterString: (value) => (`os_major_version = ${value}`),\n    items: majorOsVersionsFromProfiles(policies).map(osVersion => ({\n        label: `RHEL ${osVersion}`,\n        value: osVersion\n    }))\n}]);\n\nconst toSystemsOsMinorFilterConfigurationItem = (osVersions) => (\n    (majorVersion) => ({\n        label: `RHEL ${ majorVersion }`,\n        value: majorVersion,\n        groupSelectable: true,\n        items: osVersions[majorVersion].map((minorVersion) => ({\n            label: `RHEL ${ majorVersion }.${ minorVersion }`,\n            value: minorVersion\n        }))\n    })\n);\n\nexport const systemsOsMinorFilterConfiguration = (osMajorVersions) => {\n    const filterString = (value) => ([\n        Object.keys(value).flatMap((majorVersion) => (\n            Object.keys(value[majorVersion]).map((minorVersion) => (\n                value[majorVersion][minorVersion] &&\n                    `(os_major_version = ${ majorVersion } AND os_minor_version = ${ minorVersion })`\n            ))\n        )).filter((v) => (!!v)).join(' OR ')\n    ]);\n    const items = Object.keys(osMajorVersions).map(toSystemsOsMinorFilterConfigurationItem(osMajorVersions));\n\n    return [{\n        type: conditionalFilterType.group,\n        label: 'Operating system',\n        filterString,\n        items\n    }];\n};\n\nexport const COMPLIANT_SYSTEMS_FILTER_CONFIGURATION = [\n    {\n        type: conditionalFilterType.checkbox,\n        label: 'Compliant',\n        filterString: (value) => (`compliant = ${value}`),\n        items: [\n            { label: 'Compliant', value: 'true' },\n            { label: 'Non-compliant', value: 'false' }\n        ]\n    },\n    {\n        type: conditionalFilterType.checkbox,\n        label: 'Compliance score',\n        filterString: (value) => {\n            const scoreRange = value.split('-');\n            return `(compliance_score >= ${scoreRange[0]} and compliance_score < ${scoreRange[1]})`;\n        },\n        items: [\n            { label: '90 - 100%', value: '90-101' },\n            { label: '70 - 89%', value: '70-90' },\n            { label: '50 - 69%', value: '50-70' },\n            { label: 'Less than 50%', value: '0-50' }\n        ]\n    }\n];\n\nexport const features = {};\n","import { getRegistry } from '@redhat-cloud-services/frontend-components-utilities/Registry';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport { reducer as form } from 'redux-form';\n\nlet registry;\n\nexport function init (...middleware) {\n    registry = getRegistry({}, [\n        promiseMiddleware,\n        ...middleware.filter(item => typeof item !== 'undefined')\n    ]);\n\n    registry.register({ form, notifications: notificationsReducer });\n    return registry;\n}\n\nexport function getStore () {\n    return registry.getStore();\n}\n\nexport function register (...args) {\n    return registry.register(...args);\n}\n"],"sourceRoot":""}