{"version":3,"sources":["webpack:///./src/SmartComponents/DeleteReport/DeleteReport.js"],"names":["DeleteReport","history","useHistory","location","useLocation","id","state","profile","onClose","push","background","useMutation","DELETE_REPORT","onCompleted","dispatchAction","addNotification","variant","title","descrtiption","onError","error","description","message","deleteReport","Modal","isOpen","ModalVariant","ouiaId","actions","Button","key","aria-label","onClick","variables","input","profileId","TextContent","propTypes","isModalOpen","onDelete","policyId","defaultProps"],"mappings":"+QAcMA,EAAe,WAAM,MACnBC,GAAUC,kBACVC,GAAWC,mBACTC,GAAR,UAAeF,EAASG,aAAxB,aAAe,EAAgBC,SAAvBF,GACFG,EAAU,WACdP,EAAQQ,KAAKN,EAASG,MAAMI,aAO9B,GAAuBC,iBAAYC,KAAe,CAChDC,YAAa,YACXC,QACEC,QAAgB,CACdC,QAAS,UACTC,MAAO,iBACPC,aACE,mFAVRjB,EAAQQ,KAAK,aAebU,QAAS,SAACC,IACRN,QACEC,QAAgB,CACdC,QAAS,SACTC,MAAO,wBACPI,YAAaD,EAAME,WAGvBd,OApBGe,GAAP,eAuBA,OACE,kBAAC,EAAAC,MAAD,CACEC,QAAM,EACNT,QAASU,qBACTT,MAAM,gBACNU,OAAO,oBACPnB,QAASA,EACToB,QAAS,CACP,kBAAC,EAAAC,OAAD,CACEC,IAAI,UACJH,OAAO,qBACPI,aAAW,SACXf,QAAQ,SACRgB,QAAS,kBACPT,EAAa,CACXU,UAAW,CACTC,MAAO,CACLC,UAAW9B,QATrB,iBAiBA,kBAAC,EAAAwB,OAAD,CACEC,IAAI,SACJH,OAAO,2BACPX,QAAQ,YACRgB,QAAS,kBAAMxB,MAJjB,YAUF,kBAAC,EAAA4B,YAAD,+DAONpC,EAAaqC,UAAY,CACvB7B,QAAS6B,SACTC,YAAaD,SACbE,SAAUF,SACVG,SAAUH,YAGZrC,EAAayC,aAAe,CAC1BF,SAAU,aACV/B,QAAS,cAGX","file":"js/DeleteReport.e738c7e8e34d84e884e9.js","sourcesContent":["import {\n  Button,\n  Modal,\n  ModalVariant,\n  TextContent,\n} from '@patternfly/react-core';\nimport propTypes from 'prop-types';\nimport React from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport { DELETE_REPORT } from 'Mutations';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport { dispatchAction } from 'Utilities/Dispatcher';\n\nconst DeleteReport = () => {\n  const history = useHistory();\n  const location = useLocation();\n  const { id } = location.state?.profile;\n  const onClose = () => {\n    history.push(location.state.background);\n  };\n\n  const onDelete = () => {\n    history.push('/reports');\n  };\n\n  const [deleteReport] = useMutation(DELETE_REPORT, {\n    onCompleted: () => {\n      dispatchAction(\n        addNotification({\n          variant: 'success',\n          title: 'Report deleted',\n          descrtiption:\n            'Systems associated with this policy will upload reports on the next check-in.',\n        })\n      );\n      onDelete();\n    },\n    onError: (error) => {\n      dispatchAction(\n        addNotification({\n          variant: 'danger',\n          title: 'Error removing report',\n          description: error.message,\n        })\n      );\n      onClose();\n    },\n  });\n  return (\n    <Modal\n      isOpen\n      variant={ModalVariant.small}\n      title=\"Delete report\"\n      ouiaId=\"DeleteReportModal\"\n      onClose={onClose}\n      actions={[\n        <Button\n          key=\"destroy\"\n          ouiaId=\"DeleteReportButton\"\n          aria-label=\"delete\"\n          variant=\"danger\"\n          onClick={() =>\n            deleteReport({\n              variables: {\n                input: {\n                  profileId: id,\n                },\n              },\n            })\n          }\n        >\n          Delete report\n        </Button>,\n        <Button\n          key=\"cancel\"\n          ouiaId=\"DeleteReportCancelButton\"\n          variant=\"secondary\"\n          onClick={() => onClose()}\n        >\n          Cancel\n        </Button>,\n      ]}\n    >\n      <TextContent>\n        Deleting a report is permanent and cannot be undone.\n      </TextContent>\n    </Modal>\n  );\n};\n\nDeleteReport.propTypes = {\n  onClose: propTypes.func,\n  isModalOpen: propTypes.bool,\n  onDelete: propTypes.func,\n  policyId: propTypes.string,\n};\n\nDeleteReport.defaultProps = {\n  onDelete: () => {},\n  onClose: () => {},\n};\n\nexport default DeleteReport;\n"],"sourceRoot":""}