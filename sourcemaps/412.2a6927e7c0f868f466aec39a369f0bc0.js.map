{"version":3,"file":"js/412.5aae6096b1dd23404814.js","mappings":"yTAaMA,EAAS,IAAIC,EAAAA,GAAa,CAC9BC,KAAM,IAAIC,EAAAA,EAAS,CACjBC,YAAa,UACbC,IAAKC,EAAAA,GAAsB,aAE7BC,MAAO,IAAIC,EAAAA,KAGPC,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACf,kBAAC,EAAAC,SAAD,CAAUC,OAAOC,EAAAA,EAAAA,IAAKH,GAAQI,YAC5B,kBAAC,IAAD,CAAcC,OAAQC,UAAUC,UAC9B,kBAAC,gBAAD,CAAQC,UAAUC,EAAAA,EAAAA,IAAYC,OAAOC,SAASC,WAC5C,kBAAC,IAAD,CAAgBtB,OAAQA,GACtB,kBAAC,IAAD,WAOVS,EAASc,UAAY,CACnBb,OAAQc,IAAAA,KAGV","sources":["webpack:///./src/AppEntry.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { IntlProvider } from 'react-intl';\nimport { ApolloProvider } from '@apollo/client';\nimport { ApolloClient, HttpLink, InMemoryCache } from 'apollo-boost';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { getBaseName } from '@redhat-cloud-services/frontend-components-utilities/helpers';\nimport { init } from 'Store';\nimport App from './App';\n\nimport { COMPLIANCE_API_ROOT } from '@/constants';\n\nconst client = new ApolloClient({\n  link: new HttpLink({\n    credentials: 'include',\n    uri: COMPLIANCE_API_ROOT + '/graphql',\n  }),\n  cache: new InMemoryCache(),\n});\n\nconst AppEntry = ({ logger }) => (\n  <Provider store={init(logger).getStore()}>\n    <IntlProvider locale={navigator.language}>\n      <Router basename={getBaseName(window.location.pathname)}>\n        <ApolloProvider client={client}>\n          <App />\n        </ApolloProvider>\n      </Router>\n    </IntlProvider>\n  </Provider>\n);\n\nAppEntry.propTypes = {\n  logger: PropTypes.any,\n};\n\nexport default AppEntry;\n"],"names":["client","ApolloClient","link","HttpLink","credentials","uri","COMPLIANCE_API_ROOT","cache","InMemoryCache","AppEntry","logger","Provider","store","init","getStore","locale","navigator","language","basename","getBaseName","window","location","pathname","propTypes","PropTypes"],"sourceRoot":""}