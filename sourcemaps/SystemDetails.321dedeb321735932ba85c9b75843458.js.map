{"version":3,"file":"js/SystemDetails.cc8af5ad25cc67c5dfe7.js","mappings":"gWAoBMA,GAAQC,EAAAA,EAAAA,IAAG,mIASJC,EAAgB,SAAH,GAAkB,MAAZC,EAAK,EAALA,MACtBC,GAAgBC,EAAAA,EAAAA,aAAhBD,YACR,GAAiCE,EAAAA,EAAAA,GAASN,EAAO,CAC/CO,UAAW,CAAEH,YAAAA,KADPI,EAAI,EAAJA,KAAMC,EAAK,EAALA,MAAOC,EAAO,EAAPA,QAGfC,EAAaH,SAAY,QAAR,EAAJA,EAAMI,cAAM,WAAR,EAAJ,EAAcC,KAIjC,OAFAC,EAAAA,EAAAA,GAAeX,EAAOQ,GAGpB,kBAAC,KAAkB,CAACI,YAAa,CAAEN,MAAAA,EAAOD,KAAAA,EAAME,QAAAA,IAC9C,kBAAC,KAAa,CAACM,SAAS,QACtB,kBAAC,IAAU,KACT,kBAAC,EAAAC,WAAU,CAACC,OAAO,+BACjB,kBAAC,KAAkB,CAACC,GAAG,KAAG,cAC1B,kBAAC,KAAkB,CAACA,GAAG,YAAU,WACjC,kBAAC,EAAAC,eAAc,CAACC,UAAQ,GAAEV,IAE5B,kBAAC,KAAgB,OAEnB,kBAAC,KAAI,KACH,kBAAC,IAAO,CAACW,YAAU,EAAClB,YAAaA,MAGrC,kBAAC,KAAa,CAACY,SAAS,WACtB,kBAAC,IAAU,KACT,kBAAC,IAAQ,CAACO,KAAMC,EAAAA,EAAAA,OAK1B,EAEAtB,EAAcuB,UAAY,CACxBtB,MAAOsB,IAAAA,QAGT,S","sources":["webpack:///./src/SmartComponents/SystemDetails/SystemDetails.js"],"sourcesContent":["import React from 'react';\nimport propTypes from 'prop-types';\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/client';\nimport { useParams } from 'react-router-dom';\nimport PageHeader from '@redhat-cloud-services/frontend-components/PageHeader';\nimport Skeleton, {\n  SkeletonSize,\n} from '@redhat-cloud-services/frontend-components/Skeleton';\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';\nimport Details from './ComplianceDetail';\nimport {\n  BreadcrumbLinkItem,\n  StateViewWithError,\n  StateViewPart,\n} from 'PresentationalComponents';\nimport { InventoryDetails } from 'SmartComponents';\nimport { useTitleEntity } from 'Utilities/hooks/useDocumentTitle';\n\nconst QUERY = gql`\n  query System($inventoryId: String!) {\n    system(id: $inventoryId) {\n      id\n      name\n    }\n  }\n`;\n\nexport const SystemDetails = ({ route }) => {\n  const { inventoryId } = useParams();\n  const { data, error, loading } = useQuery(QUERY, {\n    variables: { inventoryId },\n  });\n  const systemName = data?.system?.name;\n\n  useTitleEntity(route, systemName);\n\n  return (\n    <StateViewWithError stateValues={{ error, data, loading }}>\n      <StateViewPart stateKey=\"data\">\n        <PageHeader>\n          <Breadcrumb ouiaId=\"SystemDetailsPathBreadcrumb\">\n            <BreadcrumbLinkItem to=\"/\">Compliance</BreadcrumbLinkItem>\n            <BreadcrumbLinkItem to=\"/systems\">Systems</BreadcrumbLinkItem>\n            <BreadcrumbItem isActive>{systemName}</BreadcrumbItem>\n          </Breadcrumb>\n          <InventoryDetails />\n        </PageHeader>\n        <Main>\n          <Details hidePassed inventoryId={inventoryId} />\n        </Main>\n      </StateViewPart>\n      <StateViewPart stateKey=\"loading\">\n        <PageHeader>\n          <Skeleton size={SkeletonSize.md} />\n        </PageHeader>\n      </StateViewPart>\n    </StateViewWithError>\n  );\n};\n\nSystemDetails.propTypes = {\n  route: propTypes.object,\n};\n\nexport default SystemDetails;\n"],"names":["QUERY","gql","SystemDetails","route","inventoryId","useParams","useQuery","variables","data","error","loading","systemName","system","name","useTitleEntity","stateValues","stateKey","Breadcrumb","ouiaId","to","BreadcrumbItem","isActive","hidePassed","size","SkeletonSize","propTypes"],"sourceRoot":""}