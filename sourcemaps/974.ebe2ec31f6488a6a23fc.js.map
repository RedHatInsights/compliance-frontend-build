{"version":3,"sources":["webpack:///./src/PresentationalComponents/ComplianceEmptyState/ComplianceEmptyState.js","webpack:///./src/PresentationalComponents/ComplianceRemediationButton/ComplianceRemediationButton.js","webpack:///./src/PresentationalComponents/ErrorCard/ErrorCard.js","webpack:///./src/PresentationalComponents/ReduxFormWrappers/ReduxFormWrappers.js","webpack:///./src/PresentationalComponents/RulesTable/Cells.js","webpack:///./src/PresentationalComponents/RulesTable/Columns.js","webpack:///./src/PresentationalComponents/RulesTable/RuleDetailsRow.js","webpack:///./src/PresentationalComponents/RulesTable/EmptyRows.js","webpack:///./src/PresentationalComponents/RulesTable/Constants.js","webpack:///./src/PresentationalComponents/RulesTable/Filters.js","webpack:///./src/PresentationalComponents/RulesTable/RulesTable.js","webpack:///./src/PresentationalComponents/TabbedRules/OsVersionText.js","webpack:///./src/PresentationalComponents/TabbedRules/ProfileTabContent.js","webpack:///./src/PresentationalComponents/TabbedRules/ruleSelection.js","webpack:///./src/PresentationalComponents/TabbedRules/TabbedRules.js","webpack:///./src/PresentationalComponents/UnsupportedSSGVersion/UnsupportedSSGVersion.js","webpack:///./src/PresentationalComponents/PoliciesTable/Columns.js","webpack:///./src/PresentationalComponents/LoadingPoliciesTable/LoadingPoliciesTable.js","webpack:///./src/PresentationalComponents/ErrorPage/ErrorPage.js","webpack:///./src/PresentationalComponents/GreySmallText/GreySmallText.js","webpack:///./src/PresentationalComponents/CheckboxGroup/CheckboxGroup.js","webpack:///./src/PresentationalComponents/ProfileTypeSelect/ProfileTypeSelect.js","webpack:///./src/PresentationalComponents/ComplianceScore/ComplianceScore.js","webpack:///./src/PresentationalComponents/PolicyDetailsContentLoader/PolicyDetailsContentLoader.js","webpack:///./src/PresentationalComponents/ReportDetailsContentLoader/ReportDetailsContentLoader.js","webpack:///./src/PresentationalComponents/PolicyDetailsDescription/PolicyDetailsDescription.js","webpack:///./src/PresentationalComponents/ReportDetailsDescription/ReportDetailsDescription.js","webpack:///./src/PresentationalComponents/ProgressBar/ProgressBar.js","webpack:///./src/PresentationalComponents/TabSwitcher/TabSwitcher.js","webpack:///./src/PresentationalComponents/StateView/StateView.js","webpack:///./src/PresentationalComponents/SystemsCountWarning/SystemsCountWarning.js","webpack:///./src/PresentationalComponents/WarningText/WarningText.js","webpack:///./src/PresentationalComponents/BackgroundLink/BackgroundLink.js","webpack:///./src/PresentationalComponents/BreadcrumbLinkItem/BreadcrumbLinkItem.js","webpack:///./src/PresentationalComponents/ReportsTable/Cells.js","webpack:///./src/PresentationalComponents/ReportsTable/Columns.js","webpack:///./src/PresentationalComponents/ReportsTable/Filters.js","webpack:///./src/PresentationalComponents/ReportsTable/ReportsTable.js","webpack:///./src/PresentationalComponents/ReportsEmptyState/ReportsEmptyState.js","webpack:///./src/PresentationalComponents/PolicyPopover/PolicyPopover.js","webpack:///./src/PresentationalComponents/PolicyThresholdTooltip/PolicyThresholdTooltip.js","webpack:///./src/PresentationalComponents/PolicyBusinessObjectiveTooltip/PolicyBusinessObjectiveTooltip.js","webpack:///./src/PresentationalComponents/NoResultsTable/NoResultsTable.js","webpack:///./src/PresentationalComponents/PoliciesTable/Filters.js","webpack:///./src/PresentationalComponents/PoliciesTable/PoliciesTable.js","webpack:///./src/PresentationalComponents/ProfileThresholdField/ProfileThresholdField.js","webpack:///./src/PresentationalComponents/SupportedSSGVersionsLink/SupportedSSGVersionsLink.js","webpack:///./src/PresentationalComponents/SubPageTitle/SubPageTitle.js","webpack:///./src/PresentationalComponents/NoSystemsTableWithWarning/NoSystemsTableWithWarning.js","webpack:///./src/PresentationalComponents/ConditionalLink/ConditionalLink.js","webpack:///./src/SmartComponents/CreatePolicy/validate.js","webpack:///./src/Utilities/TextHelper.js","webpack:///./src/Utilities/helpers.js","webpack:///./src/Utilities/hooks/useTableTools/useTableSort.js","webpack:///./src/Utilities/hooks/useTableTools/usePaginate.js","webpack:///./src/Utilities/hooks/useTableTools/Components/NoResultsTable.js","webpack:///./src/Utilities/hooks/useTableTools/useRowsBuilder.js","webpack:///./src/Utilities/hooks/useTableTools/useItemIdentify.js","webpack:///./src/Utilities/hooks/useTableTools/useExpandable.js","webpack:///./src/Utilities/hooks/useTableTools/useDedicatedAction.js","webpack:///./src/Utilities/hooks/useTableTools/Components/TableToolsTable.js","webpack:///./src/Utilities/hooks/useTableTools/useTableTools.js","webpack:///./src/Utilities/hooks/useTableTools/helper.js","webpack:///./src/Utilities/hooks/useTableTools/useBulkSelect.js","webpack:///./src/Utilities/hooks/useTableTools/FilterConfigBuilder/Helpers.js","webpack:///./src/Utilities/hooks/useTableTools/FilterConfigBuilder/FilterBuilder.js","webpack:///./src/Utilities/hooks/useTableTools/FilterConfigBuilder/ChipBuilder.js","webpack:///./src/Utilities/hooks/useTableTools/FilterConfigBuilder/FilterConfigBuilder.js","webpack:///./src/Utilities/hooks/useTableTools/Components/SelectedFilterSwitch.js","webpack:///./src/Utilities/hooks/useTableTools/useSelectedFilter.js","webpack:///./src/Utilities/hooks/useTableTools/useFilterConfig.js","webpack:///./src/Utilities/ruleHelpers.js"],"names":["QUERY","gql","ComplianceEmptyState","title","mainButton","client","useQuery","fetchPolicy","data","error","loading","Spinner","errorMsg","ErrorCard","message","policiesCount","profiles","totalCount","policyWord","haveWord","Bullseye","EmptyState","EmptyStateIcon","style","fontWeight","color","size","icon","CloudSecurityIcon","Title","headingLevel","EmptyStateBody","TextContent","href","EmptyStatePrimary","EmptyStateSecondaryActions","Button","variant","component","target","rel","propTypes","defaultProps","ApolloClient","link","HttpLink","uri","COMPLIANCE_API_ROOT","credentials","cache","InMemoryCache","ComplianceRemediationButton","profile","system","majorOsVersion","refId","id","split","description","systems","issues","issueIds","map","issue","filter","index","originalIssueIndex","indexOf","Array","from","Set","concat","rule","find","rules","profileRule","remediationAvailable","ruleProfile","supported","compliant","formatRule","props","allSystems","selectedRules","result","forEach","push","length","rulesWithRemediations","ruleObjectsFailed","Promise","all","then","uniqIssuesBySystem","flatten","dataProvider","flatMap","some","addNotification","this","RemediationButton","isDisabled","notEmptyData","onRemediationCreated","getNotification","buttonProps","ouiaId","React","name","severity","rationale","identifier","references","connect","dispatch","notification","ReduxFormTextInput","field","TextInput","value","input","defaultValue","onChange","ReduxFormTextArea","TextArea","ruleProps","Rule","Text","TextVariants","label","Policy","HighSeverity","className","MediumSeverity","LowSeverityIcon","width","height","viewBox","role","verticalAlign","xmlns","d","fill","fillRule","LowSeverity","UnknownSeverity","Severity","high","medium","low","toLowerCase","Passed","Ansible","Name","sortByProp","renderFunc","renderComponent","sortByFunction","PolicyCell","transforms","fitContent","sortByArray","SeverityCell","PassedCell","original","tooltip","AnsibleCell","RuleDetailsRow","key","marginTop","Stack","StackItem","marginBottom","isFilled","Grid","GridItem","span","ident","idx","reduce","prev","next","ref","columns","cells","EmptyTable","EmptyStateVariant","colSpan","HIGH_SEVERITY","MEDIUM_SEVERITY","LOW_SEVERITY","UNKNOWN_SEVERITY","filterRulesWithAllValues","values","valueCheck","v","anyFilterApply","filteredRules","BASE_FILTER_CONFIGURATION","type","conditionalFilterType","includes","reference","items","PASS_FILTER_CONFIG","REMEDIATION_AVAILABLE_FILTER_CONFIG","showPassFailFilter","policies","remediationAvailableFilter","config","policy","policiesFilterConfig","RulesTable","profileRules","Columns","remediationsEnabled","selectedFilter","handleSelect","selectedRefIds","hidePassed","options","rulesTableProps","toRulesArrayWithProfile","c","aria-label","isStickyHeader","filters","filterConfig","buildFilterConfig","activeFilters","passed","item","selectable","onSelect","preselected","detailsComponent","emptyRows","dedicatedAction","selected","testResultProfiles","newOsMinorVersion","osMajorVersion","osMinorVersion","ProfileSystemCount","count","Badge","isRead","pluralize","SSGVersionText","ssgVersion","Popover","position","bodyContent","SSGPopoverBody","footerContent","cursor","fontSize","BENCHMARK_QUERY","ProfileTabContent","systemCount","selectedRuleRefIds","variables","benchmark","skip","stateValues","stateKey","matchesSelectionItem","selectionItem","selectedRuleRefIdsForTab","tabSelection","ruleRefIds","profilesWithRulesToSelection","prevSelection","only","additionalSelection","foundSelection","console","tabsDataToOsMinorMap","tabsData","osMinorMap","extendProfilesByOsMinor","undefined","eventKey","getDefaultTab","defaultTab","firstTab","TabbedRules","setSelectedRuleRefIds","level","profileSelectedRuleRefIds","filteredSelection","newItem","Tab","isRequired","supportedConfigsLink","UNSUPPORTED_PLURAL_MESSAGE","WarningWithPopover","children","maxWidth","headerContent","WarningWithTooltip","content","Tooltip","TooltipOrPopover","tooltipProps","Component","componentProps","popover","showHeader","showPopupHeader","messageVariant","UnsupportedSSGVersion","showWarningIcon","showHelpIcon","tooltipText","iconProps","defaultStyle","display","PolicyNameCell","policyType","Link","to","_data","_id","totalHostCount","businessObjective","complianceThreshold","Table","rows","RowLoader","TableHeader","TableBody","ErrorPage","networkError","statusCode","window","insights","chrome","auth","logout","NotAuthorized","serviceName","InvalidObject","onClick","history","goBack","GreySmallText","CheckboxFieldArray","inputValue","defaultChecked","Checkbox","isChecked","checked","arr","splice","handleChange","InUseProfileLabel","Label","lineHeight","ProfileTypeSelect","hasGutter","disabled","rowSpan","Field","JSON","stringify","Truncate","lines","CompliantIcon","rulesPassed","rulesFailed","complianceScoreString","fixedPercentage","score","speed","backgroundcolor","foregroundcolor","x","y","rx","ry","primaryColor","secondaryColor","cx","cy","r","PolicyDetailsDescription","Card","CardHeader","CardBody","text","linkifyHtml","inline","PropTypes","Dt","TextListItem","TextListItemVariants","Dd","PolicyDescription","TextList","TextListVariants","version","ReportDetailsDescription","ProgressBar","percent","failed","ProgressVariant","Progress","ContentTab","useAnchorLevels","defaultAnchor","levels","useAnchor","currentAnchor","RoutedTabSwitcher","tab","RoutedTabs","useHistory","useLocation","pathname","state","Tabs","e","preventDefault","tabToActivate","replace","tabAnchor","hash","slice","join","activeKey","StateViewPart","StateView","child","StateViewWithError","WARNING_TEXT","WithOptionalToolTip","showTooltip","TooltipPosition","SystemsCountWarning","WarningText","BackgroundLink","desiredState","backgroundLocation","background","RouterLink","BreadcrumbLinkItem","BreadcrumbItem","marginRight","OperatingSystem","unsupportedHostCount","CompliantSystems","testResultHostCount","compliantHostCount","measureLocation","marginLeft","NameCell","OperatingSystemCell","CompliantSystemsCell","policyNameFilter","lowerCaseValue","policyTypeFilter","policyTypes","operatingSystemFilter","operatingSystems","operatingSystem","policyComplianceFilter","compliantHostsPercent","Math","round","min","max","i","ReportsTable","uniq","PolicyPopover","isInline","Fragment","NoResultsTable","nameFilter","DedicatedAction","PoliciesTable","location","Object","Filters","actionResolver","_event","_index","policyId","itemId","withRouter","ProfileThresholdField","validThreshold","thresholdValid","previousThreshold","threshold","setState","FormGroup","fieldId","validated","helperTextInvalid","helperText","labelIcon","handleThresholdChange","reduxForm","form","destroyOnUnmount","forceUnregisterOnUnmount","SubPageTitle","additionalProps","validateBenchmarkPage","validateDetailsPage","validateRulesPage","validateSystemsPage","systemIds","fixed","withPercent","fixedValue","toFixed","singular","plural","collection","sortingByProp","propName","order","objA","objB","propA","propB","entity","getSortable","property","orderArrayByProp","objects","direction","sort","a","b","String","localeCompare","orderByArray","objectArray","orderProp","orderArray","sortedObjectArray","orderKey","reverse","getProperty","obj","path","fallback","parts","shift","camelCase","string","trim","toUpperCase","substring","addSortableTransform","column","isSortable","sortable","columnOffset","useState","sortBy","setSortBy","onSort","_","currentSortableColumn","sorter","tableProps","perPage","enablePagination","pagination","page","paginationState","setPaginationState","setPagination","newState","onSetPage","onPerPageSelect","paginator","start","end","setPage","nextPage","toolbarProps","kind","columnProp","primeItem","transformers","transformer","applyTransformers","buildRow","rowTransformer","row","rowProps","itemRow","EmptyRowsComponent","transformedItems","filteredItems","sortedItems","paginatedItems","itemCount","getIdProp","idProp","identify","itemDetailsRow","DetailsComponent","parent","fullWidth","rowId","childRowForRule","enableExpanbale","openItems","setOpenItems","_columns","rowIndex","isOpen","onCollapse","_isOpen","enableDedicatedAction","DedicatedActionOption","AdditionalDedicatedActions","TableToolsTable","toolbarPropsOption","tablePropsOption","identifiedItems","useItemIdentify","useTableSort","sortableTableProps","usePaginate","pagintionToolbarProps","useFilterConfig","conditionalFilterProps","selectedFilterToolbarProps","useExpandable","openItem","expandableProps","useBulkSelectWithItems","selectItem","bulkSelectToolbarProps","bulkSelectTableProps","selectedItems","dedicatedActionToolbarProps","useDedicatedAction","additionalDedicatedActions","useRowsBuilder","rowBuilderToolbarProps","rowBuilderTableProps","useTableTools","PrimaryToolbar","TableToolbar","isFooter","Pagination","PaginationVariant","sortByProperty","filterSelected","selectedIds","selectOrUnselect","itemIds","mergeArraysUniqly","arrayA","arrayB","useBulkSelect","selectedItemsTotal","total","itemIdsInTable","itemIdsOnPage","enableBulkSelect","setSelectedItemIds","selectedIdsTotal","paginatedTotal","allSelected","noneSelected","currentPageSelected","selection","allItemsIncluded","itemsTotal","titleOption","compileTitle","onSelectCallback","func","newSelectedItemsIds","selectItems","unselectItems","unselectAll","selectNone","selectPage","currentPageIds","useEffect","canSelectAll","bulkSelect","toggleProps","selectItemTransformer","propItems","filteredTotal","filtered","allCount","setPageMemo","useMemo","clearSelection","stringToId","configItem","filterString","filterStringArray","moreThanTwo","f","fl","fs","buildFilterFilterString","combineFilterStrings","findWithString","category","currentValue","chips","labelForValue","categoryConfig","keys","groupValue","group","itemValue","getCategoryForLabel","textFilterChip","checkboxFilterChip","radioFilterChip","groupFilterChip","chipFor","defaultPlaceholder","SelectedFilterSwitch","setActiveFilter","Switch","enableSelectedFilter","filterItem","default","filterValues","filterConfigBuilder","chipBuilder","ChipBuilder","filterBuilder","FilterBuilder","handler","placeholder","event","selectedValues","groups","subItem","toTextFilterConfig","toCheckboxFilterConfig","toRadioFilterConfig","toGroupedFilterConfig","states","initConfig","toFilterConfigItem","defaultStates","initialState","filterStateName","defaultValueForFilter","query","results","parentValue","info","getItemByLabelOrValue","filteredObjects","currentState","chipItem","newGroupState","chipCategory","chipLabel","chipValue","stateProp","newFilterState","removeFilterFromGroupFilterState","removeFilterFromFilterState","enableFilters","initialActiveFilters","initialDefaultState","setActiveFilters","onFilterUpdate","addConfigItem","clearAllFilter","deleteFilter","removeFilterWithChip","onFilterDelete","clearAll","applyFilterToObjectArray","useSelectedFilter","selectFilterItem","activeFilterValues","filterConfigWithSelected","buildConfiguration","activeFiltersConfig","getChipBuilder","chipsFor","onDelete","getFilterBuilder","buildFilterString","profilesRulesFailed","profilesRulesPassed","systemRulesFailed","systemSupportedByProfiles","acc","systemsWithRuleObjectsFailed","profilesWithRules","profileWithRules","parse"],"mappings":"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","file":"js/974.13d11ad242df1f5eda04.js","sourcesContent":["import React from 'react';\nimport propTypes from 'prop-types';\nimport { ApolloClient, HttpLink, InMemoryCache } from 'apollo-boost';\nimport {\n  Title,\n  TextContent,\n  Button,\n  Bullseye,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStatePrimary,\n  EmptyStateSecondaryActions,\n  EmptyStateIcon,\n} from '@patternfly/react-core';\nimport { CloudSecurityIcon } from '@patternfly/react-icons';\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/client';\nimport { Spinner } from '@redhat-cloud-services/frontend-components/Spinner';\nimport { ErrorCard } from '../ErrorCard/ErrorCard';\nconst COMPLIANCE_API_ROOT = '/api/compliance';\n\nconst QUERY = gql`\n  {\n    profiles(search: \"external = false and canonical = false\") {\n      totalCount\n    }\n  }\n`;\n\nconst ComplianceEmptyState = ({ title, mainButton, client }) => {\n  let { data, error, loading } = useQuery(QUERY, {\n    fetchPolicy: 'network-only',\n    client,\n  });\n\n  if (loading) {\n    return <Spinner />;\n  }\n\n  if (error) {\n    const errorMsg = `Oops! Error loading System data: ${error}`;\n    return <ErrorCard message={errorMsg} />;\n  }\n\n  const policiesCount = data.profiles.totalCount;\n\n  const policyWord = policiesCount > 1 ? 'policies' : 'policy';\n  const haveWord = policiesCount > 1 ? 'have' : 'has';\n\n  return (\n    <Bullseye>\n      <EmptyState>\n        <EmptyStateIcon\n          style={{\n            fontWeight: '500',\n            color: 'var(--pf-global--primary-color--100)',\n          }}\n          size=\"xl\"\n          title=\"Compliance\"\n          icon={CloudSecurityIcon}\n        />\n        <Title headingLevel=\"h1\" size=\"lg\">\n          {title}\n        </Title>\n        <br />\n        <EmptyStateBody>\n          {policiesCount > 0 && (\n            <TextContent>\n              <a href=\"insights/compliance/scappolicies\">\n                {policiesCount} {policyWord}\n              </a>{' '}\n              {haveWord} been created but {haveWord} no reports.\n            </TextContent>\n          )}\n          <TextContent>\n            The Compliance service uses SCAP policies to track your\n            organization&#39;s adherence to compliance requirements.\n          </TextContent>\n          <TextContent>\n            Get started by adding a policy, or read documentation about how to\n            connect OpenSCAP to the Compliance service.\n          </TextContent>\n        </EmptyStateBody>\n        <EmptyStatePrimary>{mainButton}</EmptyStatePrimary>\n        <EmptyStateSecondaryActions>\n          <Button\n            variant=\"link\"\n            component=\"a\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href={\n              `https://access.redhat.com/documentation/en-us/red_hat_insights/` +\n              `2020-04/html/assessing_and_monitoring_security_policy_compliance_of_rhel_systems/index`\n            }\n          >\n            Learn about OpenSCAP and Compliance\n          </Button>\n        </EmptyStateSecondaryActions>\n      </EmptyState>\n    </Bullseye>\n  );\n};\n\nComplianceEmptyState.propTypes = {\n  title: propTypes.string,\n  mainButton: propTypes.object,\n  client: propTypes.object,\n};\n\nComplianceEmptyState.defaultProps = {\n  title: 'No policies',\n  mainButton: (\n    <Button\n      variant=\"primary\"\n      component=\"a\"\n      href=\"/insights/compliance/scappolicies\"\n    >\n      Create new policy\n    </Button>\n  ),\n  client: new ApolloClient({\n    link: new HttpLink({\n      uri: COMPLIANCE_API_ROOT + '/graphql',\n      credentials: 'include',\n    }),\n    cache: new InMemoryCache(),\n  }),\n};\n\nexport default ComplianceEmptyState;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport RemediationButton from '@redhat-cloud-services/frontend-components-remediations/RemediationButton';\nimport flatten from 'lodash/flatten';\nimport { connect } from 'react-redux';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport { AnsibeTowerIcon } from '@patternfly/react-icons';\n\nclass ComplianceRemediationButton extends React.Component {\n  formatRule = ({ title, refId }, profile, system, majorOsVersion) => ({\n    id: `ssg:rhel${majorOsVersion}|${\n      profile.split('xccdf_org.ssgproject.content_profile_')[1]\n    }|${refId}`,\n    description: title,\n    systems: [system],\n  });\n\n  uniqIssuesBySystem = (issues) => {\n    const issueIds = issues.map((issue) => issue.id);\n    return issues.filter((issue, index) => {\n      const originalIssueIndex = issueIds.indexOf(issue.id);\n      return originalIssueIndex === index\n        ? true\n        : (issues[originalIssueIndex].systems = Array.from(\n            new Set(issues[originalIssueIndex].systems.concat(issue.systems))\n          )) && false;\n    });\n  };\n\n  ruleProfile = (rule, system) =>\n    system.profiles.find((profile) =>\n      profile.rules.find((profileRule) => rule.refId === profileRule.refId)\n    );\n\n  rulesWithRemediations = (rules, system) => {\n    return rules\n      .filter(\n        (rule) =>\n          rule.remediationAvailable &&\n          this.ruleProfile(rule, system).supported &&\n          rule.compliant === false\n      )\n      .map((rule) => {\n        const profile = this.ruleProfile(rule, system);\n        return this.formatRule(\n          rule,\n          profile.refId,\n          system.id,\n          profile.majorOsVersion\n        );\n      });\n  };\n\n  dataProvider = () => {\n    const { allSystems, selectedRules } = this.props;\n    const result = { systems: [], issues: [] };\n\n    allSystems\n      .filter((system) => system.supported)\n      .forEach(async (system) => {\n        result.systems.push(system.id);\n\n        if (selectedRules.length !== 0) {\n          result.issues.push(this.rulesWithRemediations(selectedRules, system));\n        } else {\n          result.issues.push(\n            this.rulesWithRemediations(system.ruleObjectsFailed, system)\n          );\n        }\n      });\n\n    return Promise.all(result.issues).then((issues) => {\n      result.issues = this.uniqIssuesBySystem(flatten(issues));\n      return result;\n    });\n  };\n\n  notEmptyData = async () => {\n    const data = await this.dataProvider();\n    return data.issues.length > 0 && data.systems.length > 0;\n  };\n\n  remediationAvailable = () => {\n    const { allSystems, selectedRules } = this.props;\n    let rules = selectedRules.length\n      ? selectedRules\n      : allSystems.flatMap((system) => system.ruleObjectsFailed);\n\n    return rules.some(\n      (rule) =>\n        rule.remediationAvailable &&\n        (rule.profiles?.some((profile) => profile.supported) ||\n          allSystems.some(\n            (system) => this.ruleProfile(rule, system).supported\n          )) &&\n        rule.compliant === false\n    );\n  };\n\n  render() {\n    const { addNotification } = this.props;\n\n    return (\n      <React.Fragment>\n        <RemediationButton\n          isDisabled={!(this.remediationAvailable() && this.notEmptyData())}\n          onRemediationCreated={(result) =>\n            addNotification(result.getNotification())\n          }\n          dataProvider={this.dataProvider}\n          buttonProps={{\n            ouiaId: 'RemediateButton',\n          }}\n        >\n          <AnsibeTowerIcon\n            size=\"sm\"\n            color=\"var(--pf-c-button--m-primary--Color)\"\n          />\n          &nbsp;Remediate\n        </RemediationButton>\n      </React.Fragment>\n    );\n  }\n}\n\nComplianceRemediationButton.propTypes = {\n  selectedRules: propTypes.array,\n  allSystems: propTypes.arrayOf(\n    propTypes.shape({\n      id: propTypes.string,\n      name: propTypes.string,\n      supported: propTypes.bool.isRequired,\n      profiles: propTypes.arrayOf(\n        propTypes.shape({\n          refId: propTypes.string,\n          name: propTypes.string,\n          rules: propTypes.arrayOf(\n            propTypes.shape({\n              title: propTypes.string,\n              severity: propTypes.string,\n              rationale: propTypes.string,\n              refId: propTypes.string,\n              description: propTypes.string,\n              compliant: propTypes.bool,\n              identifier: propTypes.string,\n              references: propTypes.string,\n            })\n          ),\n        })\n      ),\n    })\n  ),\n  addNotification: propTypes.func,\n};\n\nComplianceRemediationButton.defaultProps = {\n  allSystems: [],\n};\n\nexport default connect(\n  () => ({}),\n  (dispatch) => ({\n    addNotification: (notification) => dispatch(addNotification(notification)),\n  })\n)(ComplianceRemediationButton);\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Card, CardHeader, CardBody } from '@patternfly/react-core';\nimport { NotEqualIcon } from '@patternfly/react-icons';\n\nconst ErrorCard = ({ errorMsg }) => (\n  <Card className=\"ins-error-card\">\n    <CardHeader>\n      <NotEqualIcon />\n    </CardHeader>\n    <CardBody>\n      <div>{errorMsg}</div>\n    </CardBody>\n  </Card>\n);\n\nErrorCard.propTypes = {\n  errorMsg: propTypes.string,\n};\n\nexport default ErrorCard;\n","import React from 'react';\nimport { rawComponents } from '@data-driven-forms/pf4-component-mapper';\nimport { TextInput, TextArea } from '@patternfly/react-core';\n\nexport const ReduxFormTextInput = (field) => (\n  <TextInput\n    value={field.input.value || field.defaultValue}\n    onChange={field.input.onChange}\n    {...field}\n  />\n);\n\nexport const ReduxFormTextArea = (field) => (\n  <TextArea\n    value={field.input.value || field.defaultValue}\n    onChange={field.input.onChange}\n    {...field}\n  />\n);\n\nexport const ReduxFormCreatableSelectInput = (field) => (\n  <rawComponents.RawSelect\n    selectVariant=\"createable\"\n    value={field.selected}\n    onChange={field.input.onChange}\n    {...field}\n  />\n);\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Text, TextVariants, TextContent } from '@patternfly/react-core';\nimport {\n  CheckCircleIcon,\n  ExclamationCircleIcon,\n  ExclamationTriangleIcon,\n  QuestionCircleIcon,\n} from '@patternfly/react-icons';\n\nconst ruleProps = {\n  title: propTypes.string,\n  identifier: propTypes.object,\n  profile: propTypes.object,\n  compliant: propTypes.bool,\n  remediationAvailable: propTypes.bool,\n  severity: propTypes.string,\n};\n\nexport const Rule = ({ title, identifier }) => (\n  <TextContent>\n    {title}\n    {identifier ? (\n      <Text component={TextVariants.small}>{identifier.label}</Text>\n    ) : (\n      ''\n    )}\n  </TextContent>\n);\nRule.propTypes = ruleProps;\n\nexport const Policy = ({ profile }) => profile.name;\nPolicy.propTypes = ruleProps;\n\nexport const HighSeverity = () => (\n  <span>\n    <ExclamationCircleIcon className=\"ins-u-failed\" /> High\n  </span>\n);\n\nexport const MediumSeverity = () => (\n  <span>\n    <ExclamationTriangleIcon className=\"ins-u-warning\" /> Medium\n  </span>\n);\n\nexport const LowSeverityIcon = () => (\n    <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 18 18\" role=\"img\" style={ { verticalAlign: '-0.125em' } } xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M2 0h14a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2zm6.67 10.46a1.67 1.67 0 1 0 0 3.338 1.67 1.67 0 0 0 0-3.338zm-1.586-6l.27 4.935a.435.435 0 0 0 .434.411H9.55c.232 0 .422-.18.435-.411l.27-4.936A.435.435 0 0 0 9.818 4h-2.3c-.25 0-.448.21-.435.46z\" fill=\"#3A9CA6\" fillRule=\"evenodd\"/></svg> // eslint-disable-line\n);\n\nexport const LowSeverity = () => (\n  <span>\n    <LowSeverityIcon /> Low\n  </span>\n);\n\nexport const UnknownSeverity = () => (\n  <span>\n    <QuestionCircleIcon /> Unknown\n  </span>\n);\n\nexport const Severity = ({ severity }) =>\n  ({\n    high: <HighSeverity />,\n    medium: <MediumSeverity />,\n    low: <LowSeverity />,\n  }[severity?.toLowerCase()] || <UnknownSeverity />);\nSeverity.propTypes = ruleProps;\n\nexport const Passed = ({ compliant }) =>\n  compliant ? (\n    <CheckCircleIcon className=\"ins-u-passed\" />\n  ) : (\n    <ExclamationCircleIcon className=\"ins-u-failed\" />\n  );\nPassed.propTypes = ruleProps;\n\nexport const Ansible = ({ remediationAvailable }) =>\n  remediationAvailable ? <CheckCircleIcon className=\"ins-u-passed\" /> : 'No';\nAnsible.propTypes = ruleProps;\n","import React from 'react';\nimport { fitContent } from '@patternfly/react-table';\nimport { AnsibeTowerIcon } from '@patternfly/react-icons';\nimport { renderComponent } from 'Utilities/helpers';\nimport {\n  Rule,\n  Policy as PolicyCell,\n  Severity as SeverityCell,\n  Passed as PassedCell,\n  Ansible as AnsibleCell,\n} from './Cells';\n\nexport const Name = {\n  title: 'Name',\n  sortByProp: 'title',\n  renderFunc: renderComponent(Rule),\n};\n\nexport const Policy = {\n  title: 'Policy',\n  sortByFunction: (rule) => rule?.profile?.name,\n  renderFunc: renderComponent(PolicyCell),\n};\n\nexport const Severity = {\n  title: 'Severity',\n  sortByProp: 'severity',\n  transforms: [fitContent],\n  sortByArray: ['high', 'medium', 'low', 'unknown'],\n  renderFunc: renderComponent(SeverityCell),\n};\n\nexport const Passed = {\n  title: 'Passed',\n  sortByProp: 'compliant',\n  renderFunc: renderComponent(PassedCell),\n};\n\nexport const Ansible = {\n  title: (\n    <span>\n      <AnsibeTowerIcon /> Ansible\n    </span>\n  ),\n  original: 'Ansible',\n  props: {\n    tooltip: 'Ansible',\n  },\n  transforms: [fitContent],\n  sortByProp: 'remediationAvailable',\n  renderFunc: renderComponent(AnsibleCell),\n};\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport {\n  Grid,\n  GridItem,\n  Stack,\n  StackItem,\n  Text,\n  TextVariants,\n} from '@patternfly/react-core';\nimport { ConditionalLink } from 'PresentationalComponents';\n\nconst RuleDetailsRow = ({ rule }) => {\n  const { refId, description, identifier, references, rationale } = rule;\n  const key = `rule-child-row-${refId}`;\n\n  return (\n    <div key={key} style={{ marginTop: 'var(--pf-global--spacer--lg)' }}>\n      <Stack id={`rule-description-${key}`} className=\"margin-bottom-lg\">\n        <StackItem style={{ marginBottom: 'var(--pf-global--spacer--sm)' }}>\n          <Text className=\"pf-c-form__label\" component={TextVariants.h5}>\n            <b>Description</b>\n          </Text>\n        </StackItem>\n        <StackItem isFilled>{description}</StackItem>\n      </Stack>\n      <Stack\n        id={`rule-identifiers-references-${key}`}\n        className=\"margin-bottom-lg\"\n      >\n        <Grid>\n          {identifier && identifier.length > 0 && (\n            <GridItem span={2}>\n              <Text className=\"pf-c-form__label\" component={TextVariants.h5}>\n                <b>Identifier</b>\n              </Text>\n              <Text>\n                {identifier\n                  .map((ident, idx) => (\n                    <ConditionalLink\n                      href={ident.system}\n                      target=\"_blank\"\n                      key={`${refId}-identifier-${idx}`}\n                    >\n                      {ident.label}\n                    </ConditionalLink>\n                  ))\n                  .reduce((prev, next) => [prev, ', ', next])}\n              </Text>\n            </GridItem>\n          )}\n\n          {references && references.length > 0 && (\n            <GridItem span={10}>\n              <Text className=\"pf-c-form__label\" component={TextVariants.h5}>\n                <b>References</b>\n              </Text>\n              <Text>\n                {references\n                  .map((ref, idx) => (\n                    <ConditionalLink\n                      href={ref.href}\n                      target=\"_blank\"\n                      key={`${refId}-reference-${idx}`}\n                    >\n                      {ref.label}\n                    </ConditionalLink>\n                  ))\n                  .reduce((prev, next) => [prev, ', ', next])}\n              </Text>\n            </GridItem>\n          )}\n        </Grid>\n      </Stack>\n\n      {rationale && (\n        <Stack\n          id={`rule-rationale-${key}`}\n          style={{ marginBottom: 'var(--pf-global--spacer--lg)' }}\n        >\n          <StackItem style={{ marginBottom: 'var(--pf-global--spacer--sm)' }}>\n            <Text className=\"pf-c-form__label\" component={TextVariants.h5}>\n              <b>Rationale</b>\n            </Text>\n          </StackItem>\n          <StackItem isFilled>{rationale}</StackItem>\n        </Stack>\n      )}\n    </div>\n  );\n};\n\nRuleDetailsRow.propTypes = {\n  rule: propTypes.object,\n};\n\nexport default RuleDetailsRow;\n","import React from 'react';\nimport {\n  Bullseye,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateVariant,\n  Title,\n} from '@patternfly/react-core';\nimport { EmptyTable } from '@redhat-cloud-services/frontend-components/EmptyTable';\n\nconst emptyRows = (columns) => [\n  {\n    cells: [\n      {\n        title: (\n          <EmptyTable>\n            <Bullseye>\n              <EmptyState variant={EmptyStateVariant.full}>\n                <Title headingLevel=\"h5\" size=\"lg\">\n                  No matching rules found\n                </Title>\n                <EmptyStateBody>\n                  This filter criteria matches no rules. <br /> Try changing\n                  your filter settings.\n                </EmptyStateBody>\n              </EmptyState>\n            </Bullseye>\n          </EmptyTable>\n        ),\n        props: {\n          colSpan: columns.length,\n        },\n      },\n    ],\n  },\n];\n\nexport default emptyRows;\n","import React from 'react';\nimport {\n  ExclamationCircleIcon,\n  ExclamationTriangleIcon,\n  QuestionCircleIcon,\n} from '@patternfly/react-icons';\nimport { LowSeverityIcon } from './Cells';\n\nexport const HIGH_SEVERITY = (\n  <span>\n    <ExclamationCircleIcon className=\"ins-u-failed\" /> High\n  </span>\n);\nexport const MEDIUM_SEVERITY = (\n  <span>\n    <ExclamationTriangleIcon className=\"ins-u-warning\" /> Medium\n  </span>\n);\nexport const LOW_SEVERITY = (\n  <span>\n    <LowSeverityIcon /> Low\n  </span>\n);\nexport const UNKNOWN_SEVERITY = (\n  <span>\n    <QuestionCircleIcon /> Unknown\n  </span>\n);\n","import {\n  HIGH_SEVERITY,\n  MEDIUM_SEVERITY,\n  LOW_SEVERITY,\n  UNKNOWN_SEVERITY,\n} from './Constants';\nimport { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\n\nconst filterRulesWithAllValues = (rules, values, valueCheck) =>\n  rules.filter(\n    (rule) =>\n      values.map((value) => valueCheck(rule, value)).filter((v) => !!v).length >\n      0\n  );\n\nconst anyFilterApply = (rules, values, valueCheck) => {\n  let filteredRules = [];\n  rules.forEach((rule) => {\n    if (\n      values.map((value) => valueCheck(rule, value)).filter((v) => !!v).length >\n      0\n    ) {\n      filteredRules.push(rule);\n    }\n  });\n  return filteredRules;\n};\n\nconst BASE_FILTER_CONFIGURATION = [\n  {\n    type: conditionalFilterType.text,\n    label: 'Name',\n    filter: (rules, value) =>\n      filterRulesWithAllValues(\n        rules,\n        [value],\n        (rule, value) =>\n          rule.title.toLowerCase().includes(value.toLowerCase()) ||\n          (rule.identifier &&\n            rule.identifier.label\n              .toLowerCase()\n              .includes(value.toLowerCase())) ||\n          rule.references.filter((reference) =>\n            reference.label.toLowerCase().includes(value.toLowerCase())\n          ).length > 0\n      ),\n  },\n  {\n    type: conditionalFilterType.checkbox,\n    label: 'Severity',\n    items: [\n      { label: HIGH_SEVERITY, value: 'high' },\n      { label: MEDIUM_SEVERITY, value: 'medium' },\n      { label: LOW_SEVERITY, value: 'low' },\n      { label: UNKNOWN_SEVERITY, value: 'unknown' },\n    ],\n    filter: (rules, values) =>\n      anyFilterApply(rules, values, (rule, value) => rule.severity === value),\n  },\n];\n\nconst PASS_FILTER_CONFIG = {\n  type: conditionalFilterType.checkbox,\n  label: 'Passed',\n  items: [\n    { label: 'Passed rules', value: 'passed' },\n    { label: 'Failed rules', value: 'failed' },\n  ],\n  filter: (rules, values) =>\n    anyFilterApply(\n      rules,\n      values,\n      (rule, value) => rule.compliant === (value === 'passed')\n    ),\n};\n\nexport const policiesFilterConfig = (policies) => ({\n  type: conditionalFilterType.checkbox,\n  label: 'Policy',\n  items: policies.map((policy) => ({ label: policy.name, value: policy.id })),\n  filter: (rules, values) =>\n    filterRulesWithAllValues(\n      rules,\n      values,\n      (rule, value) =>\n        (rule.profile.policy ? rule.profile.policy.id : rule.profile.id) ===\n        value\n    ),\n});\n\nexport const REMEDIATION_AVAILABLE_FILTER_CONFIG = {\n  type: conditionalFilterType.checkbox,\n  label: 'Remediation available',\n  items: [{ label: 'Remediation available', value: 'true' }],\n  filter: (rules, value) =>\n    rules.filter((rule) =>\n      value[0] === 'true' ? rule.remediationAvailable === true : true\n    ),\n};\n\nconst buildFilterConfig = ({\n  showPassFailFilter,\n  policies,\n  remediationAvailableFilter,\n}) => {\n  const config = [...BASE_FILTER_CONFIGURATION];\n\n  if (showPassFailFilter) {\n    config.push(PASS_FILTER_CONFIG);\n  }\n\n  if (policies && policies.length > 1) {\n    config.push(policiesFilterConfig(policies));\n  }\n\n  if (remediationAvailableFilter) {\n    config.push(REMEDIATION_AVAILABLE_FILTER_CONFIG);\n  }\n\n  return config;\n};\n\nexport default buildFilterConfig;\n","import React from 'react';\nimport propTypes from 'prop-types';\n// eslint-disable-next-line\nimport ComplianceRemediationButton from 'PresentationalComponents/ComplianceRemediationButton';\nimport { TableToolsTable } from 'Utilities/hooks/useTableTools';\nimport { toRulesArrayWithProfile } from 'Utilities/ruleHelpers';\nimport RuleDetailsRow from './RuleDetailsRow';\nimport emptyRows from './EmptyRows';\nimport buildFilterConfig from './Filters';\nimport * as Columns from './Columns';\n\nconst RulesTable = ({\n  system,\n  profileRules,\n  columns = [\n    Columns.Name,\n    Columns.Policy,\n    Columns.Severity,\n    Columns.Passed,\n    Columns.Ansible,\n  ],\n  remediationsEnabled = true,\n  remediationAvailableFilter = false,\n  selectedFilter = false,\n  handleSelect,\n  selectedRefIds = [],\n  hidePassed = false,\n  options,\n  ...rulesTableProps\n}) => {\n  const rules = toRulesArrayWithProfile(profileRules);\n  const showPassFailFilter =\n    columns.filter((c) => c.title === 'Passed').length > 0;\n  const policies = profileRules\n    .filter(({ profile }) => !!profile)\n    .map(({ profile }) => ({\n      id: profile.policy ? profile.policy.id : profile.id,\n      name: profile.name,\n    }));\n\n  const remediationAction = ({ selected: selectedRules }) => (\n    <ComplianceRemediationButton\n      allSystems={[\n        {\n          id: system.id,\n          profiles: system.testResultProfiles,\n          ruleObjectsFailed: [],\n          supported: system.supported,\n        },\n      ]}\n      selectedRules={(selectedRules || []).filter(\n        (rule) => rule.remediationAvailable\n      )}\n    />\n  );\n\n  return (\n    <TableToolsTable\n      aria-label=\"Rules Table\"\n      items={rules}\n      columns={columns}\n      isStickyHeader\n      filters={{\n        filterConfig: buildFilterConfig({\n          showPassFailFilter,\n          policies,\n          remediationAvailableFilter,\n        }),\n        ...(hidePassed && {\n          activeFilters: {\n            passed: ['failed'],\n          },\n        }),\n      }}\n      options={{\n        ...options,\n        identifier: (item) => item.refId,\n        selectable: !!handleSelect || remediationsEnabled,\n        onSelect: handleSelect,\n        preselected: selectedRefIds,\n        detailsComponent: RuleDetailsRow,\n        emptyRows: emptyRows(columns),\n        selectedFilter,\n        ...(remediationsEnabled ? { dedicatedAction: remediationAction } : {}),\n      }}\n      {...rulesTableProps}\n    />\n  );\n};\n\nRulesTable.propTypes = {\n  profileRules: propTypes.array,\n  loading: propTypes.bool,\n  hidePassed: propTypes.bool,\n  system: propTypes.object,\n  remediationsEnabled: propTypes.bool,\n  remediationAvailableFilter: propTypes.bool,\n  selectedRefIds: propTypes.array,\n  selectedFilter: propTypes.bool,\n  handleSelect: propTypes.func,\n  columns: propTypes.array,\n  options: propTypes.object,\n};\n\nexport default RulesTable;\n","const OsVersionText = ({ profile, newOsMinorVersion }) =>\n  `RHEL${'\\u00A0'}${profile.osMajorVersion}.${\n    profile.osMinorVersion || newOsMinorVersion\n  }`;\n\nexport default OsVersionText;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport {\n  Text,\n  TextVariants,\n  TextContent,\n  Grid,\n  Spinner,\n  Badge,\n  Popover,\n} from '@patternfly/react-core';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport {\n  StateViewWithError,\n  StateViewPart,\n  SupportedSSGVersionsLink,\n  RulesTable,\n} from 'PresentationalComponents';\nimport { pluralize } from 'Utilities/TextHelper';\nimport OsVersionText from './OsVersionText';\n\nconst ProfileSystemCount = ({ count = 0 }) => (\n  <Badge isRead>{`${count} ${pluralize(count, 'system')}`}</Badge>\n);\n\nProfileSystemCount.propTypes = {\n  profile: propTypes.object,\n  count: propTypes.number,\n};\n\nconst SSGVersionText = ({ profile, newOsMinorVersion }) => (\n  <Text component={TextVariants.p}>\n    SSG version: {profile.ssgVersion}{' '}\n    <Popover\n      position=\"right\"\n      bodyContent={<SSGPopoverBody {...{ profile, newOsMinorVersion }} />}\n      footerContent={<SupportedSSGVersionsLink />}\n    >\n      <span style={{ cursor: 'pointer' }}>\n        <OutlinedQuestionCircleIcon className=\"grey-icon\" />\n      </span>\n    </Popover>\n  </Text>\n);\n\nSSGVersionText.propTypes = {\n  profile: propTypes.object.isRequired,\n  newOsMinorVersion: propTypes.string,\n};\n\nconst SSGPopoverBody = ({ profile, newOsMinorVersion }) => (\n  <TextContent style={{ fontSize: 'var(--pf-c-popover--FontSize)' }}>\n    <Text>\n      This is the latest supported version of the SCAP Security Guide (SSG) for{' '}\n      <OsVersionText {...{ profile, newOsMinorVersion }} />\n    </Text>\n    <Text>\n      <OsVersionText {...{ profile, newOsMinorVersion }} /> systems assigned to\n      this policy will report using this rule list.\n    </Text>\n  </TextContent>\n);\n\nSSGPopoverBody.propTypes = {\n  profile: propTypes.object.isRequired,\n  newOsMinorVersion: propTypes.string,\n};\n\nconst BENCHMARK_QUERY = gql`\n  query benchmarkQuery($id: String!) {\n    benchmark(id: $id) {\n      id\n      osMajorVersion\n      rules {\n        id\n        title\n        severity\n        rationale\n        refId\n        description\n        remediationAvailable\n        identifier\n      }\n    }\n  }\n`;\n\nconst ProfileTabContent = ({\n  profile,\n  columns,\n  handleSelect,\n  systemCount,\n  selectedRuleRefIds,\n  rulesTableProps,\n  newOsMinorVersion,\n}) => {\n  const {\n    data: benchmark,\n    error,\n    loading,\n  } = useQuery(BENCHMARK_QUERY, {\n    variables: {\n      id: profile.benchmark.id,\n    },\n    skip: !handleSelect || !profile.benchmark?.id,\n  });\n  const rules = handleSelect ? benchmark?.benchmark?.rules : profile?.rules;\n\n  return (\n    <React.Fragment>\n      <Grid>\n        <TextContent className=\"pf-u-mt-md\">\n          <Text component={TextVariants.h3}>\n            <span className=\"pf-u-pr-sm\">\n              <OsVersionText {...{ profile, newOsMinorVersion }} />\n            </span>\n            <ProfileSystemCount count={systemCount} />\n          </Text>\n          <SSGVersionText {...{ profile, newOsMinorVersion }} />\n        </TextContent>\n      </Grid>\n      <StateViewWithError stateValues={{ error, loading, rules }}>\n        <StateViewPart stateKey=\"loading\">\n          <Spinner />\n        </StateViewPart>\n        <StateViewPart stateKey=\"rules\">\n          <RulesTable\n            remediationAvailableFilter\n            remediationsEnabled={false}\n            columns={columns}\n            profileRules={[{ profile, rules: rules || [] }]}\n            selectedRefIds={selectedRuleRefIds}\n            handleSelect={\n              handleSelect &&\n              ((selectedRuleRefIds) =>\n                handleSelect(profile, newOsMinorVersion, selectedRuleRefIds))\n            }\n            {...rulesTableProps}\n          />\n        </StateViewPart>\n      </StateViewWithError>\n    </React.Fragment>\n  );\n};\n\nProfileTabContent.propTypes = {\n  profile: propTypes.object,\n  newOsMinorVersion: propTypes.string,\n  columns: propTypes.array,\n  handleSelect: propTypes.func,\n  systemCount: propTypes.object,\n  selectedRuleRefIds: propTypes.array,\n  rulesTableProps: propTypes.object,\n};\n\nexport default ProfileTabContent;\n","// Rule selection utilities\n\nexport const matchesSelectionItem = (\n  selectionItem,\n  profile,\n  newOsMinorVersion\n) =>\n  selectionItem.id === profile.id &&\n  selectionItem.osMinorVersion ===\n    (newOsMinorVersion || profile.osMinorVersion);\n\nexport const selectedRuleRefIdsForTab = (\n  selectedRuleRefIds,\n  profile,\n  newOsMinorVersion\n) => {\n  const tabSelection = (selectedRuleRefIds || []).find((selectionItem) =>\n    matchesSelectionItem(selectionItem, profile, newOsMinorVersion)\n  );\n  return tabSelection?.ruleRefIds || [];\n};\n\nexport const profilesWithRulesToSelection = (\n  profiles,\n  prevSelection = [],\n  options = {}\n) => {\n  const { only } = options;\n  const additionalSelection = profiles\n    .map((profile) => {\n      const foundSelection = prevSelection.find((selectionItem) =>\n        matchesSelectionItem(selectionItem, profile)\n      );\n      if (!foundSelection) {\n        if (!profile.rules) {\n          console.error(\n            `Profile ${profile.id} is missing rules for selection!`\n          );\n        }\n\n        if (!profile.osMinorVersion) {\n          console.error(\n            `Profile ${profile.id} is missing osMinorVersion for selection!`\n          );\n        }\n\n        return {\n          id: profile.id,\n          osMinorVersion: profile.osMinorVersion,\n          ruleRefIds: profile.rules?.map((rule) => rule.refId) || [],\n        };\n      } else if (only) {\n        return foundSelection;\n      }\n    })\n    .filter((v) => !!v);\n\n  return only\n    ? additionalSelection\n    : [...prevSelection, ...additionalSelection];\n};\n\nexport const tabsDataToOsMinorMap = (tabsData) => {\n  const osMinorMap = {};\n  tabsData.forEach(({ profile, newOsMinorVersion }) => {\n    if (profile?.id) {\n      const osMinorVersion = newOsMinorVersion || profile.osMinorVersion;\n      osMinorMap[profile.id] = [\n        ...(osMinorMap[profile.id] || []),\n        osMinorVersion,\n      ];\n    }\n  });\n  return osMinorMap;\n};\n\nexport const extendProfilesByOsMinor = (profiles, osMinorMap) =>\n  profiles.flatMap((profile) =>\n    (osMinorMap[profile.id] || [undefined]).map((osMinorVersion) => ({\n      ...profile,\n      osMinorVersion,\n    }))\n  );\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Tab, Badge } from '@patternfly/react-core';\nimport { RoutedTabs } from 'PresentationalComponents';\nimport ProfileTabContent from './ProfileTabContent';\nimport OsVersionText from './OsVersionText';\nimport {\n  selectedRuleRefIdsForTab,\n  matchesSelectionItem,\n} from './ruleSelection';\n\nconst eventKey = ({ id, osMinorVersion }, newOsMinorVersion) =>\n  `rules-${id}-${osMinorVersion || newOsMinorVersion}`;\n\nconst getDefaultTab = (tabsData, defaultTab) => {\n  if (!tabsData || tabsData.length === 0) {\n    return;\n  }\n\n  if (!defaultTab) {\n    const firstTab = tabsData[0];\n    defaultTab = {\n      id: firstTab.profile.id,\n      osMinorVersion:\n        firstTab.profile.osMinorVersion || firstTab.newOsMinorVersion,\n    };\n  }\n\n  return eventKey(defaultTab);\n};\n\nconst TabbedRules = ({\n  tabsData,\n  defaultTab,\n  selectedRuleRefIds,\n  setSelectedRuleRefIds,\n  columns,\n  level = 0,\n  ...rulesTableProps\n}) => {\n  const handleSelect = (\n    profile,\n    newOsMinorVersion,\n    profileSelectedRuleRefIds\n  ) => {\n    const filteredSelection = (selectedRuleRefIds || []).filter(\n      (selectionItem) =>\n        !matchesSelectionItem(selectionItem, profile, newOsMinorVersion)\n    );\n\n    const newItem = {\n      id: profile.id,\n      osMinorVersion: newOsMinorVersion || profile.osMinorVersion,\n      ruleRefIds: profileSelectedRuleRefIds,\n    };\n    setSelectedRuleRefIds([newItem, ...filteredSelection]);\n  };\n\n  return (\n    <RoutedTabs level={level} defaultTab={getDefaultTab(tabsData, defaultTab)}>\n      {tabsData?.map(({ profile, newOsMinorVersion, systemCount }) => (\n        <Tab\n          key={eventKey(profile, newOsMinorVersion)}\n          eventKey={eventKey(profile, newOsMinorVersion)}\n          title={\n            <span>\n              <span className=\"pf-u-pr-sm\">\n                <OsVersionText\n                  profile={profile}\n                  newOsMinorVersion={newOsMinorVersion}\n                />\n              </span>\n              <Badge isRead>{systemCount}</Badge>\n            </span>\n          }\n        >\n          <ProfileTabContent\n            {...{\n              profile,\n              newOsMinorVersion,\n              columns,\n              rulesTableProps,\n              systemCount,\n              selectedRuleRefIds: selectedRuleRefIdsForTab(\n                selectedRuleRefIds,\n                profile,\n                newOsMinorVersion\n              ),\n              handleSelect: setSelectedRuleRefIds ? handleSelect : undefined,\n            }}\n          />\n        </Tab>\n      ))}\n    </RoutedTabs>\n  );\n};\n\nTabbedRules.propTypes = {\n  tabsData: propTypes.arrayOf(\n    propTypes.shape({\n      profile: propTypes.object.isRequired,\n      selectedRuleRefIds: propTypes.arrayOf(propTypes.string),\n      newOsMinorVersion: propTypes.string,\n      systemCount: propTypes.number,\n    })\n  ).isRequired,\n  selectedRuleRefIds: propTypes.arrayOf(\n    propTypes.shape({\n      id: propTypes.string,\n      ruleRefIds: propTypes.arrayOf(propTypes.string),\n    })\n  ),\n  setSelectedRuleRefIds: propTypes.func,\n  columns: propTypes.arrayOf(propTypes.object),\n  defaultTab: propTypes.shape({\n    id: propTypes.string,\n    osMinorVersion: propTypes.string,\n  }),\n  level: propTypes.number,\n};\n\nexport default TabbedRules;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Popover, Tooltip, Text } from '@patternfly/react-core';\nimport {\n  ExclamationTriangleIcon,\n  OutlinedQuestionCircleIcon,\n} from '@patternfly/react-icons';\nimport { SupportedSSGVersionsLink } from 'PresentationalComponents';\n\nexport const supportedConfigsLink =\n  'https://access.redhat.com/documentation/en-us/red_hat_insights/2020-10/' +\n  'html/assessing_and_monitoring_security_policy_compliance_of_rhel_systems/' +\n  'con-compl-assess-overview_compl-assess-overview#con-compl-assess-supported-configurations_compl-assess-overview';\n\nconst UNSUPPORTED_SINGULAR_MESSAGE =\n  'This system was using an incompatible version of the SSG at the time this report was generated. ' +\n  'Assessment of rules failed/passed on this system is a best-guess effort and may not be accurate.';\nconst UNSUPPORTED_PLURAL_MESSAGE = (\n  <React.Fragment>\n    <Text variant=\"p\" style={{ marginBottom: '1rem' }}>\n      These systems are running unsupported versions of the SCAP Security Guide\n      (SSG) for the version of RHEL installed on them. Assessment of rules\n      failed/passed on these systems is a best-guess effort and may not be\n      accurate.\n    </Text>\n    <Text variant=\"p\">\n      The policy&apos;s compliance score excludes these systems.\n    </Text>\n  </React.Fragment>\n);\n\nconst WarningWithPopover = ({ children, variant = 'plural' }) => (\n  <Popover\n    id=\"unsupported-popover\"\n    maxWidth=\"25rem\"\n    headerContent=\"Unsupported SSG versions\"\n    bodyContent={\n      variant === 'plural'\n        ? UNSUPPORTED_PLURAL_MESSAGE\n        : UNSUPPORTED_SINGULAR_MESSAGE\n    }\n    footerContent={<SupportedSSGVersionsLink />}\n  >\n    {children}\n  </Popover>\n);\n\nWarningWithPopover.propTypes = {\n  children: propTypes.node,\n  variant: propTypes.oneOf(['singular', 'plural']),\n};\n\nconst WarningWithTooltip = ({ children, content }) => (\n  <Tooltip content={content} position=\"bottom\">\n    {children}\n  </Tooltip>\n);\n\nWarningWithTooltip.propTypes = {\n  content: propTypes.string,\n  children: propTypes.node,\n};\n\nconst TooltipOrPopover = ({ variant, children, tooltipProps }) => {\n  const { Component, componentProps } = {\n    tooltip: {\n      Component: WarningWithTooltip,\n      componentProps: tooltipProps,\n    },\n    popover: {\n      Component: WarningWithPopover,\n      componentProps: {\n        showHeader: tooltipProps.showPopupHeader,\n        variant: tooltipProps.messageVariant,\n      },\n    },\n  }[variant];\n\n  return <Component {...componentProps}>{children}</Component>;\n};\n\nTooltipOrPopover.propTypes = {\n  children: propTypes.node,\n  variant: propTypes.oneOf(['tooltip', 'popover']),\n  tooltipProps: propTypes.object,\n};\n\nconst UnsupportedSSGVersion = ({\n  children,\n  showWarningIcon = true,\n  showHelpIcon = false,\n  style,\n  tooltipText,\n  messageVariant,\n}) => {\n  const tooltipProps = {\n    ...(tooltipText && { content: <div>{tooltipText}</div> }),\n    messageVariant,\n  };\n  const variant = tooltipText ? 'tooltip' : 'popover';\n  const iconProps = {\n    variant,\n    tooltipProps,\n  };\n  const defaultStyle = !tooltipText ? { cursor: 'pointer' } : {};\n\n  return (\n    <span style={{ ...style, display: 'inline-block' }}>\n      {showWarningIcon && (\n        <TooltipOrPopover {...iconProps}>\n          <span style={defaultStyle} className=\"pf-u-mr-xs\">\n            <ExclamationTriangleIcon color=\"var(--pf-global--warning-color--100)\" />\n          </span>\n        </TooltipOrPopover>\n      )}\n\n      {children}\n\n      {showHelpIcon && (\n        <TooltipOrPopover {...iconProps}>\n          <span style={defaultStyle} className=\"pf-u-ml-xs\">\n            <OutlinedQuestionCircleIcon />\n          </span>\n        </TooltipOrPopover>\n      )}\n    </span>\n  );\n};\n\nUnsupportedSSGVersion.propTypes = {\n  showWarningIcon: propTypes.bool,\n  showHelpIcon: propTypes.bool,\n  style: propTypes.object,\n  tooltipText: propTypes.string,\n  children: propTypes.node,\n  variant: propTypes.string,\n  messageVariant: propTypes.string,\n  showPopupHeader: propTypes.bool,\n};\n\nexport default UnsupportedSSGVersion;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { TextContent } from '@patternfly/react-core';\nimport { fitContent } from '@patternfly/react-table';\nimport { Link } from 'react-router-dom';\nimport { GreySmallText, SystemsCountWarning } from 'PresentationalComponents';\nimport { renderComponent } from 'Utilities/helpers';\n\nconst PolicyNameCell = ({ id, policy, policyType }) => (\n  <TextContent>\n    <Link to={'/scappolicies/' + id}>{policy.name}</Link>\n    <GreySmallText>{policyType}</GreySmallText>\n  </TextContent>\n);\n\nPolicyNameCell.propTypes = {\n  id: propTypes.string,\n  policy: propTypes.object,\n  policyType: propTypes.string,\n};\n\nexport const Name = {\n  title: 'Name',\n  props: {\n    width: 45,\n  },\n  sortByProp: 'name',\n  renderFunc: renderComponent(PolicyNameCell),\n};\n\nexport const OperatingSystem = {\n  title: 'Operating system',\n  transforms: [fitContent],\n  props: {\n    width: 15,\n  },\n  sortByProp: 'majorOsVersion',\n  renderFunc: (_data, _id, policy) => `RHEL ${policy.majorOsVersion}`,\n};\n\nexport const Systems = {\n  title: 'Systems',\n  props: {\n    width: 15,\n  },\n  sortByProp: 'totalHostCount',\n  // eslint-disable-next-line react/display-name\n  renderFunc: (_data, _id, policy) =>\n    policy.totalHostCount > 0 ? (\n      policy.totalHostCount\n    ) : (\n      <SystemsCountWarning count={policy.totalHostCount} variant=\"count\" />\n    ),\n};\n\nexport const BusinessObjective = {\n  title: 'Business objective',\n  sortByFunction: (policy) => policy?.businessObjective?.title,\n  renderFunc: (_data, _id, policy) =>\n    (policy.businessObjective && policy.businessObjective.title) || '--',\n};\n\nexport const ComplianceThreshold = {\n  title: 'Compliance threshold',\n  sortByProp: 'complianceThreshold',\n  renderFunc: (_data, _id, policy) => `${policy.complianceThreshold}%`,\n};\n\nexport default [\n  Name,\n  OperatingSystem,\n  Systems,\n  BusinessObjective,\n  ComplianceThreshold,\n];\n","import React from 'react';\nimport { Table, TableHeader, TableBody } from '@patternfly/react-table';\nimport RowLoader from '@redhat-cloud-services/frontend-components-utilities/RowLoader';\nimport columns from '../PoliciesTable/Columns';\n\nconst LoadingPoliciesTable = () => (\n  <Table\n    aria-label=\"policies-table\"\n    ouiaId=\"PoliciesTable\"\n    cells={columns}\n    rows={[...Array(5)].map(() => ({\n      cells: [\n        {\n          title: <RowLoader />,\n          colSpan: 5,\n        },\n      ],\n    }))}\n  >\n    <TableHeader />\n    <TableBody />\n  </Table>\n);\n\nexport default LoadingPoliciesTable;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Title, Button, Text } from '@patternfly/react-core';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport InvalidObject from '@redhat-cloud-services/frontend-components/InvalidObject';\nimport NotAuthorized from '@redhat-cloud-services/frontend-components/NotAuthorized';\n\nconst ErrorPage = ({ error, ...props }) => {\n  if (error.networkError && error.networkError.statusCode === 401) {\n    window.insights.chrome.auth.logout(true);\n    return false;\n  }\n\n  if (error.networkError && error.networkError.statusCode === 403) {\n    return <NotAuthorized serviceName=\"Compliance\" />;\n  }\n\n  if (error.networkError && error.networkError.statusCode === 404) {\n    return <InvalidObject />;\n  }\n\n  return (\n    <section\n      {...props}\n      className=\"pf-l-page__main-section pf-c-page__main-section ins-c-component_invalid-componet\"\n    >\n      <ExclamationCircleIcon\n        size=\"xl\"\n        style={{ color: 'var(--pf-global--danger-color--100)' }}\n      />\n      <Title headingLevel=\"h1\">There was an error</Title>\n      <Text>\n        If you need to contact Red Hat Support about this, this is the exact\n        error:\n        <Text>{error.message}</Text>\n      </Text>\n      <Button\n        variant=\"link\"\n        ouiaId=\"ErrorPageGoBackButton\"\n        onClick={history.goBack}\n      >\n        Go back\n      </Button>\n    </section>\n  );\n};\n\nErrorPage.propTypes = {\n  error: propTypes.object,\n};\n\nexport default ErrorPage;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Text, TextVariants } from '@patternfly/react-core';\n\nexport const GreySmallText = ({ children }) => (\n  <Text\n    style={{ color: 'var(--pf-global--Color--200)' }}\n    component={TextVariants.small}\n  >\n    {children}\n  </Text>\n);\n\nGreySmallText.propTypes = {\n  children: propTypes.node,\n};\n\nexport default GreySmallText;\n","import React from 'react';\nimport { Field } from 'redux-form';\nimport propTypes from 'prop-types';\nimport { Checkbox } from '@patternfly/react-core';\n\nconst CheckboxFieldArray = ({ input, options }) => {\n  const { name, onChange } = input;\n  const inputValue = input.value;\n\n  const handleChange = (checked, value) => {\n    const arr = [...new Set(inputValue)];\n    if (checked) {\n      arr.push(value);\n    } else {\n      arr.splice(arr.indexOf(value), 1);\n    }\n\n    return onChange(arr);\n  };\n\n  return (\n    <React.Fragment>\n      {options.map(({ label, value, defaultChecked }, index) => (\n        <Checkbox\n          key={value}\n          id={value}\n          label={label}\n          name={`${name}[${index}]`}\n          value={value}\n          isChecked={\n            inputValue === '' ? defaultChecked : inputValue.includes(value)\n          }\n          onChange={(checked) => handleChange(checked, value)}\n        />\n      ))}\n    </React.Fragment>\n  );\n};\n\nCheckboxFieldArray.propTypes = {\n  input: propTypes.shape({\n    name: propTypes.string.isRequired,\n    onChange: propTypes.func,\n    value: propTypes.string,\n  }),\n  options: propTypes.arrayOf(\n    propTypes.shape({\n      label: propTypes.string.isRequired,\n      value: propTypes.string.isRequired,\n      defaultChecked: propTypes.bool,\n    })\n  ).isRequired,\n};\n\nconst CheckboxGroup = (props) => (\n  <Field {...props} type=\"checkbox\" component={CheckboxFieldArray} />\n);\n\nCheckboxGroup.propTypes = {\n  options: propTypes.arrayOf(\n    propTypes.shape({\n      label: propTypes.string.isRequired,\n      value: propTypes.string.isRequired,\n      defaultChecked: propTypes.bool,\n    })\n  ).isRequired,\n};\n\nexport { CheckboxFieldArray };\nexport default CheckboxGroup;\n","import React from 'react';\nimport { Field } from 'redux-form';\nimport propTypes from 'prop-types';\nimport Truncate from 'react-truncate';\nimport {\n  Grid,\n  GridItem,\n  Label,\n  TextContent,\n  TextVariants,\n  Text,\n  Tooltip,\n} from '@patternfly/react-core';\n\nconst InUseProfileLabel = () => (\n  <Tooltip\n    position=\"right\"\n    content=\"A policy of this type is already in use.\n        Only one policy per policy type can be created for a major release of RHEL.\"\n  >\n    <Label color=\"orange\" style={{ lineHeight: '1.5em' }}>\n      In use\n    </Label>\n  </Tooltip>\n);\n\nconst ProfileTypeSelect = ({ profiles, onClick }) => (\n  <React.Fragment>\n    {profiles?.length === 0 && (\n      <TextContent style={{ color: 'var(--pf-c-content--blockquote--Color)' }}>\n        <Text>Select an operating system to view policy types.</Text>\n      </TextContent>\n    )}\n\n    <Grid hasGutter>\n      {profiles.map((profile) => {\n        const { description, name, id, disabled } = profile;\n        return (\n          <React.Fragment key={`profile-select-${id}`}>\n            <GridItem span={8} rowSpan={2}>\n              <TextContent\n                style={{\n                  lineHeight: '2em',\n                  color: disabled\n                    ? 'var(--pf-c-content--blockquote--Color)'\n                    : '',\n                }}\n              >\n                <Text>\n                  <Field\n                    component=\"input\"\n                    type=\"radio\"\n                    name=\"profile\"\n                    value={JSON.stringify(profile)}\n                    onClick={() => onClick(JSON.stringify(profile))}\n                    disabled={disabled}\n                  />\n                  {` ${name} `}\n                  {disabled && <InUseProfileLabel />}\n                </Text>\n              </TextContent>\n              <TextContent\n                style={{ color: 'var(--pf-c-content--blockquote--Color)' }}\n              >\n                <Text component={TextVariants.p}>\n                  <Truncate key={`profile-select-text-${id}`} lines={3}>\n                    {description}\n                  </Truncate>\n                </Text>\n              </TextContent>\n            </GridItem>\n          </React.Fragment>\n        );\n      })}\n    </Grid>\n  </React.Fragment>\n);\n\nProfileTypeSelect.propTypes = {\n  profiles: propTypes.array,\n  onClick: propTypes.func,\n};\n\nProfileTypeSelect.defaultProps = {\n  profiles: [],\n  onClick: () => ({}),\n};\n\nexport default ProfileTypeSelect;\n","import React from 'react';\nimport {\n  QuestionCircleIcon,\n  CheckCircleIcon,\n  ExclamationCircleIcon,\n} from '@patternfly/react-icons';\nimport { Text, Tooltip } from '@patternfly/react-core';\nimport { fixedPercentage } from 'Utilities/TextHelper';\n\nconst CompliantIcon = (system) => {\n  if (system.rulesPassed + system.rulesFailed === 0) {\n    return <QuestionCircleIcon color=\"var(--pf-global--disabled-color--100)\" />;\n  } else {\n    return system.compliant ? (\n      <CheckCircleIcon color=\"var(--pf-global--success-color--200)\" />\n    ) : (\n      <ExclamationCircleIcon color=\"var(--pf-global--danger-color--100)\" />\n    );\n  }\n};\n\nexport const complianceScoreString = (system) => {\n  if (system.supported === false) {\n    return ' Unsupported';\n  } else if (system.rulesPassed + system.rulesFailed === 0) {\n    return ' N/A';\n  }\n\n  return ' ' + fixedPercentage(system.score);\n};\n\nconst ComplianceScore = (system) => (\n  <Text>\n    {system.supported ? (\n      <Tooltip\n        content={\n          'The system compliance score is calculated by OpenSCAP and ' +\n          'is a normalized weighted sum of rules selected for this policy.'\n        }\n      >\n        <CompliantIcon\n          key={`system-compliance-icon-${system.id}`}\n          {...system}\n        />\n        {complianceScoreString(system)}\n      </Tooltip>\n    ) : (\n      complianceScoreString(system)\n    )}\n  </Text>\n);\n\nexport default ComplianceScore;\n","import React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nconst PolicyDetailsContentLoader = () => (\n  <ContentLoader\n    speed={2}\n    width={1000}\n    height={400}\n    viewBox=\"0 0 1000 400\"\n    backgroundcolor=\"#f3f3f3\"\n    foregroundcolor=\"#ecebeb\"\n  >\n    <rect x=\"-3\" y=\"7\" rx=\"3\" ry=\"3\" width=\"760\" height=\"19\" />\n    <rect x=\"823\" y=\"3\" rx=\"3\" ry=\"3\" width=\"67\" height=\"29\" />\n    <rect x=\"910\" y=\"3\" rx=\"3\" ry=\"3\" width=\"67\" height=\"29\" />\n    <rect x=\"6\" y=\"54\" rx=\"0\" ry=\"0\" width=\"46\" height=\"19\" />\n    <rect x=\"68\" y=\"54\" rx=\"0\" ry=\"0\" width=\"46\" height=\"19\" />\n    <rect x=\"133\" y=\"54\" rx=\"0\" ry=\"0\" width=\"46\" height=\"19\" />\n    <rect x=\"3\" y=\"110\" rx=\"0\" ry=\"0\" width=\"255\" height=\"17\" />\n    <rect x=\"1\" y=\"149\" rx=\"0\" ry=\"0\" width=\"47\" height=\"16\" />\n    <rect x=\"1\" y=\"185\" rx=\"0\" ry=\"0\" width=\"255\" height=\"17\" />\n    <rect x=\"-1\" y=\"224\" rx=\"0\" ry=\"0\" width=\"187\" height=\"16\" />\n    <rect x=\"-4\" y=\"267\" rx=\"0\" ry=\"0\" width=\"255\" height=\"17\" />\n    <rect x=\"-6\" y=\"306\" rx=\"0\" ry=\"0\" width=\"47\" height=\"16\" />\n    <rect x=\"-6\" y=\"342\" rx=\"0\" ry=\"0\" width=\"255\" height=\"17\" />\n    <rect x=\"-8\" y=\"381\" rx=\"0\" ry=\"0\" width=\"187\" height=\"16\" />\n  </ContentLoader>\n);\n\nexport default PolicyDetailsContentLoader;\n","import React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nconst ReportDetailsContentLoader = () => (\n  <ContentLoader\n    height={320}\n    width={1550}\n    speed={2}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n  >\n    <rect x=\"18\" y=\"50\" rx=\"4\" ry=\"4\" width=\"478\" height=\"15\" />\n    <rect x=\"19\" y=\"18\" rx=\"3\" ry=\"3\" width=\"220\" height=\"9\" />\n    <circle cx=\"118\" cy=\"156\" r=\"73\" />\n    <rect x=\"1002\" y=\"40\" rx=\"0\" ry=\"0\" width=\"69\" height=\"23\" />\n    <rect x=\"47\" y=\"77\" rx=\"0\" ry=\"0\" width=\"0\" height=\"0\" />\n    <rect x=\"36\" y=\"77\" rx=\"0\" ry=\"0\" width=\"16\" height=\"0\" />\n    <rect x=\"409\" y=\"149\" rx=\"0\" ry=\"0\" width=\"0\" height=\"0\" />\n    <rect x=\"214\" y=\"145\" rx=\"0\" ry=\"0\" width=\"205\" height=\"9\" />\n    <rect x=\"216\" y=\"119\" rx=\"0\" ry=\"0\" width=\"205\" height=\"9\" />\n    <rect x=\"526\" y=\"100\" rx=\"0\" ry=\"0\" width=\"431\" height=\"8\" />\n    <rect x=\"526\" y=\"122\" rx=\"0\" ry=\"0\" width=\"431\" height=\"8\" />\n    <rect x=\"526\" y=\"146\" rx=\"0\" ry=\"0\" width=\"431\" height=\"8\" />\n    <rect x=\"527\" y=\"170\" rx=\"0\" ry=\"0\" width=\"431\" height=\"8\" />\n    <rect x=\"527\" y=\"194\" rx=\"0\" ry=\"0\" width=\"431\" height=\"8\" />\n    <rect x=\"527\" y=\"218\" rx=\"0\" ry=\"0\" width=\"431\" height=\"8\" />\n    <rect x=\"529\" y=\"275\" rx=\"0\" ry=\"0\" width=\"231\" height=\"7\" />\n  </ContentLoader>\n);\n\nexport default ReportDetailsContentLoader;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { fixedPercentage } from 'Utilities/TextHelper';\nimport {\n  PolicyBusinessObjectiveTooltip,\n  PolicyThresholdTooltip,\n} from 'PresentationalComponents';\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  TextContent,\n  TextVariants,\n  Text,\n} from '@patternfly/react-core';\nimport Truncate from '@redhat-cloud-services/frontend-components/Truncate';\nimport linkifyHtml from 'linkifyjs/html';\n\nconst PolicyDetailsDescription = ({ policy }) => (\n  <Card ouiaId=\"PolicyDetailsCard\">\n    <CardHeader>\n      <Text style={{ fontSize: 20 }}>\n        <b>Policy details</b>\n      </Text>\n    </CardHeader>\n    <CardBody>\n      <TextContent>\n        <Text component={TextVariants.h5}>\n          Compliance threshold\n          <PolicyThresholdTooltip />\n        </Text>\n        <Text className=\"threshold-tooltip\" component={TextVariants.p}>\n          {fixedPercentage(policy.complianceThreshold, 1)}\n        </Text>\n        <Text component={TextVariants.h5}>\n          Business objective\n          <PolicyBusinessObjectiveTooltip />\n        </Text>\n        <Text component={TextVariants.p}>\n          {(policy.businessObjective && policy.businessObjective.title) || '-'}\n        </Text>\n        <Text component={TextVariants.h5}>Policy description</Text>\n        <Text component={TextVariants.p}>\n          <Truncate\n            text={linkifyHtml(policy.description || '')}\n            length={380}\n            inline={true}\n          />\n        </Text>\n        <Text component={TextVariants.h5}>Operating system</Text>\n        <Text component={TextVariants.p}>RHEL {policy.majorOsVersion}</Text>\n        <Text component={TextVariants.h5}>Policy type </Text>\n        <Text component={TextVariants.p}>{policy.policyType}</Text>\n        <Text component={TextVariants.h5}>Reference ID</Text>\n        <Text component={TextVariants.p}>{policy.refId}</Text>\n      </TextContent>\n    </CardBody>\n  </Card>\n);\n\nPolicyDetailsDescription.propTypes = {\n  policy: propTypes.object,\n};\n\nexport default PolicyDetailsDescription;\n","import React from 'react';\nimport { fixedPercentage } from 'Utilities/TextHelper';\nimport propTypes from 'prop-types';\nimport {\n  Text,\n  TextContent,\n  TextList,\n  TextListVariants,\n  TextListItem,\n  TextListItemVariants,\n} from '@patternfly/react-core';\nimport { Link } from 'react-router-dom';\n\nconst PropTypes = {\n  children: propTypes.node,\n};\n\nconst Dt = ({ children, ...props }) => (\n  <TextListItem {...props} component={TextListItemVariants.dt}>\n    {children}\n  </TextListItem>\n);\nDt.propTypes = PropTypes;\n\nconst Dd = ({ children, ...props }) => (\n  <TextListItem {...props} component={TextListItemVariants.dd}>\n    {children}\n  </TextListItem>\n);\nDd.propTypes = PropTypes;\n\nconst PolicyDescription = ({ profile }) => (\n  <React.Fragment>\n    <TextList component={TextListVariants.dl}>\n      <Dt>\n        <Text className=\"ins-c-non-bold-h2\">Policy details</Text>\n      </Dt>\n      <Dt>Operating system</Dt>\n      <Dd>RHEL {profile.majorOsVersion}</Dd>\n      <Dt>Compliance threshold</Dt>\n      <Dd>{fixedPercentage(profile.complianceThreshold, 1)}</Dd>\n      <Dt>Business objective</Dt>\n      <Dd>\n        {profile.businessObjective ? profile.businessObjective.title : '--'}\n      </Dd>\n    </TextList>\n    <Link to={'/scappolicies/' + profile.policy.id}>View policy</Link>\n  </React.Fragment>\n);\n\nPolicyDescription.propTypes = {\n  profile: propTypes.shape({\n    id: propTypes.string,\n    complianceThreshold: propTypes.number,\n    businessObjective: propTypes.object,\n    majorOsVersion: propTypes.string,\n    policy: propTypes.shape({\n      id: propTypes.string,\n    }),\n    benchmark: propTypes.shape({\n      version: propTypes.string,\n    }),\n  }),\n};\n\nconst ReportDetailsDescription = ({ profile }) => (\n  <TextContent className=\"policy-details\">\n    <PolicyDescription {...{ profile }} />\n  </TextContent>\n);\n\nReportDetailsDescription.propTypes = {\n  profile: propTypes.object,\n};\n\nexport default ReportDetailsDescription;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport {\n  Progress,\n  ProgressVariant,\n} from '@patternfly/react-core/dist/js/components/Progress';\n\nconst ProgressBar = ({ percent, failed }) => {\n  let variant;\n  let title;\n\n  if (percent === 100) {\n    title = 'Success';\n    variant = ProgressVariant.success;\n  } else if (failed) {\n    title = 'Error';\n    variant = ProgressVariant.danger;\n  } else {\n    title = 'Progress';\n    variant = ProgressVariant.info;\n  }\n\n  return (\n    <Progress\n      id={'finished-create-policy'}\n      value={percent}\n      title={title}\n      variant={variant}\n      className=\"wizard-progress-bar\"\n    />\n  );\n};\n\nProgressBar.propTypes = {\n  percent: propTypes.number,\n  failed: propTypes.bool,\n};\n\nexport default ProgressBar;\n","import React from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport propTypes from 'prop-types';\nimport { Tabs } from '@patternfly/react-core';\nimport { useAnchor } from 'Utilities/Router';\n\nexport const ContentTab = ({ children }) => children;\n\nconst useAnchorLevels = (defaultAnchor, level) => {\n  const anchor = useAnchor(defaultAnchor);\n  const levels = anchor.split('|');\n  const currentAnchor = levels[level] || defaultAnchor;\n\n  return {\n    levels,\n    currentAnchor,\n  };\n};\n\nconst TabSwitcher = (props) =>\n  props.children\n    .map((tab) => (tab.props.eventKey === props.activeKey ? tab : undefined))\n    .filter((c) => !!c);\n\nTabSwitcher.propTypes = {\n  activeTab: propTypes.number,\n  children: propTypes.node,\n};\n\nexport const RoutedTabSwitcher = ({ children, defaultTab, level }) => {\n  const { currentAnchor } = useAnchorLevels(defaultTab, level);\n\n  return children\n    .map((tab) => (tab.props.eventKey === currentAnchor ? tab : undefined))\n    .filter((c) => !!c);\n};\n\nRoutedTabSwitcher.propTypes = {\n  children: propTypes.node,\n  defaultTab: propTypes.string,\n  level: propTypes.number,\n};\n\nRoutedTabSwitcher.defaultProps = {\n  level: 0,\n};\n\nexport const RoutedTabs = ({ children, defaultTab, level, ...props }) => {\n  const { push } = useHistory();\n  const { pathname, state } = useLocation();\n  const { currentAnchor, levels } = useAnchorLevels(defaultTab, level);\n  const handleTabSelect = (e, eventKey) => {\n    e.preventDefault();\n    const tabToActivate = eventKey.replace('#', '');\n    let tabAnchor = levels;\n    tabAnchor[level] = tabToActivate;\n\n    push({\n      state,\n      to: pathname,\n      hash: tabAnchor.slice(0, level + 1).join('|'),\n    });\n  };\n\n  return (\n    <Tabs {...props} onSelect={handleTabSelect} activeKey={currentAnchor}>\n      {children}\n    </Tabs>\n  );\n};\n\nRoutedTabs.defaultProps = {\n  level: 0,\n};\n\nRoutedTabs.propTypes = {\n  children: propTypes.node,\n  defaultTab: propTypes.string,\n  level: propTypes.number,\n};\n\nexport default TabSwitcher;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { ErrorPage } from 'PresentationalComponents';\n\nexport const StateViewPart = ({ children }) => children;\n\nconst props = {\n  stateValues: propTypes.object,\n  children: propTypes.node,\n};\n\nexport const StateView = ({ stateValues, children }) =>\n  children\n    .flatMap((c) => c)\n    .filter((child) => stateValues[child.props.stateKey]);\n\nStateView.propTypes = props;\n\nexport const StateViewWithError = ({ stateValues, children }) => (\n  <StateView stateValues={stateValues}>\n    <StateViewPart key=\"error-state\" stateKey=\"error\">\n      <ErrorPage error={stateValues.error} />\n    </StateViewPart>\n    {children}\n  </StateView>\n);\n\nStateViewWithError.propTypes = props;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport { WarningText } from 'PresentationalComponents';\n\nconst WARNING_TEXT = 'Policies without systems will not have reports.';\n\nconst WithOptionalToolTip = ({ showTooltip, children }) =>\n  showTooltip ? (\n    <Tooltip position={TooltipPosition.bottom} content={WARNING_TEXT}>\n      {children}\n    </Tooltip>\n  ) : (\n    children\n  );\n\nWithOptionalToolTip.propTypes = {\n  showTooltip: propTypes.bool,\n  children: propTypes.node,\n};\n\nconst SystemsCountWarning = ({ count, variant }) => {\n  let text;\n\n  switch (variant) {\n    case 'count':\n      text = count;\n      break;\n    case 'compact':\n      text = 'No Systems';\n      break;\n    case 'full':\n      text = WARNING_TEXT;\n      break;\n    default:\n      text = count;\n  }\n\n  return (\n    <WithOptionalToolTip\n      showTooltip={variant === 'count' || variant === 'compact'}\n    >\n      <WarningText>{text}</WarningText>\n    </WithOptionalToolTip>\n  );\n};\n\nSystemsCountWarning.defaultProps = {\n  variant: 'compact',\n};\n\nSystemsCountWarning.propTypes = {\n  count: propTypes.number.isRequired,\n  variant: propTypes.string,\n};\n\nexport { WARNING_TEXT };\nexport default SystemsCountWarning;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Text } from '@patternfly/react-core';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\n\nconst WarningText = ({ children }) => (\n  <React.Fragment>\n    <ExclamationTriangleIcon className=\"ins-u-warning\" />\n    <Text component=\"span\" className=\"ins-c-warning-text\">\n      &nbsp;{children}\n    </Text>\n  </React.Fragment>\n);\n\nWarningText.propTypes = {\n  children: propTypes.node,\n};\n\nexport default WarningText;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst BackgroundLink = ({\n  to,\n  hash,\n  children,\n  state: desiredState,\n  backgroundLocation,\n  ...props\n}) => {\n  const currentLocation = useLocation();\n  const background = { ...currentLocation, ...backgroundLocation };\n  const state = { ...desiredState, background };\n\n  return (\n    <Link to={{ pathname: to, state, hash }} {...props}>\n      {children}\n    </Link>\n  );\n};\n\nBackgroundLink.propTypes = {\n  backgroundLocation: propTypes.object,\n  children: propTypes.node,\n  hash: propTypes.string,\n  state: propTypes.object,\n  to: propTypes.string.isRequired,\n};\n\nexport default BackgroundLink;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Link as ReactRouterLink } from 'react-router-dom';\nimport { BreadcrumbItem } from '@patternfly/react-core';\n\nconst RouterLink = ({ href, ...props }) => (\n  <ReactRouterLink {...props} to={href} />\n);\n\nRouterLink.propTypes = {\n  href: propTypes.string,\n};\n\nconst BreadcrumbLinkItem = ({ children, ...props }) => (\n  <BreadcrumbItem {...props} component={RouterLink}>\n    {children}\n  </BreadcrumbItem>\n);\n\nBreadcrumbLinkItem.propTypes = {\n  children: propTypes.node,\n};\n\nexport default BreadcrumbLinkItem;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { TextContent, Text, Progress } from '@patternfly/react-core';\nimport { Link } from 'react-router-dom';\nimport {\n  PolicyPopover,\n  GreySmallText,\n  UnsupportedSSGVersion,\n} from 'PresentationalComponents';\n\nexport const Name = (profile) => (\n  <TextContent>\n    <Link to={'/reports/' + profile.id} style={{ marginRight: '.5rem' }}>\n      {profile.policy?.name}\n    </Link>\n    <React.Fragment>\n      <PolicyPopover {...{ profile, position: 'right' }} />\n      <GreySmallText>{profile.policyType}</GreySmallText>\n    </React.Fragment>\n  </TextContent>\n);\n\nName.propTypes = {\n  profile: propTypes.object,\n};\n\nexport const OperatingSystem = ({\n  majorOsVersion,\n  ssgVersion,\n  unsupportedHostCount,\n  policy,\n}) => {\n  const supported = unsupportedHostCount === 0;\n  ssgVersion = 'SSG: ' + ssgVersion;\n\n  return (\n    <React.Fragment>\n      RHEL {majorOsVersion}\n      {policy === null && ssgVersion && (\n        <Text>\n          <GreySmallText>\n            {supported ? (\n              ssgVersion\n            ) : (\n              <UnsupportedSSGVersion>{ssgVersion}</UnsupportedSSGVersion>\n            )}\n          </GreySmallText>\n        </Text>\n      )}\n    </React.Fragment>\n  );\n};\n\nOperatingSystem.propTypes = {\n  majorOsVersion: propTypes.string,\n  ssgVersion: propTypes.string,\n  unsupportedHostCount: propTypes.number,\n  policy: propTypes.object,\n};\n\nexport const CompliantSystems = ({\n  testResultHostCount = 0,\n  compliantHostCount = 0,\n  unsupportedHostCount = 0,\n}) => {\n  const tooltipText =\n    'Insights cannot provide a compliance score for systems running an unsupported ' +\n    'version of the SSG at the time this report was created, as the SSG version was not supported by RHEL.';\n  return (\n    <React.Fragment>\n      <Progress\n        measureLocation={'outside'}\n        value={\n          testResultHostCount\n            ? (100 / testResultHostCount) * compliantHostCount\n            : 0\n        }\n      />\n      <GreySmallText>\n        {`${compliantHostCount} of ${testResultHostCount} systems `}\n\n        {unsupportedHostCount > 0 && (\n          <UnsupportedSSGVersion\n            {...{ tooltipText }}\n            style={{ marginLeft: '.5em' }}\n          >\n            <strong className=\"ins-c-warning-text\">\n              {unsupportedHostCount} unsupported\n            </strong>\n          </UnsupportedSSGVersion>\n        )}\n      </GreySmallText>\n    </React.Fragment>\n  );\n};\n\nCompliantSystems.propTypes = {\n  testResultHostCount: propTypes.number,\n  compliantHostCount: propTypes.number,\n  unsupportedHostCount: propTypes.number,\n};\n","import { fitContent } from '@patternfly/react-table';\nimport { renderComponent } from 'Utilities/helpers';\nimport {\n  Name as NameCell,\n  OperatingSystem as OperatingSystemCell,\n  CompliantSystems as CompliantSystemsCell,\n} from './Cells';\n\nexport const Name = {\n  title: 'Policy',\n  sortByProp: 'name',\n  props: {\n    width: 55,\n  },\n  renderFunc: renderComponent(NameCell),\n};\n\nexport const OperatingSystem = {\n  title: 'Operating system',\n  transforms: [fitContent],\n  sortByProp: 'majorOsVersion',\n  props: {\n    width: 20,\n  },\n  renderFunc: renderComponent(OperatingSystemCell),\n};\n\nexport const CompliantSystems = {\n  title: 'Systems meeting compliance',\n  transforms: [fitContent],\n  sortByFunction: ({ testResultHostCount, compliantHostCount }) =>\n    (100 / testResultHostCount) * compliantHostCount,\n  props: {\n    width: 25,\n  },\n  renderFunc: renderComponent(CompliantSystemsCell),\n};\n\nexport default [Name, OperatingSystem, CompliantSystems];\n","import { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\n\nexport const policyNameFilter = [\n  {\n    type: conditionalFilterType.text,\n    label: 'Policy name',\n    filter: (profiles, value) => {\n      const lowerCaseValue = value.toLowerCase();\n      return profiles.filter((profile) =>\n        [profile.name, profile.policy.name]\n          .join()\n          .toLowerCase()\n          .includes(lowerCaseValue)\n      );\n    },\n  },\n];\n\nexport const policyTypeFilter = (policyTypes) => [\n  {\n    type: conditionalFilterType.checkbox,\n    label: 'Policy type',\n    filter: (profiles, values) =>\n      profiles.filter(({ policyType }) => values.includes(policyType)),\n    items: policyTypes.map((policyType) => ({\n      label: policyType,\n      value: policyType,\n    })),\n  },\n];\n\nexport const operatingSystemFilter = (operatingSystems) => [\n  {\n    type: conditionalFilterType.checkbox,\n    label: 'Operating system',\n    filter: (profiles, values) =>\n      profiles.filter(({ majorOsVersion }) => values.includes(majorOsVersion)),\n    items: operatingSystems.map((operatingSystem) => ({\n      label: `RHEL ${operatingSystem}`,\n      value: operatingSystem,\n    })),\n  },\n];\n\nexport const policyComplianceFilter = [\n  {\n    type: conditionalFilterType.checkbox,\n    label: 'Systems meeting compliance',\n    filter: (profiles, values) =>\n      profiles.filter(({ testResultHostCount, compliantHostCount }) => {\n        const compliantHostsPercent = Math.round(\n          (100 / testResultHostCount) * compliantHostCount\n        );\n        const matching = values\n          .map((value) => {\n            const [min, max] = value.split('-');\n            return compliantHostsPercent >= min && compliantHostsPercent <= max;\n          })\n          .filter((i) => !!i);\n        return matching.length > 0;\n      }),\n    items: [\n      { label: '90 - 100%', value: '90-100' },\n      { label: '70 - 89%', value: '70-89' },\n      { label: '50 - 69%', value: '50-69' },\n      { label: 'Less than 50%', value: '0-49' },\n    ],\n  },\n];\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { emptyRows } from 'PresentationalComponents';\nimport { TableToolsTable } from 'Utilities/hooks/useTableTools';\nimport { uniq } from 'Utilities/helpers';\nimport columns from './Columns';\nimport {\n  policyNameFilter,\n  policyTypeFilter,\n  operatingSystemFilter,\n  policyComplianceFilter,\n} from './Filters';\n\nconst ReportsTable = ({ profiles }) => {\n  const policyTypes = uniq(\n    profiles.map(({ policyType }) => policyType).filter((i) => !!i)\n  );\n  const operatingSystems = uniq(\n    profiles.map(({ majorOsVersion }) => majorOsVersion).filter((i) => !!i)\n  );\n\n  return (\n    <TableToolsTable\n      aria-label=\"Reports\"\n      ouiaId=\"ReportsTable\"\n      columns={columns}\n      items={profiles}\n      emptyRows={emptyRows}\n      isStickyHeader\n      filters={{\n        filterConfig: [\n          ...policyNameFilter,\n          ...((policyTypes.length > 0 && policyTypeFilter(policyTypes)) || []),\n          ...((operatingSystems.length > 0 &&\n            operatingSystemFilter(operatingSystems)) ||\n            []),\n          ...policyComplianceFilter,\n        ],\n      }}\n    />\n  );\n};\n\nReportsTable.propTypes = {\n  profiles: propTypes.array,\n};\n\nexport default ReportsTable;\n","import React from 'react';\nimport { Button } from '@patternfly/react-core';\nimport ComplianceEmptyState from '../ComplianceEmptyState';\nimport { BackgroundLink } from 'PresentationalComponents';\n\nconst ReportsEmptyState = () => (\n  <ComplianceEmptyState\n    title={'No policies are reporting'}\n    mainButton={\n      <BackgroundLink to=\"/scappolicies/new\">\n        <Button variant=\"primary\" ouiaId=\"CreateNewPolicyButton\">\n          Create new policy\n        </Button>\n      </BackgroundLink>\n    }\n  />\n);\n\nexport default ReportsEmptyState;\n","import React from 'react';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport {\n  Button,\n  Popover,\n  Text,\n  TextList,\n  TextListVariants,\n  TextListItem,\n  TextListItemVariants,\n  TextContent,\n  TextVariants,\n} from '@patternfly/react-core';\nimport { fixedPercentage } from 'Utilities/TextHelper';\nimport { Link } from 'react-router-dom';\nimport propTypes from 'prop-types';\n\nconst PolicyPopover = ({ profile, position = 'top' }) => {\n  const {\n    policy,\n    policyType,\n    complianceThreshold,\n    majorOsVersion,\n    businessObjective,\n  } = profile;\n  return (\n    <Popover\n      {...{ position }}\n      headerContent={\n        <TextContent>\n          {policy?.name}\n          <Text component={TextVariants.small}>{policyType}</Text>\n        </TextContent>\n      }\n      footerContent={\n        <Link to={'/scappolicies/' + policy?.id}>View policy</Link>\n      }\n      bodyContent={\n        <TextContent className=\"policy-details\">\n          <TextList component={TextListVariants.dl}>\n            <TextListItem component={TextListItemVariants.dt}>\n              Operating system\n            </TextListItem>\n            <TextListItem component={TextListItemVariants.dd}>\n              RHEL {majorOsVersion}\n            </TextListItem>\n            <TextListItem component={TextListItemVariants.dt}>\n              Compliance threshold\n            </TextListItem>\n            <TextListItem component={TextListItemVariants.dd}>\n              {fixedPercentage(complianceThreshold, 1)}\n            </TextListItem>\n            {businessObjective && (\n              <React.Fragment>\n                <TextListItem component={TextListItemVariants.dt}>\n                  Business objective\n                </TextListItem>\n                <TextListItem component={TextListItemVariants.dd}>\n                  {businessObjective.title}\n                </TextListItem>\n              </React.Fragment>\n            )}\n          </TextList>\n        </TextContent>\n      }\n    >\n      <Button variant=\"link\" ouiaId=\"PopoverViewPolicyLink\" isInline>\n        <OutlinedQuestionCircleIcon className=\"grey-icon\" />\n      </Button>\n    </Popover>\n  );\n};\n\nPolicyPopover.propTypes = {\n  profile: propTypes.object,\n  position: propTypes.string,\n};\n\nexport default PolicyPopover;\n","import React, { Fragment } from 'react';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport { Tooltip } from '@patternfly/react-core';\n\nconst PolicyThresholdTooltip = () => (\n  <Tooltip\n    position=\"right\"\n    content={\n      <Fragment>\n        The compliance threshold defines what percentage of rules must be met in\n        order for a system to be determined &quot;compliant&quot;.\n      </Fragment>\n    }\n  >\n    <span>\n      &nbsp;\n      <OutlinedQuestionCircleIcon className=\"grey-icon\" />\n    </span>\n  </Tooltip>\n);\n\nexport default PolicyThresholdTooltip;\n","import React, { Fragment } from 'react';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport { Tooltip } from '@patternfly/react-core';\n\nconst PolicyBusinessObjectiveTooltip = () => (\n  <Tooltip\n    position=\"right\"\n    content={\n      <Fragment>\n        This is an optional field that can be used to label policies that are\n        related to specific business objectives.\n      </Fragment>\n    }\n  >\n    <span>\n      &nbsp;\n      <OutlinedQuestionCircleIcon className=\"grey-icon\" />\n    </span>\n  </Tooltip>\n);\n\nexport default PolicyBusinessObjectiveTooltip;\n","import React from 'react';\nimport {\n  Bullseye,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateVariant,\n  Title,\n} from '@patternfly/react-core';\nimport EmptyTable from '@redhat-cloud-services/frontend-components/EmptyTable';\n\nconst NoResultsTable = () => (\n  <EmptyTable>\n    <Bullseye>\n      <EmptyState variant={EmptyStateVariant.full}>\n        <Title headingLevel=\"h5\" size=\"lg\">\n          No matching policies found\n        </Title>\n        <EmptyStateBody>\n          This filter criteria matches no policies. <br /> Try changing your\n          filter settings.\n        </EmptyStateBody>\n      </EmptyState>\n    </Bullseye>\n  </EmptyTable>\n);\n\nexport const emptyRows = [\n  {\n    cells: [\n      {\n            title: () => (<NoResultsTable />),  // eslint-disable-line\n        props: {\n          colSpan: 3,\n        },\n      },\n    ],\n  },\n];\n\nexport default NoResultsTable;\n","import { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\n\nexport const nameFilter = {\n  type: conditionalFilterType.text,\n  label: 'Name',\n  filter: (policies, value) =>\n    policies.filter((policy) =>\n      policy.name.toLowerCase().includes(value.toLowerCase())\n    ),\n};\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { Button } from '@patternfly/react-core';\nimport { BackgroundLink, emptyRows } from 'PresentationalComponents';\nimport { TableToolsTable } from 'Utilities/hooks/useTableTools';\nimport columns from './Columns';\nimport * as Filters from './Filters';\n\nconst DedicatedAction = () => (\n  <div>\n    <BackgroundLink to=\"/scappolicies/new\">\n      <Button variant=\"primary\" ouiaId=\"CreateNewPolicyButton\">\n        Create new policy\n      </Button>\n    </BackgroundLink>\n  </div>\n);\n\nexport const PoliciesTable = ({ policies, location, history }) => {\n  const filters = Object.values(Filters);\n\n  const actionResolver = () => [\n    {\n      title: 'Delete policy',\n      onClick: (_event, _index, { itemId: policyId }) => {\n        const policy = policies.find((policy) => policy.id === policyId);\n        history.push(`/scappolicies/${policyId}/delete`, {\n          policy,\n          background: location,\n        });\n      },\n    },\n    {\n      title: 'Edit policy',\n      onClick: (_event, _index, { itemId: policyId }) => {\n        const policy = policies.find((policy) => policy.id === policyId);\n        history.push(`/scappolicies/${policyId}/edit`, {\n          policy,\n          background: location,\n          state: { policy },\n        });\n      },\n    },\n  ];\n\n  return (\n    <TableToolsTable\n      aria-label=\"Policies\"\n      ouiaId=\"PoliciesTable\"\n      className=\"compliance-policies-table\"\n      columns={columns}\n      items={policies}\n      emptyRows={emptyRows}\n      isStickyHeader\n      filters={{\n        filterConfig: filters,\n      }}\n      options={{\n        dedicatedAction: DedicatedAction,\n      }}\n      actionResolver={actionResolver}\n    />\n  );\n};\n\nPoliciesTable.propTypes = {\n  policies: propTypes.array.isRequired,\n  history: propTypes.object.isRequired,\n  location: propTypes.object.isRequired,\n};\n\nPoliciesTable.defaultProps = {\n  policies: [],\n};\n\nexport default withRouter(PoliciesTable);\n","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { FormGroup } from '@patternfly/react-core';\nimport { ReduxFormTextInput } from 'PresentationalComponents/ReduxFormWrappers/ReduxFormWrappers';\nimport propTypes from 'prop-types';\nimport round from 'lodash/round';\nimport { thresholdValid } from '../../SmartComponents/CreatePolicy/validate';\nimport { PolicyThresholdTooltip } from 'PresentationalComponents';\n\nexport class ProfileThresholdField extends React.Component {\n  state = {\n    validThreshold: thresholdValid(this.props.previousThreshold),\n    threshold: round(this.props.previousThreshold || 100, 1),\n  };\n\n  handleThresholdChange = (threshold) =>\n    this.setState({\n      validThreshold: thresholdValid(threshold),\n      threshold: round(threshold, 1),\n    });\n\n  render() {\n    const { threshold, validThreshold } = this.state;\n\n    return (\n      <React.Fragment>\n        <FormGroup\n          fieldId=\"policy-threshold\"\n          validated={validThreshold ? 'default' : 'error'}\n          helperTextInvalid=\"Threshold has to be a number between 0 and 100\"\n          helperText=\"A value of 95% or higher is recommended\"\n          labelIcon={<PolicyThresholdTooltip />}\n          label=\"Compliance threshold (%)\"\n        >\n          <Field\n            name=\"complianceThreshold\"\n            id=\"complianceThreshold\"\n            isRequired={true}\n            onChange={this.handleThresholdChange}\n            validated={validThreshold ? 'default' : 'error'}\n            defaultValue={threshold}\n            aria-label=\"compliance threshold\"\n            component={ReduxFormTextInput}\n            type=\"number\"\n            style={{ width: '60%', display: 'block' }}\n          />\n        </FormGroup>\n      </React.Fragment>\n    );\n  }\n}\n\nProfileThresholdField.propTypes = {\n  previousThreshold: propTypes.number,\n};\n\nexport default reduxForm({\n  form: 'policyForm',\n  destroyOnUnmount: false,\n  forceUnregisterOnUnmount: true,\n})(ProfileThresholdField);\n","import React from 'react';\nimport { supportedConfigsLink } from '../UnsupportedSSGVersion/UnsupportedSSGVersion';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\n\nconst SupportedSSGVersionsLink = () => (\n  <a target=\"_blank\" rel=\"noopener noreferrer\" href={supportedConfigsLink}>\n    Supported SSG versions <ExternalLinkAltIcon />\n  </a>\n);\n\nexport default SupportedSSGVersionsLink;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Text } from '@patternfly/react-core';\n\nconst SubPageTitle = ({ children }) => (\n  <Text\n    component=\"h2\"\n    style={{\n      color: 'var(--pf-global--Color--200)',\n      lineHeight: '2rem',\n    }}\n  >\n    {children}\n  </Text>\n);\n\nSubPageTitle.propTypes = {\n  children: propTypes.node,\n};\n\nexport default SubPageTitle;\n","import React from 'react';\nimport {\n  EmptyStateBody,\n  EmptyState,\n  EmptyStateVariant,\n  Text,\n  TextContent,\n  TextVariants,\n  Title,\n  Bullseye,\n} from '@patternfly/react-core';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\nimport { WARNING_TEXT } from 'PresentationalComponents';\n\nconst NoSystemsTableWithWarning = () => (\n  <Bullseye>\n    <EmptyState variant={EmptyStateVariant.full}>\n      <Title headingLevel=\"h2\" size=\"lg\" style={{ fontWeight: 'bold' }}>\n        No systems on this policy\n      </Title>\n      <EmptyStateBody>\n        <TextContent>\n          <Text component={TextVariants.p}>\n            Add systems to this policy from the systems page\n          </Text>\n          <Text style={{ color: 'var(--pf-global--warning-color--100)' }}>\n            <ExclamationTriangleIcon /> {WARNING_TEXT}\n          </Text>\n        </TextContent>\n      </EmptyStateBody>\n    </EmptyState>\n  </Bullseye>\n);\n\nexport default NoSystemsTableWithWarning;\n","import React from 'react';\n\nconst ConditionalLink = ({ children, href, ...additionalProps }) =>\n  (href && (\n    <a href={href} {...additionalProps}>\n      {children}\n    </a>\n  )) ||\n  children ||\n  '';\n\nexport default ConditionalLink;\n","export const validateBenchmarkPage = (benchmark, osMajorVersion, profile) => {\n  if (benchmark && osMajorVersion && profile) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport const thresholdValid = (threshold) => threshold < 101 && threshold >= 0;\n\nexport const validateDetailsPage = (name, refId, complianceThreshold) =>\n  !name ||\n  !refId ||\n  !complianceThreshold ||\n  !thresholdValid(complianceThreshold)\n    ? false\n    : true;\n\nexport const validateRulesPage = (selectedRuleRefIds) =>\n  selectedRuleRefIds?.length > 0;\n\nexport const validateSystemsPage = (systemIds) => {\n  if (systemIds) {\n    return systemIds.length > 0;\n  } else {\n    return false;\n  }\n};\n","export const isNumberRange = (value) => value && !!value.match(/\\d\\d*-\\d\\d*/);\n\nexport const fixedPercentage = (value, fixed = 0, withPercent = true) => {\n  const fixedValue = value?.toFixed(fixed);\n  return fixedValue ? fixedValue + (withPercent ? '%' : '') : 'N/A';\n};\n\nexport const pluralize = (value, singular, plural) => {\n  if (!plural) {\n    plural = singular + 's';\n  }\n\n  return value > 1 || value === 0 ? plural : singular;\n};\n\nexport const stringToId = (string) => string.replace(' ', '').toLowerCase();\n","import React from 'react';\n\nexport const uniq = (collection) => [...new Set(collection)];\n\nexport const sortingByProp =\n  (propName, order = 'asc') =>\n  (objA, objB) => {\n    const propA = (objA && objA[propName]) || '';\n    const propB = (objB && objB[propName]) || '';\n    if (propA === propB) {\n      return 0;\n    } else if (order === 'asc') {\n      return propA < propB ? -1 : 1;\n    } else {\n      return propA < propB ? 1 : -1;\n    }\n  };\n\n// eslint-disable-next-line react/display-name\nexport const renderComponent = (Component, props) => (_data, _id, entity) =>\n  <Component {...entity} {...props} />;\n\nconst getSortable = (property, item) => {\n  if (typeof property === 'function') {\n    return property(item);\n  } else {\n    return item[property];\n  }\n};\n\nexport const stringToId = (string) => string.split(' ').join('').toLowerCase();\n\nexport const orderArrayByProp = (property, objects, direction) =>\n  objects.sort((a, b) => {\n    if (direction === 'asc') {\n      return String(getSortable(property, a)).localeCompare(\n        String(getSortable(property, b))\n      );\n    } else {\n      return -String(getSortable(property, a)).localeCompare(\n        String(getSortable(property, b))\n      );\n    }\n  });\n\nexport const orderByArray = (objectArray, orderProp, orderArray, direction) => {\n  const sortedObjectArray = orderArray.flatMap((orderKey) =>\n    objectArray.filter((item) => item[orderProp] === orderKey)\n  );\n  return direction !== 'asc' ? sortedObjectArray.reverse() : sortedObjectArray;\n};\n\nexport const getProperty = (obj, path, fallback) => {\n  const parts = path.split('.');\n  const key = parts.shift();\n  if (typeof obj[key] !== 'undefined') {\n    return parts.length > 0\n      ? getProperty(obj[key], parts.join('.'), fallback)\n      : obj[key];\n  }\n\n  return fallback;\n};\n\nexport const camelCase = (string) =>\n  string\n    .split(/[-_\\W]+/g)\n    .map((string) => string.trim())\n    .map((string) => string[0].toUpperCase() + string.substring(1))\n    .join('');\n","import { useState } from 'react';\nimport { sortable } from '@patternfly/react-table';\nimport { orderArrayByProp, orderByArray, uniq } from 'Utilities/helpers';\n\nconst isSortable = (column) => column.sortByProp || column.sortByFunction;\n\nconst addSortableTransform = (columns) =>\n  columns.map((column) => ({\n    ...column,\n    ...(isSortable(column)\n      ? {\n          transforms: uniq([...(column?.transforms || []), sortable]),\n        }\n      : {}),\n  }));\n\nconst columnOffset = (options = {}) =>\n  (typeof options.onSelect === 'function') +\n  (typeof options.detailsComponent !== 'undefined');\n\nconst useTableSort = (columns, options = {}) => {\n  const [sortBy, setSortBy] = useState(\n    options.sortBy || {\n      index: 0,\n      direction: 'asc',\n    }\n  );\n  const onSort = (_, index, direction) =>\n    setSortBy({\n      index,\n      direction,\n    });\n  const currentSortableColumn = columns[sortBy.index - columnOffset(options)];\n  const sorter = (items) =>\n    currentSortableColumn?.sortByArray\n      ? orderByArray(\n          items,\n          currentSortableColumn?.sortByProp,\n          currentSortableColumn?.sortByArray,\n          sortBy.direction\n        )\n      : orderArrayByProp(\n          currentSortableColumn?.sortByProp ||\n            currentSortableColumn?.sortByFunction,\n          items,\n          sortBy.direction\n        );\n\n  return {\n    sorter,\n    tableProps: {\n      onSort,\n      sortBy,\n      cells: addSortableTransform(columns),\n    },\n  };\n};\n\nexport default useTableSort;\n","import { useState } from 'react';\n\nconst usePaginate = (options = {}) => {\n  const { perPage = 10 } = options;\n  const enablePagination = options?.pagination !== false;\n\n  const [paginationState, setPaginationState] = useState({\n    perPage,\n    page: 1,\n  });\n  const setPagination = (newState) =>\n    setPaginationState({\n      ...paginationState,\n      ...newState,\n    });\n\n  const onSetPage = (_, page) => setPagination({ ...paginationState, page });\n\n  const onPerPageSelect = (_, perPage) => setPagination({ page: 1, perPage });\n\n  const paginator = (items) => {\n    const { page, perPage } = paginationState;\n    const start = (page - 1) * perPage;\n    const end = start + perPage;\n\n    return items.slice(start, end);\n  };\n\n  const setPage = (page) => {\n    const nextPage = page < 0 ? paginationState.page + page : page;\n    setPagination({\n      page: nextPage > 0 ? nextPage : 1,\n    });\n  };\n\n  return enablePagination\n    ? {\n        paginator,\n        setPage,\n        toolbarProps: {\n          pagination: {\n            ...paginationState,\n            onSetPage,\n            onPerPageSelect,\n          },\n        },\n      }\n    : {};\n};\n\nexport default usePaginate;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport {\n  Bullseye,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateVariant,\n  Title,\n} from '@patternfly/react-core';\nimport EmptyTable from '@redhat-cloud-services/frontend-components/EmptyTable';\n\nexport const NoResultsTable = ({ kind = 'results' }) => (\n  <EmptyTable>\n    <Bullseye>\n      <EmptyState variant={EmptyStateVariant.full}>\n        <Title headingLevel=\"h5\" size=\"lg\">\n          No matching {kind} found\n        </Title>\n        <EmptyStateBody>\n          This filter criteria matches no {kind}.<br />\n          Try changing your filter settings.\n        </EmptyStateBody>\n      </EmptyState>\n    </Bullseye>\n  </EmptyTable>\n);\n\nNoResultsTable.propTypes = {\n  kind: propTypes.string,\n};\n\nexport const emptyRows = [\n  {\n    cells: [\n      {\n            title: () => (<NoResultsTable />),  // eslint-disable-line\n        props: {\n          colSpan: 3,\n        },\n      },\n    ],\n  },\n];\n\nexport default NoResultsTable;\n","import { emptyRows } from './Components/NoResultsTable';\n\nconst columnProp = (column) =>\n  column.key || column.original?.toLowerCase() || column.title?.toLowerCase();\n\nconst itemRow = (item, columns) => ({\n  ...item.rowProps,\n  itemId: item.itemId,\n  cells: columns.map((column) => ({\n    title: column.renderFunc\n      ? column.renderFunc(undefined, undefined, item)\n      : item[columnProp(column)],\n  })),\n});\n\nconst primeItem = (item, transformers) => {\n  let newItem = item;\n\n  transformers.forEach((transformer) => {\n    if (transformer) {\n      newItem = transformer(newItem);\n    }\n  });\n\n  return newItem;\n};\n\nconst applyTransformers = (items, transformers = []) =>\n  items.map((item) => primeItem(item, transformers));\n\nconst buildRow = (item, columns, rowTransformer, idx) =>\n  rowTransformer.flatMap((transformer) => {\n    const row = itemRow(item, columns);\n    return transformer ? transformer(row, item, columns, idx) : row;\n  });\n\nconst useRowsBuilder = (items, columns, options = {}) => {\n  const { transformer = [], rowTransformer = [] } = options;\n  const EmptyRowsComponent = options.emptyRows || emptyRows;\n  const transformedItems = transformer\n    ? applyTransformers(items, transformer)\n    : items;\n\n  const filteredItems = options?.filter\n    ? options.filter(transformedItems)\n    : transformedItems;\n\n  const sortedItems = options?.sorter\n    ? options.sorter(filteredItems)\n    : filteredItems;\n\n  const paginatedItems = options?.paginator\n    ? options?.paginator(sortedItems)\n    : sortedItems;\n\n  const rows =\n    paginatedItems.length > 0\n      ? paginatedItems\n          .flatMap((item, idx) => buildRow(item, columns, rowTransformer, idx))\n          .filter((v) => !!v)\n      : EmptyRowsComponent;\n\n  const pagination = options?.pagination\n    ? {\n        ...options.pagination,\n        itemCount: filteredItems.length,\n      }\n    : undefined;\n\n  return {\n    tableProps: {\n      rows,\n    },\n    toolbarProps: {\n      pagination,\n    },\n  };\n};\n\nexport default useRowsBuilder;\n","const getIdProp = (item, idProp = 'id') => item[idProp];\n\nconst identify = (item, identifier) => {\n  if (typeof identifier === 'string') {\n    return {\n      ...item,\n      itemId: getIdProp(item, identifier),\n    };\n  } else {\n    return {\n      ...item,\n      itemId: identifier(item),\n    };\n  }\n};\n\nexport const useItemIdentify = (items, options = {}) => {\n  const identifier = options?.identifier || getIdProp;\n\n  return items.map((item) => identify(item, identifier));\n};\n\nexport default useItemIdentify;\n","import React, { useState } from 'react';\n\nconst childRowForRule = (item, idx, DetailsComponent) => ({\n  parent: idx * 2,\n  fullWidth: true,\n  cells: [\n    { title: <DetailsComponent rule={item} key={'item-' + item.rowId} /> },\n  ],\n});\n\nconst itemDetailsRow = (item, idx, options) =>\n  typeof options?.detailsComponent !== 'undefined' &&\n  childRowForRule(item, idx, options.detailsComponent);\n\nconst useExpandable = (options) => {\n  const enableExpanbale = !!options.detailsComponent;\n  const [openItems, setOpenItems] = useState([]);\n  const onCollapse = (_event, _index, _isOpen, row) => {\n    if (openItems.includes(row.itemId)) {\n      setOpenItems(openItems.filter((itemId) => itemId !== row.itemId));\n    } else {\n      setOpenItems([...openItems, row.itemId]);\n    }\n  };\n\n  const openItem = (row, item, _columns, rowIndex) => {\n    const isOpen = openItems.includes(item.itemId);\n    const newRow = {\n      ...row,\n      isOpen,\n    };\n    const expandableRow = itemDetailsRow(item, rowIndex, options);\n\n    return [newRow, expandableRow];\n  };\n\n  return enableExpanbale\n    ? {\n        transformer: openItem,\n        tableProps: {\n          onCollapse,\n        },\n      }\n    : {};\n};\n\nexport default useExpandable;\n","import React from 'react';\n\nconst useDedicatedAction = (options) => {\n  const enableDedicatedAction = !!options.dedicatedAction;\n  const {\n    dedicatedAction: DedicatedActionOption,\n    AdditionalDedicatedActions,\n    selected,\n  } = options;\n\n  return enableDedicatedAction\n    ? {\n        toolbarProps: {\n          dedicatedAction: (\n            <div>\n              {DedicatedActionOption && (\n                <DedicatedActionOption {...(selected && { selected })} />\n              )}\n              {AdditionalDedicatedActions && (\n                <AdditionalDedicatedActions {...(selected && { selected })} />\n              )}\n            </div>\n          ),\n        },\n      }\n    : {};\n};\n\nexport default useDedicatedAction;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Pagination, PaginationVariant } from '@patternfly/react-core';\nimport { Table, TableBody, TableHeader } from '@patternfly/react-table';\nimport PrimaryToolbar from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport TableToolbar from '@redhat-cloud-services/frontend-components/TableToolbar';\nimport useTableTools from '../useTableTools';\n\nconst TableToolsTable = ({\n  items = [],\n  columns = [],\n  filters = [],\n  options = {},\n  toolbarProps: toolbarPropsProp,\n  ...tablePropsRest\n}) => {\n  const { toolbarProps, tableProps } = useTableTools(items, columns, {\n    filters,\n    toolbarProps: toolbarPropsProp,\n    tableProps: tablePropsRest,\n    ...options,\n  });\n\n  return (\n    <React.Fragment>\n      <PrimaryToolbar {...toolbarProps} />\n\n      <Table {...tableProps}>\n        <TableHeader />\n        <TableBody />\n      </Table>\n\n      <TableToolbar isFooter>\n        <Pagination\n          variant={PaginationVariant.bottom}\n          {...toolbarProps.pagination}\n        />\n      </TableToolbar>\n    </React.Fragment>\n  );\n};\n\nTableToolsTable.propTypes = {\n  items: propTypes.array.isRequired,\n  columns: propTypes.arrayOf(\n    propTypes.shape({\n      title: propTypes.node,\n      transforms: propTypes.array,\n      sortByProperty: propTypes.string,\n      sortByArray: propTypes.array,\n      sortByFunction: propTypes.func,\n      renderFunc: propTypes.func,\n    })\n  ).isRequired,\n  filters: propTypes.object,\n  options: propTypes.object,\n  toolbarProps: propTypes.object,\n};\n\nexport default TableToolsTable;\n","import useFilterConfig from './useFilterConfig';\nimport useTableSort from './useTableSort';\nimport usePaginate from './usePaginate';\nimport useRowsBuilder from './useRowsBuilder';\nimport { useBulkSelectWithItems } from './useBulkSelect';\nimport useItemIdentify from './useItemIdentify';\nimport useExpandable from './useExpandable';\nimport useDedicatedAction from './useDedicatedAction';\n\nconst useTableTools = (items = [], columns = [], options = {}) => {\n  const { toolbarProps: toolbarPropsOption, tableProps: tablePropsOption } =\n    options;\n\n  const identifiedItems = useItemIdentify(items, options);\n\n  const { tableProps: sortableTableProps, sorter } = useTableSort(\n    columns,\n    options\n  );\n\n  const {\n    toolbarProps: pagintionToolbarProps,\n    setPage,\n    paginator,\n  } = usePaginate(options);\n\n  const {\n    toolbarProps: conditionalFilterProps,\n    filter,\n    selectedFilterToolbarProps,\n  } = useFilterConfig({\n    ...options,\n    setPage,\n  });\n\n  const { transformer: openItem, tableProps: expandableProps } =\n    useExpandable(options);\n\n  const {\n    transformer: selectItem,\n    toolbarProps: bulkSelectToolbarProps,\n    tableProps: bulkSelectTableProps,\n    selectedItems,\n  } = useBulkSelectWithItems({\n    ...options,\n    items: sorter(identifiedItems),\n    filter,\n    paginator,\n    setPage,\n  });\n\n  const { toolbarProps: dedicatedActionToolbarProps } = useDedicatedAction({\n    ...options,\n    selected: selectedItems,\n    additionalDedicatedActions: selectedFilterToolbarProps?.dedicatedAction,\n  });\n\n  const {\n    toolbarProps: rowBuilderToolbarProps,\n    tableProps: rowBuilderTableProps,\n  } = useRowsBuilder(identifiedItems, sortableTableProps.cells, {\n    emptyRows: options.emptyRows,\n    transformer: [selectItem],\n    rowTransformer: [openItem],\n    pagination: pagintionToolbarProps?.pagination,\n    paginator,\n    filter,\n    sorter,\n  });\n\n  const toolbarProps = {\n    ...pagintionToolbarProps,\n    ...bulkSelectToolbarProps,\n    ...conditionalFilterProps,\n    ...selectedFilterToolbarProps,\n    ...dedicatedActionToolbarProps,\n    ...rowBuilderToolbarProps,\n    ...toolbarPropsOption,\n  };\n\n  const tableProps = {\n    cells: columns,\n    ...rowBuilderTableProps,\n    ...sortableTableProps,\n    ...bulkSelectTableProps,\n    ...expandableProps,\n    ...tablePropsOption,\n  };\n\n  return {\n    toolbarProps,\n    tableProps,\n  };\n};\n\nexport default useTableTools;\n","export const filterSelected = (items, selectedIds = []) =>\n  items.filter((item) => selectedIds.includes(item.itemId));\n","import { useEffect, useMemo, useState } from 'react';\nimport { filterSelected } from './helper';\n\nconst compileTitle = (itemsTotal, titleOption) => {\n  if (typeof titleOption === 'string') {\n    return titleOption;\n  } else if (typeof titleOption === 'function') {\n    return titleOption(itemsTotal);\n  } else {\n    return `${itemsTotal} selected`;\n  }\n};\n\nconst checkboxState = (selectedItemsTotal, itemsTotal) => {\n  if (selectedItemsTotal === 0) {\n    return false;\n  } else if (selectedItemsTotal === itemsTotal) {\n    return true;\n  } else {\n    return null;\n  }\n};\n\nconst allItemsIncluded = (items, selection = []) =>\n  items.filter((item) => selection.includes(item)).length === items.length;\n\nconst selectOrUnselect = (selected) => (selected ? 'Unselect' : 'Select');\n\nconst checkCurrentPageSelected = (items, selectedItems) => {\n  if (selectedItems.length === 0) {\n    return false;\n  } else {\n    return allItemsIncluded(items, selectedItems);\n  }\n};\n\nconst itemIds = (items) => items.map((item) => item.itemId);\nconst mergeArraysUniqly = (arrayA, arrayB) =>\n  Array.from(new Set([...arrayA, ...arrayB]));\n\nexport const useBulkSelect = ({\n  total,\n  onSelect,\n  preselected,\n  itemIdsInTable,\n  itemIdsOnPage,\n  identifier = 'id',\n}) => {\n  const enableBulkSelect = !!onSelect;\n  const [selectedIds, setSelectedItemIds] = useState(preselected);\n  const selectedIdsTotal = (selectedIds || []).length;\n  const paginatedTotal = itemIdsOnPage().length;\n  const allSelected = selectedIdsTotal === total;\n  const noneSelected = selectedIdsTotal === 0;\n  const currentPageSelected = checkCurrentPageSelected(\n    itemIdsOnPage(),\n    selectedIds || []\n  );\n\n  const isDisabled = total === 0;\n  const checked = checkboxState(selectedIdsTotal, total);\n  const title = compileTitle(selectedIdsTotal);\n\n  const onSelectCallback = async (func) => {\n    const newSelectedItemsIds = await func();\n    setSelectedItemIds(newSelectedItemsIds);\n    onSelect && onSelect(newSelectedItemsIds);\n  };\n\n  const selectItems = (itemIds) => mergeArraysUniqly(selectedIds, itemIds);\n\n  const unselectItems = (itemIds) =>\n    selectedIds.filter((itemId) => !itemIds.includes(itemId));\n\n  const unselectAll = () => [];\n  const selectNone = () => onSelectCallback(unselectAll);\n  const selectOne = (_, selected, key, row) =>\n    onSelectCallback(() =>\n      selected\n        ? selectItems([row[identifier]])\n        : unselectItems([row[identifier]])\n    );\n\n  const selectPage = () =>\n    onSelectCallback(() => {\n      const currentPageIds = itemIdsOnPage();\n      const currentPageSelected =\n        mergeArraysUniqly(selectedIds, currentPageIds).length ===\n        selectedIds.length;\n\n      return currentPageSelected\n        ? unselectItems(currentPageIds)\n        : selectItems(currentPageIds);\n    });\n\n  const selectAll = () =>\n    onSelectCallback(async () =>\n      allSelected ? unselectAll() : selectItems(await itemIdsInTable())\n    );\n\n  useEffect(() => {\n    setSelectedItemIds(preselected);\n  }, [preselected]);\n\n  return enableBulkSelect\n    ? {\n        selectedIds,\n        selectNone,\n        tableProps: {\n          onSelect: total > 0 ? selectOne : undefined,\n          canSelectAll: false,\n        },\n        toolbarProps: {\n          bulkSelect: {\n            toggleProps: { children: [title] },\n            isDisabled,\n            items: [\n              {\n                title: 'Select none',\n                onClick: selectNone,\n                props: {\n                  isDisabled: noneSelected,\n                },\n              },\n              {\n                title: `${selectOrUnselect(\n                  currentPageSelected\n                )} page (${paginatedTotal} items)`,\n                onClick: selectPage,\n              },\n              {\n                title: `${selectOrUnselect(allSelected)} all (${total} items)`,\n                onClick: selectAll,\n              },\n            ],\n            checked,\n            onSelect: !isDisabled ? selectPage : undefined,\n          },\n        },\n      }\n    : {};\n};\n\nconst selectItemTransformer = (item, selectedIds) => ({\n  ...item,\n  rowProps: {\n    selected: (selectedIds || []).includes(item.itemId),\n  },\n});\n\nexport const useBulkSelectWithItems = ({\n  onSelect,\n  items: propItems,\n  filter,\n  paginator,\n  preselected,\n  setPage,\n}) => {\n  const enableBulkSelect = !!onSelect;\n  const items = propItems.map((item) =>\n    selectItemTransformer(item, preselected)\n  );\n  const total = items.length;\n\n  const filteredItems = filter ? filter(items) : items;\n  const filteredTotal = filteredItems.length;\n  const filtered = filteredTotal !== total;\n\n  const paginatedItems = paginator ? paginator(filteredItems) : filteredItems;\n  const paginatedTotal = paginatedItems.length;\n\n  const allCount = filtered ? filteredTotal : total;\n\n  const setPageMemo = useMemo(() => setPage, []);\n\n  useEffect(() => {\n    if (paginatedTotal === 0) {\n      setPageMemo(-1);\n    }\n  }, [paginatedTotal, setPageMemo]);\n\n  const { selectNone, selectedIds, ...bulkSelect } = useBulkSelect({\n    total: allCount,\n    onSelect,\n    preselected,\n    itemIdsInTable: () => (filtered ? itemIds(filteredItems) : itemIds(items)),\n    itemIdsOnPage: () => itemIds(paginatedItems),\n    identifier: 'itemId',\n  });\n\n  return enableBulkSelect\n    ? {\n        transformer: (item) => selectItemTransformer(item, selectedIds),\n        selectedItems: filterSelected(items, selectedIds),\n        selected: selectedIds,\n        clearSelection: selectNone,\n        ...bulkSelect,\n      }\n    : {};\n};\n","export const stringToId = (string) => string.split(' ').join('').toLowerCase();\n","import { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\nimport { stringToId } from './Helpers';\n\nclass FilterBuilder {\n  constructor(filterConfig) {\n    this.filterConfig = filterConfig;\n    this.config = this.filterConfig.config;\n  }\n\n  buildFilterFilterString = (configItem, value) => {\n    const { type, filterString } = configItem;\n\n    if (type !== 'hidden' && !value) {\n      return [];\n    }\n\n    switch (type) {\n      case conditionalFilterType.text:\n        return [filterString(value)];\n      case conditionalFilterType.checkbox:\n        return value.map((filter) => filterString(filter));\n\n      case conditionalFilterType.group:\n        return filterString(value);\n\n      case 'hidden':\n        return filterString();\n\n      default:\n        return [];\n    }\n  };\n\n  combineFilterStrings = (filterStringArray) => {\n    const moreThanTwo =\n      filterStringArray.map((f) => f.length).filter((fl) => fl > 0).length >= 2;\n    return filterStringArray\n      .map((fs) => fs.join(' or '))\n      .join(moreThanTwo ? ' and ' : '');\n  };\n\n  buildFilterString = (filters) => {\n    const filterStringArray = this.config\n      .map((configItem) =>\n        this.buildFilterFilterString(\n          configItem,\n          filters[stringToId(configItem.label)]\n        )\n      )\n      .filter((f) => f.length > 0);\n    return this.combineFilterStrings(filterStringArray);\n  };\n}\n\nexport default FilterBuilder;\n","import { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\n\nconst findWithString = (value) => (item) =>\n  String(item.value) === String(value);\n\nclass ChipBuilder {\n  constructor(filterConfig) {\n    this.filterConfig = filterConfig;\n    this.config = this.filterConfig.config;\n  }\n\n  textFilterChip = (category, currentValue) =>\n    currentValue && currentValue !== ''\n      ? {\n          category,\n          chips: [{ name: currentValue }],\n        }\n      : null;\n\n  checkboxFilterChip = (category, currentValue) =>\n    currentValue && currentValue.length > 0\n      ? {\n          category,\n          chips: currentValue.map((value) => ({\n            name: this.filterConfig.labelForValue(value, category),\n          })),\n        }\n      : null;\n\n  radioFilterChip = (category, currentValue) =>\n    currentValue && currentValue !== ''\n      ? {\n          category,\n          chips: [\n            { name: this.filterConfig.labelForValue(currentValue, category) },\n          ],\n        }\n      : null;\n\n  groupFilterChip = (category, currentValue = {}, categoryConfig) => {\n    const items = Object.keys(currentValue)\n      .flatMap((groupValue) => {\n        const group = categoryConfig.items.find(findWithString(groupValue));\n\n        return Object.keys(currentValue[groupValue]).map((itemValue) =>\n          currentValue[groupValue][itemValue]\n            ? group?.items.find(findWithString(itemValue))\n            : null\n        );\n      })\n      .filter((v) => !!v);\n\n    return currentValue && items.length > 0\n      ? {\n          category,\n          chips: items.map((item) => ({ name: item.label })),\n        }\n      : null;\n  };\n\n  chipFor = (filter, currentValue) => {\n    const categoryConfig = this.filterConfig.getCategoryForLabel(filter);\n    const { label, type } = categoryConfig\n      ? categoryConfig\n      : { label: filter, type: null };\n\n    switch (type) {\n      case conditionalFilterType.text:\n        return this.textFilterChip(label, currentValue);\n\n      case conditionalFilterType.checkbox:\n        return this.checkboxFilterChip(label, currentValue);\n\n      case conditionalFilterType.radio:\n        return this.radioFilterChip(label, currentValue);\n\n      case conditionalFilterType.group:\n        return this.groupFilterChip(label, currentValue, categoryConfig);\n\n      default:\n        return null;\n    }\n  };\n\n  chipsFor = (filters) =>\n    Object.keys(filters)\n      .map((filter) => this.chipFor(filter, filters[filter]))\n      .filter((f) => !!f);\n}\n\nexport default ChipBuilder;\n","import { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\nimport FilterBuilder from './FilterBuilder';\nimport ChipBuilder from './ChipBuilder';\nimport { stringToId } from './Helpers';\n\nconst defaultPlaceholder = (label) => `Filter by ${label.toLowerCase()}`;\n\nclass FilterConfigBuilder {\n  chipBuilder = null;\n  filterBuilder = null;\n\n  constructor(config) {\n    this.config = config;\n  }\n\n  addConfigItem = (item) =>\n    (this.config = this.config\n      .filter((i) => i.label !== item.label)\n      .concat(item));\n\n  getChipBuilder = (config) => {\n    if (config) {\n      this.config = config;\n    }\n\n    return (this.chipBuilder = this.chipBuilder\n      ? this.chipBuilder\n      : new ChipBuilder(this));\n  };\n\n  getFilterBuilder = (config) => {\n    if (config) {\n      this.config = config;\n    }\n\n    return (this.filterBuilder = this.filterBuilder\n      ? this.filterBuilder\n      : new FilterBuilder(this));\n  };\n\n  toTextFilterConfig = (item, handler, value) => ({\n    type: conditionalFilterType.text,\n    label: item.label,\n    placeholder: defaultPlaceholder(item.label),\n    id: stringToId(item.label),\n    filterValues: {\n      value,\n      [item.event || 'onChange']: (_event, selectedValues) => {\n        handler(stringToId(item.label), selectedValues);\n      },\n    },\n  });\n\n  toCheckboxFilterConfig = (item, handler, value) => ({\n    type: conditionalFilterType.checkbox,\n    label: item.label,\n    placeholder: defaultPlaceholder(item.label),\n    id: stringToId(item.label),\n    filterValues: {\n      value,\n      items: item.items,\n      onChange: (_event, selectedValues) => {\n        handler(stringToId(item.label), selectedValues);\n      },\n    },\n  });\n\n  toRadioFilterConfig = (item, handler, value) => ({\n    type: conditionalFilterType.radio,\n    label: item.label,\n    placeholder: defaultPlaceholder(item.label),\n    id: stringToId(item.label),\n    filterValues: {\n      value,\n      items: item.items,\n      onChange: (_event, selectedValues) => {\n        handler(stringToId(item.label), selectedValues);\n      },\n    },\n  });\n\n  toGroupedFilterConfig = (item, handler, value) => ({\n    type: conditionalFilterType.group,\n    label: item.label,\n    id: stringToId(item.label),\n    filterValues: {\n      selected: value,\n      onChange: (_event, selectedValues) => {\n        handler(stringToId(item.label), selectedValues);\n      },\n      groups: item.items.map((item) => ({\n        ...item,\n        type: 'checkbox',\n        items: item.items.map((subItem) => ({\n          ...subItem,\n          type: 'checkbox',\n        })),\n      })),\n    },\n  });\n\n  toFilterConfigItem = (item, handler, value) => {\n    switch (item.type) {\n      case conditionalFilterType.text:\n        return this.toTextFilterConfig(item, handler, value);\n\n      case conditionalFilterType.checkbox:\n        return this.toCheckboxFilterConfig(item, handler, value);\n\n      case conditionalFilterType.radio:\n        return this.toRadioFilterConfig(item, handler, value);\n\n      case conditionalFilterType.group:\n        return this.toGroupedFilterConfig(item, handler, value);\n\n      default:\n        return null;\n    }\n  };\n\n  buildConfiguration = (handler, states, props = {}, initConfig) => ({\n    ...props,\n    items: (initConfig || this.config)\n      .map((item) =>\n        this.toFilterConfigItem(item, handler, states[stringToId(item.label)])\n      )\n      .filter((v) => !!v),\n  });\n\n  defaultValueForFilter = (filter) => {\n    switch (filter.type) {\n      case conditionalFilterType.text:\n        return '';\n      case conditionalFilterType.checkbox:\n        return [];\n      case 'hidden':\n        return filter.default || false;\n      default:\n        return;\n    }\n  };\n\n  initialDefaultState = (defaultStates = {}, initConfig) => {\n    let initialState = {};\n    (initConfig || this.config).forEach((filter) => {\n      const filterStateName = stringToId(filter.key || filter.label);\n      initialState[filterStateName] =\n        defaultStates[filterStateName] || this.defaultValueForFilter(filter);\n    });\n\n    return initialState;\n  };\n\n  categoryLabelForValue = (value) => {\n    const category = this.config.filter((category) =>\n      category.items\n        ? category.items.map((item) => item.value).includes(value)\n        : false\n    )[0];\n\n    return category ? category.label : value;\n  };\n\n  getCategoryForLabel = (query) =>\n    this.config.filter(\n      (item) => stringToId(item.key || item.label) === stringToId(query)\n    )[0] || {};\n\n  getItemByLabelOrValue = (query, category) => {\n    const categoryConfig = this.getCategoryForLabel(category);\n    const items =\n      categoryConfig.type !== conditionalFilterType.group\n        ? categoryConfig.items\n        : categoryConfig.items.flatMap((item) =>\n            item.items.map((subItem) => ({\n              ...subItem,\n              parentValue: item.value,\n            }))\n          );\n    const results = (items || []).filter(\n      (item) => item.value === query || item.label === query\n    );\n\n    if (results.length === 1) {\n      return results[0];\n    } else if (results.length > 1) {\n      // eslint-disable-next-line no-console\n      console.info(\n        `Multiple items found for ${query} in ${category}! Returning first one.`\n      );\n      return results[0];\n    } else {\n      // eslint-disable-next-line no-console\n      console.info('No item found for ' + query + ' in ', category);\n    }\n  };\n\n  labelForValue = (value, category) => {\n    const item = this.getItemByLabelOrValue(value, category);\n    return item ? item.label : value;\n  };\n\n  valueForLabel = (label, category) => {\n    const item = this.getItemByLabelOrValue(label, category);\n    return item ? item.value : label;\n  };\n\n  applyFilterToObjectArray = (objects, activeFilters) => {\n    let filteredObjects = [...objects];\n\n    Object.keys(activeFilters).forEach((filter) => {\n      const category = this.getCategoryForLabel(filter);\n      const value = activeFilters[filter];\n      if (!category || !value) {\n        return;\n      }\n\n      if (\n        value.length > 0 ||\n        (category.type === 'hidden' && typeof value === 'boolean')\n      ) {\n        filteredObjects = category.filter(filteredObjects, value);\n      }\n    });\n\n    return filteredObjects;\n  };\n\n  removeFilterFromFilterState = (currentState, filter) =>\n    typeof currentState === 'string'\n      ? ''\n      : currentState.filter((value) => value !== filter);\n\n  removeFilterFromGroupFilterState = (currentState, filter, chipItem) => {\n    // eslint-disable-next-line\n        const { [chipItem.value]: _remove, ...newGroupState } = currentState[chipItem.parentValue];\n    return {\n      ...currentState,\n      [chipItem.parentValue]: newGroupState,\n    };\n  };\n\n  removeFilterWithChip = (chips, activeFilters) => {\n    const chipCategory = chips.category;\n    const chipLabel = chips.chips[0].name;\n    const chipItem = this.getItemByLabelOrValue(chipLabel, chipCategory);\n    const chipValue = chipItem ? chipItem.value : chipLabel;\n    const stateProp = stringToId(chipCategory);\n    const currentState = activeFilters[stateProp];\n    const categoryConfig = this.getCategoryForLabel(chipCategory);\n    const isGroup = categoryConfig.type === conditionalFilterType.group;\n    const newFilterState = (\n      isGroup\n        ? this.removeFilterFromGroupFilterState\n        : this.removeFilterFromFilterState\n    )(currentState, chipValue, chipItem);\n\n    return {\n      ...activeFilters,\n      [stateProp]: newFilterState,\n    };\n  };\n}\n\nexport default FilterConfigBuilder;\n","import React from 'react';\nimport { Switch } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\n\nconst SelectedFilterSwitch = ({ isChecked, setActiveFilter }) => (\n  <Switch\n    label=\"Selected only\"\n    isChecked={isChecked}\n    onChange={() => setActiveFilter('selected', !isChecked)}\n  />\n);\n\nSelectedFilterSwitch.propTypes = {\n  isChecked: propTypes.bool,\n  setActiveFilter: propTypes.func,\n};\n\nexport default SelectedFilterSwitch;\n","import React from 'react';\nimport SelectedFilterSwitch from './Components/SelectedFilterSwitch';\n\nconst useSelectedFilter = ({\n  setActiveFilter,\n  activeFilters,\n  selectedFilter,\n}) => {\n  const enableSelectedFilter = !!selectedFilter;\n  const filterKey = 'selected';\n  const filterItem = {\n    type: 'hidden',\n    label: 'selectFilter',\n    key: filterKey,\n    default: true,\n    filter: (items, value) => {\n      return items.filter((item) => item?.rowProps?.selected === value);\n    },\n  };\n  const isChecked = activeFilters[filterKey] === true;\n  const selectedToggle = (\n    <SelectedFilterSwitch\n      {...{\n        setActiveFilter,\n        isChecked,\n      }}\n    />\n  );\n\n  return enableSelectedFilter\n    ? {\n        filterItem,\n        toolbarProps: {\n          dedicatedAction: selectedToggle,\n        },\n      }\n    : {};\n};\n\nexport default useSelectedFilter;\n","import { useState, useEffect, useMemo } from 'react';\nimport FilterConfigBuilder from './FilterConfigBuilder/FilterConfigBuilder';\nimport useSelectedFilter from './useSelectedFilter';\n\nconst filterValues = (activeFilters) =>\n  Object.values(activeFilters).filter((value) => {\n    if (typeof value === Object) {\n      return Object.values(value).length > 0;\n    }\n\n    if (typeof value === Array) {\n      return value.length > 0;\n    }\n\n    return !!value;\n  });\n\nconst filterConfigBuilder = new FilterConfigBuilder([]);\n\nconst useFilterConfig = (options = {}) => {\n  const { filters, setPage, selectedFilter } = options;\n  const enableFilters = !!filters;\n  const { filterConfig = [], activeFilters: initialActiveFilters } =\n    filters || {};\n  const [activeFilters, setActiveFilters] = useState(\n    filterConfigBuilder.initialDefaultState(initialActiveFilters, filterConfig)\n  );\n  const onFilterUpdate = (filter, value) => {\n    setActiveFilters({\n      ...activeFilters,\n      [filter]: value,\n    });\n\n    setPage && setPage(1);\n  };\n\n  const addConfigItem = (item) => {\n    filterConfigBuilder.addConfigItem(item);\n    setActiveFilters(filterConfigBuilder.initialDefaultState(activeFilters));\n  };\n\n  const clearAllFilter = () =>\n    setActiveFilters(filterConfigBuilder.initialDefaultState());\n\n  const deleteFilter = (chips) =>\n    setActiveFilters(\n      filterConfigBuilder.removeFilterWithChip(chips, activeFilters)\n    );\n  const onFilterDelete = (_event, chips, clearAll = false) =>\n    clearAll ? clearAllFilter() : deleteFilter(chips[0]);\n\n  const filter = (items) =>\n    filterConfigBuilder.applyFilterToObjectArray(items, activeFilters);\n\n  const {\n    toolbarProps: selectedFilterToolbarProps,\n    filterItem: selectFilterItem,\n  } = useSelectedFilter({\n    activeFilters,\n    setActiveFilter: onFilterUpdate,\n    selectedFilter,\n  });\n\n  const activeFilterValues = useMemo(\n    () => filterValues(activeFilters),\n    [activeFilters]\n  );\n\n  const filterConfigWithSelected = [\n    ...filterConfig,\n    ...(selectFilterItem ? [selectFilterItem] : []),\n  ];\n\n  useEffect(() => {\n    filterConfigBuilder.config = [];\n    filterConfigWithSelected.filter((v) => !!v).forEach(addConfigItem);\n    setActiveFilters(\n      filterConfigBuilder.initialDefaultState(initialActiveFilters || []),\n      filterConfig\n    );\n\n    return () => {\n      filterConfigBuilder.config = [];\n    };\n  }, []);\n\n  return enableFilters\n    ? {\n        filter,\n        selectedFilterToolbarProps,\n        toolbarProps: {\n          filterConfig: filterConfigBuilder.buildConfiguration(\n            onFilterUpdate,\n            activeFilters,\n            {},\n            filterConfigWithSelected\n          ),\n          activeFiltersConfig: {\n            filters: filterConfigBuilder\n              .getChipBuilder(filterConfigWithSelected)\n              .chipsFor(activeFilters),\n            onDelete: onFilterDelete,\n          },\n        },\n        setActiveFilter: onFilterUpdate,\n        activeFilters,\n        activeFilterValues,\n        addConfigItem,\n        filterConfigBuilder,\n        filterString: () =>\n          filterConfigBuilder\n            .getFilterBuilder(filterConfigWithSelected)\n            .buildFilterString(activeFilters),\n      }\n    : {};\n};\n\nexport default useFilterConfig;\n","export const profilesRulesFailed = (profiles) =>\n  profiles.flatMap(\n    (profile) =>\n      profile.rules && profile.rules.filter((rule) => !rule.compliant)\n  );\n\nexport const profilesRulesPassed = (profiles) =>\n  profiles.flatMap(\n    (profile) => profile.rules && profile.rules.filter((rule) => rule.compliant)\n  );\n\nexport const systemRulesPassed = (system) =>\n  system.testResultProfiles\n    ? profilesRulesPassed(system.testResultProfiles)\n    : [];\n\nexport const systemRulesFailed = (system) =>\n  system.testResultProfiles\n    ? profilesRulesFailed(system.testResultProfiles)\n    : [];\n\nexport const systemSupportedByProfiles = (profiles = []) =>\n  profiles.reduce((acc, profile) => acc && !!profile.supported, true);\n\nexport const systemsWithRuleObjectsFailed = (systems) =>\n  systems.map((system) => ({\n    ...system,\n    ruleObjectsFailed: systemRulesFailed(system),\n    supported: systemSupportedByProfiles(system.testResultProfiles),\n    profiles: system.testResultProfiles,\n  }));\n\nexport const toRulesArrayWithProfile = (profilesWithRules) =>\n  profilesWithRules.flatMap((profileWithRules) =>\n    profileWithRules.rules.map((rule) => {\n      const identifier = rule.identifier && JSON.parse(rule.identifier);\n      return {\n        ...rule,\n        references: rule.references ? JSON.parse(rule.references) : [],\n        identifier: identifier && identifier.label ? identifier : null,\n        profile: profileWithRules.profile,\n      };\n    })\n  );\n"],"sourceRoot":""}