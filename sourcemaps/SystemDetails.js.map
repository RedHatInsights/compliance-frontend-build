{"version":3,"sources":["webpack:///./src/SmartComponents/SystemDetails/SystemDetails.js"],"names":["QUERY","gql","SystemDetails","inventoryId","useParams","useQuery","variables","data","error","loading","location","useLocation","hidePassed","query","systemName","system","name","stateValues","stateKey","to","isActive","size","SkeletonSize","md"],"mappings":"icA2BA,IAAMA,EAAQC,IAAH,KASEC,EAAgB,WAAM,MACvBC,EAAgBC,cAAhBD,YADuB,EAEEE,mBAASL,EAAO,CAC7CM,UAAW,CAAEH,iBADTI,EAFuB,EAEvBA,KAAMC,EAFiB,EAEjBA,MAAOC,EAFU,EAEVA,QAGfC,EAAWC,cACXC,EAAaF,EAASG,OAASH,EAASG,MAAMD,WAC9CE,EAAaP,SAAH,UAAGA,EAAMQ,cAAT,aAAG,EAAcC,KAEjC,OAAO,kBAAC,IAAD,CAAoBC,YAAc,CAAET,QAAOD,OAAME,YACpD,kBAAC,IAAD,CAAeS,SAAS,QACpB,kBAAC,aAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAoBC,GAAG,YAAvB,WAGA,kBAAC,IAAD,CAAgBC,UAAQ,GAAGN,IAE/B,kBAAC,IAAD,MACA,8BAEJ,kBAAC,OAAD,KACI,kBAAC,IAAD,CAAyBF,WAAaA,EAAaT,YAAcA,MAGzE,kBAAC,IAAD,CAAee,SAAS,WACpB,kBAAC,aAAD,KACI,kBAAC,WAAD,CAAUG,KAAOC,eAAaC,SAM/BrB","file":"js/SystemDetails.js","sourcesContent":["import React from 'react';\nimport gql from 'graphql-tag';\nimport {\n    useQuery\n} from '@apollo/react-hooks';\nimport {\n    useLocation,\n    useParams\n} from 'react-router-dom';\nimport {\n    PageHeader,\n    Main,\n    Skeleton,\n    SkeletonSize\n} from '@redhat-cloud-services/frontend-components';\nimport {\n    Breadcrumb,\n    BreadcrumbItem\n} from '@patternfly/react-core';\nimport ComplianceSystemDetails from '@redhat-cloud-services/frontend-components-inventory-compliance';\nimport {\n    BreadcrumbLinkItem,\n    StateViewWithError,\n    StateViewPart\n} from 'PresentationalComponents';\nimport { InventoryDetails } from 'SmartComponents';\n\nconst QUERY = gql`\nquery System($inventoryId: String!){\n    system(id: $inventoryId) {\n        id\n        name\n    }\n}\n`;\n\nexport const SystemDetails = () => {\n    const { inventoryId } = useParams();\n    const { data, error, loading } = useQuery(QUERY, {\n        variables: { inventoryId }\n    });\n    const location = useLocation();\n    const hidePassed = location.query && location.query.hidePassed;\n    const systemName = data?.system?.name;\n\n    return <StateViewWithError stateValues={ { error, data, loading } }>\n        <StateViewPart stateKey='data'>\n            <PageHeader>\n                <Breadcrumb>\n                    <BreadcrumbLinkItem to='/systems'>\n                        Systems\n                    </BreadcrumbLinkItem>\n                    <BreadcrumbItem isActive>{ systemName }</BreadcrumbItem>\n                </Breadcrumb>\n                <InventoryDetails />\n                <br/>\n            </PageHeader>\n            <Main>\n                <ComplianceSystemDetails hidePassed={ hidePassed } inventoryId={ inventoryId } />\n            </Main>\n        </StateViewPart>\n        <StateViewPart stateKey='loading'>\n            <PageHeader>\n                <Skeleton size={ SkeletonSize.md } />\n            </PageHeader>\n        </StateViewPart>\n    </StateViewWithError>;\n};\n\nexport default SystemDetails;\n"],"sourceRoot":""}