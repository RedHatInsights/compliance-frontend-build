{"version":3,"sources":["webpack:///./src/SmartComponents/SystemDetails/SystemDetails.js","webpack:///./src/Utilities/Breadcrumbs.js"],"names":["QUERY","gql","SystemDetails","history","useHistory","location","useLocation","hidePassed","query","inventoryId","useParams","useQuery","variables","data","error","loading","networkError","statusCode","window","insights","chrome","auth","logout","size","SkeletonSize","md","Fragment","to","onClick","event","onNavigate","isActive","system","name","preventDefault","path","target","pathname","replace","COMPLIANCE_UI_ROOT","this","props","push"],"mappings":"sYA2BA,IAAMA,EAAQC,IAAH,KAkDIC,UA1CO,WAClB,IAAMC,EAAUC,cACVC,EAAWC,cACXC,EAAaF,EAASG,OAASH,EAASG,MAAMD,WAC5CE,EAAgBC,cAAhBD,YAJgB,EAKSE,YAASX,EAAO,CAC7CY,UAAW,CAAEH,iBADTI,EALgB,EAKhBA,KAAMC,EALU,EAKVA,MAAOC,EALG,EAKHA,QAKrB,OAAID,GACsC,MAAlCA,EAAME,aAAaC,YACnBC,OAAOC,SAASC,OAAOC,KAAKC,SAGzB,qCAAuCR,GAG9CC,EACQ,kBAAC,aAAD,KAAY,kBAAC,WAAD,CAAUQ,KAAOC,eAAaC,MAIlD,kBAAC,IAAMC,SAAP,KACI,kBAAC,aAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAgBC,GAAG,2BAA2BC,QAlB9C,SAACC,GAAD,OAAWC,YAAWD,EAAO1B,KAkB7B,WAGA,kBAAC,IAAD,CAAgB4B,UAAQ,GAAGlB,EAAKmB,OAAOC,OAE3C,kBAAC,IAAD,MACA,8BAEJ,kBAAC,OAAD,KACMxB,GACE,kBAAC,IAAD,CAAyBF,WAAaA,EAAaE,YAAcA,Q,iCCvErF,+CAEO,SAASqB,EAAWD,EAAO1B,GAC9B0B,EAAMK,iBACN,IAAMC,EAAON,EAAMO,OAAOC,SAASC,QAAQC,IAAoB,KAC9DpC,GAAoBqC,KAAKC,MAAMtC,SAASuC,KAAKP","file":"js/SystemDetails.js","sourcesContent":["import React from 'react';\nimport gql from 'graphql-tag';\nimport {\n    useQuery\n} from '@apollo/react-hooks';\nimport {\n    useHistory,\n    useLocation,\n    useParams\n} from 'react-router-dom';\nimport {\n    PageHeader,\n    Main,\n    Skeleton,\n    SkeletonSize\n} from '@redhat-cloud-services/frontend-components';\nimport {\n    Breadcrumb,\n    BreadcrumbItem\n} from '@patternfly/react-core';\nimport ComplianceSystemDetails from '@redhat-cloud-services/frontend-components-inventory-compliance';\nimport {\n    onNavigate\n} from 'Utilities/Breadcrumbs';\n\nimport InventoryDetails from 'SmartComponents';\n\nconst QUERY = gql`\nquery System($inventoryId: String!){\n    system(id: $inventoryId) {\n        name\n    }\n}\n`;\n\nconst SystemDetails = () => {\n    const history = useHistory();\n    const location = useLocation();\n    const hidePassed = location.query && location.query.hidePassed;\n    const { inventoryId } = useParams();\n    const { data, error, loading } = useQuery(QUERY, {\n        variables: { inventoryId }\n    });\n    const onClick = (event) => onNavigate(event, history);\n\n    if (error) {\n        if (error.networkError.statusCode === 401) {\n            window.insights.chrome.auth.logout();\n        }\n\n        return 'Oops! Error loading Systems data: ' + error;\n    }\n\n    if (loading) {\n        return (<PageHeader><Skeleton size={ SkeletonSize.md } /></PageHeader>);\n    }\n\n    return (\n        <React.Fragment>\n            <PageHeader>\n                <Breadcrumb>\n                    <BreadcrumbItem to='/rhel/compliance/systems' onClick={ onClick }>\n                        Systems\n                    </BreadcrumbItem>\n                    <BreadcrumbItem isActive>{ data.system.name }</BreadcrumbItem>\n                </Breadcrumb>\n                <InventoryDetails />\n                <br/>\n            </PageHeader>\n            <Main>\n                { inventoryId &&\n                    <ComplianceSystemDetails hidePassed={ hidePassed } inventoryId={ inventoryId } /> }\n            </Main>\n        </React.Fragment>\n    );\n};\n\nexport default SystemDetails;\n","import { COMPLIANCE_UI_ROOT } from '../constants';\n\nexport function onNavigate(event, history) {\n    event.preventDefault();\n    const path = event.target.pathname.replace(COMPLIANCE_UI_ROOT, '');\n    (history ? history : this.props.history).push(path);\n}\n"],"sourceRoot":""}