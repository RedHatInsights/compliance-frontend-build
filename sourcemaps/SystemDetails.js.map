{"version":3,"sources":["webpack:///./src/Utilities/Breadcrumbs.js","webpack:///./src/SmartComponents/SystemDetails/SystemDetails.js"],"names":["onNavigate","event","history","preventDefault","path","target","pathname","replace","COMPLIANCE_UI_ROOT","this","props","push","QUERY","gql","SystemDetails","useHistory","location","useLocation","inventoryId","match","params","hidePassed","query","useQuery","variables","data","error","loading","networkError","statusCode","window","insights","chrome","auth","logout","size","SkeletonSize","md","Fragment","to","onClick","isActive","system","name","propTypes","object"],"mappings":"0FAAA,+CAEO,SAASA,EAAWC,EAAOC,GAC9BD,EAAME,iBACN,IAAMC,EAAOH,EAAMI,OAAOC,SAASC,QAAQC,IAAoB,KAC9DN,GAAoBO,KAAKC,MAAMR,SAASS,KAAKP,K,kYCclD,IAAMQ,E,MAAQC,GAAH,KAQEC,EAAgB,SAACJ,GAC1B,IAAIR,EAAUa,cACVC,EAAWC,cAEQC,EACnBR,EADAS,MAASC,OAAUF,YAEjBG,EAAaL,EAASM,OAASN,EAASM,MAAMD,WANhB,EAOHE,YAASX,EAAO,CAC7CY,UAAW,CAAEN,iBADTO,EAP4B,EAO5BA,KAAMC,EAPsB,EAOtBA,MAAOC,EAPe,EAOfA,QAIrB,OAAID,GACsC,MAAlCA,EAAME,aAAaC,YACnBC,OAAOC,SAASC,OAAOC,KAAKC,SAGzB,qCAAuCR,GAG9CC,EACQ,kBAAC,aAAD,KAAY,kBAAC,WAAD,CAAUQ,KAAOC,eAAaC,MAIlD,kBAAC,IAAMC,SAAP,KACI,kBAAC,aAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAgBC,GAAG,2BAA2BC,QAAU,SAACvC,GAAD,OAAWD,YAAWC,EAAOC,KAArF,WAGA,kBAAC,IAAD,CAAgBuC,UAAQ,GAAEhB,EAAKiB,OAAOC,OAE1C,kBAAC,IAAD,MACA,8BAEJ,kBAAC,OAAD,KACI,kBAAC,IAAD,CAAyBtB,WAAYA,OAMrDP,EAAc8B,UAAY,CACtBzB,MAAOyB,IAAUC,OACjB7B,SAAU4B,IAAUC,QAGT/B","file":"js/SystemDetails.js","sourcesContent":["import { COMPLIANCE_UI_ROOT } from '../constants';\n\nexport function onNavigate(event, history) {\n    event.preventDefault();\n    const path = event.target.pathname.replace(COMPLIANCE_UI_ROOT, '');\n    (history ? history : this.props.history).push(path);\n}\n","import React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport propTypes from 'prop-types';\nimport {\n    PageHeader,\n    Main,\n    Skeleton,\n    SkeletonSize\n} from '@redhat-cloud-services/frontend-components';\nimport { onNavigate } from '../../Utilities/Breadcrumbs';\nimport {\n    Breadcrumb,\n    BreadcrumbItem\n} from '@patternfly/react-core';\nimport InventoryDetails from 'SmartComponents';\nimport ComplianceSystemDetails from '@redhat-cloud-services/frontend-components-inventory-compliance';\nimport gql from 'graphql-tag';\n\nconst QUERY = gql`\nquery System($inventoryId: String!){\n    system(id: $inventoryId) {\n        name\n    }\n}\n`;\n\nexport const SystemDetails = (props) => {\n    let history = useHistory();\n    let location = useLocation();\n    const {\n        match: { params: { inventoryId } }\n    } = props;\n    const hidePassed = location.query && location.query.hidePassed;\n    const { data, error, loading } = useQuery(QUERY, {\n        variables: { inventoryId }\n    });\n\n    if (error) {\n        if (error.networkError.statusCode === 401) {\n            window.insights.chrome.auth.logout();\n        }\n\n        return 'Oops! Error loading Systems data: ' + error;\n    }\n\n    if (loading) {\n        return (<PageHeader><Skeleton size={ SkeletonSize.md } /></PageHeader>);\n    }\n\n    return (\n        <React.Fragment>\n            <PageHeader>\n                <Breadcrumb>\n                    <BreadcrumbItem to='/rhel/compliance/systems' onClick={ (event) => onNavigate(event, history) }>\n                        Systems\n                    </BreadcrumbItem>\n                    <BreadcrumbItem isActive>{data.system.name}</BreadcrumbItem>\n                </Breadcrumb>\n                <InventoryDetails />\n                <br/>\n            </PageHeader>\n            <Main>\n                <ComplianceSystemDetails hidePassed={hidePassed} />\n            </Main>\n        </React.Fragment>\n    );\n};\n\nSystemDetails.propTypes = {\n    match: propTypes.object,\n    location: propTypes.object\n};\n\nexport default SystemDetails;\n"],"sourceRoot":""}