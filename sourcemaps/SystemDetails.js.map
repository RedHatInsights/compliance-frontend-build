{"version":3,"sources":["webpack:///./src/Utilities/Breadcrumbs.js","webpack:///./src/SmartComponents/InventoryDetails/InventoryDetails.js","webpack:///./src/SmartComponents/SystemDetails/SystemDetails.js"],"names":["onNavigate","event","item","this","props","history","push","__webpack_require__","d","__webpack_exports__","InventoryDetails_InventoryDetails","Object","insights_frontend_components","InventoryDetails","_this","classCallCheck_default","possibleConstructorReturn_default","getPrototypeOf_default","call","state","InventoryCmp","react_default","a","createElement","fetchInventory","bind","assertThisInitialized_default","insights","loadInventory","react","reactRouterDom","es","reactCore","esm","reactIcons","dist_esm","inventoryConnector","mergeWithDetail","getRegistry","register","objectSpread_default","setState","InventoryDetail","Fragment","hideBack","Component","propTypes","entity","prop_types_default","object","SmartComponents_InventoryDetails_InventoryDetails","QUERY","src_default","_templateObject","SystemDetails_SystemDetails","SystemDetails","Breadcrumbs","_this2","systemId","match","params","inventoryId","react_apollo_browser_umd","query","variables","_ref","data","error","loading","networkError","statusCode","window","chrome","auth","logout","style","padding","items","title","navigate","current","system","name","sendData","getData"],"mappings":"0FAAO,SAASA,EAAWC,EAAOC,GAC9BC,KAAKC,MAAMC,QAAQC,KAAKJ,GAD5BK,EAAAC,EAAAC,EAAA,sBAAAT,oTCQMU,EADLC,OAAAC,EAAA,SAAAD,iBAEG,SAAAE,EAAYT,GAAO,IAAAU,EAAA,OAAAC,IAAAZ,KAAAU,IACfC,EAAAE,IAAAb,KAAAc,IAAAJ,GAAAK,KAAAf,KAAMC,KACDe,OACDC,aAAc,kBAAMC,EAAAC,EAAAC,cAAA,2BAGxBT,EAAKU,eAAiBV,EAAKU,eAAeC,KAApBC,QAAAZ,KACtBA,EAAKU,iBAPUV,0LAcLa,SAASC,eACfC,MAAOR,EAAAC,EACPQ,eAAAC,EACAC,UAAAC,EACAC,WAAAC,oBANAC,uBACAC,oBAQJlC,KAAKmC,cAAcC,SAAnBC,OACOH,MAGPlC,KAAKsC,UACDrB,aAAcgB,IAAqBM,qJAIlC,IACGtB,EAAiBjB,KAAKgB,MAAtBC,aACR,OACIC,EAAAC,EAAAC,cAACF,EAAAC,EAAMqB,SAAP,KACItB,EAAAC,EAAAC,cAACH,GAAawB,UAAQ,YAnCPvB,EAAAC,EAAMuB,eAyCrCnC,EAAiBoC,WACbC,OAAQC,EAAA1B,EAAU2B,QAGP,IAAAC,EAAA,2KC5Cf,IAAMC,QAAQC,GAAHC,KAQLC,cACF,SAAAC,EAAYnD,GAAO,IAAAU,EAAA,OAAAC,IAAAZ,KAAAoD,IACfzC,EAAAE,IAAAb,KAAAc,IAAAsC,GAAArC,KAAAf,KAAMC,KACDJ,WAAawD,EAAA,EAAW/B,KAAXC,QAAAZ,KAFHA,wDAKV,IAAA2C,EAAAtD,KACCuD,EAAWvD,KAAKC,MAAMuD,MAAMC,OAAOC,YACzC,OACIxC,EAAAC,EAAAC,cAACuC,EAAA,OAAMC,MAAOZ,EAAOa,WAAaN,aAC7B,SAAAO,GAA8B,IAA3BC,EAA2BD,EAA3BC,KAAMC,EAAqBF,EAArBE,MAAOC,EAAcH,EAAdG,QACb,OAAID,GACsC,MAAlCA,EAAME,aAAaC,YACnBC,OAAO5C,SAAS6C,OAAOC,KAAKC,SAGzB,qCAAuCP,GAG9CC,EACQ/C,EAAAC,EAAAC,cAACX,EAAA,WAAD,kCAIRS,EAAAC,EAAAC,cAACF,EAAAC,EAAMqB,SAAP,KACItB,EAAAC,EAAAC,cAACX,EAAA,WAAD,KACIS,EAAAC,EAAAC,cAACX,EAAA,aACG+D,OAASC,QAAS,OAClBC,QAAUC,MAAO,UAAWC,SAAU,aACtCC,QAASd,EAAKe,OAAOC,KACrBlF,WAAYyD,EAAKzD,aAErBqB,EAAAC,EAAAC,cAAC2B,GAAiBiC,SAAU1B,EAAK2B,UACjC/D,EAAAC,EAAAC,cAAA,YAEJF,EAAAC,EAAAC,cAACX,EAAA,KAAD,KACIS,EAAAC,EAAAC,cAACX,EAAA,WAAD,iBApCJS,EAAAC,EAAMuB,WA8ClCS,EAAcR,WACVa,MAAOX,EAAA1B,EAAU2B,QAGNxC,EAAA,QAAAE,OAAAC,EAAA,cAAa0C","file":"js/SystemDetails.js","sourcesContent":["export function onNavigate(event, item) {\n    this.props.history.push(item);\n}\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport * as reactRouterDom from 'react-router-dom';\nimport * as reactCore from '@patternfly/react-core';\nimport * as reactIcons from '@patternfly/react-icons';\nimport { registry as registryDecorator } from '@red-hat-insights/insights-frontend-components';\n\n@registryDecorator()\nclass InventoryDetails extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            InventoryCmp: () => <div>Loading...</div>\n        };\n\n        this.fetchInventory = this.fetchInventory.bind(this);\n        this.fetchInventory();\n    }\n\n    async fetchInventory() {\n        const {\n            inventoryConnector,\n            mergeWithDetail\n        } = await insights.loadInventory({\n            react: React,\n            reactRouterDom,\n            reactCore,\n            reactIcons\n        });\n\n        this.getRegistry().register({\n            ...mergeWithDetail()\n        });\n\n        this.setState({\n            InventoryCmp: inventoryConnector().InventoryDetail\n        });\n    }\n\n    render() {\n        const { InventoryCmp } = this.state;\n        return (\n            <React.Fragment>\n                <InventoryCmp hideBack />\n            </React.Fragment>\n        );\n    }\n}\n\nInventoryDetails.propTypes = {\n    entity: propTypes.object\n};\n\nexport default InventoryDetails;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Breadcrumbs, PageHeader, Main, routerParams } from '@red-hat-insights/insights-frontend-components';\nimport { onNavigate } from '../../Utilities/Breadcrumbs';\nimport InventoryDetails from '../InventoryDetails/InventoryDetails';\nimport { Compliance as ComplianceSystemDetails } from '@red-hat-insights/insights-frontend-components';\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\n\nconst QUERY = gql`\nquery System($systemId: String!){\n    system(id: $systemId) {\n        name\n    }\n}\n`;\n\nclass SystemDetails extends React.Component {\n    constructor(props) {\n        super(props);\n        this.onNavigate = onNavigate.bind(this);\n    }\n\n    render() {\n        const systemId = this.props.match.params.inventoryId;\n        return (\n            <Query query={QUERY} variables={{ systemId }}>\n                {({ data, error, loading }) => {\n                    if (error) {\n                        if (error.networkError.statusCode === 401) {\n                            window.insights.chrome.auth.logout();\n                        }\n\n                        return 'Oops! Error loading Systems data: ' + error;\n                    }\n\n                    if (loading) {\n                        return (<PageHeader>Loading System details...</PageHeader>);\n                    }\n\n                    return (\n                        <React.Fragment>\n                            <PageHeader>\n                                <Breadcrumbs\n                                    style={{ padding: '0px' }}\n                                    items={[{ title: 'Systems', navigate: '/systems' }]}\n                                    current={data.system.name}\n                                    onNavigate={this.onNavigate}\n                                />\n                                <InventoryDetails sendData={this.getData} />\n                                <br/>\n                            </PageHeader>\n                            <Main>\n                                <ComplianceSystemDetails />\n                            </Main>\n                        </React.Fragment>\n                    );\n                }}\n            </Query>\n        );\n    }\n}\n\nSystemDetails.propTypes = {\n    match: propTypes.object\n};\n\nexport default routerParams(SystemDetails);\n"],"sourceRoot":""}