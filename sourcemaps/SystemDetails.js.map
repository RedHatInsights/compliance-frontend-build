{"version":3,"sources":["webpack:///./src/SmartComponents/SystemDetails/SystemDetails.js","webpack:///./node_modules/@patternfly/react-core/dist/js/components/Breadcrumb/Breadcrumb.js"],"names":["QUERY","gql","SystemDetails","inventoryId","useParams","useQuery","variables","data","error","loading","location","useLocation","hidePassed","query","systemName","system","name","stateValues","stateKey","to","isActive","size","SkeletonSize","md","Object","defineProperty","exports","value","tslib_1","React","__importStar","breadcrumb_1","__importDefault","react_styles_1","helpers_1","Breadcrumb","_a","children","className","ariaLabel","ouiaId","ouiaSafe","props","__rest","createElement","assign","css","default","breadcrumb","getOUIAProps","displayName","breadcrumbList","Children","map","child","index","showDivider","isValidElement","cloneElement"],"mappings":"odA2BA,IAAMA,EAAQC,IAAH,KASEC,EAAgB,WAAM,MACvBC,EAAgBC,cAAhBD,YADuB,EAEEE,mBAASL,EAAO,CAC7CM,UAAW,CAAEH,iBADTI,EAFuB,EAEvBA,KAAMC,EAFiB,EAEjBA,MAAOC,EAFU,EAEVA,QAGfC,EAAWC,cACXC,EAAaF,EAASG,OAASH,EAASG,MAAMD,WAC9CE,EAAaP,SAAH,UAAGA,EAAMQ,cAAT,aAAG,EAAcC,KAEjC,OAAO,kBAAC,IAAD,CAAoBC,YAAc,CAAET,QAAOD,OAAME,YACpD,kBAAC,IAAD,CAAeS,SAAS,QACpB,kBAAC,aAAD,KACI,kBAAC,aAAD,KACI,kBAAC,IAAD,CAAoBC,GAAG,YAAvB,WAGA,kBAAC,iBAAD,CAAgBC,UAAQ,GAAGN,IAE/B,kBAAC,IAAD,MACA,8BAEJ,kBAAC,OAAD,KACI,kBAAC,IAAD,CAAyBF,WAAaA,EAAaT,YAAcA,MAGzE,kBAAC,IAAD,CAAee,SAAS,WACpB,kBAAC,aAAD,KACI,kBAAC,WAAD,CAAUG,KAAOC,eAAaC,SAM/BrB,a,iCCpEfsB,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtD,MAAMC,EAAU,EAAQ,GAClBC,EAAQD,EAAQE,aAAa,EAAQ,IACrCC,EAAeH,EAAQI,gBAAgB,EAAQ,MAC/CC,EAAiB,EAAQ,GACzBC,EAAY,EAAQ,IAC1BR,EAAQS,WAAcC,IAClB,IAAI,SAAEC,EAAW,KAAI,UAAEC,EAAY,GAAI,aAAcC,EAAY,aAAY,OAAEC,EAAM,SAAEC,GAAW,GAASL,EAAIM,EAAQd,EAAQe,OAAOP,EAAI,CAAC,WAAY,YAAa,aAAc,SAAU,aAC5L,OAAQP,EAAMe,cAAc,MAAOpB,OAAOqB,OAAO,GAAIH,EAAO,CAAE,aAAcH,EAAWD,UAAWL,EAAea,IAAIf,EAAagB,QAAQC,WAAYV,IAAcJ,EAAUe,aAAavB,EAAQS,WAAWe,YAAaV,EAAQC,IAC/NZ,EAAMe,cAAc,KAAM,CAAEN,UAAWP,EAAagB,QAAQI,gBAAkBtB,EAAMuB,SAASC,IAAIhB,EAAU,CAACiB,EAAOC,KAC/G,MAAMC,EAAcD,EAAQ,EAC5B,OAAI1B,EAAM4B,eAAeH,GACdzB,EAAM6B,aAAaJ,EAAO,CAAEE,gBAEhCF,OAGnB5B,EAAQS,WAAWe,YAAc","file":"js/SystemDetails.js","sourcesContent":["import React from 'react';\nimport gql from 'graphql-tag';\nimport {\n    useQuery\n} from '@apollo/react-hooks';\nimport {\n    useLocation,\n    useParams\n} from 'react-router-dom';\nimport {\n    PageHeader,\n    Main,\n    Skeleton,\n    SkeletonSize\n} from '@redhat-cloud-services/frontend-components';\nimport {\n    Breadcrumb,\n    BreadcrumbItem\n} from '@patternfly/react-core';\nimport ComplianceSystemDetails from '@redhat-cloud-services/frontend-components-inventory-compliance';\nimport {\n    BreadcrumbLinkItem,\n    StateViewWithError,\n    StateViewPart\n} from 'PresentationalComponents';\nimport { InventoryDetails } from 'SmartComponents';\n\nconst QUERY = gql`\nquery System($inventoryId: String!){\n    system(id: $inventoryId) {\n        id\n        name\n    }\n}\n`;\n\nexport const SystemDetails = () => {\n    const { inventoryId } = useParams();\n    const { data, error, loading } = useQuery(QUERY, {\n        variables: { inventoryId }\n    });\n    const location = useLocation();\n    const hidePassed = location.query && location.query.hidePassed;\n    const systemName = data?.system?.name;\n\n    return <StateViewWithError stateValues={ { error, data, loading } }>\n        <StateViewPart stateKey='data'>\n            <PageHeader>\n                <Breadcrumb>\n                    <BreadcrumbLinkItem to='/systems'>\n                        Systems\n                    </BreadcrumbLinkItem>\n                    <BreadcrumbItem isActive>{ systemName }</BreadcrumbItem>\n                </Breadcrumb>\n                <InventoryDetails />\n                <br/>\n            </PageHeader>\n            <Main>\n                <ComplianceSystemDetails hidePassed={ hidePassed } inventoryId={ inventoryId } />\n            </Main>\n        </StateViewPart>\n        <StateViewPart stateKey='loading'>\n            <PageHeader>\n                <Skeleton size={ SkeletonSize.md } />\n            </PageHeader>\n        </StateViewPart>\n    </StateViewWithError>;\n};\n\nexport default SystemDetails;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nconst breadcrumb_1 = tslib_1.__importDefault(require(\"@patternfly/react-styles/css/components/Breadcrumb/breadcrumb\"));\nconst react_styles_1 = require(\"@patternfly/react-styles\");\nconst helpers_1 = require(\"../../helpers\");\nexports.Breadcrumb = (_a) => {\n    var { children = null, className = '', 'aria-label': ariaLabel = 'Breadcrumb', ouiaId, ouiaSafe = true } = _a, props = tslib_1.__rest(_a, [\"children\", \"className\", 'aria-label', \"ouiaId\", \"ouiaSafe\"]);\n    return (React.createElement(\"nav\", Object.assign({}, props, { \"aria-label\": ariaLabel, className: react_styles_1.css(breadcrumb_1.default.breadcrumb, className) }, helpers_1.getOUIAProps(exports.Breadcrumb.displayName, ouiaId, ouiaSafe)),\n        React.createElement(\"ol\", { className: breadcrumb_1.default.breadcrumbList }, React.Children.map(children, (child, index) => {\n            const showDivider = index > 0;\n            if (React.isValidElement(child)) {\n                return React.cloneElement(child, { showDivider });\n            }\n            return child;\n        }))));\n};\nexports.Breadcrumb.displayName = 'Breadcrumb';\n//# sourceMappingURL=Breadcrumb.js.map"],"sourceRoot":""}