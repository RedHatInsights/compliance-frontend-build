{"version":3,"sources":["webpack:///./src/PresentationalComponents/ReduxFormWrappers/ReduxFormWrappers.js","webpack:///./src/PresentationalComponents/RulesTable/Cells.js","webpack:///./src/PresentationalComponents/RulesTable/Columns.js","webpack:///./src/PresentationalComponents/TabbedRules/OsVersionText.js","webpack:///./src/PresentationalComponents/TabbedRules/ProfileTabContent.js","webpack:///./src/PresentationalComponents/TabbedRules/ruleSelection.js","webpack:///./src/PresentationalComponents/TabbedRules/TabbedRules.js","webpack:///./src/PresentationalComponents/LoadingPoliciesTable/LoadingPoliciesTable.js","webpack:///./src/PresentationalComponents/ErrorPage/ErrorPage.js","webpack:///./src/PresentationalComponents/GreySmallText/GreySmallText.js","webpack:///./src/PresentationalComponents/CheckboxGroup/CheckboxGroup.js","webpack:///./src/PresentationalComponents/ProfileTypeSelect/ProfileTypeSelect.js","webpack:///./src/PresentationalComponents/ComplianceScore/ComplianceScore.js","webpack:///./src/PresentationalComponents/PolicyDetailsContentLoader/PolicyDetailsContentLoader.js","webpack:///./src/PresentationalComponents/ReportDetailsContentLoader/ReportDetailsContentLoader.js","webpack:///./src/PresentationalComponents/PolicyDetailsDescription/PolicyDetailsDescription.js","webpack:///./src/PresentationalComponents/ReportDetailsDescription/ReportDetailsDescription.js","webpack:///./src/PresentationalComponents/ProgressBar/ProgressBar.js","webpack:///./src/PresentationalComponents/TabSwitcher/TabSwitcher.js","webpack:///./src/PresentationalComponents/StateView/StateView.js","webpack:///./src/PresentationalComponents/SystemsCountWarning/SystemsCountWarning.js","webpack:///./src/PresentationalComponents/WarningText/WarningText.js","webpack:///./src/PresentationalComponents/BackgroundLink/BackgroundLink.js","webpack:///./src/PresentationalComponents/BreadcrumbLinkItem/BreadcrumbLinkItem.js","webpack:///./src/PresentationalComponents/ReportsTable/Cells.js","webpack:///./src/PresentationalComponents/ReportsTable/Filters.js","webpack:///./src/PresentationalComponents/ReportsTable/ReportsTable.js","webpack:///./src/Utilities/hooks/useTableSort.js","webpack:///./src/PresentationalComponents/ReportsEmptyState/ReportsEmptyState.js","webpack:///./src/PresentationalComponents/PolicyPopover/PolicyPopover.js","webpack:///./src/PresentationalComponents/PolicyThresholdTooltip/PolicyThresholdTooltip.js","webpack:///./src/PresentationalComponents/PolicyBusinessObjectiveTooltip/PolicyBusinessObjectiveTooltip.js","webpack:///./src/PresentationalComponents/NoResultsTable/NoResultsTable.js","webpack:///./src/PresentationalComponents/PoliciesTable/PoliciesTable.js","webpack:///./src/PresentationalComponents/ProfileThresholdField/ProfileThresholdField.js","webpack:///./src/PresentationalComponents/SupportedSSGVersionsLink/SupportedSSGVersionsLink.js","webpack:///./src/PresentationalComponents/UnsupportedSSGVersion/UnsupportedSSGVersion.js","webpack:///./src/PresentationalComponents/SubPageTitle/SubPageTitle.js","webpack:///./src/PresentationalComponents/NoSystemsTableWithWarning/NoSystemsTableWithWarning.js","webpack:///./src/Utilities/hooks/useTableTools/useTableSort.js","webpack:///./src/Utilities/hooks/useTableTools/usePaginate.js","webpack:///./src/Utilities/hooks/useTableTools/Components/NoResultsTable.js","webpack:///./src/Utilities/hooks/useTableTools/useRowsBuilder.js","webpack:///./src/Utilities/hooks/useTableTools/useBulkSelect.js","webpack:///./src/Utilities/hooks/useTableTools/helper.js","webpack:///./src/Utilities/hooks/useTableTools/useItemIdentify.js","webpack:///./src/Utilities/hooks/useTableTools/useExpandable.js","webpack:///./src/Utilities/hooks/useTableTools/useDedicatedAction.js","webpack:///./src/Utilities/hooks/useTableTools/Components/TableToolsTable.js","webpack:///./src/Utilities/hooks/useTableTools/useTableTools.js","webpack:///./src/PresentationalComponents/RulesTable/RuleDetailsRow.js","webpack:///./src/PresentationalComponents/RulesTable/EmptyRows.js","webpack:///./src/PresentationalComponents/RulesTable/Constants.js","webpack:///./src/PresentationalComponents/RulesTable/Filters.js","webpack:///./src/PresentationalComponents/RulesTable/RulesTable.js","webpack:///./src/SmartComponents/CreatePolicy/validate.js","webpack:///./src/Utilities/TextHelper.js","webpack:///./src/Utilities/helpers.js","webpack:///./src/Utilities/hooks/useTableTools/FilterConfigBuilder/Helpers.js","webpack:///./src/Utilities/hooks/useTableTools/FilterConfigBuilder/FilterBuilder.js","webpack:///./src/Utilities/hooks/useTableTools/FilterConfigBuilder/ChipBuilder.js","webpack:///./src/Utilities/hooks/useTableTools/FilterConfigBuilder/FilterConfigBuilder.js","webpack:///./src/Utilities/hooks/useTableTools/Components/SelectedFilterSwitch.js","webpack:///./src/Utilities/hooks/useTableTools/useSelectedFilter.js","webpack:///./src/Utilities/hooks/useTableTools/useFilterConfig.js","webpack:///./src/Utilities/ruleHelpers.js"],"names":["ReduxFormTextInput","field","TextInput","value","input","defaultValue","onChange","ReduxFormTextArea","TextArea","ruleProps","title","propTypes","identifier","profile","compliant","remediationAvailable","severity","Rule","TextContent","Text","component","TextVariants","label","Policy","name","HighSeverity","className","MediumSeverity","LowSeverityIcon","width","height","viewBox","role","style","verticalAlign","xmlns","d","fill","fillRule","LowSeverity","UnknownSeverity","Severity","high","medium","low","toLowerCase","Passed","Ansible","Name","sortByProp","renderFunc","renderComponent","sortByFunction","rule","PolicyCell","transforms","fitContent","sortByArray","SeverityCell","PassedCell","original","props","tooltip","AnsibleCell","newOsMinorVersion","osMajorVersion","osMinorVersion","ProfileSystemCount","count","Badge","isRead","pluralize","SSGVersionText","ssgVersion","Popover","position","bodyContent","SSGPopoverBody","footerContent","cursor","fontSize","BENCHMARK_QUERY","gql","ProfileTabContent","columns","handleSelect","systemCount","selectedRuleRefIds","rulesTableProps","useQuery","variables","id","benchmark","skip","data","error","loading","rules","Grid","stateValues","stateKey","Spinner","remediationAvailableFilter","remediationsEnabled","profileRules","selectedRefIds","matchesSelectionItem","selectionItem","selectedRuleRefIdsForTab","tabSelection","find","ruleRefIds","profilesWithRulesToSelection","profiles","prevSelection","options","only","additionalSelection","map","foundSelection","console","refId","filter","v","tabsDataToOsMinorMap","tabsData","osMinorMap","forEach","extendProfilesByOsMinor","flatMap","undefined","eventKey","getDefaultTab","defaultTab","length","firstTab","TabbedRules","setSelectedRuleRefIds","level","profileSelectedRuleRefIds","filteredSelection","newItem","Tab","key","isRequired","Table","aria-label","ouiaId","cells","rows","Array","RowLoader","colSpan","TableHeader","TableBody","ErrorPage","networkError","statusCode","window","insights","chrome","auth","logout","NotAuthorized","serviceName","InvalidObject","size","color","Title","headingLevel","message","Button","variant","onClick","history","goBack","GreySmallText","children","CheckboxFieldArray","inputValue","index","defaultChecked","Checkbox","isChecked","includes","checked","arr","Set","push","splice","indexOf","handleChange","InUseProfileLabel","Tooltip","content","Label","lineHeight","ProfileTypeSelect","hasGutter","description","disabled","GridItem","span","rowSpan","Field","type","JSON","stringify","Truncate","lines","defaultProps","CompliantIcon","system","rulesPassed","rulesFailed","complianceScoreString","supported","fixedPercentage","score","speed","backgroundcolor","foregroundcolor","x","y","rx","ry","primaryColor","secondaryColor","cx","cy","r","PolicyDetailsDescription","policy","Card","CardHeader","CardBody","complianceThreshold","businessObjective","text","linkifyHtml","inline","majorOsVersion","policyType","PropTypes","Dt","TextListItem","TextListItemVariants","Dd","PolicyDescription","TextList","TextListVariants","Link","to","version","ReportDetailsDescription","ProgressBar","percent","failed","ProgressVariant","Progress","ContentTab","useAnchorLevels","defaultAnchor","levels","useAnchor","split","currentAnchor","RoutedTabSwitcher","tab","c","RoutedTabs","useHistory","useLocation","pathname","state","Tabs","onSelect","e","preventDefault","tabToActivate","replace","tabAnchor","hash","slice","join","activeKey","StateViewPart","StateView","child","StateViewWithError","WARNING_TEXT","WithOptionalToolTip","showTooltip","TooltipPosition","SystemsCountWarning","WarningText","BackgroundLink","desiredState","backgroundLocation","background","RouterLink","href","BreadcrumbLinkItem","BreadcrumbItem","marginRight","OperatingSystem","unsupportedHostCount","CompliantSystems","testResultHostCount","compliantHostCount","measureLocation","tooltipText","marginLeft","policyNameFilter","conditionalFilterType","lowerCaseValue","policyTypeFilter","policyTypes","values","items","operatingSystemFilter","operatingSystems","operatingSystem","policyComplianceFilter","compliantHostsPercent","Math","round","min","max","i","ReportsTable","sortable","sortByProperty","uniq","useFilterConfig","filters","filterConfig","conditionalFilter","toolbarProps","array","useState","direction","sortBy","setSortBy","column","tableSort","onSort","_","sorted","orderArrayByProp","useTableSort","sortedProfiles","emptyRows","PrimaryToolbar","ComplianceEmptyState","mainButton","PolicyPopover","headerContent","isInline","Fragment","NoResultsTable","EmptyTable","Bullseye","EmptyState","EmptyStateVariant","EmptyStateBody","PolicyNameCell","FILTER_CONFIGURATION","policies","PoliciesTable","FilterConfigBuilder","filterConfigBuilder","getChipBuilder","getFilterBuilder","page","itemsPerPage","activeFilters","_event","changePage","setState","applyFilterToObjectArray","chips","removeFilterWithChip","initialDefaultState","clearAll","clearAllFilter","deleteFilter","_index","policyId","location","this","filteredPolicies","filterChips","chipBuilder","chipsFor","totalHostCount","policiesToRows","paginatedPolicies","buildConfiguration","onFilterUpdate","hideLabel","pagination","itemCount","dropDirection","onSetPage","setPage","onPerPageSelect","setPerPage","perPage","activeFiltersConfig","onDelete","onFilterDelete","ToolbarItem","actionResolver","TableToolbar","isFooter","Pagination","PaginationVariant","React","withRouter","ProfileThresholdField","validThreshold","thresholdValid","previousThreshold","threshold","FormGroup","fieldId","validated","helperTextInvalid","helperText","labelIcon","handleThresholdChange","display","reduxForm","form","destroyOnUnmount","forceUnregisterOnUnmount","target","rel","supportedConfigsLink","UNSUPPORTED_PLURAL_MESSAGE","marginBottom","WarningWithPopover","maxWidth","WarningWithTooltip","TooltipOrPopover","tooltipProps","Component","componentProps","popover","showHeader","showPopupHeader","messageVariant","UnsupportedSSGVersion","showWarningIcon","showHelpIcon","iconProps","defaultStyle","SubPageTitle","fontWeight","addSortableTransform","isSortable","columnOffset","detailsComponent","sorter","orderByArray","tableProps","enablePagination","paginationState","setPaginationState","setPagination","newState","paginator","start","end","nextPage","kind","columnProp","primeItem","item","transformers","transformer","applyTransformers","buildRow","rowTransformer","idx","row","rowProps","itemId","itemRow","EmptyRowsComponent","transformedItems","filteredItems","sortedItems","paginatedItems","allItemsIncluded","selection","selectOrUnselect","selected","itemIds","propItems","preselected","enableBulkSelect","selectedIds","setSelectedItemIds","selectItemTransformer","total","selectedItemsTotal","filterSelected","noneSelected","filteredTotal","filtered","allFiltertedSelected","paginatedTotal","currentPageSelected","selectedItems","checkCurrentPageSelected","itemsTotal","checkboxState","allCount","allSelected","isDisabled","onSelectCallback","func","newSelectedItemsIds","selectNone","selectItems","arrayA","arrayB","from","unselectItems","selectPage","currentPageIds","setPageMemo","useMemo","useEffect","rowId","canSelectAll","clearSelection","bulkSelect","toggleProps","currentFilteredIds","getIdProp","idProp","identify","itemDetailsRow","DetailsComponent","parent","childRowForRule","enableExpanbale","openItems","setOpenItems","_columns","rowIndex","isOpen","onCollapse","_isOpen","enableDedicatedAction","dedicatedAction","dedicatedActionOption","additionalDedicatedActions","TableToolsTable","toolbarPropsOption","tablePropsOption","identifiedItems","useItemIdentify","sortableTableProps","usePaginate","pagintionToolbarProps","conditionalFilterProps","selectedFilterToolbarProps","useExpandable","openItem","expandableProps","useBulkSelect","selectItem","bulkSelectToolbarProps","bulkSelectTableProps","dedicatedActionToolbarProps","useDedicatedAction","useRowsBuilder","rowBuilderToolbarProps","rowBuilderTableProps","useTableTools","RuleDetailsRow","references","rationale","marginTop","Stack","StackItem","isFilled","ident","reduce","prev","next","ref","HIGH_SEVERITY","MEDIUM_SEVERITY","LOW_SEVERITY","UNKNOWN_SEVERITY","filterRulesWithAllValues","valueCheck","anyFilterApply","filteredRules","BASE_FILTER_CONFIGURATION","reference","PASS_FILTER_CONFIG","REMEDIATION_AVAILABLE_FILTER_CONFIG","showPassFailFilter","config","policiesFilterConfig","RulesTable","Columns","selectedFilter","hidePassed","toRulesArrayWithProfile","buildFilterConfig","passed","selectable","selectedRules","ComplianceRemediationButton","allSystems","testResultProfiles","ruleObjectsFailed","validateBenchmarkPage","validateDetailsPage","validateRulesPage","validateSystemsPage","systemIds","fixed","withPercent","fixedValue","toFixed","singular","plural","collection","sortingByProp","propName","order","objA","objB","propA","propB","_data","_id","entity","getSortable","property","objects","sort","a","b","String","localeCompare","objectArray","orderProp","orderArray","sortedObjectArray","orderKey","reverse","getProperty","obj","path","fallback","parts","shift","camelCase","string","trim","toUpperCase","substring","stringToId","configItem","filterString","filterStringArray","moreThanTwo","f","fl","fs","buildFilterFilterString","combineFilterStrings","findWithString","category","currentValue","labelForValue","categoryConfig","Object","keys","groupValue","group","itemValue","getCategoryForLabel","textFilterChip","checkboxFilterChip","radioFilterChip","groupFilterChip","chipFor","defaultPlaceholder","SelectedFilterSwitch","setActiveFilter","Switch","enableSelectedFilter","filterItem","default","filterValues","concat","ChipBuilder","filterBuilder","FilterBuilder","handler","placeholder","event","selectedValues","groups","subItem","toTextFilterConfig","toCheckboxFilterConfig","toRadioFilterConfig","toGroupedFilterConfig","states","initConfig","toFilterConfigItem","defaultStates","initialState","filterStateName","defaultValueForFilter","query","results","parentValue","info","getItemByLabelOrValue","filteredObjects","currentState","chipItem","newGroupState","chipCategory","chipLabel","chipValue","stateProp","newFilterState","removeFilterFromGroupFilterState","removeFilterFromFilterState","enableFilters","initialActiveFilters","setActiveFilters","addConfigItem","useSelectedFilter","selectFilterItem","activeFilterValues","filterConfigWithSelected","buildFilterString","profilesRulesFailed","profilesRulesPassed","systemRulesFailed","systemSupportedByProfiles","acc","systemsWithRuleObjectsFailed","systems","profilesWithRules","profileWithRules","parse"],"mappings":"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","file":"js/244.7817d499aaca063e6c5b.js","sourcesContent":["import React from 'react';\nimport { rawComponents } from '@data-driven-forms/pf4-component-mapper';\nimport { TextInput, TextArea } from '@patternfly/react-core';\n\nexport const ReduxFormTextInput = field => (\n    <TextInput\n        value={field.input.value || field.defaultValue}\n        onChange={field.input.onChange}\n        {...field} />\n);\n\nexport const ReduxFormTextArea = field => (\n    <TextArea\n        value={field.input.value || field.defaultValue}\n        onChange={field.input.onChange}\n        {...field} />\n);\n\nexport const ReduxFormCreatableSelectInput = field => (\n    <rawComponents.RawSelect selectVariant=\"createable\"\n        value={field.selected}\n        onChange={field.input.onChange}\n        {...field} />\n);\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Text, TextVariants, TextContent } from '@patternfly/react-core';\nimport {\n    CheckCircleIcon, ExclamationCircleIcon, ExclamationTriangleIcon, QuestionCircleIcon\n} from '@patternfly/react-icons';\n\nconst ruleProps = {\n    title: propTypes.string,\n    identifier: propTypes.object,\n    profile: propTypes.object,\n    compliant: propTypes.bool,\n    remediationAvailable: propTypes.bool,\n    severity: propTypes.string\n};\n\nexport const Rule = ({ title, identifier }) => (\n    <TextContent>\n        { title }\n        { identifier ?\n            <Text component={ TextVariants.small }>{ identifier.label }</Text> : '' }\n    </TextContent>\n);\nRule.propTypes = ruleProps;\n\nexport const Policy = ({ profile }) => (\n    profile.name\n);\nPolicy.propTypes = ruleProps;\n\nexport const HighSeverity = () => (\n    <span>\n        <ExclamationCircleIcon className='ins-u-failed'/> High\n    </span>\n);\n\nexport const MediumSeverity = () => (\n    <span>\n        <ExclamationTriangleIcon className='ins-u-warning'/> Medium\n    </span>\n);\n\nexport const LowSeverityIcon = () => (\n    <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 18 18\" role=\"img\" style={ { verticalAlign: '-0.125em' } } xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M2 0h14a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2zm6.67 10.46a1.67 1.67 0 1 0 0 3.338 1.67 1.67 0 0 0 0-3.338zm-1.586-6l.27 4.935a.435.435 0 0 0 .434.411H9.55c.232 0 .422-.18.435-.411l.27-4.936A.435.435 0 0 0 9.818 4h-2.3c-.25 0-.448.21-.435.46z\" fill=\"#3A9CA6\" fillRule=\"evenodd\"/></svg> // eslint-disable-line\n);\n\nexport const LowSeverity = () => (\n    <span>\n        <LowSeverityIcon /> Low\n    </span>\n);\n\nexport const UnknownSeverity = () => (\n    <span>\n        <QuestionCircleIcon /> Unknown\n    </span>\n);\n\nexport const Severity = ({ severity }) => (\n    {\n        high: <HighSeverity />,\n        medium: <MediumSeverity />,\n        low: <LowSeverity />\n    }[severity?.toLowerCase()] || <UnknownSeverity />\n);\nSeverity.propTypes = ruleProps;\n\nexport const Passed = ({ compliant }) => (\n    compliant ?\n        <CheckCircleIcon className='ins-u-passed' /> :\n        <ExclamationCircleIcon className='ins-u-failed' />\n);\nPassed.propTypes = ruleProps;\n\nexport const Ansible = ({ remediationAvailable }) => (\n    remediationAvailable ? <CheckCircleIcon className='ins-u-passed' /> : 'No'\n);\nAnsible.propTypes = ruleProps;\n","import React from 'react';\nimport { fitContent } from '@patternfly/react-table';\nimport { AnsibeTowerIcon } from '@patternfly/react-icons';\nimport { renderComponent } from 'Utilities/helpers';\nimport {\n    Rule, Policy as PolicyCell, Severity as SeverityCell, Passed as PassedCell, Ansible as AnsibleCell\n} from './Cells';\n\nexport const Name = {\n    title: 'Name',\n    sortByProp: 'title',\n    renderFunc: renderComponent(Rule)\n};\n\nexport const Policy = {\n    title: 'Policy',\n    sortByFunction: (rule) => (rule?.profile?.name),\n    renderFunc: renderComponent(PolicyCell)\n};\n\nexport const Severity = {\n    title: 'Severity',\n    sortByProp: 'severity',\n    transforms: [fitContent],\n    sortByArray: ['high', 'medium', 'low', 'unknown'],\n    renderFunc: renderComponent(SeverityCell)\n};\n\nexport const Passed = {\n    title: 'Passed',\n    sortByProp: 'compliant',\n    renderFunc: renderComponent(PassedCell)\n};\n\nexport const Ansible = {\n    title: <span><AnsibeTowerIcon /> Ansible</span>,\n    original: 'Ansible',\n    props: {\n        tooltip: 'Ansible'\n    },\n    transforms: [fitContent],\n    sortByProp: 'remediationAvailable',\n    renderFunc: renderComponent(AnsibleCell)\n};\n","const OsVersionText = ({ profile, newOsMinorVersion }) => (\n    `RHEL${'\\u00A0'}${ profile.osMajorVersion }.${ (profile.osMinorVersion || newOsMinorVersion) }`\n);\n\nexport default OsVersionText;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport {\n    Text, TextVariants, TextContent, Grid, Spinner, Badge, Popover\n} from '@patternfly/react-core';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport { StateViewWithError, StateViewPart, SupportedSSGVersionsLink, RulesTable } from 'PresentationalComponents';\nimport { pluralize } from 'Utilities/TextHelper';\nimport OsVersionText from './OsVersionText';\n\nconst ProfileSystemCount = ({ count = 0 }) => (\n    <Badge isRead>\n        { `${count} ${ pluralize(count, 'system')}` }\n    </Badge>\n);\n\nProfileSystemCount.propTypes = {\n    profile: propTypes.object,\n    count: propTypes.number\n};\n\nconst SSGVersionText = ({ profile, newOsMinorVersion }) => (\n    <Text component={ TextVariants.p }>\n        SSG version: { profile.ssgVersion }\n        {' '}\n        <Popover\n            position='right'\n            bodyContent={ <SSGPopoverBody { ...{ profile, newOsMinorVersion } } /> }\n            footerContent={ <SupportedSSGVersionsLink /> }>\n            <span style={ { cursor: 'pointer' } }>\n                <OutlinedQuestionCircleIcon className=\"grey-icon\" />\n            </span>\n        </Popover>\n    </Text>\n);\n\nSSGVersionText.propTypes = {\n    profile: propTypes.object.isRequired,\n    newOsMinorVersion: propTypes.string\n};\n\nconst SSGPopoverBody = ({ profile, newOsMinorVersion }) => (\n    <TextContent style={ { fontSize: 'var(--pf-c-popover--FontSize)' } }>\n        <Text>\n            This is the latest supported version of the SCAP Security Guide (SSG) for\n            {' '}\n            <OsVersionText { ...{ profile, newOsMinorVersion } } />\n        </Text>\n        <Text>\n            <OsVersionText { ...{ profile, newOsMinorVersion } } /> systems assigned to this\n            policy will report using this rule list.\n        </Text>\n    </TextContent>\n);\n\nSSGPopoverBody.propTypes = {\n    profile: propTypes.object.isRequired,\n    newOsMinorVersion: propTypes.string\n};\n\nconst BENCHMARK_QUERY = gql`\nquery benchmarkQuery($id: String!) {\n    benchmark(id: $id) {\n        id\n        osMajorVersion\n        rules {\n            id\n            title\n            severity\n            rationale\n            refId\n            description\n            remediationAvailable\n            identifier\n        }\n    }\n}\n`;\n\nconst ProfileTabContent = ({\n    profile, columns, handleSelect, systemCount, selectedRuleRefIds, rulesTableProps, newOsMinorVersion\n}) => {\n    const { data: benchmark, error, loading } = useQuery(BENCHMARK_QUERY, {\n        variables: {\n            id: profile.benchmark.id\n        },\n        skip: !handleSelect || !profile.benchmark?.id\n    });\n    const rules = handleSelect ? benchmark?.benchmark?.rules : profile?.rules;\n\n    return <React.Fragment>\n        <Grid>\n            <TextContent className=\"pf-u-mt-md\">\n                <Text component={ TextVariants.h3 } >\n                    <span className='pf-u-pr-sm'>\n                        <OsVersionText { ...{ profile, newOsMinorVersion } } />\n                    </span>\n                    <ProfileSystemCount count={ systemCount } />\n                </Text>\n                <SSGVersionText { ...{ profile, newOsMinorVersion } } />\n            </TextContent>\n        </Grid>\n        <StateViewWithError stateValues={ { error, loading, rules } }>\n            <StateViewPart stateKey=\"loading\">\n                <Spinner />\n            </StateViewPart>\n            <StateViewPart stateKey=\"rules\">\n\n                <RulesTable\n                    remediationAvailableFilter\n                    remediationsEnabled={false}\n                    columns={ columns }\n                    profileRules={ [{ profile, rules: (rules || []) }] }\n                    selectedRefIds={ selectedRuleRefIds }\n                    handleSelect={\n                        handleSelect && ((selectedRuleRefIds) =>\n                            handleSelect(profile, newOsMinorVersion, selectedRuleRefIds)\n                        )\n                    }\n                    { ...rulesTableProps } />\n\n            </StateViewPart>\n        </StateViewWithError>\n    </React.Fragment>;\n};\n\nProfileTabContent.propTypes = {\n    profile: propTypes.object,\n    newOsMinorVersion: propTypes.string,\n    columns: propTypes.array,\n    handleSelect: propTypes.func,\n    systemCount: propTypes.object,\n    selectedRuleRefIds: propTypes.array,\n    rulesTableProps: propTypes.object\n};\n\nexport default ProfileTabContent;\n","// Rule selection utilities\n\nexport const matchesSelectionItem = (selectionItem, profile, newOsMinorVersion) => (\n    selectionItem.id === profile.id\n    && selectionItem.osMinorVersion === (newOsMinorVersion || profile.osMinorVersion)\n);\n\nexport const selectedRuleRefIdsForTab = (selectedRuleRefIds, profile, newOsMinorVersion) => {\n    const tabSelection = (selectedRuleRefIds || []).find((selectionItem) =>\n        matchesSelectionItem(selectionItem, profile, newOsMinorVersion)\n    );\n    return tabSelection?.ruleRefIds || [];\n};\n\nexport const profilesWithRulesToSelection = (profiles, prevSelection = [], options = {}) => {\n    const { only } = options;\n    const additionalSelection = profiles.map((profile) => {\n        const foundSelection = prevSelection.find((selectionItem) =>\n            matchesSelectionItem(selectionItem, profile)\n        );\n        if (!foundSelection) {\n            if (!profile.rules) {\n                console.error(`Profile ${profile.id} is missing rules for selection!`);\n            }\n\n            if (!profile.osMinorVersion) {\n                console.error(`Profile ${profile.id} is missing osMinorVersion for selection!`);\n            }\n\n            return {\n                id: profile.id,\n                osMinorVersion: profile.osMinorVersion,\n                ruleRefIds: profile.rules?.map((rule) => (rule.refId)) || []\n            };\n        } else if (only) {\n            return foundSelection;\n        }\n    }).filter((v) => !!v);\n\n    return only ? additionalSelection : [...prevSelection, ...additionalSelection];\n};\n\nexport const tabsDataToOsMinorMap = (tabsData) => {\n    const osMinorMap = {};\n    tabsData.forEach(({ profile, newOsMinorVersion }) => {\n        if (profile?.id) {\n            const osMinorVersion = newOsMinorVersion || profile.osMinorVersion;\n            osMinorMap[profile.id] = [\n                ...(osMinorMap[profile.id] || []),\n                osMinorVersion\n            ];\n        }\n    });\n    return osMinorMap;\n};\n\nexport const extendProfilesByOsMinor = (profiles, osMinorMap) => (\n    profiles.flatMap((profile) => (\n        (osMinorMap[profile.id] || [undefined]).map((osMinorVersion) => (\n            { ...profile, osMinorVersion }\n        ))\n    ))\n);\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Tab, Badge } from '@patternfly/react-core';\nimport { RoutedTabs } from 'PresentationalComponents';\nimport ProfileTabContent from './ProfileTabContent';\nimport OsVersionText from './OsVersionText';\nimport { selectedRuleRefIdsForTab, matchesSelectionItem } from './ruleSelection';\n\nconst eventKey = ({ id, osMinorVersion }, newOsMinorVersion) => (\n    `rules-${id}-${osMinorVersion || newOsMinorVersion}`\n);\n\nconst getDefaultTab = (tabsData, defaultTab) => {\n    if (!tabsData || tabsData.length === 0) {\n        return;\n    }\n\n    if (!defaultTab) {\n        const firstTab = tabsData[0];\n        defaultTab = {\n            id: firstTab.profile.id,\n            osMinorVersion: firstTab.profile.osMinorVersion || firstTab.newOsMinorVersion\n        };\n    }\n\n    return eventKey(defaultTab);\n};\n\nconst TabbedRules = ({\n    tabsData, defaultTab, selectedRuleRefIds, setSelectedRuleRefIds, columns, level = 0, ...rulesTableProps\n}) => {\n    const handleSelect = (profile, newOsMinorVersion, profileSelectedRuleRefIds) => {\n        const filteredSelection = (selectedRuleRefIds || []).filter((selectionItem) =>\n            !matchesSelectionItem(selectionItem, profile, newOsMinorVersion)\n        );\n\n        const newItem = {\n            id: profile.id,\n            osMinorVersion: newOsMinorVersion || profile.osMinorVersion,\n            ruleRefIds: profileSelectedRuleRefIds\n        };\n        setSelectedRuleRefIds([newItem, ...filteredSelection]);\n    };\n\n    return <RoutedTabs level={ level } defaultTab={ getDefaultTab(tabsData, defaultTab) }>\n        {\n            tabsData?.map(({ profile, newOsMinorVersion, systemCount }) => (\n                <Tab\n                    key={ eventKey(profile, newOsMinorVersion) }\n                    eventKey={ eventKey(profile, newOsMinorVersion) }\n                    title={\n                        <span>\n                            <span className='pf-u-pr-sm'>\n                                <OsVersionText profile={ profile } newOsMinorVersion={newOsMinorVersion} />\n                            </span>\n                            <Badge isRead>{ systemCount }</Badge>\n                        </span>\n                    }>\n                    <ProfileTabContent\n                        { ...{\n                            profile,\n                            newOsMinorVersion,\n                            columns,\n                            rulesTableProps,\n                            systemCount,\n                            selectedRuleRefIds: selectedRuleRefIdsForTab(\n                                selectedRuleRefIds, profile, newOsMinorVersion\n                            ),\n                            handleSelect: setSelectedRuleRefIds ? handleSelect : undefined\n                        } } />\n                </Tab>\n            ))\n        }\n    </RoutedTabs>;\n};\n\nTabbedRules.propTypes = {\n    tabsData: propTypes.arrayOf(\n        propTypes.shape({\n            profile: propTypes.object.isRequired,\n            selectedRuleRefIds: propTypes.arrayOf(propTypes.string),\n            newOsMinorVersion: propTypes.string,\n            systemCount: propTypes.number\n        })\n    ).isRequired,\n    selectedRuleRefIds: propTypes.arrayOf(\n        propTypes.shape({\n            id: propTypes.string,\n            ruleRefIds: propTypes.arrayOf(propTypes.string)\n        })\n    ),\n    setSelectedRuleRefIds: propTypes.func,\n    columns: propTypes.arrayOf(propTypes.object),\n    defaultTab: propTypes.shape({\n        id: propTypes.string,\n        osMinorVersion: propTypes.string\n    }),\n    level: propTypes.number\n};\n\nexport default TabbedRules;\n","import React from 'react';\nimport { Table, TableHeader, TableBody } from '@patternfly/react-table';\nimport RowLoader from '@redhat-cloud-services/frontend-components-utilities/RowLoader';\n\nconst LoadingPoliciesTable = () => (\n    <Table\n        aria-label='policies-table'\n        ouiaId=\"PoliciesTable\"\n        cells={ [\n            { title: 'Policy name' },\n            { title: 'Operating system' },\n            { title: 'Systems' },\n            { title: 'Business initiative' },\n            { title: 'Compliance threshold' }\n        ] }\n        rows={ [...Array(5)].map(() => ({\n            cells: [{\n                title: <RowLoader />,\n                colSpan: 5\n            }]\n        })) }>\n        <TableHeader />\n        <TableBody />\n    </Table>\n);\n\nexport default LoadingPoliciesTable;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport {\n    Title,\n    Button,\n    Text\n} from '@patternfly/react-core';\nimport {\n    ExclamationCircleIcon\n} from '@patternfly/react-icons';\nimport InvalidObject from '@redhat-cloud-services/frontend-components/InvalidObject';\nimport NotAuthorized from '@redhat-cloud-services/frontend-components/NotAuthorized';\n\nconst ErrorPage = ({ error, ...props }) => {\n    if (error.networkError && error.networkError.statusCode === 401) {\n        window.insights.chrome.auth.logout(true);\n        return false;\n    }\n\n    if (error.networkError && error.networkError.statusCode === 403) {\n        return <NotAuthorized serviceName='Compliance' />;\n    }\n\n    if (error.networkError && error.networkError.statusCode === 404) {\n        return <InvalidObject />;\n    }\n\n    return <section {...props} className=\"pf-l-page__main-section pf-c-page__main-section ins-c-component_invalid-componet\">\n        <ExclamationCircleIcon size=\"xl\" style={ { color: 'var(--pf-global--danger-color--100)' } } />\n        <Title headingLevel='h1'>There was an error</Title>\n        <Text>\n            If you need to contact Red Hat Support about this, this is the exact error:\n            <Text>\n                { error.message }\n            </Text>\n        </Text>\n        <Button\n            variant=\"link\"\n            ouiaId=\"ErrorPageGoBackButton\"\n            onClick={ history.goBack }>\n                Go back\n        </Button>\n    </section>;\n};\n\nErrorPage.propTypes = {\n    error: propTypes.object\n};\n\nexport default ErrorPage;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Text, TextVariants } from '@patternfly/react-core';\n\nexport const GreySmallText = ({ children }) => (\n    <Text\n        style={{ color: 'var(--pf-global--Color--200)' }}\n        component={ TextVariants.small }>{ children }</Text>\n);\n\nGreySmallText.propTypes = {\n    children: propTypes.node\n};\n\nexport default GreySmallText;\n","import React from 'react';\nimport { Field } from 'redux-form';\nimport propTypes from 'prop-types';\nimport { Checkbox } from '@patternfly/react-core';\n\nconst CheckboxFieldArray = ({ input, options }) => {\n    const { name, onChange } = input;\n    const inputValue = input.value;\n\n    const handleChange = (checked, value) => {\n        const arr = [...new Set(inputValue)];\n        if (checked) {\n            arr.push(value);\n        } else {\n            arr.splice(arr.indexOf(value), 1);\n        }\n\n        return onChange(arr);\n    };\n\n    return (\n        <React.Fragment>\n            {\n                options.map(({ label, value, defaultChecked }, index) => (\n                    <Checkbox key={value} id={value} label={label}\n                        name={`${name}[${index}]`} value={value}\n                        isChecked={inputValue === '' ? defaultChecked : inputValue.includes(value)}\n                        onChange={(checked) => handleChange(checked, value)}\n                    />\n                ))\n            }\n        </React.Fragment>\n    );\n};\n\nCheckboxFieldArray.propTypes = {\n    input: propTypes.shape({\n        name: propTypes.string.isRequired,\n        onChange: propTypes.func,\n        value: propTypes.string\n    }),\n    options: propTypes.arrayOf(propTypes.shape({\n        label: propTypes.string.isRequired,\n        value: propTypes.string.isRequired,\n        defaultChecked: propTypes.bool\n    })).isRequired\n};\n\nconst CheckboxGroup = (props) => (\n    <Field {...props} type=\"checkbox\" component={CheckboxFieldArray} />\n);\n\nCheckboxGroup.propTypes = {\n    options: propTypes.arrayOf(propTypes.shape({\n        label: propTypes.string.isRequired,\n        value: propTypes.string.isRequired,\n        defaultChecked: propTypes.bool\n    })).isRequired\n};\n\nexport { CheckboxFieldArray };\nexport default CheckboxGroup;\n","import React from 'react';\nimport { Field } from 'redux-form';\nimport propTypes from 'prop-types';\nimport Truncate from 'react-truncate';\nimport {\n    Grid,\n    GridItem,\n    Label,\n    TextContent,\n    TextVariants,\n    Text,\n    Tooltip\n} from '@patternfly/react-core';\n\nconst InUseProfileLabel = () => (\n    <Tooltip\n        position=\"right\"\n        content=\"A policy of this type is already in use.\n        Only one policy per policy type can be created for a major release of RHEL.\"\n    >\n        <Label color=\"orange\" style={ { lineHeight: '1.5em' } }>In use</Label>\n    </Tooltip>\n);\n\nconst ProfileTypeSelect  = ({ profiles, onClick }) => (\n    <React.Fragment>\n        { profiles?.length === 0 && (\n            <TextContent style={{ color: 'var(--pf-c-content--blockquote--Color)' }}>\n                <Text>\n                    Select an operating system to view policy types.\n                </Text>\n            </TextContent>\n        )}\n\n        <Grid hasGutter>\n            { profiles.map((profile) => {\n                const { description, name, id, disabled } = profile;\n                return (\n                    <React.Fragment key={`profile-select-${id}`}>\n                        <GridItem span={8} rowSpan={2}>\n                            <TextContent\n                                style={ {\n                                    lineHeight: '2em',\n                                    color: disabled ? 'var(--pf-c-content--blockquote--Color)' : ''\n                                } }>\n                                <Text >\n                                    <Field component='input'\n                                        type='radio'\n                                        name='profile'\n                                        value={JSON.stringify(profile)}\n                                        onClick={ () => onClick(JSON.stringify(profile)) }\n                                        disabled={ disabled }\n                                    />\n                                    { ` ${name} ` }\n                                    { disabled && <InUseProfileLabel /> }\n                                </Text>\n                            </TextContent>\n                            <TextContent style={ { color: 'var(--pf-c-content--blockquote--Color)' } }>\n                                <Text component={ TextVariants.p }>\n                                    <Truncate\n                                        key={`profile-select-text-${id}`}\n                                        lines={3}>\n                                        { description }\n                                    </Truncate>\n                                </Text>\n                            </TextContent>\n                        </GridItem>\n                    </React.Fragment>);\n            })}\n        </Grid>\n    </React.Fragment>\n);\n\nProfileTypeSelect.propTypes = {\n    profiles: propTypes.array,\n    onClick: propTypes.func\n};\n\nProfileTypeSelect.defaultProps = {\n    profiles: [],\n    onClick: () => ({})\n};\n\nexport default ProfileTypeSelect;\n","import React from 'react';\nimport {\n    QuestionCircleIcon,\n    CheckCircleIcon,\n    ExclamationCircleIcon\n} from '@patternfly/react-icons';\nimport { Text, Tooltip } from '@patternfly/react-core';\nimport { fixedPercentage } from 'Utilities/TextHelper';\n\nconst CompliantIcon = (system) => {\n    if ((system.rulesPassed + system.rulesFailed) === 0) {\n        return <QuestionCircleIcon color='var(--pf-global--disabled-color--100)' />;\n    } else {\n        return system.compliant ?\n            <CheckCircleIcon color='var(--pf-global--success-color--200)' /> :\n            <ExclamationCircleIcon color='var(--pf-global--danger-color--100)' />;\n    }\n};\n\nexport const complianceScoreString = (system) => {\n    if (system.supported === false) {\n        return ' Unsupported';\n    } else if ((system.rulesPassed + system.rulesFailed) === 0) {\n        return ' N/A';\n    }\n\n    return ' ' + fixedPercentage(system.score);\n};\n\nconst ComplianceScore = (system) => (\n    <Text>\n        { system.supported ?\n            <Tooltip content={\n                'The system compliance score is calculated by OpenSCAP and ' +\n                'is a normalized weighted sum of rules selected for this policy.'\n            }>\n                <CompliantIcon key={ `system-compliance-icon-${system.id}` } { ...system } />\n                { complianceScoreString(system) }\n            </Tooltip>\n            :\n            complianceScoreString(system) }\n    </Text>\n);\n\nexport default ComplianceScore;\n","import React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nconst PolicyDetailsContentLoader = () => (\n    <ContentLoader\n        speed={2}\n        width={1000}\n        height={400}\n        viewBox='0 0 1000 400'\n        backgroundcolor='#f3f3f3'\n        foregroundcolor='#ecebeb'\n    >\n        <rect x='-3' y='7' rx='3' ry='3' width='760' height='19' />\n        <rect x='823' y='3' rx='3' ry='3' width='67' height='29' />\n        <rect x='910' y='3' rx='3' ry='3' width='67' height='29' />\n        <rect x='6' y='54' rx='0' ry='0' width='46' height='19' />\n        <rect x='68' y='54' rx='0' ry='0' width='46' height='19' />\n        <rect x='133' y='54' rx='0' ry='0' width='46' height='19' />\n        <rect x='3' y='110' rx='0' ry='0' width='255' height='17' />\n        <rect x='1' y='149' rx='0' ry='0' width='47' height='16' />\n        <rect x='1' y='185' rx='0' ry='0' width='255' height='17' />\n        <rect x='-1' y='224' rx='0' ry='0' width='187' height='16' />\n        <rect x='-4' y='267' rx='0' ry='0' width='255' height='17' />\n        <rect x='-6' y='306' rx='0' ry='0' width='47' height='16' />\n        <rect x='-6' y='342' rx='0' ry='0' width='255' height='17' />\n        <rect x='-8' y='381' rx='0' ry='0' width='187' height='16' />\n    </ContentLoader>\n);\n\nexport default PolicyDetailsContentLoader;\n","import React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nconst ReportDetailsContentLoader = () => (\n    <ContentLoader\n        height={320}\n        width={1550}\n        speed={2}\n        primaryColor=\"#f3f3f3\"\n        secondaryColor=\"#ecebeb\">\n        <rect x=\"18\" y=\"50\" rx=\"4\" ry=\"4\" width=\"478\" height=\"15\" />\n        <rect x=\"19\" y=\"18\" rx=\"3\" ry=\"3\" width=\"220\" height=\"9\" />\n        <circle cx=\"118\" cy=\"156\" r=\"73\" />\n        <rect x=\"1002\" y=\"40\" rx=\"0\" ry=\"0\" width=\"69\" height=\"23\" />\n        <rect x=\"47\" y=\"77\" rx=\"0\" ry=\"0\" width=\"0\" height=\"0\" />\n        <rect x=\"36\" y=\"77\" rx=\"0\" ry=\"0\" width=\"16\" height=\"0\" />\n        <rect x=\"409\" y=\"149\" rx=\"0\" ry=\"0\" width=\"0\" height=\"0\" />\n        <rect x=\"214\" y=\"145\" rx=\"0\" ry=\"0\" width=\"205\" height=\"9\" />\n        <rect x=\"216\" y=\"119\" rx=\"0\" ry=\"0\" width=\"205\" height=\"9\" />\n        <rect x=\"526\" y=\"100\" rx=\"0\" ry=\"0\" width=\"431\" height=\"8\" />\n        <rect x=\"526\" y=\"122\" rx=\"0\" ry=\"0\" width=\"431\" height=\"8\" />\n        <rect x=\"526\" y=\"146\" rx=\"0\" ry=\"0\" width=\"431\" height=\"8\" />\n        <rect x=\"527\" y=\"170\" rx=\"0\" ry=\"0\" width=\"431\" height=\"8\" />\n        <rect x=\"527\" y=\"194\" rx=\"0\" ry=\"0\" width=\"431\" height=\"8\" />\n        <rect x=\"527\" y=\"218\" rx=\"0\" ry=\"0\" width=\"431\" height=\"8\" />\n        <rect x=\"529\" y=\"275\" rx=\"0\" ry=\"0\" width=\"231\" height=\"7\" />\n    </ContentLoader>\n);\n\nexport default ReportDetailsContentLoader;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { fixedPercentage } from 'Utilities/TextHelper';\nimport {\n    PolicyBusinessObjectiveTooltip,\n    PolicyThresholdTooltip\n} from 'PresentationalComponents';\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n    TextContent,\n    TextVariants,\n    Text\n} from '@patternfly/react-core';\nimport Truncate from '@redhat-cloud-services/frontend-components/Truncate';\nimport linkifyHtml from 'linkifyjs/html';\n\nconst PolicyDetailsDescription = ({ policy }) => (\n    <Card ouiaId=\"PolicyDetailsCard\">\n        <CardHeader>\n            <Text style={ { fontSize: 20 } }>\n                <b>Policy details</b>\n            </Text>\n        </CardHeader>\n        <CardBody>\n            <TextContent>\n                <Text component={TextVariants.h5}>\n                    Compliance threshold\n                    <PolicyThresholdTooltip />\n                </Text>\n                <Text className='threshold-tooltip' component={TextVariants.p}>\n                    { fixedPercentage(policy.complianceThreshold, 1) }\n                </Text>\n                <Text component={TextVariants.h5}>\n                    Business objective\n                    <PolicyBusinessObjectiveTooltip />\n                </Text>\n                <Text component={TextVariants.p}>\n                    { policy.businessObjective && policy.businessObjective.title || '-' }\n                </Text>\n                <Text component={TextVariants.h5}>Policy description</Text>\n                <Text component={TextVariants.p}>\n                    <Truncate text={linkifyHtml(policy.description || '')} length={380} inline={true} />\n                </Text>\n                <Text component={TextVariants.h5}>\n                    Operating system\n                </Text>\n                <Text component={TextVariants.p}>\n                    RHEL { policy.majorOsVersion }\n                </Text>\n                <Text component={TextVariants.h5}>Policy type </Text>\n                <Text component={TextVariants.p}>{ policy.policyType }</Text>\n                <Text component={TextVariants.h5}>Reference ID</Text>\n                <Text component={TextVariants.p}>{ policy.refId }</Text>\n            </TextContent>\n        </CardBody>\n    </Card>\n);\n\nPolicyDetailsDescription.propTypes = {\n    policy: propTypes.object\n};\n\nexport default PolicyDetailsDescription;\n","import React from 'react';\nimport { fixedPercentage } from 'Utilities/TextHelper';\nimport propTypes from 'prop-types';\nimport {\n    Text,\n    TextContent,\n    TextList,\n    TextListVariants,\n    TextListItem,\n    TextListItemVariants\n} from '@patternfly/react-core';\nimport {\n    Link\n} from 'react-router-dom';\n\nconst PropTypes = {\n    children: propTypes.node\n};\n\nconst Dt = ({ children, ...props }) => (\n    <TextListItem { ...props } component={ TextListItemVariants.dt }>\n        { children }\n    </TextListItem>\n);\nDt.propTypes = PropTypes;\n\nconst Dd = ({ children, ...props }) => (\n    <TextListItem { ...props } component={ TextListItemVariants.dd }>\n        { children }\n    </TextListItem>\n);\nDd.propTypes = PropTypes;\n\nconst PolicyDescription = ({ profile }) => (\n    <React.Fragment>\n        <TextList component={TextListVariants.dl}>\n            <Dt>\n                <Text className='ins-c-non-bold-h2'>\n                    Policy details\n                </Text>\n            </Dt>\n            <Dt>\n                Operating system\n            </Dt>\n            <Dd>\n                RHEL { profile.majorOsVersion }\n            </Dd>\n            <Dt>\n                Compliance threshold\n            </Dt>\n            <Dd>\n                { fixedPercentage(profile.complianceThreshold, 1) }\n            </Dd>\n            <Dt>\n                Business objective\n            </Dt>\n            <Dd>\n                { profile.businessObjective ? profile.businessObjective.title : '--' }\n            </Dd>\n        </TextList>\n        <Link to={'/scappolicies/' + profile.policy.id} >\n            View policy\n        </Link>\n    </React.Fragment>\n);\n\nPolicyDescription.propTypes = {\n    profile: propTypes.shape({\n        id: propTypes.string,\n        complianceThreshold: propTypes.number,\n        businessObjective: propTypes.object,\n        majorOsVersion: propTypes.string,\n        policy: propTypes.shape({\n            id: propTypes.string\n        }),\n        benchmark: propTypes.shape({\n            version: propTypes.string\n        })\n    })\n};\n\nconst ReportDetailsDescription = ({ profile }) => (\n    <TextContent className='policy-details'>\n        <PolicyDescription { ...{ profile }} />\n    </TextContent>\n);\n\nReportDetailsDescription.propTypes = {\n    profile: propTypes.object\n};\n\nexport default ReportDetailsDescription;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport {\n    Progress, ProgressVariant\n} from '@patternfly/react-core/dist/js/components/Progress';\n\nconst ProgressBar = ({ percent, failed }) => {\n    let variant;\n    let title;\n\n    if (percent === 100) {\n        title = 'Success';\n        variant = ProgressVariant.success;\n    } else if (failed) {\n        title = 'Error';\n        variant = ProgressVariant.danger;\n    } else {\n        title = 'Progress';\n        variant = ProgressVariant.info;\n    }\n\n    return <Progress\n        id={'finished-create-policy'}\n        value={percent}\n        title={title}\n        variant={variant}\n        className='wizard-progress-bar'\n    />;\n};\n\nProgressBar.propTypes = {\n    percent: propTypes.number,\n    failed: propTypes.bool\n};\n\nexport default ProgressBar;\n","import React from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport propTypes from 'prop-types';\nimport { Tabs } from '@patternfly/react-core';\nimport { useAnchor } from 'Utilities/Router';\n\nexport const ContentTab = ({ children }) => (children);\n\nconst useAnchorLevels = (defaultAnchor, level) => {\n    const anchor = useAnchor(defaultAnchor);\n    const levels = anchor.split('|');\n    const currentAnchor = levels[level] || defaultAnchor;\n\n    return {\n        levels,\n        currentAnchor\n    };\n};\n\nconst TabSwitcher = (props) => (\n    props.children.map((tab) => (\n        tab.props.eventKey === props.activeKey ? tab : undefined\n    )).filter((c) => (!!c))\n);\n\nTabSwitcher.propTypes = {\n    activeTab: propTypes.number,\n    children: propTypes.node\n};\n\nexport const RoutedTabSwitcher = ({ children, defaultTab, level }) => {\n    const { currentAnchor } = useAnchorLevels(defaultTab, level);\n\n    return children.map((tab) => (\n        tab.props.eventKey === currentAnchor ? tab : undefined\n    )).filter((c) => (!!c));\n};\n\nRoutedTabSwitcher.propTypes = {\n    children: propTypes.node,\n    defaultTab: propTypes.string,\n    level: propTypes.number\n};\n\nRoutedTabSwitcher.defaultProps = {\n    level: 0\n};\n\nexport const RoutedTabs = ({ children, defaultTab, level, ...props }) => {\n    const { push } = useHistory();\n    const { pathname, state } = useLocation();\n    const { currentAnchor, levels } = useAnchorLevels(defaultTab, level);\n    const handleTabSelect = (e, eventKey) => {\n        e.preventDefault();\n        const tabToActivate = eventKey.replace('#', '');\n        let tabAnchor = levels;\n        tabAnchor[level] = tabToActivate;\n\n        push({\n            state,\n            to: pathname,\n            hash: tabAnchor.slice(0, (level + 1)).join('|')\n        });\n    };\n\n    return <Tabs\n        { ...props }\n        onSelect={ handleTabSelect }\n        activeKey={ currentAnchor }>\n        { children }\n    </Tabs>;\n};\n\nRoutedTabs.defaultProps = {\n    level: 0\n};\n\nRoutedTabs.propTypes = {\n    children: propTypes.node,\n    defaultTab: propTypes.string,\n    level: propTypes.number\n};\n\nexport default TabSwitcher;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport {\n    ErrorPage\n} from 'PresentationalComponents';\n\nexport const StateViewPart = ({ children }) => (children);\n\nconst props = {\n    stateValues: propTypes.object,\n    children: propTypes.node\n};\n\nexport const StateView = ({ stateValues, children }) => (\n    children.flatMap((c) => (c)).filter((child) => (\n        stateValues[child.props.stateKey]\n    ))\n);\n\nStateView.propTypes = props;\n\nexport const StateViewWithError = ({ stateValues, children }) => (\n    <StateView stateValues={ stateValues }>\n        <StateViewPart key='error-state' stateKey='error'>\n            <ErrorPage error={ stateValues.error } />\n        </StateViewPart>\n        { children }\n    </StateView>\n);\n\nStateViewWithError.propTypes = props;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport {\n    Tooltip,\n    TooltipPosition\n} from '@patternfly/react-core';\nimport {\n    WarningText\n} from 'PresentationalComponents';\n\nconst WARNING_TEXT = 'Policies without systems will not have reports.';\n\nconst WithOptionalToolTip = ({ showTooltip, children }) => (\n    showTooltip ? <Tooltip\n        position={ TooltipPosition.bottom }\n        content={ WARNING_TEXT }>\n        { children }\n    </Tooltip> : children\n);\n\nWithOptionalToolTip.propTypes = {\n    showTooltip: propTypes.bool,\n    children: propTypes.node\n};\n\nconst SystemsCountWarning = ({ count, variant }) => {\n    let text;\n\n    switch (variant) {\n        case 'count':\n            text = count;\n            break;\n        case 'compact':\n            text = 'No Systems';\n            break;\n        case 'full':\n            text = WARNING_TEXT;\n            break;\n        default:\n            text = count;\n    }\n\n    return <WithOptionalToolTip showTooltip={ variant === 'count' || variant === 'compact' }>\n        <WarningText>\n            { text }\n        </WarningText>\n    </WithOptionalToolTip>;\n};\n\nSystemsCountWarning.defaultProps = {\n    variant: 'compact'\n};\n\nSystemsCountWarning.propTypes = {\n    count: propTypes.number.isRequired,\n    variant: propTypes.string\n};\n\nexport { WARNING_TEXT };\nexport default SystemsCountWarning;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport {\n    Text\n} from '@patternfly/react-core';\nimport {\n    ExclamationTriangleIcon\n} from '@patternfly/react-icons';\n\nconst WarningText = ({ children }) => (\n    <React.Fragment>\n        <ExclamationTriangleIcon className='ins-u-warning'/>\n        <Text component=\"span\" className='ins-c-warning-text'>\n            &nbsp;{ children }\n        </Text>\n    </React.Fragment>\n);\n\nWarningText.propTypes = {\n    children: propTypes.node\n};\n\nexport default WarningText;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst BackgroundLink = ({\n    to, hash, children, state: desiredState, backgroundLocation, ...props\n}) => {\n    const currentLocation = useLocation();\n    const background = { ...currentLocation, ...backgroundLocation };\n    const state = { ...desiredState, background };\n\n    return <Link\n        to={{ pathname: to, state, hash }}\n        { ...props }>\n        { children }\n    </Link>;\n};\n\nBackgroundLink.propTypes = {\n    backgroundLocation: propTypes.object,\n    children: propTypes.node,\n    hash: propTypes.string,\n    state: propTypes.object,\n    to: propTypes.string.isRequired\n};\n\nexport default BackgroundLink;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Link as ReactRouterLink } from 'react-router-dom';\nimport { BreadcrumbItem } from '@patternfly/react-core';\n\nconst RouterLink = ({ href, ...props }) => (\n    <ReactRouterLink { ...props } to={ href } />\n);\n\nRouterLink.propTypes = {\n    href: propTypes.string\n};\n\nconst BreadcrumbLinkItem = ({ children, ...props }) => (\n    <BreadcrumbItem { ...props } component={ RouterLink }>\n        { children}\n    </BreadcrumbItem>\n);\n\nBreadcrumbLinkItem.propTypes = {\n    children: propTypes.node\n};\n\nexport default BreadcrumbLinkItem;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { TextContent, Text, Progress } from '@patternfly/react-core';\nimport { Link } from 'react-router-dom';\nimport { PolicyPopover, GreySmallText, UnsupportedSSGVersion } from 'PresentationalComponents';\n\nexport const Name = (profile) => (\n    <TextContent>\n        <Link to={'/reports/' + profile.id} style={ { marginRight: '.5rem' }}>\n            { profile.policy.name }\n        </Link>\n        <React.Fragment>\n            <PolicyPopover { ...{ profile, position: 'right' } } />\n            <GreySmallText>{ profile.policyType }</GreySmallText>\n        </React.Fragment>\n    </TextContent>\n);\n\nName.propTypes = {\n    profile: propTypes.object\n};\n\nexport const OperatingSystem = ({ majorOsVersion, ssgVersion, unsupportedHostCount, policy }) => {\n    const supported = unsupportedHostCount === 0;\n    ssgVersion = 'SSG: ' + ssgVersion;\n\n    return <React.Fragment>\n        RHEL { majorOsVersion }\n        { policy === null && ssgVersion && <Text>\n            <GreySmallText>\n                { supported ? ssgVersion : <UnsupportedSSGVersion>{ ssgVersion }</UnsupportedSSGVersion> }\n            </GreySmallText>\n        </Text> }\n    </React.Fragment>;\n};\n\nOperatingSystem.propTypes = {\n    majorOsVersion: propTypes.string,\n    ssgVersion: propTypes.string,\n    unsupportedHostCount: propTypes.number,\n    policy: propTypes.object\n};\n\nexport const CompliantSystems = ({ testResultHostCount = 0, compliantHostCount = 0, unsupportedHostCount = 0 }) => {\n    const tooltipText = 'Insights cannot provide a compliance score for systems running an unsupported ' +\n        'version of the SSG at the time this report was created, as the SSG version was not supported by RHEL.';\n    return <React.Fragment>\n        <Progress\n            measureLocation={ 'outside' }\n            value={ testResultHostCount ? (100 / testResultHostCount) * compliantHostCount : 0 } />\n        <GreySmallText>\n            { `${ compliantHostCount } of ${ testResultHostCount } systems ` }\n\n            { unsupportedHostCount > 0 && <UnsupportedSSGVersion { ...{ tooltipText } } style={ { marginLeft: '.5em' } }>\n                <strong className='ins-c-warning-text'>{ unsupportedHostCount } unsupported</strong>\n            </UnsupportedSSGVersion> }\n        </GreySmallText>\n    </React.Fragment>;\n};\n\nCompliantSystems.propTypes = {\n    testResultHostCount: propTypes.number,\n    compliantHostCount: propTypes.number,\n    unsupportedHostCount: propTypes.number\n};\n","import { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\n\nexport const policyNameFilter = [{\n    type: conditionalFilterType.text,\n    label: 'Policy name',\n    filter: (profiles, value) => {\n        const lowerCaseValue = value.toLowerCase();\n        return profiles.filter((profile) => (\n            [\n                profile.name,\n                profile.policy.name\n            ].join().toLowerCase().includes(lowerCaseValue)\n        ));\n    }\n}];\n\nexport const policyTypeFilter = (policyTypes) => ([{\n    type: conditionalFilterType.checkbox,\n    label: 'Policy type',\n    filter: (profiles, values) => (\n        profiles.filter(({ policyType }) => values.includes(policyType))\n    ),\n    items: policyTypes.map((policyType) => ({\n        label: policyType,\n        value: policyType\n    }))\n}]);\n\nexport const operatingSystemFilter = (operatingSystems) => ([{\n    type: conditionalFilterType.checkbox,\n    label: 'Operating system',\n    filter: (profiles, values) => (\n        profiles.filter(({ majorOsVersion }) => (\n            values.includes(majorOsVersion)\n        ))\n    ),\n    items: operatingSystems.map((operatingSystem) => ({\n        label: `RHEL ${operatingSystem}`,\n        value: operatingSystem\n    }))\n}]);\n\nexport const policyComplianceFilter = [{\n    type: conditionalFilterType.checkbox,\n    label: 'Systems meeting compliance',\n    filter: (profiles, values) => (\n        profiles.filter(({ testResultHostCount, compliantHostCount }) => {\n            const compliantHostsPercent = Math.round((100 / testResultHostCount) * compliantHostCount);\n            const matching = values.map((value) => {\n                const [min, max] = value.split('-');\n                return compliantHostsPercent >= min && compliantHostsPercent <= max;\n            }).filter((i) => (!!i));\n            return matching.length > 0;\n        })\n    ),\n    items: [\n        { label: '90 - 100%', value: '90-100' },\n        { label: '70 - 89%', value: '70-89' },\n        { label: '50 - 69%', value: '50-69' },\n        { label: 'Less than 50%', value: '0-49' }\n    ]\n}];\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Table, TableBody, TableHeader, sortable, fitContent } from '@patternfly/react-table';\nimport PrimaryToolbar from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport { emptyRows } from 'PresentationalComponents';\nimport useFilterConfig from 'Utilities/hooks/useTableTools/useFilterConfig';\nimport useTableSort from 'Utilities/hooks/useTableSort';\nimport { Name, OperatingSystem, CompliantSystems } from './Cells';\nimport { uniq } from 'Utilities/helpers';\nimport {\n    policyNameFilter, policyTypeFilter, operatingSystemFilter, policyComplianceFilter\n} from './Filters';\n\nconst ReportsTable = ({ profiles }) => {\n    const columns = [\n        {\n            title: 'Policy',\n            transforms: [sortable],\n            sortByProperty: 'name',\n            props: {\n                width: 55\n            }\n        },\n        {\n            title: 'Operating system',\n            transforms: [sortable, fitContent],\n            sortByProperty: 'majorOsVersion',\n            props: {\n                width: 20\n            }\n        },\n        {\n            title: 'Systems meeting compliance',\n            transforms: [sortable, fitContent],\n            sortByFunction: ({ testResultHostCount, compliantHostCount }) => (\n                (100 / testResultHostCount) * compliantHostCount\n            ),\n            props: {\n                width: 25\n            }\n        }\n    ];\n    const policyTypes = uniq(profiles.map(({ policyType }) => (policyType)).filter((i) => (!!i)));\n    const operatingSystems = uniq(profiles.map(({ majorOsVersion }) => (majorOsVersion)).filter((i) => (!!i)));\n    const { toolbarProps: conditionalFilter, filter } = useFilterConfig({ filters: { filterConfig: [\n        ...policyNameFilter,\n        ...policyTypes.length > 0 && policyTypeFilter(policyTypes) || [],\n        ...operatingSystems.length > 0 && operatingSystemFilter(operatingSystems) || [],\n        ...policyComplianceFilter\n    ] } });\n    const filteredProfiles = filter(profiles);\n\n    const { tableSort, sorted: sortedProfiles } = useTableSort(filteredProfiles, columns);\n    const rows = sortedProfiles.length > 0 ? sortedProfiles.map((profile) => ({\n        cells: [\n            { title: <Name { ...profile } /> },\n            { title: <OperatingSystem { ...profile } /> },\n            { title: <CompliantSystems { ...profile } /> }\n        ]\n    })) : emptyRows;\n\n    return <React.Fragment>\n        <PrimaryToolbar { ...conditionalFilter } />\n        <Table\n            aria-label='Reports'\n            ouiaId=\"ReportsTable\"\n            cells={ columns }\n            rows={ rows }\n            { ...tableSort }>\n            <TableHeader />\n            <TableBody />\n        </Table>\n    </React.Fragment>;\n};\n\nReportsTable.propTypes = {\n    profiles: propTypes.array\n};\n\nexport default ReportsTable;\n","import { useState } from 'react';\nimport { orderArrayByProp } from 'Utilities/helpers';\n\nconst useTableSort = (array, columns) => {\n    const [sortBy, setSortBy] = useState({\n        index: 0,\n        direction: 'desc'\n    });\n    const column = columns[sortBy.index];\n    const onSort = (_, index, direction) => (\n        setSortBy({\n            index,\n            direction\n        })\n    );\n\n    return {\n        tableSort: {\n            onSort,\n            sortBy\n        },\n        sorted: orderArrayByProp(\n            (column?.sortByProperty || column?.sortByFunction), array, sortBy.direction\n        )\n    };\n};\n\nexport default useTableSort;\n","import React from 'react';\nimport { Button } from '@patternfly/react-core';\nimport ComplianceEmptyState from '@redhat-cloud-services/frontend-components-inventory-compliance/ComplianceEmptyState';\nimport { BackgroundLink } from 'PresentationalComponents';\n\nconst ReportsEmptyState = () => (\n    <ComplianceEmptyState\n        title={ 'No policies are reporting' }\n        mainButton={ <BackgroundLink to='/scappolicies/new'>\n            <Button variant='primary' ouiaId=\"CreateNewPolicyButton\">Create new policy</Button>\n        </BackgroundLink> }\n    />\n);\n\nexport default ReportsEmptyState;\n","import React from 'react';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport {\n    Button,\n    Popover,\n    Text,\n    TextList,\n    TextListVariants,\n    TextListItem,\n    TextListItemVariants,\n    TextContent,\n    TextVariants\n} from '@patternfly/react-core';\nimport { fixedPercentage } from 'Utilities/TextHelper';\nimport {\n    Link\n} from 'react-router-dom';\nimport propTypes from 'prop-types';\n\nconst PolicyPopover = ({ profile, position = 'top' }) => {\n    const { policy, policyType, complianceThreshold, majorOsVersion, businessObjective } = profile;\n    return (\n        <Popover\n            { ...{ position } }\n            headerContent={\n                <TextContent>\n                    { policy.name }\n                    <Text component={ TextVariants.small }>{ policyType }</Text>\n                </TextContent>\n            }\n            footerContent={\n                <Link to={'/scappolicies/' + policy.id} >\n                    View policy\n                </Link>\n            }\n            bodyContent={\n                <TextContent className='policy-details'>\n                    <TextList component={TextListVariants.dl}>\n                        <TextListItem component={TextListItemVariants.dt}>\n                            Operating system\n                        </TextListItem>\n                        <TextListItem component={TextListItemVariants.dd}>\n                            RHEL { majorOsVersion }\n                        </TextListItem>\n                        <TextListItem component={TextListItemVariants.dt}>\n                            Compliance threshold\n                        </TextListItem>\n                        <TextListItem component={TextListItemVariants.dd}>\n                            { fixedPercentage(complianceThreshold, 1) }\n                        </TextListItem>\n                        { businessObjective &&\n                        <React.Fragment>\n                            <TextListItem component={TextListItemVariants.dt}>\n                                Business objective\n                            </TextListItem>\n                            <TextListItem component={TextListItemVariants.dd}>\n                                { businessObjective.title }\n                            </TextListItem>\n                        </React.Fragment> }\n                    </TextList>\n                </TextContent>\n            }\n        >\n            <Button variant=\"link\" ouiaId=\"PopoverViewPolicyLink\" isInline>\n                <OutlinedQuestionCircleIcon className='grey-icon'/>\n            </Button>\n        </Popover>\n    );\n};\n\nPolicyPopover.propTypes = {\n    profile: propTypes.object,\n    position: propTypes.string\n};\n\nexport default PolicyPopover;\n","import React, { Fragment } from 'react';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport { Tooltip } from '@patternfly/react-core';\n\nconst PolicyThresholdTooltip = () => (\n    <Tooltip\n        position='right'\n        content={\n            <Fragment>\n                The compliance threshold defines what percentage of rules must be\n                met in order for a system to be determined &quot;compliant&quot;.\n            </Fragment>\n        }\n    >\n        <span>\n            &nbsp;<OutlinedQuestionCircleIcon className='grey-icon'/>\n        </span>\n    </Tooltip>\n);\n\nexport default PolicyThresholdTooltip;\n","import React, { Fragment } from 'react';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport { Tooltip } from '@patternfly/react-core';\n\nconst PolicyBusinessObjectiveTooltip = () => (\n    <Tooltip\n        position='right'\n        content={\n            <Fragment>\n                This is an optional field that can be used to label policies that\n                are related to specific business objectives.\n            </Fragment>\n        }\n    >\n        <span>\n            &nbsp;<OutlinedQuestionCircleIcon className='grey-icon'/>\n        </span>\n    </Tooltip>\n);\n\nexport default PolicyBusinessObjectiveTooltip;\n","import React from 'react';\nimport {\n    Bullseye, EmptyState, EmptyStateBody, EmptyStateVariant, Title\n} from '@patternfly/react-core';\nimport EmptyTable from '@redhat-cloud-services/frontend-components/EmptyTable';\n\nconst NoResultsTable = () => (\n    <EmptyTable>\n        <Bullseye>\n            <EmptyState variant={ EmptyStateVariant.full }>\n                <Title headingLevel=\"h5\" size=\"lg\">\n                    No matching policies found\n                </Title>\n                <EmptyStateBody>\n                    This filter criteria matches no policies. <br /> Try changing your filter settings.\n                </EmptyStateBody>\n            </EmptyState>\n        </Bullseye>\n    </EmptyTable>\n);\n\nexport const emptyRows = [{\n    cells: [\n        {\n            title: () => (<NoResultsTable />),  // eslint-disable-line\n            props: {\n                colSpan: 3\n            }\n        }\n    ]\n}];\n\nexport default NoResultsTable;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Table, TableHeader, TableBody, fitContent } from '@patternfly/react-table';\nimport { Button, Pagination, PaginationVariant, ToolbarItem, TextContent } from '@patternfly/react-core';\nimport PrimaryToolbar from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport TableToolbar from '@redhat-cloud-services/frontend-components/TableToolbar';\nimport { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\nimport { FilterConfigBuilder } from '@redhat-cloud-services/frontend-components-inventory-compliance/Utilities';\nimport {\n    BackgroundLink, GreySmallText, SystemsCountWarning, emptyRows\n} from 'PresentationalComponents';\n\nexport const PolicyNameCell = ({ profile }) => (\n    <TextContent>\n        <Link to={'/scappolicies/' + profile.id}>{ profile.policy.name }</Link>\n        <GreySmallText>{ profile.policyType }</GreySmallText>\n    </TextContent>\n);\n\nPolicyNameCell.propTypes = {\n    profile: propTypes.object\n};\n\nconst policiesToRows = (policies) => (\n    policies.map((policy) => (\n        {\n            policyId: policy.id,\n            cells: [\n                { title: <PolicyNameCell profile={policy} /> },\n                { title: `RHEL ${ policy.majorOsVersion }` },\n                { title: policy.totalHostCount > 0 ? policy.totalHostCount :\n                    <SystemsCountWarning count={ policy.totalHostCount } variant='count' /> },\n                policy.businessObjective && policy.businessObjective.title || '--',\n                `${policy.complianceThreshold}%`\n            ]\n        }\n    ))\n);\n\nexport const FILTER_CONFIGURATION = [\n    {\n        type: conditionalFilterType.text,\n        label: 'Name',\n        filter: (policies, value) => (\n            policies.filter((policy) => policy.name.includes(value))\n        )\n    }\n];\n\nexport class PoliciesTable extends React.Component {\n    filterConfigBuilder = new FilterConfigBuilder(FILTER_CONFIGURATION);\n    chipBuilder = this.filterConfigBuilder.getChipBuilder();\n    filterBuilder = this.filterConfigBuilder.getFilterBuilder();\n    columns = [\n        { title: 'Name' },\n        { title: 'Operating system' },\n        { title: 'Systems' },\n        { title: 'Business objective', transforms: [fitContent] },\n        { title: 'Compliance threshold', transforms: [fitContent] }\n    ]\n    state = {\n        page: 1,\n        itemsPerPage: 10,\n        activeFilters: {}\n    }\n\n    setPage = (_event, page) => (\n        this.changePage(page, this.state.itemsPerPage)\n    )\n\n    setPerPage = (_event, itemsPerPage) => (\n        this.changePage(1, itemsPerPage)\n    )\n\n    changePage = (page, itemsPerPage) => (\n        this.setState({\n            page,\n            itemsPerPage\n        })\n    )\n\n    paginatedPolicies = (policies) => (\n        policies.slice(\n            (this.state.page - 1) * this.state.itemsPerPage,\n            this.state.page * this.state.itemsPerPage\n        )\n    )\n\n    filteredPolicies = () => (\n        this.filterConfigBuilder.applyFilterToObjectArray(\n            this.props.policies, this.state.activeFilters\n        )\n    )\n\n    onFilterUpdate = (filter, value) => {\n        this.setState({\n            page: 1,\n            activeFilters: {\n                ...this.state.activeFilters,\n                [filter]: value\n            }\n        });\n    }\n\n    deleteFilter = (chips) => {\n        const activeFilters =  this.filterConfigBuilder.removeFilterWithChip(\n            chips, this.state.activeFilters\n        );\n        this.setState({\n            activeFilters\n        });\n    }\n\n    clearAllFilter = () => (\n        this.setState({\n            activeFilters: this.filterConfigBuilder.initialDefaultState()\n        })\n    )\n\n    onFilterDelete = (_event, chips, clearAll = false) => (\n        clearAll ? this.clearAllFilter() : this.deleteFilter(chips[0])\n    )\n\n    actionResolver = () => ([\n        {\n            title: 'Delete policy',\n            onClick: (_event, _index, { policyId }) => {\n                const policy = this.props.policies.find((policy) => (\n                    policy.id === policyId\n                ));\n                this.props.history.push(`/scappolicies/${ policyId }/delete`, {\n                    policy,\n                    background: this.props.location\n                });\n            }\n        },\n        {\n            title: 'Edit policy',\n            onClick: (_event, _index, { policyId }) => {\n                const policy = this.props.policies.find((policy) => (\n                    policy.id === policyId\n                ));\n                this.props.history.push(`/scappolicies/${ policyId }/edit`, {\n                    policy,\n                    background: this.props.location,\n                    state: { policy }\n                });\n            }\n        }\n    ]);\n\n    render() {\n        const { page, itemsPerPage } = this.state;\n        const policies = this.filteredPolicies();\n        const filterChips = this.chipBuilder.chipsFor(this.state.activeFilters);\n        const rows = policiesToRows(this.paginatedPolicies(policies));\n        const filterConfig = this.filterConfigBuilder.buildConfiguration(\n            this.onFilterUpdate,\n            this.state.activeFilters,\n            { hideLabel: true }\n        );\n        const pagination = {\n            page,\n            itemCount: policies.length,\n            dropDirection: 'down',\n            onSetPage: this.setPage,\n            onPerPageSelect: this.setPerPage,\n            perPage: itemsPerPage\n        };\n\n        return <React.Fragment>\n            <PrimaryToolbar\n                filterConfig={ filterConfig }\n                activeFiltersConfig={{\n                    filters: filterChips,\n                    onDelete: this.onFilterDelete\n                }}\n                pagination={{\n                    ...pagination,\n                    dropDirection: 'down',\n                    ouiaId: 'PoliciesCompactPagination'\n                }}>\n                <ToolbarItem>\n                    <BackgroundLink to='/scappolicies/new'>\n                        <Button variant='primary' ouiaId=\"CreateNewPolicyButton\">Create new policy</Button>\n                    </BackgroundLink>\n                </ToolbarItem>\n                <ToolbarItem>\n                    { policies.length } results\n                </ToolbarItem>\n            </PrimaryToolbar>\n            <Table\n                aria-label='policies'\n                ouiaId=\"PoliciesTable\"\n                className='compliance-policies-table'\n                cells={ this.columns }\n                actionResolver={ rows.length > 0 && this.actionResolver }\n                rows={ (rows.length === 0) ? emptyRows : rows }>\n                <TableHeader />\n                <TableBody />\n            </Table>\n            <TableToolbar isFooter className=\"ins-c-inventory__table--toolbar\">\n                <Pagination\n                    { ...pagination }\n                    dropDirection='up'\n                    ouiaId=\"PoliciesPagination\"\n                    variant={ PaginationVariant.bottom }\n                />\n            </TableToolbar>\n        </React.Fragment>;\n    }\n}\n\nPoliciesTable.propTypes = {\n    policies: propTypes.array.isRequired,\n    history: propTypes.object.isRequired,\n    location: propTypes.object.isRequired\n};\n\nPoliciesTable.defaultProps = {\n    policies: []\n};\n\nexport { policiesToRows };\n\nexport default withRouter(PoliciesTable);\n","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { FormGroup } from '@patternfly/react-core';\nimport { ReduxFormTextInput } from 'PresentationalComponents/ReduxFormWrappers/ReduxFormWrappers';\nimport propTypes from 'prop-types';\nimport round from 'lodash/round';\nimport { thresholdValid } from '../../SmartComponents/CreatePolicy/validate';\nimport { PolicyThresholdTooltip } from 'PresentationalComponents';\n\nexport class ProfileThresholdField extends React.Component {\n    state = {\n        validThreshold: thresholdValid(this.props.previousThreshold),\n        threshold: round(this.props.previousThreshold || 100, 1)\n    };\n\n    handleThresholdChange = (threshold) => (\n        this.setState({\n            validThreshold: thresholdValid(threshold),\n            threshold: round(threshold, 1)\n        })\n    )\n\n    render() {\n        const { threshold, validThreshold } = this.state;\n\n        return (\n            <React.Fragment>\n                <FormGroup fieldId='policy-threshold'\n                    validated={ validThreshold ? 'default' : 'error' }\n                    helperTextInvalid='Threshold has to be a number between 0 and 100'\n                    helperText=\"A value of 95% or higher is recommended\"\n                    labelIcon={ <PolicyThresholdTooltip /> }\n                    label='Compliance threshold (%)'>\n                    <Field name='complianceThreshold' id='complianceThreshold' isRequired={true}\n                        onChange={this.handleThresholdChange}\n                        validated={ validThreshold ? 'default' : 'error' }\n                        defaultValue={threshold}\n                        aria-label=\"compliance threshold\"\n                        component={ReduxFormTextInput} type='number'\n                        style={ { width: '60%', display: 'block' } } />\n                </FormGroup>\n            </React.Fragment>\n        );\n    }\n}\n\nProfileThresholdField.propTypes = {\n    previousThreshold: propTypes.number\n};\n\nexport default reduxForm({\n    form: 'policyForm',\n    destroyOnUnmount: false,\n    forceUnregisterOnUnmount: true\n})(ProfileThresholdField);\n","import React from 'react';\nimport { supportedConfigsLink } from '@redhat-cloud-services/frontend-components-inventory-compliance';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\n\nconst SupportedSSGVersionsLink = () => (\n    <a target='_blank' rel='noopener noreferrer' href={ supportedConfigsLink }>\n        Supported SSG versions <ExternalLinkAltIcon />\n    </a>\n);\n\nexport default SupportedSSGVersionsLink;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Popover, Tooltip, Text } from '@patternfly/react-core';\nimport { ExclamationTriangleIcon, OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport { SupportedSSGVersionsLink } from 'PresentationalComponents';\n\nconst UNSUPPORTED_SINGULAR_MESSAGE =\n    'This system was using an incompatible version of the SSG at the time this report was generated. ' +\n    'Assessment of rules failed/passed on this system is a best-guess effort and may not be accurate.';\nconst UNSUPPORTED_PLURAL_MESSAGE = <React.Fragment>\n    <Text variant='p' style={ { marginBottom: '1rem' } }>\n        These systems are running unsupported versions of the SCAP Security Guide (SSG) for the version of RHEL installed on them.\n        Assessment of rules failed/passed on these systems is a best-guess effort and may not be accurate.\n    </Text>\n    <Text variant='p'>\n        The policy&apos;s compliance score excludes these systems.\n    </Text>\n</React.Fragment>;\n\nconst WarningWithPopover = ({ children, variant = 'plural' }) => (\n    <Popover\n        id='unsupported-popover'\n        maxWidth='25rem'\n        headerContent='Unsupported SSG versions'\n        bodyContent={ variant === 'plural' ? UNSUPPORTED_PLURAL_MESSAGE : UNSUPPORTED_SINGULAR_MESSAGE }\n        footerContent={ <SupportedSSGVersionsLink /> }>\n        { children }\n    </Popover>\n);\n\nWarningWithPopover.propTypes = {\n    children: propTypes.node,\n    variant: propTypes.oneOf(['singular', 'plural'])\n};\n\nconst WarningWithTooltip = ({ children, content }) => (\n    <Tooltip content={ content } position='bottom'>\n        { children }\n    </Tooltip>\n);\n\nWarningWithTooltip.propTypes = {\n    content: propTypes.string,\n    children: propTypes.node\n};;\n\nconst TooltipOrPopover = ({ variant, children, tooltipProps }) => {\n    const { Component, componentProps } = {\n        tooltip: {\n            Component: WarningWithTooltip,\n            componentProps: tooltipProps\n        },\n        popover: {\n            Component: WarningWithPopover,\n            componentProps: {\n                showHeader: tooltipProps.showPopupHeader,\n                variant: tooltipProps.messageVariant\n            }\n        }\n    }[variant];\n\n    return <Component { ...componentProps }>\n        { children }\n    </Component>;\n};\n\nTooltipOrPopover.propTypes = {\n    children: propTypes.node,\n    variant: propTypes.oneOf(['tooltip', 'popover']),\n    tooltipProps: propTypes.object\n};\n\nconst UnsupportedSSGVersion = ({\n    children, showWarningIcon = true, showHelpIcon = false, style, tooltipText, messageVariant\n}) => {\n    const tooltipProps = {\n        ...tooltipText && { content: <div>{ tooltipText }</div> },\n        messageVariant\n    };\n    const variant = tooltipText ? 'tooltip' : 'popover';\n    const iconProps = {\n        variant,\n        tooltipProps\n    };\n    const defaultStyle = !tooltipText ? { cursor: 'pointer' } : {};\n\n    return <span style={ { ...style, display: 'inline-block' } }>\n        { showWarningIcon && <TooltipOrPopover { ...iconProps }>\n            <span style={ defaultStyle } className='pf-u-mr-xs'>\n                <ExclamationTriangleIcon color='var(--pf-global--warning-color--100)' />\n            </span>\n        </TooltipOrPopover> }\n\n        { children }\n\n        { showHelpIcon &&  <TooltipOrPopover { ...iconProps }>\n            <span style={ defaultStyle } className='pf-u-ml-xs'>\n                <OutlinedQuestionCircleIcon />\n            </span>\n        </TooltipOrPopover> }\n    </span>;\n};\n\nUnsupportedSSGVersion.propTypes = {\n    showWarningIcon: propTypes.bool,\n    showHelpIcon: propTypes.bool,\n    style: propTypes.object,\n    tooltipText: propTypes.string,\n    children: propTypes.node,\n    variant: propTypes.string,\n    messageVariant: propTypes.string,\n    showPopupHeader: propTypes.bool\n};\n\nexport default UnsupportedSSGVersion;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Text } from '@patternfly/react-core';\n\nconst SubPageTitle = ({ children }) => (\n    <Text\n        component='h2'\n        style={ {\n            color: 'var(--pf-global--Color--200)',\n            lineHeight: '2rem'\n        } }>\n        { children }\n    </Text>\n);\n\nSubPageTitle.propTypes = {\n    children: propTypes.node\n};\n\nexport default SubPageTitle;\n","import React from 'react';\nimport {\n    EmptyStateBody, EmptyState, EmptyStateVariant, Text, TextContent, TextVariants, Title, Bullseye\n} from '@patternfly/react-core';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\nimport { WARNING_TEXT } from 'PresentationalComponents';\n\nconst NoSystemsTableWithWarning = () => (\n    <Bullseye>\n        <EmptyState variant={ EmptyStateVariant.full }>\n            <Title headingLevel=\"h2\" size='lg' style={ { fontWeight: 'bold' }}>\n                No systems on this policy\n            </Title>\n            <EmptyStateBody>\n                <TextContent>\n                    <Text component={ TextVariants.p }>\n                        Add systems to this policy from the systems page\n                    </Text>\n                    <Text style={ { color: 'var(--pf-global--warning-color--100)' }}>\n                        <ExclamationTriangleIcon /> { WARNING_TEXT }\n                    </Text>\n                </TextContent>\n            </EmptyStateBody>\n        </EmptyState>\n    </Bullseye>\n);\n\nexport default NoSystemsTableWithWarning;\n","import { useState } from 'react';\nimport { sortable } from '@patternfly/react-table';\nimport { orderArrayByProp, orderByArray, uniq } from 'Utilities/helpers';\n\nconst isSortable = (column) => (\n    column.sortByProp || column.sortByFunction\n);\n\nconst addSortableTransform = (columns) => (\n    columns.map((column) => ({\n        ...column,\n        ...isSortable(column) ? {\n            transforms: uniq([\n                ...(column?.transforms || []),\n                sortable\n            ])\n        } : {}\n    }))\n);\n\nconst columnOffset = (options = {}) => (\n    (typeof options.onSelect === 'function') +\n    (typeof options.detailsComponent  !== 'undefined')\n);\n\nconst useTableSort = (columns, options = {}) => {\n    const [sortBy, setSortBy] = useState({\n        index: 0,\n        direction: 'desc'\n    });\n    const onSort = (_, index, direction) => (\n        setSortBy({\n            index,\n            direction\n        })\n    );\n\n    return {\n        sorter: (items) => {\n            const column = columns[sortBy.index - columnOffset(options)];\n            return column?.sortByArray ? orderByArray(\n                items, column?.sortByProp, column?.sortByArray, sortBy.direction\n            ) : orderArrayByProp(\n                (column?.sortByProp || column?.sortByFunction), items, sortBy.direction\n            );\n        },\n        tableProps: {\n            onSort,\n            sortBy,\n            cells: addSortableTransform(columns)\n        }\n    };\n};\n\nexport default useTableSort;\n","import { useState } from 'react';\n\nconst usePaginate = (options = {}) => {\n    const { perPage = 10 } = options;\n    const enablePagination = options?.pagination !== false;\n\n    const [paginationState, setPaginationState] = useState({\n        perPage,\n        page: 1\n    });\n    const setPagination = (newState) => (\n        setPaginationState({\n            ...paginationState,\n            ...newState\n        })\n    );\n\n    const onSetPage = (_, page) => (\n        setPagination({ ...paginationState, page })\n    );\n\n    const onPerPageSelect = (_, perPage) => (\n        setPagination({ page: 1, perPage })\n    );\n\n    const paginator = (items) => {\n        const { page, perPage } = paginationState;\n        const start = (page - 1) * perPage;\n        const end = start + perPage;\n\n        return items.slice(start, end);\n    };\n\n    const setPage = (page) => {\n        const nextPage = page < 0 ? paginationState.page + page : page;\n        setPagination({\n            page: nextPage > 0 ? nextPage : 1\n        });\n    };\n\n    return enablePagination ? {\n        paginator,\n        setPage,\n        toolbarProps: {\n            pagination: {\n                ...paginationState,\n                onSetPage,\n                onPerPageSelect\n            }\n        }\n    } : {};\n};\n\nexport default usePaginate;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport {\n    Bullseye, EmptyState, EmptyStateBody, EmptyStateVariant, Title\n} from '@patternfly/react-core';\nimport EmptyTable from '@redhat-cloud-services/frontend-components/EmptyTable';\n\nexport const NoResultsTable = ({ kind = 'results' }) => (\n    <EmptyTable>\n        <Bullseye>\n            <EmptyState variant={ EmptyStateVariant.full }>\n                <Title headingLevel=\"h5\" size=\"lg\">\n                    No matching { kind } found\n                </Title>\n                <EmptyStateBody>\n                    This filter criteria matches no { kind }.<br />\n                    Try changing your filter settings.\n                </EmptyStateBody>\n            </EmptyState>\n        </Bullseye>\n    </EmptyTable>\n);\n\nNoResultsTable.propTypes = {\n    kind: propTypes.string\n};\n\nexport const emptyRows = [{\n    cells: [\n        {\n            title: () => (<NoResultsTable />),  // eslint-disable-line\n            props: {\n                colSpan: 3\n            }\n        }\n    ]\n}];\n\nexport default NoResultsTable;\n","import { emptyRows } from './Components/NoResultsTable';\n\nconst columnProp = (column) => (\n    column.key || column.original?.toLowerCase() || column.title?.toLowerCase()\n);\n\nconst itemRow = (item, columns) => ({\n    ...item.rowProps,\n    itemId: item.itemId,\n    cells: columns.map((column) => ({\n        title: column.renderFunc ?\n            column.renderFunc(undefined, undefined, item) : item[columnProp(column)]\n    }))\n});\n\nconst primeItem = (item, transformers) => {\n    let newItem = item;\n\n    transformers.forEach((transformer) => {\n        if (transformer) {\n            newItem = transformer(newItem);\n        }\n    });\n\n    return newItem;\n};\n\nconst applyTransformers = (items, transformers = []) => (\n    items.map((item) => (\n        primeItem(item, transformers)\n    ))\n);\n\nconst buildRow = (item, columns, rowTransformer, idx) => (\n    rowTransformer.flatMap((transformer) => {\n        const row = itemRow(item, columns);\n        return transformer ? transformer(\n            row, item, columns, idx\n        ) : row;\n    })\n);\n\nconst useRowsBuilder = (items, columns, options = {}) => {\n    const { transformer = [], rowTransformer = [] } = options;\n    const EmptyRowsComponent = options.emptyRows || emptyRows;\n    const transformedItems = transformer ?\n        applyTransformers(items, transformer) : items;\n\n    const filteredItems = options?.filter ?\n        options.filter(transformedItems) : transformedItems;\n\n    const sortedItems = options?.sorter ?\n        options.sorter(filteredItems) : filteredItems;\n\n    const paginatedItems = options?.paginator ?\n        options?.paginator(sortedItems) : sortedItems;\n\n    const rows = paginatedItems.length > 0 ? paginatedItems.flatMap((item, idx) => (\n        buildRow(item, columns, rowTransformer, idx)\n    )).filter((v) => (!!v)) : EmptyRowsComponent;\n\n    const pagination = options?.pagination ? {\n        ...options.pagination,\n        itemCount: filteredItems.length\n    } : undefined ;\n\n    return {\n        tableProps: {\n            rows\n        },\n        toolbarProps: {\n            pagination\n        }\n    };\n};\n\nexport default useRowsBuilder;\n","import { useEffect, useMemo, useState } from 'react';\nimport { filterSelected } from './helper';\n\nconst compileTitle = (itemsTotal, titleOption) => {\n    if (typeof titleOption === 'string') {\n        return titleOption;\n    } else if (typeof titleOption === 'function') {\n        return titleOption(itemsTotal);\n    } else {\n        return `${ itemsTotal } selected`;\n    }\n};\n\nconst checkboxState = (selectedItemsTotal, itemsTotal) => {\n    if (selectedItemsTotal === 0) {\n        return false;\n    } else if (selectedItemsTotal === itemsTotal) {\n        return true;\n    } else {\n        return null;\n    }\n};\n\nconst allItemsIncluded = (items, selection = []) => (\n    items.filter((item) => (\n        selection.includes(item)\n    )).length === items.length\n);\n\nconst selectOrUnselect = (selected) => (\n    selected ? 'Unselect' : 'Select'\n);\n\nconst checkCurrentPageSelected = (items, selectedItems) => {\n    if (items.length === 0) {\n        return false;\n    } else {\n        return allItemsIncluded(items, selectedItems);\n    }\n};\n\nconst itemIds = (items) => (items.map((item) => (item.itemId)));\nconst mergeArraysUniqly = (arrayA, arrayB) => (\n    Array.from(new Set([...arrayA, ...arrayB]))\n);\n\nconst useBulkSelect = ({\n    onSelect,\n    items: propItems,\n    filter,\n    paginator,\n    sorter,\n    preselected,\n    setPage\n}) => {\n    const enableBulkSelect = !!onSelect;\n\n    const [selectedIds, setSelectedItemIds] = useState(preselected || []);\n    const selectItemTransformer = (item) => ({\n        ...item,\n        rowProps: {\n            selected: (selectedIds || []).includes(item.itemId)\n        }\n    });\n\n    const items = (sorter ? sorter(propItems) : propItems).map(selectItemTransformer);\n    const total = items.length;\n\n    const selectedItems = filterSelected(items, selectedIds);\n    const selectedItemsTotal = selectedItems.length;\n    const noneSelected = selectedItemsTotal === 0;\n\n    const filteredItems = filter ? filter(items) : items;\n    const filteredTotal = filteredItems.length;\n    const filtered = filteredTotal !== total;\n    const allFiltertedSelected = selectedIds?.length > 0 ?\n        allItemsIncluded(itemIds(filteredItems), selectedIds) : false;\n\n    const paginatedItems = paginator ? paginator(filteredItems) : filteredItems;\n    const paginatedTotal = paginatedItems.length;\n\n    const currentPageSelected = checkCurrentPageSelected(\n        itemIds(paginatedItems), selectedIds\n    );\n\n    const title = compileTitle(selectedItemsTotal);\n    const checked = checkboxState(selectedItemsTotal, total);\n    const allCount = filtered ? filteredTotal : total;\n    const allSelected = selectedItemsTotal === allCount;\n    const isDisabled = allCount === 0;\n\n    const onSelectCallback = (func) => {\n        const newSelectedItemsIds = func();\n        setSelectedItemIds(newSelectedItemsIds);\n        onSelect && onSelect(newSelectedItemsIds);\n    };\n\n    const selectNone = () => onSelectCallback(() =>([]));\n\n    const selectOne = (_, selected, key, row) => onSelectCallback(() => {\n        const newItemIds = selected ?\n            [...selectedIds, row.itemId] :\n            selectedIds.filter((rowId) => (rowId !== row.itemId));\n\n        return newItemIds;\n    });\n\n    const selectItems = (itemIds) => (\n        mergeArraysUniqly(selectedIds, itemIds)\n    );\n\n    const unselectItems = (itemIds) => (\n        selectedIds.filter((itemId) => (\n            !itemIds.includes(itemId)\n        ))\n    );\n\n    const selectPage = () => onSelectCallback(() => {\n        const currentPageIds = itemIds(paginatedItems);\n        return currentPageSelected ?\n            unselectItems(currentPageIds) : selectItems(currentPageIds);\n    });\n\n    const selectFiltered = () => onSelectCallback(() => {\n        const currentFilteredIds = itemIds(filteredItems);\n        return allFiltertedSelected ?\n            unselectItems(currentFilteredIds) : selectItems(currentFilteredIds);\n    });\n\n    const selectAll = () => onSelectCallback(() => (\n        itemIds(items)\n    ));\n\n    const selectFilteredOrAll = () => (\n        filtered ? selectFiltered() : selectAll()\n    );\n\n    const selectAllHandler = () => (\n        allSelected ? selectNone() : selectFilteredOrAll()\n    );\n    const setPageMemo = useMemo(() => (\n        setPage\n    ), []);\n\n    useEffect(() => {\n        if (paginatedTotal === 0) {\n            setPageMemo(-1);\n        }\n    }, [paginatedTotal, setPageMemo]);\n\n    useEffect(() => {\n        setSelectedItemIds(preselected);\n    }, [preselected]);\n\n    return enableBulkSelect ? {\n        transformer: selectItemTransformer,\n        tableProps: {\n            onSelect: paginatedTotal > 0 ? selectOne : undefined,\n            canSelectAll: false\n        },\n        selected: selectedIds,\n        clearSelection: selectNone,\n        toolbarProps: {\n            bulkSelect: {\n                toggleProps: { children: [title] },\n                isDisabled,\n                items: [{\n                    title: 'Select none',\n                    onClick: selectNone,\n                    props: {\n                        isDisabled: noneSelected\n                    }\n                }, {\n                    title: `${ selectOrUnselect(currentPageSelected) } page (${ paginatedTotal } items)`,\n                    onClick: selectPage\n                }, {\n                    title: `${ selectOrUnselect(filtered ? allFiltertedSelected : allSelected) } all (${ allCount } items)`,\n                    onClick: selectAllHandler\n                }],\n                checked,\n                onSelect: !isDisabled ? () => selectPage() : undefined\n            }\n        }\n    } : {};\n};\n\nexport default useBulkSelect;\n","export const filterSelected = (items, selectedIds = []) => (\n    items.filter((item) => (\n        selectedIds.includes(item.itemId)\n    ))\n);\n","const getIdProp = (item, idProp = 'id') => (item[idProp]);\n\nconst identify = (item, identifier) => {\n    if (typeof identifier === 'string') {\n        return {\n            ...item,\n            itemId: getIdProp(item, identifier)\n        };\n    } else {\n        return {\n            ...item,\n            itemId: identifier(item)\n        };\n    }\n};\n\nexport const useItemIdentify = (items, options = {}) => {\n    const identifier = options?.identifier || getIdProp;\n\n    return items.map((item) => identify(item, identifier));\n};\n\nexport default useItemIdentify;\n","import React, { useState } from 'react';\n\nconst childRowForRule = (item, idx, DetailsComponent) => ({\n    parent: idx * 2,\n    cells: [\n        { title: <DetailsComponent rule={ item } key={ 'item-' + item.rowId } /> }\n    ]\n});\n\nconst itemDetailsRow = (item, idx, options) => (\n    (typeof(options?.detailsComponent) !== 'undefined') && childRowForRule(item, idx, options.detailsComponent)\n);\n\nconst useExpandable = (options) => {\n    const enableExpanbale = !!options.detailsComponent;\n    const [openItems, setOpenItems] = useState([]);\n    const onCollapse = (_event, _index, _isOpen, row) => {\n        if (openItems.includes(row.itemId)) {\n            setOpenItems(openItems.filter((itemId) => (itemId !== row.itemId)));\n        } else {\n            setOpenItems([...openItems, row.itemId]);\n        }\n    };\n\n    const openItem = (row, item, _columns, rowIndex) => {\n        const isOpen = openItems.includes(item.itemId);\n        const newRow = {\n            ...row,\n            isOpen\n        };\n        const expandableRow = itemDetailsRow(item, rowIndex, options);\n\n        return [\n            newRow,\n            expandableRow\n        ];\n    };\n\n    return enableExpanbale ? {\n        transformer: openItem,\n        tableProps: {\n            onCollapse\n        }\n    } : {};\n};\n\nexport default useExpandable;\n","import React from 'react';\n\nconst useDedicatedAction = (options) => {\n    const enableDedicatedAction = !!options.dedicatedAction;\n    const {\n        dedicatedAction: dedicatedActionOption, additionalDedicatedActions\n    } = options;\n\n    return enableDedicatedAction ? {\n        toolbarProps: {\n            dedicatedAction: <div> { dedicatedActionOption } { additionalDedicatedActions } </div>\n        } } : {};\n};\n\nexport default useDedicatedAction;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Pagination, PaginationVariant } from '@patternfly/react-core';\nimport { Table, TableBody, TableHeader } from '@patternfly/react-table';\nimport PrimaryToolbar from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport TableToolbar from '@redhat-cloud-services/frontend-components/TableToolbar';\nimport useTableTools from '../useTableTools';\n\nconst TableToolsTable = ({\n    items = [], columns = [], filters = [], options = {},\n    toolbarProps: toolbarPropsProp, ...tablePropsRest\n}) => {\n    const { toolbarProps, tableProps } = useTableTools(items, columns, {\n        filters,\n        toolbarProps: toolbarPropsProp,\n        tableProps: tablePropsRest,\n        ...options\n    });\n\n    return <React.Fragment>\n\n        <PrimaryToolbar { ...toolbarProps } />\n\n        <Table { ...tableProps }>\n            <TableHeader />\n            <TableBody />\n        </Table>\n\n        <TableToolbar isFooter>\n            <Pagination\n                variant={ PaginationVariant.bottom }\n                { ...toolbarProps.pagination } />\n        </TableToolbar>\n\n    </React.Fragment>;\n};\n\nTableToolsTable.propTypes = {\n    items: propTypes.array.isRequired,\n    columns: propTypes.arrayOf(propTypes.shape({\n        title: propTypes.node,\n        transforms: propTypes.array,\n        sortByProperty: propTypes.string,\n        sortByArray: propTypes.array,\n        sortByFunction: propTypes.func,\n        renderFunc: propTypes.func\n    })).isRequired,\n    filters: propTypes.object,\n    options: propTypes.object,\n    toolbarProps: propTypes.object\n};\n\nexport default TableToolsTable;\n","import useFilterConfig from './useFilterConfig';\nimport useTableSort from './useTableSort';\nimport usePaginate from './usePaginate';\nimport useRowsBuilder from './useRowsBuilder';\nimport useBulkSelect from './useBulkSelect';\nimport useItemIdentify from './useItemIdentify';\nimport useExpandable from './useExpandable';\nimport useDedicatedAction from './useDedicatedAction';\n\nconst useTableTools = (items = [], columns = [], options = {}) => {\n    const {\n        toolbarProps: toolbarPropsOption, tableProps: tablePropsOption\n    } = options;\n\n    const identifiedItems = useItemIdentify(items, options);\n\n    const {\n        tableProps: sortableTableProps, sorter\n    } = useTableSort(columns, options);\n\n    const {\n        toolbarProps: pagintionToolbarProps, setPage, paginator\n    } = usePaginate(options);\n\n    const {\n        toolbarProps: conditionalFilterProps,\n        filter,\n        selectedFilterToolbarProps\n    } = useFilterConfig({\n        ...options,\n        setPage\n    });\n\n    const {\n        transformer: openItem, tableProps: expandableProps\n    } = useExpandable(options);\n\n    const {\n        transformer: selectItem,\n        toolbarProps: bulkSelectToolbarProps,\n        tableProps: bulkSelectTableProps\n    } = useBulkSelect({\n        ...options,\n        items: identifiedItems,\n        filter,\n        paginator,\n        sorter,\n        setPage\n    });\n\n    const {\n        toolbarProps: dedicatedActionToolbarProps\n    } = useDedicatedAction({\n        ...options,\n        additionalDedicatedActions: [\n            selectedFilterToolbarProps?.dedicatedAction\n        ]\n    });\n\n    const {\n        toolbarProps: rowBuilderToolbarProps, tableProps: rowBuilderTableProps\n    } = useRowsBuilder(identifiedItems, sortableTableProps.cells, {\n        emptyRows: options.emptyRows,\n        transformer: [selectItem],\n        rowTransformer: [openItem],\n        pagination: pagintionToolbarProps?.pagination,\n        paginator,\n        filter,\n        sorter\n    });\n\n    const toolbarProps = {\n        ...pagintionToolbarProps,\n        ...bulkSelectToolbarProps,\n        ...conditionalFilterProps,\n        ...selectedFilterToolbarProps,\n        ...dedicatedActionToolbarProps,\n        ...rowBuilderToolbarProps,\n        ...toolbarPropsOption\n    };\n\n    const tableProps = {\n        cells: columns,\n        ...rowBuilderTableProps,\n        ...sortableTableProps,\n        ...bulkSelectTableProps,\n        ...expandableProps,\n        ...tablePropsOption\n    };\n\n    return {\n        toolbarProps,\n        tableProps\n    };\n};\n\nexport default useTableTools;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Grid, GridItem, Stack, StackItem, Text, TextVariants } from '@patternfly/react-core';\nimport ConditionalLink from 'PresentationalComponents';\n\nconst RuleDetailsRow = ({ rule }) => {\n    const { refId, description, identifier, references, rationale } = rule;\n    const key = `rule-child-row-${refId}`;\n\n    return <div key={ key } style={ { marginTop: 'var(--pf-global--spacer--lg)' } }>\n        <Stack id={ `rule-description-${key}` } className='margin-bottom-lg'>\n            <StackItem style={ { marginBottom: 'var(--pf-global--spacer--sm)' } }>\n                <Text className='pf-c-form__label' component={ TextVariants.h5 }><b>Description</b></Text>\n            </StackItem>\n            <StackItem isFilled>{ description }</StackItem>\n        </Stack>\n        <Stack id={ `rule-identifiers-references-${key}` } className='margin-bottom-lg'>\n            <Grid>\n                { identifier && identifier.length > 0 && <GridItem span={ 2 }>\n                    <Text className='pf-c-form__label' component={ TextVariants.h5 }><b>Identifier</b></Text>\n                    <Text>\n                        {\n                            identifier.map((ident, idx) => (\n                                <ConditionalLink\n                                    href={ ident.system }\n                                    target='_blank'\n                                    key={ `${refId}-identifier-${idx}` }>\n                                    { ident.label }\n                                </ConditionalLink>)\n                            ).reduce((prev, next) => ([prev, ', ', next]))\n                        }\n                    </Text>\n                </GridItem> }\n\n                { (references && references.length > 0) && <GridItem span={ 10 }>\n                    <Text className='pf-c-form__label' component={ TextVariants.h5 }><b>References</b></Text>\n                    <Text>\n                        {\n                            references.map((ref, idx) => (\n                                <ConditionalLink\n                                    href={ ref.href }\n                                    target='_blank'\n                                    key={ `${refId}-reference-${idx}` }>\n                                    { ref.label }\n                                </ConditionalLink>)\n                            ).reduce((prev, next) => ([prev, ', ', next]))\n                        }\n                    </Text>\n                </GridItem> }\n            </Grid>\n        </Stack>\n\n        { rationale &&\n            <Stack id={ `rule-rationale-${key}` } style={ { marginBottom: 'var(--pf-global--spacer--lg)' } }>\n                <StackItem style={ { marginBottom: 'var(--pf-global--spacer--sm)' } }>\n                    <Text className='pf-c-form__label' component={ TextVariants.h5 }><b>Rationale</b></Text>\n                </StackItem>\n                <StackItem isFilled>{ rationale }</StackItem>\n            </Stack>\n        }\n\n    </div>;\n};\n\nRuleDetailsRow.propTypes = {\n    rule: propTypes.object\n};\n\nexport default RuleDetailsRow;\n","import React from 'react';\nimport { Bullseye, EmptyState, EmptyStateBody, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { EmptyTable } from '@redhat-cloud-services/frontend-components/EmptyTable';\n\nconst emptyRows = (columns) => ([{\n    cells: [{\n        title: (\n            <EmptyTable>\n                <Bullseye>\n                    <EmptyState variant={ EmptyStateVariant.full }>\n                        <Title headingLevel=\"h5\" size=\"lg\">\n                                No matching rules found\n                        </Title>\n                        <EmptyStateBody>\n                                This filter criteria matches no rules. <br /> Try changing your filter settings.\n                        </EmptyStateBody>\n                    </EmptyState>\n                </Bullseye>\n            </EmptyTable>\n        ),\n        props: {\n            colSpan: columns.length\n        }\n    }]\n}]);\n\nexport default emptyRows;\n","import React from 'react';\nimport {\n    ExclamationCircleIcon, ExclamationTriangleIcon, QuestionCircleIcon\n} from '@patternfly/react-icons';\nimport { LowSeverityIcon } from './Cells';\n\nexport const HIGH_SEVERITY = <span><ExclamationCircleIcon className='ins-u-failed'/> High</span>;\nexport const MEDIUM_SEVERITY = <span><ExclamationTriangleIcon className='ins-u-warning'/> Medium</span>;\nexport const LOW_SEVERITY = <span><LowSeverityIcon /> Low</span>;\nexport const UNKNOWN_SEVERITY = <span><QuestionCircleIcon /> Unknown</span>;\n","import { HIGH_SEVERITY, MEDIUM_SEVERITY, LOW_SEVERITY, UNKNOWN_SEVERITY } from './Constants';\nimport { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\n\nconst filterRulesWithAllValues = (rules, values, valueCheck) => rules.filter((rule) => (\n    values.map((value) => valueCheck(rule, value)).filter(v => !!v).length > 0\n));\n\nconst anyFilterApply = (rules, values, valueCheck) => {\n    let filteredRules = [];\n    rules.forEach((rule) => {\n        if (values.map((value) => valueCheck(rule, value)).filter(v => !!v).length > 0) {\n            filteredRules.push(rule);\n        }\n    });\n    return filteredRules;\n};\n\nconst BASE_FILTER_CONFIGURATION = [{\n    type: conditionalFilterType.text,\n    label: 'Name',\n    filter: (rules, value) => filterRulesWithAllValues(rules, [value], (rule, value) => (\n        rule.title.toLowerCase().includes(value.toLowerCase()) ||\n        (rule.identifier && rule.identifier.label.toLowerCase().includes(value.toLowerCase())) ||\n        rule.references.filter((reference) => reference.label.toLowerCase().includes(value.toLowerCase())).length > 0\n    ))\n}, {\n    type: conditionalFilterType.checkbox,\n    label: 'Severity',\n    items: [\n        { label: HIGH_SEVERITY, value: 'high' },\n        { label: MEDIUM_SEVERITY, value: 'medium' },\n        { label: LOW_SEVERITY, value: 'low' },\n        { label: UNKNOWN_SEVERITY, value: 'unknown' }\n    ],\n    filter: (rules, values) => anyFilterApply(rules, values, (rule, value) => (\n        rule.severity === value\n    ))\n}];\n\nconst PASS_FILTER_CONFIG = {\n    type: conditionalFilterType.checkbox,\n    label: 'Passed',\n    items: [\n        { label: 'Passed rules', value: 'passed' },\n        { label: 'Failed rules', value: 'failed' }\n    ],\n    filter: (rules, values) => anyFilterApply(rules, values, (rule, value) => (\n        rule.compliant === (value === 'passed')\n    ))\n};\n\nexport const policiesFilterConfig = (policies) => ({\n    type: conditionalFilterType.checkbox,\n    label: 'Policy',\n    items: policies.map(policy => (\n        { label: policy.name, value: policy.id }\n    )),\n    filter: (rules, values) => filterRulesWithAllValues(rules, values, (rule, value) => (\n        (rule.profile.policy ? rule.profile.policy.id : rule.profile.id) === value\n    ))\n});\n\nexport const REMEDIATION_AVAILABLE_FILTER_CONFIG = {\n    type: conditionalFilterType.checkbox,\n    label: 'Remediation available',\n    items: [\n        { label: 'Remediation available', value: 'true' }\n    ],\n    filter: (rules, value) => (rules.filter((rule) => (\n        value[0] === 'true' ? rule.remediationAvailable === true : true\n    )))\n};\n\nconst buildFilterConfig = ({ showPassFailFilter, policies, remediationAvailableFilter }) => {\n    const config = [...BASE_FILTER_CONFIGURATION];\n\n    if (showPassFailFilter) {\n        config.push(PASS_FILTER_CONFIG);\n    }\n\n    if (policies && policies.length > 1) {\n        config.push(policiesFilterConfig(policies));\n    }\n\n    if (remediationAvailableFilter) {\n        config.push(REMEDIATION_AVAILABLE_FILTER_CONFIG);\n    }\n\n    return config;\n};\n\nexport default buildFilterConfig;\n","import React from 'react';\nimport propTypes from 'prop-types';\n// eslint-disable-next-line\nimport ComplianceRemediationButton from '@redhat-cloud-services/frontend-components-inventory-compliance/ComplianceRemediationButton';\nimport { TableToolsTable } from 'Utilities/hooks/useTableTools';\nimport { toRulesArrayWithProfile } from 'Utilities/ruleHelpers';\nimport RuleDetailsRow from './RuleDetailsRow';\nimport emptyRows from './EmptyRows';\nimport buildFilterConfig from './Filters';\nimport * as Columns from './Columns';\n\nconst RulesTable = ({\n    system,\n    profileRules,\n    columns = [\n        Columns.Name,\n        Columns.Policy,\n        Columns.Severity,\n        Columns.Passed,\n        Columns.Ansible\n    ],\n    remediationsEnabled = true,\n    remediationAvailableFilter = false,\n    selectedFilter = false,\n    handleSelect,\n    selectedRefIds = [],\n    hidePassed = false,\n    options,\n    ...rulesTableProps\n}) => {\n    const rules = toRulesArrayWithProfile(profileRules);\n    const showPassFailFilter = (columns.filter((c) => (c.title === 'Passed')).length > 0);\n    const policies = profileRules.filter(({ profile }) => !!profile).map(({ profile }) => (\n        {\n            id: profile.policy ? profile.policy.id : profile.id,\n            name: profile.name\n        }\n    ));\n\n    const remediationAction = ({ selected: selectedRules }) => (\n        <ComplianceRemediationButton\n            allSystems={ [{\n                id: system.id,\n                profiles: system.testResultProfiles,\n                ruleObjectsFailed: [],\n                supported: system.supported\n            }] }\n            selectedRules={\n                (selectedRules || []).filter((rule) => (rule.remediationAvailable))\n            } />\n    );\n\n    return <TableToolsTable\n        aria-label=\"Rules Table\"\n        items={ rules }\n        columns={ columns }\n        filters={{\n            filterConfig: buildFilterConfig({\n                showPassFailFilter,\n                policies,\n                remediationAvailableFilter\n            }),\n            activeFilters: {\n                passed: hidePassed ? 'failed' : undefined\n            }\n        }}\n        options={{\n            ...options,\n            identifier: (item) => (item.refId),\n            selectable: !!handleSelect || remediationsEnabled,\n            onSelect: handleSelect,\n            preselected: selectedRefIds,\n            detailsComponent: RuleDetailsRow,\n            emptyRows: emptyRows(columns),\n            selectedFilter,\n            ...remediationsEnabled ? { dedicatedAction: remediationAction } : {}\n        }}\n        { ...rulesTableProps } />;\n};\n\nRulesTable.propTypes = {\n    profileRules: propTypes.array,\n    loading: propTypes.bool,\n    hidePassed: propTypes.bool,\n    system: propTypes.object,\n    remediationsEnabled: propTypes.bool,\n    remediationAvailableFilter: propTypes.bool,\n    selectedRefIds: propTypes.array,\n    selectedFilter: propTypes.bool,\n    handleSelect: propTypes.func,\n    columns: propTypes.array,\n    options: propTypes.object\n};\n\nexport default RulesTable;\n","export const validateBenchmarkPage = (benchmark, osMajorVersion, profile) => {\n    if (benchmark && osMajorVersion && profile) {\n        return true;\n    } else {\n        return false;\n    }\n};\n\nexport const thresholdValid = (threshold) => (\n    threshold < 101 && threshold >= 0\n);\n\nexport const validateDetailsPage = (name, refId, complianceThreshold) => (\n    !name || !refId  || !complianceThreshold || !thresholdValid(complianceThreshold) ? false : true\n);\n\nexport const validateRulesPage = (selectedRuleRefIds) => (\n    selectedRuleRefIds?.length > 0\n);\n\nexport const validateSystemsPage = (systemIds) => {\n    if (systemIds) {\n        return systemIds.length > 0;\n    } else {\n        return false;\n    }\n};\n","export const isNumberRange = (value) => value && !!value.match(/\\d\\d*-\\d\\d*/);\n\nexport const fixedPercentage = (value, fixed = 0, withPercent = true) => {\n    const fixedValue = (value)?.toFixed(fixed);\n    return fixedValue ? (fixedValue + (withPercent ? '%' : '')) : 'N/A';\n};\n\nexport const pluralize = (value, singular, plural) => {\n    if (!plural) {\n        plural = singular + 's';\n    }\n\n    return (value > 1 || value === 0 ? plural : singular);\n};\n\nexport const stringToId = (string) => (\n    string.replace(' ', '').toLowerCase()\n);\n","import React from 'react';\n\nexport const uniq = (collection) => [...new Set(collection)];\n\nexport const sortingByProp = (propName, order = 'asc') => (\n    (objA, objB) => {\n        const propA = (objA && objA[propName]) || '';\n        const propB = (objB && objB[propName]) || '';\n        if (propA === propB) {\n            return 0;\n        } else if (order === 'asc') {\n            return propA < propB ? -1 : 1;\n        } else {\n            return propA < propB ? 1 : -1;\n        }\n    }\n);\n\nexport const renderComponent = (Component, props) => (\n    (_data, _id, entity) => ( // eslint-disable-line react/display-name\n        <Component { ...entity } { ...props } />\n    )\n);\n\nconst getSortable = (property, item) => {\n    if (typeof(property) === 'function') {\n        return property(item);\n    } else {\n        return item[property];\n    }\n};\n\nexport const orderArrayByProp = (property, objects, direction) => (\n    objects.sort((a, b) => {\n        if (direction === 'asc') {\n            return String(getSortable(property, a)).localeCompare(String(getSortable(property, b)));\n        } else {\n            return -String(getSortable(property, a)).localeCompare(String(getSortable(property, b)));\n        }\n    })\n);\n\nexport const orderByArray = (objectArray, orderProp, orderArray, direction) => {\n    const sortedObjectArray = orderArray.flatMap((orderKey) => (\n        objectArray.filter((item) => (item[orderProp] === orderKey))\n    ));\n    return (direction !== 'asc' ? sortedObjectArray.reverse() : sortedObjectArray);\n};\n\nexport const getProperty = (obj, path, fallback) => {\n    const parts = path.split('.');\n    const key = parts.shift();\n    if (typeof obj[key] !== 'undefined') {\n        return parts.length > 0 ?\n            getProperty(obj[key], parts.join('.'), fallback) :\n            obj[key];\n    }\n\n    return fallback;\n};\n\nexport const camelCase = (string) => (\n    string.split(/[-_\\W]+/g)\n    .map((string) => (string.trim()))\n    .map((string) => string[0].toUpperCase() + string.substring(1))\n    .join('')\n);\n","export const stringToId = (string) => (\n    string.split(' ').join('').toLowerCase()\n);\n","import { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\nimport { stringToId } from './Helpers';\n\nclass FilterBuilder {\n    constructor(filterConfig) {\n        this.filterConfig = filterConfig;\n        this.config = this.filterConfig.config;\n    }\n\n    buildFilterFilterString = (configItem, value) => {\n        const { type, filterString } = configItem;\n\n        if (type !== 'hidden' && !value) { return []; }\n\n        switch (type) {\n            case conditionalFilterType.text:\n                return [filterString(value)];\n            case conditionalFilterType.checkbox:\n                return value.map((filter) => (filterString(filter)));\n\n            case conditionalFilterType.group:\n                return filterString(value);\n\n            case 'hidden':\n                return filterString();\n\n            default:\n                return [];\n        }\n    }\n\n    combineFilterStrings = (filterStringArray) => {\n        const moreThanTwo = filterStringArray.map((f) => (f.length)).filter((fl) => (fl > 0)).length >= 2;\n        return filterStringArray.map((fs) => (fs.join(' or '))).join(moreThanTwo ? ' and ' : '');\n    }\n\n    buildFilterString = (filters) => {\n        const filterStringArray = this.config.map((configItem) => (\n            this.buildFilterFilterString(configItem, filters[stringToId(configItem.label)])\n        )).filter((f) => (f.length > 0));\n        return this.combineFilterStrings(filterStringArray);\n    }\n}\n\nexport default FilterBuilder;\n","import { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\n\nconst findWithString = (value) => (\n    (item) => (\n        String(item.value) === String(value)\n    )\n);\n\nclass ChipBuilder {\n    constructor(filterConfig) {\n        this.filterConfig = filterConfig;\n        this.config = this.filterConfig.config;\n    }\n\n    textFilterChip = (category, currentValue) => (currentValue && currentValue !== '' ? {\n        category,\n        chips: [{ name: currentValue }]\n    } : null)\n\n    checkboxFilterChip = (category, currentValue) => (currentValue && currentValue.length > 0 ? {\n        category,\n        chips: currentValue.map((value) => (\n            { name: this.filterConfig.labelForValue(value, category) }\n        ))\n    } : null)\n\n    radioFilterChip = (category, currentValue) => (currentValue && currentValue !== '' ? {\n        category,\n        chips: [{ name: this.filterConfig.labelForValue(currentValue, category) }]\n    } : null)\n\n    groupFilterChip = (category, currentValue = {}, categoryConfig) => {\n        const items = Object.keys(currentValue).flatMap((groupValue) => {\n            const group = categoryConfig.items.find(findWithString(groupValue));\n\n            return Object.keys(currentValue[groupValue]).map((itemValue) => (\n                currentValue[groupValue][itemValue] ? group?.items.find(findWithString(itemValue)) : null\n            ));\n        }).filter((v) => (!!v));\n\n        return currentValue && items.length > 0 ? {\n            category,\n            chips: items.map((item) => ({ name: item.label }))\n        } : null;\n    }\n\n    chipFor = (filter, currentValue) => {\n        const categoryConfig = this.filterConfig.getCategoryForLabel(filter);\n        const { label, type } = categoryConfig ? categoryConfig : { label: filter, type: null };\n\n        switch (type) {\n            case conditionalFilterType.text:\n                return this.textFilterChip(label, currentValue);\n\n            case conditionalFilterType.checkbox:\n                return this.checkboxFilterChip(label, currentValue);\n\n            case conditionalFilterType.radio:\n                return this.radioFilterChip(label, currentValue);\n\n            case conditionalFilterType.group:\n                return this.groupFilterChip(label, currentValue, categoryConfig);\n\n            default:\n                return null;\n        }\n    }\n\n    chipsFor = (filters) => (\n        Object.keys(filters).map((filter) => (\n            this.chipFor(filter, filters[filter])\n        )).filter((f) => (!!f))\n    )\n}\n\nexport default ChipBuilder;\n","import { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\nimport FilterBuilder from './FilterBuilder';\nimport ChipBuilder from './ChipBuilder';\nimport { stringToId } from './Helpers';\n\nconst defaultPlaceholder = (label) => (`Filter by ${ label.toLowerCase() }`);\n\nclass FilterConfigBuilder {\n    chipBuilder = null;\n    filterBuilder = null;\n\n    constructor(config) {\n        this.config = config;\n    }\n\n    addConfigItem = (item) => (\n        this.config = this.config.filter((i) => (\n            i.label !== item.label\n        )).concat(item)\n    )\n\n    getChipBuilder = (config) => {\n        if (config) {\n            this.config = config;\n        }\n\n        return this.chipBuilder = this.chipBuilder ? this.chipBuilder : new ChipBuilder(this);\n    }\n\n    getFilterBuilder = (config) => {\n        if (config) {\n            this.config = config;\n        }\n\n        return this.filterBuilder = this.filterBuilder ? this.filterBuilder : new FilterBuilder(this);\n    }\n\n    toTextFilterConfig = (item, handler, value) => ({\n        type: conditionalFilterType.text,\n        label: item.label,\n        placeholder: defaultPlaceholder(item.label),\n        id: stringToId(item.label),\n        filterValues: {\n            value,\n            [item.event || 'onChange']: (_event, selectedValues) => {\n                handler(stringToId(item.label), selectedValues);\n            }\n        }\n    });\n\n    toCheckboxFilterConfig = (item, handler, value) => ({\n        type: conditionalFilterType.checkbox,\n        label: item.label,\n        placeholder: defaultPlaceholder(item.label),\n        id: stringToId(item.label),\n        filterValues: {\n            value,\n            items: item.items,\n            onChange: (_event, selectedValues) => {\n                handler(stringToId(item.label), selectedValues);\n            }\n        }\n    });\n\n    toRadioFilterConfig = (item, handler, value) => ({\n        type: conditionalFilterType.radio,\n        label: item.label,\n        placeholder: defaultPlaceholder(item.label),\n        id: stringToId(item.label),\n        filterValues: {\n            value,\n            items: item.items,\n            onChange: (_event, selectedValues) => {\n                handler(stringToId(item.label), selectedValues);\n            }\n        }\n    });\n\n    toGroupedFilterConfig = (item, handler, value) => ({\n        type: conditionalFilterType.group,\n        label: item.label,\n        id: stringToId(item.label),\n        filterValues: {\n            selected: value,\n            onChange: (_event, selectedValues) => {\n                handler(stringToId(item.label), selectedValues);\n            },\n            groups: item.items.map((item) => ({\n                ...item,\n                type: 'checkbox',\n                items: item.items.map((subItem) => ({\n                    ...subItem,\n                    type: 'checkbox'\n                }))\n            }))\n        }\n    });\n\n    toFilterConfigItem = (item, handler, value) => {\n        switch (item.type) {\n            case conditionalFilterType.text:\n                return this.toTextFilterConfig(item, handler, value);\n\n            case conditionalFilterType.checkbox:\n                return this.toCheckboxFilterConfig(item, handler, value);\n\n            case conditionalFilterType.radio:\n                return this.toRadioFilterConfig(item, handler, value);\n\n            case conditionalFilterType.group:\n                return this.toGroupedFilterConfig(item, handler, value);\n\n            default:\n                return null;\n        }\n    };\n\n    buildConfiguration = (handler, states, props = {}, initConfig) => ({\n        ...props,\n        items: (initConfig || this.config).map((item) => (\n            this.toFilterConfigItem(item, handler, states[stringToId(item.label)])\n        )).filter((v) => (!!v))\n    });\n\n    defaultValueForFilter = (filter) => {\n        switch (filter.type) {\n            case conditionalFilterType.text:\n                return '';\n            case conditionalFilterType.checkbox:\n                return [];\n            case 'hidden':\n                return filter.default || false;\n            default:\n                return;\n        }\n    }\n\n    initialDefaultState = (defaultStates = {}, initConfig) => {\n        let initialState = {};\n        (initConfig || this.config).forEach((filter) => {\n            const filterStateName = stringToId(filter.key || filter.label);\n            initialState[filterStateName] =\n                defaultStates[filterStateName] || this.defaultValueForFilter(filter);\n        });\n\n        return initialState;\n    }\n\n    categoryLabelForValue = (value) => {\n        const category = this.config.filter((category) => (\n            category.items ? category.items.map((item) => item.value).includes(value) : false\n        ))[0];\n\n        return category ? category.label : value;\n    };\n\n    getCategoryForLabel = (query) => (\n        this.config.filter((item) => (stringToId(item.key || item.label) === stringToId(query)))[0] || {}\n    )\n\n    getItemByLabelOrValue = (query, category) => {\n        const categoryConfig = this.getCategoryForLabel(category);\n        const items = categoryConfig.type !== conditionalFilterType.group ?\n            categoryConfig.items : categoryConfig.items.flatMap((item) => (\n                item.items.map((subItem) => ({ ...subItem, parentValue: item.value }))\n            ));\n        const results = (items || []).filter((item) => (\n            item.value === query || item.label === query\n        ));\n\n        if (results.length === 1) {\n            return results[0];\n        } else if (results.length > 1) {\n            // eslint-disable-next-line no-console\n            console.info(`Multiple items found for ${query} in ${category}! Returning first one.`);\n            return results[0];\n        } else {\n            // eslint-disable-next-line no-console\n            console.info('No item found for ' + query + ' in ', category);\n        }\n    }\n\n    labelForValue = (value, category) => {\n        const item = this.getItemByLabelOrValue(value, category);\n        return item ? item.label : value;\n    };\n\n    valueForLabel = (label, category) => {\n        const item = this.getItemByLabelOrValue(label, category);\n        return item ? item.value : label;\n    };\n\n    applyFilterToObjectArray = (objects, activeFilters) => {\n        let filteredObjects = [...objects];\n\n        Object.keys(activeFilters).forEach((filter) => {\n            const category = this.getCategoryForLabel(filter);\n            const value = activeFilters[filter];\n            if ((!category || !value)) {\n                return;\n            }\n\n            if (value.length > 0 || (category.type === 'hidden' && typeof value === 'boolean')) {\n                filteredObjects = category.filter(filteredObjects, value);\n            }\n        });\n\n        return filteredObjects;\n    }\n\n    removeFilterFromFilterState = (currentState, filter) => (\n        (typeof(currentState) === 'string') ? '' :\n            currentState.filter((value) =>\n                value !== filter\n            )\n    )\n\n    removeFilterFromGroupFilterState = (currentState, filter, chipItem) => {\n        // eslint-disable-next-line\n        const { [chipItem.value]: _remove, ...newGroupState } = currentState[chipItem.parentValue];\n        return {\n            ...currentState,\n            [chipItem.parentValue]: newGroupState\n        };\n    }\n\n    removeFilterWithChip = (chips, activeFilters) => {\n        const chipCategory = chips.category;\n        const chipLabel = chips.chips[0].name;\n        const chipItem = this.getItemByLabelOrValue(chipLabel, chipCategory);\n        const chipValue = chipItem ? chipItem.value : chipLabel;\n        const stateProp = stringToId(chipCategory);\n        const currentState = activeFilters[stateProp];\n        const categoryConfig = this.getCategoryForLabel(chipCategory);\n        const isGroup = categoryConfig.type === conditionalFilterType.group;\n        const newFilterState = (isGroup ?\n            this.removeFilterFromGroupFilterState : this.removeFilterFromFilterState\n        )(currentState, chipValue, chipItem);\n\n        return {\n            ...activeFilters,\n            [stateProp]: newFilterState\n        };\n    }\n}\n\nexport default FilterConfigBuilder;\n","import React from 'react';\nimport { Switch } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\n\nconst SelectedFilterSwitch = ({ isChecked, setActiveFilter }) => (\n    <Switch\n        label='Selected only'\n        isChecked={ isChecked }\n        onChange={ () => (\n            setActiveFilter('selected', !isChecked)\n        ) }\n    />\n);\n\nSelectedFilterSwitch.propTypes = {\n    isChecked: propTypes.bool,\n    setActiveFilter: propTypes.func\n};\n\nexport default SelectedFilterSwitch;\n","import React from 'react';\nimport SelectedFilterSwitch from './Components/SelectedFilterSwitch';\n\nconst useSelectedFilter = ({\n    setActiveFilter, activeFilters, selectedFilter\n}) => {\n    const enableSelectedFilter = !!selectedFilter;\n    const filterKey = 'selected';\n    const filterItem = {\n        type: 'hidden',\n        label: 'selectFilter',\n        key: filterKey,\n        default: true,\n        filter: (items, value) => {\n            return items.filter((item) => (item?.rowProps?.selected === value));\n        }\n    };\n    const isChecked = activeFilters[filterKey] === true;\n    const selectedToggle = <SelectedFilterSwitch { ...{\n        setActiveFilter,\n        isChecked\n    }  } />;\n\n    return enableSelectedFilter ? {\n        filterItem,\n        toolbarProps: {\n            dedicatedAction: selectedToggle\n        }\n    } : {};\n};\n\nexport default useSelectedFilter;\n","import { useState, useEffect, useMemo } from 'react';\nimport FilterConfigBuilder from './FilterConfigBuilder/FilterConfigBuilder';\nimport useSelectedFilter from './useSelectedFilter';\n\nconst filterValues = (activeFilters) => (\n    Object.values(activeFilters).filter((value) => {\n        if (typeof value === Object) {\n            return Object.values(value).length > 0;\n        }\n\n        if (typeof value === Array) {\n            return value.length > 0;\n        }\n\n        return !!value;\n    })\n);\n\nconst filterConfigBuilder = new FilterConfigBuilder([]);\n\nconst useFilterConfig = (options = {}) => {\n    const {\n        filters,\n        setPage,\n        selectedFilter\n    } = options;\n    const enableFilters = !!filters;\n    const { filterConfig = [], activeFilters: initialActiveFilters } = filters || {};\n    const [activeFilters, setActiveFilters] = useState(\n        filterConfigBuilder.initialDefaultState(initialActiveFilters, filterConfig)\n    );\n    const onFilterUpdate = (filter, value) => {\n        setActiveFilters({\n            ...activeFilters,\n            [filter]: value\n        });\n\n        setPage && setPage(1);\n    };\n\n    const addConfigItem = (item) => {\n        filterConfigBuilder.addConfigItem(item);\n        setActiveFilters(filterConfigBuilder.initialDefaultState(\n            activeFilters\n        ));\n    };\n\n    const clearAllFilter = () => (\n        setActiveFilters(filterConfigBuilder.initialDefaultState())\n    );\n\n    const deleteFilter = (chips) => (\n        setActiveFilters(filterConfigBuilder.removeFilterWithChip(\n            chips, activeFilters\n        ))\n    );\n    const onFilterDelete = (_event, chips, clearAll = false) => (\n        clearAll ? clearAllFilter() : deleteFilter(chips[0])\n    );\n\n    const filter = (items) => (\n        filterConfigBuilder.applyFilterToObjectArray(\n            items, activeFilters\n        )\n    );\n\n    const {\n        toolbarProps: selectedFilterToolbarProps, filterItem: selectFilterItem\n    } = useSelectedFilter({\n        activeFilters,\n        setActiveFilter: onFilterUpdate,\n        selectedFilter\n    });\n\n    const activeFilterValues = useMemo(() => (\n        filterValues(activeFilters)\n    ), [activeFilters]);\n\n    const filterConfigWithSelected = [...filterConfig, ...(selectFilterItem ? [selectFilterItem] : [])];\n\n    useEffect(() => {\n        filterConfigBuilder.config = [];\n        filterConfigWithSelected.filter((v) => (!!v)).forEach(addConfigItem);\n        setActiveFilters(filterConfigBuilder.initialDefaultState(\n            initialActiveFilters || []\n        ), filterConfig);\n\n        return () => {\n            filterConfigBuilder.config = [];\n        };\n    }, []);\n\n    return enableFilters ? {\n        filter,\n        selectedFilterToolbarProps,\n        toolbarProps: {\n            filterConfig: filterConfigBuilder.buildConfiguration(\n                onFilterUpdate,\n                activeFilters,\n                {},\n                filterConfigWithSelected\n            ),\n            activeFiltersConfig: {\n                filters: filterConfigBuilder.getChipBuilder(filterConfigWithSelected).chipsFor(activeFilters),\n                onDelete: onFilterDelete\n            }\n        },\n        setActiveFilter: onFilterUpdate,\n        activeFilters,\n        activeFilterValues,\n        addConfigItem,\n        filterConfigBuilder,\n        filterString: () => filterConfigBuilder.getFilterBuilder(filterConfigWithSelected).buildFilterString(activeFilters)\n    } : {};\n};\n\nexport default useFilterConfig;\n","export const profilesRulesFailed = (profiles) => (\n    profiles.flatMap(profile => profile.rules && profile.rules.filter(rule => !rule.compliant))\n);\n\nexport const profilesRulesPassed = (profiles) => (\n    profiles.flatMap(profile => profile.rules && profile.rules.filter(rule => rule.compliant))\n);\n\nexport const systemRulesPassed = (system) => (\n    system.testResultProfiles ? profilesRulesPassed(system.testResultProfiles) : []\n);\n\nexport const systemRulesFailed = (system) => (\n    system.testResultProfiles ? profilesRulesFailed(system.testResultProfiles) : []\n);\n\nexport const systemSupportedByProfiles = (profiles = []) => (\n    profiles.reduce((acc, profile) => acc && !!profile.supported, true)\n);\n\nexport const systemsWithRuleObjectsFailed = (systems) => (\n    systems.map(system => (\n        {\n            ...system,\n            ruleObjectsFailed: systemRulesFailed(system),\n            supported: systemSupportedByProfiles(system.testResultProfiles),\n            profiles: system.testResultProfiles\n        }\n    ))\n);\n\nexport const toRulesArrayWithProfile = (profilesWithRules) => (\n    profilesWithRules.flatMap((profileWithRules) => (\n        profileWithRules.rules.map((rule) => {\n            const identifier = rule.identifier && JSON.parse(rule.identifier);\n            return {\n                ...rule,\n                references: rule.references ? JSON.parse(rule.references) : [],\n                identifier: identifier && identifier.label ? identifier : null,\n                profile: profileWithRules.profile\n            };\n        })\n    ))\n);\n"],"sourceRoot":""}