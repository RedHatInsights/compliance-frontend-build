{"version":3,"sources":["webpack:///./src/SmartComponents/DeletePolicy/DeletePolicy.js"],"names":["DeletePolicy","useState","deleteEnabled","setDeleteEnabled","location","useLocation","history","useHistory","state","policy","name","id","onClose","push","useMutation","DELETE_PROFILE","onCompleted","dispatchAction","addNotification","variant","title","onError","error","description","message","deletePolicy","Modal","ModalVariant","className","Text","component","ouiaId","isOpen","actions","Button","key","aria-label","isDisabled","onClick","variables","input","Checkbox","label","isChecked","onChange","propTypes"],"mappings":"0RAgBMA,EAAe,WACnB,OAA0CC,eAAS,GAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KACMC,GAAWC,mBACXC,GAAUC,kBAChB,EAAqBH,EAASI,MAAMC,OAA5BC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,GACRC,EAAU,WACdN,EAAQO,KAAK,kBAGf,GAAuBC,iBAAYC,KAAgB,CACjDC,YAAa,YACXC,QACEC,QAAgB,CACdC,QAAS,UACTC,MAAO,cAAF,OAAgBV,EAAhB,mDAGTE,KAEFS,QAAS,SAACC,IACRL,QACEC,QAAgB,CACdC,QAAS,SACTC,MAAO,wBACPG,YAAaD,EAAME,WAGvBZ,OAlBGa,GAAP,eAsBA,OACE,kBAAC,EAAAC,MAAD,CACEP,QAASQ,qBACTP,MACE,kBAAC,aAAD,KACE,kBAAC,KAAD,CAAyBQ,UAAU,kBACnC,kBAAC,EAAAC,KAAD,CAAMC,UAAU,OAAOF,UAAU,6BAAjC,mBAKJG,OAAO,oBACPC,QAAM,EACNpB,QAASA,EACTqB,QAAS,CACP,kBAAC,EAAAC,OAAD,CACEC,IAAI,UACJJ,OAAO,qBACPK,aAAW,SACXC,YAAanC,EACbiB,QAAQ,SACRmB,QAAS,kBAAMb,EAAa,CAAEc,UAAW,CAAEC,MAAO,CAAE7B,WANtD,wCAUA,kBAAC,EAAAuB,OAAD,CACEC,IAAI,SACJJ,OAAO,2BACPZ,QAAQ,YACRmB,QAAS1B,GAJX,YAUF,kBAAC,EAAAiB,KAAD,CAAMD,UAAU,2BAAhB,uBACsB,2BAAIlB,GAD1B,6CAIA,kBAAC,EAAA+B,SAAD,CACEC,MAAM,sEACN/B,GAAE,gCAA2BA,GAC7BgC,UAAWzC,EACX0C,SAAUzC,MAMlBH,EAAa6C,UAAY,CACvBpC,OAAQoC,YAGV","file":"js/DeletePolicy.9887006bf92978628c6c.js","sourcesContent":["import {\n  Button,\n  Checkbox,\n  Modal,\n  ModalVariant,\n  Text,\n} from '@patternfly/react-core';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\nimport propTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport { DELETE_PROFILE } from 'Mutations';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport { dispatchAction } from 'Utilities/Dispatcher';\n\nconst DeletePolicy = () => {\n  const [deleteEnabled, setDeleteEnabled] = useState(false);\n  const location = useLocation();\n  const history = useHistory();\n  const { name, id } = location.state.policy;\n  const onClose = () => {\n    history.push('/scappolicies');\n  };\n\n  const [deletePolicy] = useMutation(DELETE_PROFILE, {\n    onCompleted: () => {\n      dispatchAction(\n        addNotification({\n          variant: 'success',\n          title: `The policy ${name} and its associated reports has been deleted`,\n        })\n      );\n      onClose();\n    },\n    onError: (error) => {\n      dispatchAction(\n        addNotification({\n          variant: 'danger',\n          title: 'Error removing policy',\n          description: error.message,\n        })\n      );\n      onClose();\n    },\n  });\n\n  return (\n    <Modal\n      variant={ModalVariant.small}\n      title={\n        <React.Fragment>\n          <ExclamationTriangleIcon className=\"ins-u-warning\" />\n          <Text component=\"span\" className=\"policy-delete-header-text\">\n            Delete policy?\n          </Text>\n        </React.Fragment>\n      }\n      ouiaId=\"DeletePolicyModal\"\n      isOpen\n      onClose={onClose}\n      actions={[\n        <Button\n          key=\"destroy\"\n          ouiaId=\"DeletePolicyButton\"\n          aria-label=\"delete\"\n          isDisabled={!deleteEnabled}\n          variant=\"danger\"\n          onClick={() => deletePolicy({ variables: { input: { id } } })}\n        >\n          Delete policy and associated reports\n        </Button>,\n        <Button\n          key=\"cancel\"\n          ouiaId=\"DeletePolicyCancelButton\"\n          variant=\"secondary\"\n          onClick={onClose}\n        >\n          Cancel\n        </Button>,\n      ]}\n    >\n      <Text className=\"policy-delete-body-text\">\n        Deleting the policy <b>{name}</b> will also delete its associated\n        reports.\n      </Text>\n      <Checkbox\n        label=\"I understand this will delete the policy and all associated reports\"\n        id={`deleting-policy-check-${id}`}\n        isChecked={deleteEnabled}\n        onChange={setDeleteEnabled}\n      />\n    </Modal>\n  );\n};\n\nDeletePolicy.propTypes = {\n  policy: propTypes.object,\n};\n\nexport default DeletePolicy;\n"],"sourceRoot":""}