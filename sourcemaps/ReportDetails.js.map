{"version":3,"sources":["webpack:///./src/SmartComponents/ReportDetails/ReportDetails.scss?1b44","webpack:///./src/SmartComponents/ReportDetails/ReportDetails.scss","webpack:///./src/SmartComponents/ReportDetails/ReportDetails.js"],"names":["content","module","i","options","transform","undefined","locals","exports","___CSS_LOADER_API_IMPORT___","push","QUERY","gql","ReportDetails","match","useQuery","variables","policyId","params","report_id","data","error","loading","systemsTable","useRef","donutValues","donutId","policy","networkError","statusCode","window","insights","chrome","auth","logout","Fragment","compliantHostCount","profile","totalHostCount","name","replace","legendData","x","y","pluralize","compliancePercentage","fixedPercentage","Math","floor","to","isActive","title","gutter","sm","md","lg","xl","className","identifier","subTitle","themeColor","ChartThemeColor","blue","themeVariant","ChartThemeVariant","light","style","fontSize","innerRadius","width","legendPosition","legendOrientation","padding","bottom","left","right","top","span","id","columns","composed","key","props","ref","propTypes","object","routerParams"],"mappings":"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","file":"js/ReportDetails.js","sourcesContent":["\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ref--5-2!./ReportDetails.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ref--5-2!./ReportDetails.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ref--5-2!./ReportDetails.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".threshold-tooltip{margin-bottom:var(--pf-global--spacer--md)}.grey-icon{color:var(--pf-global--Color--200)}.policy-details{padding-top:10px}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","import React, { useRef } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { Grid, GridItem } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\nimport SystemsTable from '../SystemsTable/SystemsTable';\nimport { fixedPercentage, pluralize } from '../../Utilities/TextHelper';\nimport {\n    ReportDetailsContentLoader,\n    ReportDetailsDescription\n} from '../../PresentationalComponents';\nimport routerParams from '@redhat-cloud-services/frontend-components-utilities/files/RouterParams';\nimport {\n    PageHeader,\n    PageHeaderTitle,\n    Main,\n    EmptyTable,\n    Spinner\n} from '@redhat-cloud-services/frontend-components';\nimport {\n    ChartDonut,\n    ChartThemeColor,\n    ChartThemeVariant\n} from '@patternfly/react-charts';\nimport {\n    Breadcrumb,\n    BreadcrumbItem\n} from '@patternfly/react-core';\nimport gql from 'graphql-tag';\nimport '../../Charts.scss';\nimport './ReportDetails.scss';\n\nexport const QUERY = gql`\nquery Profile($policyId: String!){\n    profile(id: $policyId) {\n        id\n        name\n        refId\n        totalHostCount\n        compliantHostCount\n        complianceThreshold\n        majorOsVersion\n        lastScanned\n        businessObjective {\n            id\n            title\n        }\n    }\n}\n`;\n\nexport const ReportDetails = ({ match }) => {\n    const { data, error, loading } = useQuery(QUERY, {\n        variables: { policyId: match.params.report_id }\n    });\n    let systemsTable = useRef();\n    let donutValues = [];\n    let donutId = 'loading-donut';\n    let policy = {};\n\n    if (error) {\n        if (error.networkError.statusCode === 401) {\n            window.insights.chrome.auth.logout();\n        }\n\n        return 'Oops! Error loading Policy data: ' + error;\n    }\n\n    if (loading) {\n        return (\n            <React.Fragment>\n                <PageHeader><ReportDetailsContentLoader/></PageHeader>\n                <Main><EmptyTable><Spinner/></EmptyTable></Main>\n            </React.Fragment>\n        );\n    } else {\n        policy = data.profile;\n        const compliantHostCount = policy.compliantHostCount;\n        const totalHostCount = policy.totalHostCount;\n        donutId = policy.name.replace(/ /g, '');\n        donutValues = [\n            { x: 'Compliant', y: compliantHostCount },\n            { x: 'Non-compliant', y: totalHostCount - compliantHostCount }\n        ];\n    }\n\n    const columns = [{\n        composed: ['facts.os_release', 'display_name'],\n        key: 'display_name',\n        title: 'Name',\n        props: {\n            width: 30\n        }\n    }, {\n        key: 'facts.compliance.rules_failed',\n        title: 'Rules failed',\n        props: {\n            width: 5\n        }\n    }, {\n        key: 'facts.compliance.compliance_score',\n        title: 'Compliance score',\n        props: {\n            width: 5\n        }\n    }, {\n        key: 'facts.compliance.last_scanned',\n        title: 'Last scanned',\n        props: {\n            width: 10\n        }\n    }];\n\n    const legendData = [\n        { name: donutValues[0].y + ' ' + pluralize(donutValues[0].y, 'system') + ' compliant' },\n        { name: donutValues[1].y + ' ' + pluralize(donutValues[1].y, 'system') + ' non-compliant' }\n    ];\n\n    const compliancePercentage = fixedPercentage(Math.floor(100 *\n        (donutValues[0].y / (donutValues[0].y + donutValues[1].y))));\n\n    return (\n        <React.Fragment>\n            <PageHeader>\n                <Breadcrumb>\n                    <BreadcrumbItem to='/rhel/compliance/reports'>\n                        Reports\n                    </BreadcrumbItem>\n                    <BreadcrumbItem isActive>{policy.name}</BreadcrumbItem>\n                </Breadcrumb>\n                <PageHeaderTitle title={policy.name + ' report'} />\n                <Grid gutter='md'>\n                    <GridItem sm={12} md={12} lg={12} xl={6}>\n                        <div className='chart-inline'>\n                            <div className='chart-container'>\n                                <ChartDonut data={donutValues}\n                                    identifier={donutId}\n                                    title={compliancePercentage}\n                                    subTitle=\"Compliant\"\n                                    themeColor={ChartThemeColor.blue}\n                                    themeVariant={ChartThemeVariant.light}\n                                    style={{ fontSize: 20 }}\n                                    innerRadius={88}\n                                    width={462}\n                                    legendPosition='right'\n                                    legendData={legendData}\n                                    legendOrientation='vertical'\n                                    padding={{\n                                        bottom: 20,\n                                        left: 0,\n                                        right: 250,\n                                        top: 20\n                                    }}\n                                />\n                            </div>\n                        </div>\n\n                    </GridItem>\n                    <GridItem sm={12} md={12} lg={12} xl={6}>\n                        <ReportDetailsDescription policy={policy} />\n                    </GridItem>\n                </Grid>\n            </PageHeader>\n            <Main>\n                <Grid gutter='md'>\n                    <GridItem span={12}>\n                        <SystemsTable policyId={policy.id}\n                            columns={columns}\n                            ref={systemsTable} />\n                    </GridItem>\n                </Grid>\n            </Main>\n        </React.Fragment>\n    );\n};\n\nReportDetails.propTypes = {\n    match: propTypes.object\n};\n\nexport default routerParams(ReportDetails);\n"],"sourceRoot":""}