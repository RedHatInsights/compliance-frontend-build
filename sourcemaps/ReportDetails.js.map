{"version":3,"sources":["webpack:///./src/SmartComponents/ReportDetails/ReportDetails.scss?1b44","webpack:///./src/SmartComponents/ReportDetails/ReportDetails.scss","webpack:///./src/SmartComponents/ReportDetails/ReportDetails.js"],"names":["content","module","i","options","transform","undefined","locals","exports","___CSS_LOADER_API_IMPORT___","push","QUERY","gql","ReportDetails","legendData","compliancePercentage","match","useQuery","variables","policyId","params","report_id","data","error","loading","donutValues","donutId","policy","compliantHostCount","profile","totalHostCount","name","replace","x","y","pluralize","fixedPercentage","Math","floor","stateValues","stateKey","to","isActive","title","gutter","sm","md","lg","xl","className","identifier","subTitle","themeColor","ChartThemeColor","blue","themeVariant","ChartThemeVariant","light","style","fontSize","innerRadius","width","legendPosition","legendOrientation","padding","bottom","left","right","top","span","showOnlySystemsWithTestResults","id","columns","key","props","propTypes","object","routerParams"],"mappings":"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","file":"js/ReportDetails.js","sourcesContent":["\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ref--5-2!./ReportDetails.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ref--5-2!./ReportDetails.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js??ref--5-2!./ReportDetails.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".threshold-tooltip{margin-bottom:var(--pf-global--spacer--md)}.grey-icon{color:var(--pf-global--Color--200)}.policy-details{padding-top:10px}\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","import React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport { Grid, GridItem } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\nimport SystemsTable from '../SystemsTable/SystemsTable';\nimport { fixedPercentage, pluralize } from '../../Utilities/TextHelper';\nimport {\n    ReportDetailsContentLoader,\n    ReportDetailsDescription,\n    StateViewWithError,\n    StateViewPart\n} from 'PresentationalComponents';\nimport routerParams from '@redhat-cloud-services/frontend-components-utilities/files/RouterParams';\nimport {\n    PageHeader,\n    PageHeaderTitle,\n    Main,\n    EmptyTable,\n    Spinner\n} from '@redhat-cloud-services/frontend-components';\nimport {\n    ChartDonut,\n    ChartThemeColor,\n    ChartThemeVariant\n} from '@patternfly/react-charts';\nimport {\n    Breadcrumb,\n    BreadcrumbItem\n} from '@patternfly/react-core';\nimport gql from 'graphql-tag';\nimport '../../Charts.scss';\nimport './ReportDetails.scss';\n\nexport const QUERY = gql`\nquery Profile($policyId: String!){\n    profile(id: $policyId) {\n        id\n        name\n        refId\n        totalHostCount\n        compliantHostCount\n        complianceThreshold\n        majorOsVersion\n        lastScanned\n        businessObjective {\n            id\n            title\n        }\n    }\n}\n`;\n\nexport const ReportDetails = ({ match }) => {\n    const { data, error, loading } = useQuery(QUERY, {\n        variables: { policyId: match.params.report_id }\n    });\n    let donutValues = [];\n    let donutId = 'loading-donut';\n    let policy = {};\n    let legendData;\n    let compliancePercentage;\n\n    if (!loading && data) {\n        policy = data.profile;\n        const compliantHostCount = policy.compliantHostCount;\n        const totalHostCount = policy.totalHostCount;\n        donutId = policy.name.replace(/ /g, '');\n        donutValues = [\n            { x: 'Compliant', y: compliantHostCount },\n            { x: 'Non-compliant', y: totalHostCount - compliantHostCount }\n        ];\n        legendData = [\n            { name: donutValues[0].y + ' ' + pluralize(donutValues[0].y, 'system') + ' compliant' },\n            { name: donutValues[1].y + ' ' + pluralize(donutValues[1].y, 'system') + ' non-compliant' }\n        ];\n        compliancePercentage = fixedPercentage(Math.floor(100 *\n                (donutValues[0].y / (donutValues[0].y + donutValues[1].y))));\n    }\n\n    const columns = [{\n        key: 'facts.compliance.display_name',\n        title: 'System name',\n        props: {\n            width: 30\n        }\n    }, {\n        key: 'facts.compliance.rules_failed',\n        title: 'Rules failed',\n        props: {\n            width: 5\n        }\n    }, {\n        key: 'facts.compliance.compliance_score',\n        title: 'Compliance score',\n        props: {\n            width: 5\n        }\n    }, {\n        key: 'facts.compliance.last_scanned',\n        title: 'Last scanned',\n        props: {\n            width: 10\n        }\n    }];\n\n    return <StateViewWithError stateValues={ { error, data, loading } }>\n        <StateViewPart stateKey='loading'>\n            <PageHeader><ReportDetailsContentLoader/></PageHeader>\n            <Main><EmptyTable><Spinner/></EmptyTable></Main>\n        </StateViewPart>\n        <StateViewPart stateKey='data'>\n            <PageHeader>\n                <Breadcrumb>\n                    <BreadcrumbItem to='/rhel/compliance/reports'>\n                        Reports\n                    </BreadcrumbItem>\n                    <BreadcrumbItem isActive>{policy.name}</BreadcrumbItem>\n                </Breadcrumb>\n                <PageHeaderTitle title={policy.name + ' report'} />\n                <Grid gutter='md'>\n                    <GridItem sm={12} md={12} lg={12} xl={6}>\n                        <div className='chart-inline'>\n                            <div className='chart-container'>\n                                <ChartDonut data={donutValues}\n                                    identifier={donutId}\n                                    title={compliancePercentage}\n                                    subTitle=\"Compliant\"\n                                    themeColor={ChartThemeColor.blue}\n                                    themeVariant={ChartThemeVariant.light}\n                                    style={{ fontSize: 20 }}\n                                    innerRadius={88}\n                                    width={462}\n                                    legendPosition='right'\n                                    legendData={legendData}\n                                    legendOrientation='vertical'\n                                    padding={{\n                                        bottom: 20,\n                                        left: 0,\n                                        right: 250,\n                                        top: 20\n                                    }}\n                                />\n                            </div>\n                        </div>\n\n                    </GridItem>\n                    <GridItem sm={12} md={12} lg={12} xl={6}>\n                        <ReportDetailsDescription policy={policy} />\n                    </GridItem>\n                </Grid>\n            </PageHeader>\n            <Main>\n                <Grid gutter='md'>\n                    <GridItem span={12}>\n                        <SystemsTable showOnlySystemsWithTestResults policyId={policy.id} columns={columns} />\n                    </GridItem>\n                </Grid>\n            </Main>\n        </StateViewPart>\n    </StateViewWithError>;\n};\n\nReportDetails.propTypes = {\n    match: propTypes.object\n};\n\nexport default routerParams(ReportDetails);\n"],"sourceRoot":""}