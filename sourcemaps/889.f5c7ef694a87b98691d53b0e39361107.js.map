{"version":3,"file":"js/889.20f5e93d2f0334e16e26.js","mappings":"uPAWMA,EAAc,CAClBC,QAAO,SAACC,GACNC,SAASC,OAAOJ,YAAY,CAAEK,GAAI,UAAWH,SAAAA,GAC/C,EACAI,aAAY,SAACJ,GACXC,SAASC,OAAOJ,YAAY,CAAEK,GAAI,eAAgBH,SAAAA,GACpD,EACAK,QAAO,SAACL,GACNC,SAASC,OAAOJ,YAAY,CAAEK,GAAI,UAAWH,SAAAA,GAC/C,GAGIM,EAAM,SAACC,GACX,IAAMC,GAAWC,EAAAA,EAAAA,eACXP,GAASQ,EAAAA,EAAAA,KACTC,GAAUC,EAAAA,EAAAA,cAmBhB,OAjBAC,EAAAA,EAAAA,OACAC,EAAAA,EAAAA,YAAU,WACRZ,EAAOa,OACPb,EAAOc,mBACPd,EAAOe,YAAY,cAEnB,IAAMC,EAAmBV,EAASW,SAASC,MAAM,KAAK,IAAM,UACtDC,EAAanB,EAAOoB,GAAG,kBAAkB,SAACC,GAC1CA,EAAMC,WACRb,EAAQc,KAAK,IAADC,OAAKH,EAAMI,QACvB7B,EAAYoB,IAAkB,GAElC,IAEA,OAAO,kBAAMG,GAAY,CAC3B,GAAG,IAGDO,IAAAA,cAACC,EAAAA,EAAY,CAACC,QAAQ,cACpBF,IAAAA,cAACG,EAAAA,GAAmB,MACpBH,IAAAA,cAACI,EAAAA,GAAM,CAACC,WAAY1B,IAG1B,EAEAD,EAAI4B,UAAY,CACd1B,SAAU2B,IAAAA,OACVxB,QAASwB,IAAAA,QAGX,S,qNC7CMC,EAAS,IAAIC,EAAAA,GAAa,CAC9BC,KAAM,IAAIC,EAAAA,EAAS,CACjBC,YAAa,UACbC,IAAKC,EAAAA,GAAsB,aAE7BC,MAAO,IAAIC,EAAAA,KAGPC,EAAW,SAAHC,GAAA,IAAMC,EAAMD,EAANC,OAAM,OACxBnB,IAAAA,cAACoB,EAAAA,GAAQ,CAACC,OAAOlC,EAAAA,EAAAA,IAAKgC,GAAQG,YAC5BtB,IAAAA,cAACuB,EAAAA,EAAY,CAACC,OAAQC,UAAUC,UAC9B1B,IAAAA,cAAC2B,EAAAA,cAAM,CAACC,UAAUC,EAAAA,EAAAA,IAAYC,OAAOlD,SAASW,WAC5CS,IAAAA,cAAC+B,EAAAA,EAAc,CAACvB,OAAQA,GACtBR,IAAAA,cAACtB,EAAAA,EAAG,SAID,EAGbuC,EAASX,UAAY,CACnBa,OAAQZ,IAAAA,KAGV,S","sources":["webpack:///./src/App.js","webpack:///./src/AppEntry.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport React, { useEffect } from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport { Routes } from './Routes';\nimport NotificationsPortal from '@redhat-cloud-services/frontend-components-notifications/NotificationPortal';\nimport { RBACProvider } from '@redhat-cloud-services/frontend-components/RBACProvider';\nimport { useChrome } from '@redhat-cloud-services/frontend-components/useChrome';\n\nimport './App.scss';\nimport { useSetFlagsFromUrl } from 'Utilities/hooks/useFeature';\n\nconst appNavClick = {\n  reports(redirect) {\n    insights.chrome.appNavClick({ id: 'reports', redirect });\n  },\n  scappolicies(redirect) {\n    insights.chrome.appNavClick({ id: 'scappolicies', redirect });\n  },\n  systems(redirect) {\n    insights.chrome.appNavClick({ id: 'systems', redirect });\n  },\n};\n\nconst App = (props) => {\n  const location = useLocation();\n  const chrome = useChrome();\n  const history = useHistory();\n\n  useSetFlagsFromUrl();\n  useEffect(() => {\n    chrome.init();\n    chrome.hideGlobalFilter();\n    chrome.identifyApp('compliance');\n\n    const baseComponentUrl = location.pathname.split('/')[1] || 'reports';\n    const unregister = chrome.on('APP_NAVIGATION', (event) => {\n      if (event.domEvent) {\n        history.push(`/${event.navId}`);\n        appNavClick[baseComponentUrl](true);\n      }\n    });\n\n    return () => unregister();\n  }, []);\n\n  return (\n    <RBACProvider appName=\"compliance\">\n      <NotificationsPortal />\n      <Routes childProps={props} />\n    </RBACProvider>\n  );\n};\n\nApp.propTypes = {\n  location: PropTypes.object,\n  history: PropTypes.object,\n};\n\nexport default App;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { IntlProvider } from 'react-intl';\nimport { ApolloProvider } from '@apollo/client';\nimport { ApolloClient, HttpLink, InMemoryCache } from 'apollo-boost';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { getBaseName } from '@redhat-cloud-services/frontend-components-utilities/helpers';\nimport { init } from 'Store';\nimport App from './App';\n\nimport { COMPLIANCE_API_ROOT } from '@/constants';\n\nconst client = new ApolloClient({\n  link: new HttpLink({\n    credentials: 'include',\n    uri: COMPLIANCE_API_ROOT + '/graphql',\n  }),\n  cache: new InMemoryCache(),\n});\n\nconst AppEntry = ({ logger }) => (\n  <Provider store={init(logger).getStore()}>\n    <IntlProvider locale={navigator.language}>\n      <Router basename={getBaseName(window.location.pathname)}>\n        <ApolloProvider client={client}>\n          <App />\n        </ApolloProvider>\n      </Router>\n    </IntlProvider>\n  </Provider>\n);\n\nAppEntry.propTypes = {\n  logger: PropTypes.any,\n};\n\nexport default AppEntry;\n"],"names":["appNavClick","reports","redirect","insights","chrome","id","scappolicies","systems","App","props","location","useLocation","useChrome","history","useHistory","useSetFlagsFromUrl","useEffect","init","hideGlobalFilter","identifyApp","baseComponentUrl","pathname","split","unregister","on","event","domEvent","push","concat","navId","React","RBACProvider","appName","NotificationsPortal","Routes","childProps","propTypes","PropTypes","client","ApolloClient","link","HttpLink","credentials","uri","COMPLIANCE_API_ROOT","cache","InMemoryCache","AppEntry","_ref","logger","Provider","store","getStore","IntlProvider","locale","navigator","language","Router","basename","getBaseName","window","ApolloProvider"],"sourceRoot":""}