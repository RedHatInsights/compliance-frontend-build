{"version":3,"file":"js/225.1642157571205.045f2d7f1cbd2ae1b830.js","mappings":"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","sources":["webpack:///./src/PresentationalComponents/SystemPolicyCard/UnsupportedSSGVersion.js","webpack:///./src/PresentationalComponents/SystemPolicyCard/SystemPolicyCard.js","webpack:///./src/PresentationalComponents/SystemPolicyCards/SystemPolicyCards.js","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/disconnected-icon.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/NotConnected/NotConnected.js","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/plus-circle-icon.js","webpack:///./src/SmartComponents/SystemDetails/NoPoliciesState.js","webpack:///./src/SmartComponents/SystemDetails/NoReportsState.js","webpack:///./src/SmartComponents/SystemDetails/EmptyState.js","webpack:///./src/SmartComponents/SystemDetails/ComplianceDetail.js"],"sourcesContent":["import React from 'react';\nimport propTypes from 'prop-types';\nimport { Popover, Alert } from '@patternfly/react-core';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport { supportedConfigsLink } from '@/constants';\n\nconst UnsupportedSSGVersion = ({ ssgVersion, style, ...props }) => {\n  const bodyContent =\n    'This system was using an incompatible version of the SSG at the time this report was generated.' +\n    ' Assessment of rules failed/passed on this system is a best-guess effort and may not be accurate.';\n  const footerContent = (\n    <a target=\"_blank\" rel=\"noopener noreferrer\" href={supportedConfigsLink}>\n      Supported SSG versions\n    </a>\n  );\n\n  return (\n    <Alert\n      variant=\"warning\"\n      isInline\n      style={style}\n      title={\n        <React.Fragment>\n          Unsupported SSG version ({ssgVersion})\n          <Popover position=\"right\" {...{ bodyContent, footerContent }}>\n            <OutlinedQuestionCircleIcon\n              style={{\n                marginLeft: '.5em',\n                cursor: 'pointer',\n                color: 'var(--pf-global--Color--200)',\n              }}\n            />\n          </Popover>\n        </React.Fragment>\n      }\n      {...props}\n    />\n  );\n};\n\nUnsupportedSSGVersion.propTypes = {\n  ssgVersion: propTypes.string,\n  style: propTypes.object,\n};\n\nexport default UnsupportedSSGVersion;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  CheckCircleIcon,\n  ExclamationCircleIcon,\n} from '@patternfly/react-icons';\nimport {\n  Card,\n  CardBody,\n  CardFooter,\n  Text,\n  TextContent,\n  TextVariants,\n  Tooltip,\n} from '@patternfly/react-core';\nimport DateFormat from '@redhat-cloud-services/frontend-components/DateFormat';\nimport Truncate from '@redhat-cloud-services/frontend-components/Truncate';\nimport UnsupportedSSGVersion from './UnsupportedSSGVersion';\n\nclass SystemPolicyCard extends React.Component {\n  complianceIcon = (compliant) =>\n    compliant ? (\n      <div className=\"ins-c-policy-card ins-m-compliant\">\n        <CheckCircleIcon /> Compliant\n      </div>\n    ) : (\n      <div className=\"ins-c-policy-card ins-m-noncompliant\">\n        <ExclamationCircleIcon /> Not compliant\n      </div>\n    );\n\n  fixedPercentage = (value, fixed = 0, withPercent = true) =>\n    value.toFixed(fixed) + (withPercent ? '%' : '');\n\n  render() {\n    const { policy, style, onClick, isSelected } = this.props;\n    const {\n      rulesFailed,\n      compliant,\n      lastScanned,\n      score,\n      ssgVersion,\n      supported,\n      name,\n      policyType,\n    } = policy;\n    const passedPercentage = this.fixedPercentage(score);\n    const truncateDefaults = { expandOnMouseOver: true, hideExpandText: true };\n\n    return (\n      <Card\n        ouiaId=\"PolicyCard\"\n        onClick={(event) => {\n          event.stopPropagation();\n          onClick(policy);\n        }}\n        isSelectable\n        isSelected={isSelected}\n        style={style}\n      >\n        <CardBody>\n          <TextContent className=\"margin-bottom-md\">\n            <Text\n              ouiaId=\"PolicyCardName\"\n              className=\"margin-bottom-top-none\"\n              component={TextVariants.h4}\n            >\n              <Truncate text={name} length={110} {...truncateDefaults} />\n            </Text>\n            <Text\n              ouiaId=\"PolicyCardType\"\n              style={{ color: 'var(--pf-global--Color--200)' }}\n              component={TextVariants.small}\n            >\n              <Truncate text={policyType} length={110} {...truncateDefaults} />\n            </Text>\n          </TextContent>\n          <div className=\"margin-bottom-md\">\n            {supported && this.complianceIcon(compliant)}\n            <Text\n              ouiaId=\"PolicyCardFailedRulesScore\"\n              component={TextVariants.small}\n            >\n              {rulesFailed} rule{rulesFailed === 1 ? '' : 's'} failed{' '}\n              <Tooltip\n                position=\"bottom\"\n                maxWidth=\"22em\"\n                content={\n                  'The system compliance score is calculated by OpenSCAP and ' +\n                  'is a normalized weighted sum of rules selected for this policy.'\n                }\n              >\n                <span>(Score: {passedPercentage})</span>\n              </Tooltip>\n            </Text>\n          </div>\n          <Text className=\"margin-bottom-none\" component={TextVariants.small}>\n            <Text ouiaId=\"PolicyCardSSGVersion\">SSG version: {ssgVersion}</Text>\n            <Text ouiaId=\"PolicyCardLastScanned\">\n              Last scanned:{' '}\n              {lastScanned !== 'Never' ? (\n                <DateFormat date={Date.parse(lastScanned)} type=\"relative\" />\n              ) : (\n                lastScanned\n              )}\n            </Text>\n          </Text>\n        </CardBody>\n        {!supported && (\n          <CardFooter style={{ padding: '0' }}>\n            <UnsupportedSSGVersion\n              ouiaId=\"PolicyCardUnsupportedSSG\"\n              ssgVersion={ssgVersion}\n              style={{\n                paddingTop: 'var(--pf-c-alert--PaddingTop)',\n                paddingRight: 'var(--pf-c-card--child--PaddingRight)',\n                paddingLeft: 'var(--pf-c-card--child--PaddingLeft)',\n                paddingBottom: 'var(--pf-c-alert--PaddingBottom)',\n              }}\n            />\n          </CardFooter>\n        )}\n      </Card>\n    );\n  }\n}\n\nSystemPolicyCard.propTypes = {\n  policy: PropTypes.shape({\n    rulesPassed: PropTypes.number,\n    rulesFailed: PropTypes.number,\n    score: PropTypes.number,\n    lastScanned: PropTypes.string,\n    refId: PropTypes.string,\n    name: PropTypes.string,\n    policyType: PropTypes.string,\n    compliant: PropTypes.bool,\n    ssgVersion: PropTypes.string,\n    supported: PropTypes.bool,\n  }),\n  style: PropTypes.object,\n  onClick: PropTypes.func,\n  isSelected: PropTypes.bool,\n};\n\nexport default SystemPolicyCard;\n","import React from 'react';\nimport { Grid, GridItem, Card, CardBody } from '@patternfly/react-core';\nimport SystemPolicyCard from '../SystemPolicyCard';\nimport propTypes from 'prop-types';\nimport { Instagram } from 'react-content-loader';\n\nclass SystemPolicyCards extends React.Component {\n  systemPolicyCards() {\n    const { policies, selectedPolicies, onCardClick } = this.props;\n\n    return policies\n      .filter((policy) => policy.rulesFailed + policy.rulesPassed > 0)\n      .map((policy, i) => (\n        <GridItem sm={12} md={12} lg={6} xl={4} key={i}>\n          <SystemPolicyCard\n            policy={policy}\n            style={{ height: '100%' }}\n            onClick={(policy) => onCardClick(policy)}\n            isSelected={selectedPolicies?.find(\n              (policyId) => policyId === policy.id\n            )}\n          />\n        </GridItem>\n      ));\n  }\n\n  render() {\n    const { loading } = this.props;\n\n    return (\n      <React.Fragment>\n        <Grid hasGutter>\n          {this.systemPolicyCards()}\n          {loading &&\n            [...Array(3)].map((_item, i) => (\n              <GridItem span={4} key={i}>\n                <Card>\n                  <CardBody>\n                    <Instagram />\n                  </CardBody>\n                </Card>\n              </GridItem>\n            ))}\n        </Grid>\n      </React.Fragment>\n    );\n  }\n}\n\nSystemPolicyCards.propTypes = {\n  policies: propTypes.array,\n  loading: propTypes.bool,\n  onCardClick: propTypes.func,\n  selectedPolicies: propTypes.string,\n};\n\nSystemPolicyCards.defaultProps = {\n  policies: [],\n};\n\nexport default SystemPolicyCards;\n","import { createIcon } from '../createIcon';\n\nexport const DisconnectedIconConfig = {\n  name: 'DisconnectedIcon',\n  height: 1024,\n  width: 1024,\n  svgPath: 'M107.625758,511.919812 C107.647579,453.639819 120.473237,396.076275 145.195758,343.299812 L66.0757577,263.919812 C64.9757577,266.019812 63.7857577,268.019812 62.6857577,270.119812 C-38.2858609,455.136708 -13.6478565,683.418046 124.475758,842.629812 C134.640866,854.227038 149.304208,860.890207 164.725758,860.920803 C177.621501,860.999229 190.089847,856.300444 199.725758,847.729812 C222.045758,828.339812 224.235758,794.349812 204.725758,771.959812 C142.116482,699.791587 107.639971,607.46129 107.625758,511.919812 Z M298.965758,512.769812 C298.965758,507.959812 299.165758,503.349812 299.465758,498.849812 L223.695758,422.919812 C195.943021,511.49644 210.859555,607.936744 264.075758,683.989812 C272.417691,695.880397 286.040845,702.947712 300.565758,702.92092 C309.717884,702.984827 318.661486,700.187766 326.145758,694.919812 C346.244069,680.682503 351.030068,652.865563 336.845758,632.729812 C312.094475,597.618928 298.858215,555.687799 298.965758,512.729812 L298.965758,512.769812 Z M903.425758,837.839812 C1064.25516,648.181373 1062.68818,369.557312 899.735758,181.719812 C890.46515,170.983736 877.290268,164.395355 863.139154,163.418898 C848.98804,162.442441 835.033106,167.158807 824.375758,176.519812 C802.005758,195.919812 799.815758,229.919812 819.185758,252.309812 C945.123654,397.620078 948.572544,612.370403 827.365758,761.649812 L754.005758,688.159812 C755.244385,686.815558 756.37773,685.377981 757.395758,683.859812 C792.844775,633.759435 811.790626,573.852791 811.595758,512.479812 C811.595758,450.189812 792.735758,390.599812 756.695758,340.199812 C749.880846,330.567 739.510358,324.044705 727.876268,322.074416 C716.242178,320.104127 704.302408,322.848071 694.695758,329.699812 C674.625758,343.899812 670.135758,371.699812 684.215758,391.799812 C733.317078,460.966176 735.688504,552.965658 690.215758,624.569812 L615.045758,549.479812 C619.447596,537.503845 621.679174,524.839047 621.635758,512.079812 C621.657896,451.518897 572.616613,402.388105 512.055758,402.299812 C499.315423,402.259246 486.670236,404.494336 474.715758,408.899812 L82.6457577,15.6398121 C64.3651324,-2.58558468 34.7711544,-2.54081316 16.5457577,15.7398121 C-1.67963909,34.0204373 -1.63486757,63.6144153 16.6457577,81.8398121 L120.475758,185.919812 L196.535758,261.919812 L333.185758,398.799812 L408.845758,474.589812 L549.005758,614.969812 L941.455758,1008.21981 C959.733621,1026.4673 989.34327,1026.44268 1007.59076,1008.16481 C1025.83825,989.886948 1025.81362,960.2773 1007.53576,942.029812 L903.425758,837.839812 Z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const DisconnectedIcon = createIcon(DisconnectedIconConfig);\n\nexport default DisconnectedIcon;","import React from 'react';\nimport propTypes from 'prop-types';\nimport { EmptyState } from \"@patternfly/react-core/dist/esm/components/EmptyState/EmptyState.js\";\nimport { EmptyStateIcon } from \"@patternfly/react-core/dist/esm/components/EmptyState/EmptyStateIcon.js\";\nimport { EmptyStateBody } from \"@patternfly/react-core/dist/esm/components/EmptyState/EmptyStateBody.js\";\nimport { Title } from \"@patternfly/react-core/dist/esm/components/Title/Title.js\";\nimport { Button } from \"@patternfly/react-core/dist/esm/components/Button/Button.js\";\nimport DisconnectedIcon from \"@patternfly/react-icons/dist/esm/icons/disconnected-icon\";\n\nvar NotConnected = function NotConnected(_ref) {\n  var titleText = _ref.titleText,\n      bodyText = _ref.bodyText,\n      buttonText = _ref.buttonText;\n  return /*#__PURE__*/React.createElement(EmptyState, null, /*#__PURE__*/React.createElement(EmptyStateIcon, {\n    icon: DisconnectedIcon\n  }), /*#__PURE__*/React.createElement(Title, {\n    headingLevel: \"h5\",\n    size: \"lg\"\n  }, titleText), /*#__PURE__*/React.createElement(EmptyStateBody, null, bodyText), /*#__PURE__*/React.createElement(Button, {\n    variant: \"primary\",\n    component: \"a\",\n    href: \"http://access.redhat.com/products/cloud_management_services_for_rhel#getstarted\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    className: \"pf-u-mt-lg\"\n  }, buttonText));\n};\n\nNotConnected.propTypes = {\n  titleText: propTypes.node,\n  bodyText: propTypes.node,\n  buttonText: propTypes.node\n};\nNotConnected.defaultProps = {\n  titleText: 'This system isn’t connected to Insights yet',\n  bodyText: 'To get started, activate the Insights client for this system.',\n  buttonText: 'Learn how to activate the Insights client'\n};\nexport default NotConnected;","import { createIcon } from '../createIcon';\n\nexport const PlusCircleIconConfig = {\n  name: 'PlusCircleIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm144 276c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92h-92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const PlusCircleIcon = createIcon(PlusCircleIconConfig);\n\nexport default PlusCircleIcon;","import React from 'react';\nimport { BackgroundLink } from 'PresentationalComponents';\nimport { PlusCircleIcon } from '@patternfly/react-icons';\nimport {\n  Title,\n  Bullseye,\n  Button,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStatePrimary,\n  EmptyStateSecondaryActions,\n  EmptyStateIcon,\n} from '@patternfly/react-core';\n\nconst NoPoliciesState = () => (\n  <Bullseye>\n    <EmptyState>\n      <EmptyStateIcon icon={PlusCircleIcon} />\n      <Title headingLevel=\"h1\" size=\"lg\">\n        This system is not part of any SCAP policies defined within Compliance.\n      </Title>\n      <EmptyStateBody>\n        To assess and monitor compliance against a SCAP policy for this system,\n        add it to an existing policy or create a new policy.\n      </EmptyStateBody>\n      <EmptyStatePrimary>\n        <BackgroundLink to=\"/scappolicies/new\">\n          <Button variant=\"primary\" ouiaId=\"CreateNewPolicyButton\">\n            Create new policy\n          </Button>\n        </BackgroundLink>\n      </EmptyStatePrimary>\n      <EmptyStateSecondaryActions>\n        <Button\n          variant=\"link\"\n          component=\"a\"\n          href=\"/insights/compliance/scappolicies\"\n        >\n          View compliance policies\n        </Button>\n      </EmptyStateSecondaryActions>\n    </EmptyState>\n  </Bullseye>\n);\n\nexport default NoPoliciesState;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { CloudSecurityIcon } from '@patternfly/react-icons';\nimport {\n  Title,\n  Bullseye,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateIcon,\n} from '@patternfly/react-core';\n\nconst NoReportsState = ({ system }) => (\n  <Bullseye>\n    <EmptyState>\n      <EmptyStateIcon\n        icon={CloudSecurityIcon}\n        title=\"Compliance\"\n        size=\"xl\"\n        style={{\n          fontWeight: '500',\n          color: 'var(--pf-global--primary-color--100)',\n        }}\n      />\n      <Title headingLevel=\"h1\" size=\"lg\">\n        No results reported\n      </Title>\n      <EmptyStateBody>\n        This system is part of {system?.policies?.length}\n        {system?.policies?.length > 1 ? ' policies' : ' policy'}, but has not\n        returned any results.\n      </EmptyStateBody>\n      <EmptyStateBody>\n        Reports are returned when the system checks into Insights. By default,\n        systems check in every 24 hours.\n      </EmptyStateBody>\n    </EmptyState>\n  </Bullseye>\n);\n\nNoReportsState.propTypes = {\n  system: propTypes.shape({\n    policies: propTypes.array,\n  }),\n};\n\nexport default NoReportsState;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { NotConnected } from '@redhat-cloud-services/frontend-components/NotConnected';\nimport NoPoliciesState from './NoPoliciesState';\nimport NoReportsState from './NoReportsState';\n\nconst EmptyState = ({ system, isWrapped }) => {\n  if (\n    isWrapped &&\n    !system?.hasPolicy &&\n    system?.testResultProfiles?.length === 0\n  ) {\n    return <NotConnected />;\n  } else {\n    if (!system?.hasPolicy) {\n      return <NoPoliciesState system={system} />;\n    } else if (system?.hasPolicy && system?.testResultProfiles?.length === 0) {\n      return <NoReportsState system={system} />;\n    }\n  }\n};\n\nEmptyState.propTypes = {\n  system: propTypes.object,\n  isWrapped: propTypes.bool,\n};\n\nexport default EmptyState;\n","import React, { useState } from 'react';\nimport propTypes from 'prop-types';\nimport SystemPolicyCards from '../../PresentationalComponents/SystemPolicyCards';\nimport RulesTable from '@/PresentationalComponents/RulesTable/RulesTable';\nimport ComplianceEmptyState from 'PresentationalComponents/ComplianceEmptyState';\nimport { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport { ApolloClient, HttpLink, InMemoryCache } from 'apollo-boost';\nimport { ApolloProvider } from '@apollo/client';\n\nimport { Spinner } from '@redhat-cloud-services/frontend-components/Spinner';\nimport './compliance.scss';\nimport { ErrorCard } from 'PresentationalComponents';\nimport { IntlProvider } from 'react-intl';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { init } from 'Store';\nimport EmptyState from './EmptyState';\n\nconst COMPLIANCE_API_ROOT = '/api/compliance';\n\nconst QUERY = gql`\n  query System($systemId: String!) {\n    system(id: $systemId) {\n      id\n      name\n      hasPolicy\n      policies {\n        id\n      }\n      testResultProfiles {\n        id\n        name\n        policyType\n        refId\n        compliant\n        rulesFailed\n        rulesPassed\n        lastScanned\n        score\n        supported\n        ssgVersion\n        majorOsVersion\n        policy {\n          id\n        }\n        rules {\n          title\n          severity\n          rationale\n          refId\n          description\n          compliant\n          remediationAvailable\n          references\n          identifier\n        }\n      }\n    }\n  }\n`;\n\nconst SystemQuery = ({ data: { system }, loading, hidePassed, isWrapped }) => {\n  const [selectedPolicies, setSelectedPolicies] = useState();\n  const policies = system?.testResultProfiles;\n  const setOrUnsetPolicy = (policy) => {\n    if (!policy) {\n      return;\n    }\n    const policyIncluded = selectedPolicies?.find(\n      (policyId) => policy?.id === policyId\n    );\n    if (policyIncluded) {\n      const newSelection = selectedPolicies?.filter(\n        (policyId) => policy.id !== policyId\n      );\n      setSelectedPolicies(newSelection.length > 0 ? newSelection : undefined);\n    } else {\n      setSelectedPolicies([...(selectedPolicies || []), policy?.id]);\n    }\n  };\n\n  const onDeleteFilter = (chips, clearAll) => {\n    const chipNames = chips\n      .find((chips) => chips.category === 'Policy')\n      ?.chips.map((chip) => chip.name);\n    const policyId = policies.find(({ name }) => chipNames?.includes(name))?.id;\n\n    if (policyId) {\n      !clearAll\n        ? setOrUnsetPolicy(\n            policyId\n              ? {\n                  id: policyId,\n                }\n              : {}\n          )\n        : setSelectedPolicies(undefined);\n    }\n  };\n\n  return (\n    <>\n      <SystemPolicyCards\n        policies={policies}\n        loading={loading}\n        selectedPolicies={selectedPolicies}\n        onCardClick={(policy) => {\n          setOrUnsetPolicy(policy);\n        }}\n      />\n      <br />\n      {system?.testResultProfiles?.length ? (\n        <RulesTable\n          remediationAvailableFilter\n          handleSelect={() => undefined}\n          hidePassed={hidePassed}\n          system={{\n            ...system,\n            supported:\n              (system?.testResultProfiles || []).filter(\n                (profile) => profile.supported\n              ).length > 0,\n          }}\n          profileRules={system?.testResultProfiles.map((profile) => ({\n            system,\n            profile,\n            rules: profile.rules,\n          }))}\n          loading={loading}\n          options={{\n            sortBy: {\n              index: 4,\n              direction: 'asc',\n              property: 'severity',\n            },\n            onDeleteFilter,\n          }}\n          activeFilters={{\n            policy: selectedPolicies,\n          }}\n        />\n      ) : (\n        <EmptyState system={system} isWrapped={isWrapped} />\n      )}\n    </>\n  );\n};\n\nSystemQuery.propTypes = {\n  data: propTypes.shape({\n    system: propTypes.shape({\n      hasPolicy: propTypes.bool,\n      policies: propTypes.shape({\n        id: propTypes.string,\n      }),\n      profiles: propTypes.array,\n      testResultProfiles: propTypes.array,\n    }),\n  }),\n  loading: propTypes.bool,\n  hidePassed: propTypes.bool,\n  isWrapped: propTypes.bool,\n};\n\nSystemQuery.defaultProps = {\n  loading: true,\n  isWrapped: false,\n};\n\nexport const SystemDetails = ({ inventoryId, hidePassed, ...props }) => {\n  let { data, error, loading } = useQuery(QUERY, {\n    variables: { systemId: inventoryId },\n    fetchPolicy: 'no-cache',\n  });\n  const is404 = error?.networkError?.statusCode === 404;\n\n  if (loading) {\n    return <Spinner />;\n  }\n\n  if (error && !is404) {\n    const errorMsg = `Oops! Error loading System data: ${error}`;\n    return <ErrorCard message={errorMsg} />;\n  }\n\n  return (\n    <div className=\"ins-c-compliance__scope\">\n      {!data?.system || is404 ? (\n        <ComplianceEmptyState title=\"No policies are reporting for this system\" />\n      ) : (\n        <SystemQuery\n          {...props}\n          hidePassed={hidePassed}\n          data={data}\n          loading={loading}\n        />\n      )}\n    </div>\n  );\n};\n\nSystemDetails.propTypes = {\n  inventoryId: propTypes.string,\n  hidePassed: propTypes.bool,\n};\n\nconst WrappedSystemDetails = ({\n  customItnl,\n  customRouter,\n  intlProps,\n  client,\n  ...props\n}) => {\n  const IntlWrapper = customItnl ? IntlProvider : React.Fragment;\n  const RouterWrapper = customRouter ? Router : React.Fragment;\n  const store = init().getStore();\n\n  return (\n    <RouterWrapper>\n      <IntlWrapper {...(customItnl && intlProps)}>\n        <ApolloProvider client={client}>\n          <Provider store={store}>\n            <SystemDetails {...props} isWrapped />\n          </Provider>\n        </ApolloProvider>\n      </IntlWrapper>\n    </RouterWrapper>\n  );\n};\n\nWrappedSystemDetails.propTypes = {\n  customItnl: propTypes.bool,\n  intlProps: propTypes.any,\n  customRouter: propTypes.bool,\n  client: propTypes.object,\n};\n\nWrappedSystemDetails.defaultProps = {\n  client: new ApolloClient({\n    link: new HttpLink({\n      uri: COMPLIANCE_API_ROOT + '/graphql',\n      credentials: 'include',\n    }),\n    cache: new InMemoryCache(),\n  }),\n};\n\nexport default WrappedSystemDetails;\n"],"names":["UnsupportedSSGVersion","ssgVersion","style","props","footerContent","target","rel","href","supportedConfigsLink","Alert","variant","isInline","title","Popover","position","bodyContent","marginLeft","cursor","color","propTypes","SystemPolicyCard","compliant","className","value","fixed","withPercent","toFixed","this","policy","onClick","isSelected","rulesFailed","lastScanned","score","supported","name","policyType","passedPercentage","fixedPercentage","truncateDefaults","expandOnMouseOver","hideExpandText","Card","ouiaId","event","stopPropagation","isSelectable","CardBody","TextContent","Text","component","TextVariants","Truncate","text","length","complianceIcon","Tooltip","maxWidth","content","DateFormat","date","Date","parse","type","CardFooter","padding","paddingTop","paddingRight","paddingLeft","paddingBottom","React","PropTypes","rulesPassed","refId","SystemPolicyCards","policies","selectedPolicies","onCardClick","filter","map","i","GridItem","sm","md","lg","xl","key","height","find","policyId","id","loading","Grid","hasGutter","systemPolicyCards","Array","_item","span","defaultProps","createIcon","width","svgPath","yOffset","xOffset","NotConnected","_ref","titleText","bodyText","buttonText","EmptyState","EmptyStateIcon","icon","Title","headingLevel","size","EmptyStateBody","Button","Bullseye","PlusCircleIcon","EmptyStatePrimary","to","EmptyStateSecondaryActions","NoReportsState","system","CloudSecurityIcon","fontWeight","isWrapped","hasPolicy","testResultProfiles","QUERY","gql","SystemQuery","data","hidePassed","useState","setSelectedPolicies","setOrUnsetPolicy","newSelection","undefined","RulesTable","remediationAvailableFilter","handleSelect","profile","profileRules","rules","options","sortBy","index","direction","property","onDeleteFilter","chips","clearAll","chipNames","category","chip","includes","activeFilters","profiles","SystemDetails","inventoryId","useQuery","variables","systemId","fetchPolicy","error","is404","networkError","statusCode","Spinner","errorMsg","message","ComplianceEmptyState","WrappedSystemDetails","customItnl","customRouter","intlProps","client","IntlWrapper","IntlProvider","RouterWrapper","Router","store","init","getStore","ApolloProvider","ApolloClient","link","HttpLink","uri","COMPLIANCE_API_ROOT","credentials","cache","InMemoryCache"],"sourceRoot":""}