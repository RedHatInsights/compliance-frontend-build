{"version":3,"sources":["webpack:///./src/Routes.js","webpack:///./src/App.js","webpack:///./src/Utilities/Router.js","webpack:///./src/Utilities/hooks/useDocumentTitle.js","webpack:///./src/Utilities/hooks/useFeature.js","webpack:///./src/constants.js","webpack:///./src/store/index.js"],"names":["defaultReportTitle","reportsRoutes","path","title","component","lazy","defaultTitle","modal","defaultPoliciesTitle","policiesRoutes","defaultSystemsTitle","systemsRoutes","routes","Routes","props","Router","appNavClick","reports","redirect","insights","chrome","id","scappolicies","systems","App","useSetFlagsFromUrl","useEffect","init","hideGlobalFilter","identifyApp","baseComponentUrl","location","pathname","split","unregister","on","event","domEvent","history","push","navId","childProps","propTypes","PropTypes","routerParams","Route","route","Component","useLocation","setTitle","useDocumentTitle","isCurrent","matchPath","exact","requiresTitleEntity","includes","routeProps","key","replace","componentProps","background","state","fullPageRoutes","filter","modalRoutes","paths","map","Suspense","fallback","Fragment","Switch","render","some","p","Redirect","to","useLinkToBackground","fallbackRoute","useHistory","args","hash","undefined","useAnchor","defaultAnchor","length","useTitleEntity","entityTitle","document","DEFAULT_TITLE_SUFFIX","defaultTitleSuffixed","DEFAULT_TITLE","LOCAL_STORE_FEATURE_PREFIX","setFeatureFlag","featureValue","feature","value","console","log","localStorage","setItem","removeItem","search","pathName","URLSearchParams","forEach","featureEnabled","defaultValue","features","getItem","getFlagValue","COMPLIANCE_API_ROOT","DEFAULT_SYSTEMS_FILTER_CONFIGURATION","type","conditionalFilterType","label","filterString","systemsPolicyFilterConfiguration","policies","items","policy","name","majorOsVersionsFromProfiles","Array","from","Set","profile","majorOsVersion","systemsOsFilterConfiguration","osVersion","systemsOsMinorFilterConfiguration","osMajorVersions","osVersions","Object","keys","majorVersion","groupSelectable","minorVersion","flatMap","v","join","COMPLIANT_SYSTEMS_FILTER_CONFIGURATION","scoreRange","tags","registry","middleware","getRegistry","promiseMiddleware","item","register","form","notifications","notificationsReducer","getStore"],"mappings":"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","file":"js/554.f12336eb1e01060bd0ef.js","sourcesContent":["import React, { lazy } from 'react';\nimport Router from './Utilities/Router';\n\nconst defaultReportTitle = 'Reports';\nconst reportsRoutes = [\n  {\n    path: '/reports',\n    title: defaultReportTitle,\n    component: lazy(() =>\n      import(\n        /* webpackChunkName: \"Reports\" */ './SmartComponents/Reports/Reports'\n      )\n    ),\n  },\n  {\n    path: '/reports/:report_id',\n    title: `Report: $entityTitle - ${defaultReportTitle}`,\n    defaultTitle: defaultReportTitle,\n    component: lazy(() =>\n      import(\n        /* webpackChunkName: \"ReportDetails\" */ 'SmartComponents/ReportDetails/ReportDetails'\n      )\n    ),\n  },\n  {\n    path: '/reports/:report_id/delete',\n    title: `Delete report - ${defaultReportTitle}`,\n    component: lazy(() =>\n      import(\n        /* webpackChunkName: \"DeleteReport\" */ 'SmartComponents/DeleteReport/DeleteReport'\n      )\n    ),\n    modal: true,\n  },\n];\n\nconst defaultPoliciesTitle = 'SCAP policies';\nconst policiesRoutes = [\n  {\n    path: '/scappolicies',\n    title: defaultPoliciesTitle,\n    component: lazy(() =>\n      import(\n        /* webpackChunkName: \"CompliancePolicies\" */ 'SmartComponents/CompliancePolicies/CompliancePolicies'\n      )\n    ),\n  },\n  {\n    path: '/scappolicies/new',\n    title: defaultPoliciesTitle,\n    component: lazy(() =>\n      import(\n        /* webpackChunkName: \"CreatePolicy\" */ 'SmartComponents/CreatePolicy/CreatePolicy'\n      )\n    ),\n    modal: true,\n  },\n  {\n    path: '/scappolicies/:policy_id',\n    title: `$entityTitle - ${defaultPoliciesTitle}`,\n    defaultTitle: defaultPoliciesTitle,\n    component: lazy(() =>\n      import(\n        /* webpackChunkName: \"PolicyDetails\" */ 'SmartComponents/PolicyDetails/PolicyDetails'\n      )\n    ),\n  },\n  {\n    path: '/scappolicies/:policy_id/edit',\n    title: `$entityTitle - ${defaultPoliciesTitle}`,\n    defaultTitle: defaultPoliciesTitle,\n    component: lazy(() =>\n      import(\n        /* webpackChunkName: \"EditPolicy\" */ 'SmartComponents/EditPolicy/EditPolicy'\n      )\n    ),\n    modal: true,\n  },\n  {\n    path: '/scappolicies/:policy_id/delete',\n    title: `Delete policy - ${defaultPoliciesTitle}`,\n    component: lazy(() =>\n      import(\n        /* webpackChunkName: \"DeletePolicy\" */ 'SmartComponents/DeletePolicy/DeletePolicy'\n      )\n    ),\n    modal: true,\n  },\n];\n\nconst defaultSystemsTitle = 'Systems';\nconst systemsRoutes = [\n  {\n    path: '/systems',\n    title: defaultSystemsTitle,\n    component: lazy(() =>\n      import(\n        /* webpackChunkName: \"ComplianceSystems\" */ 'SmartComponents/ComplianceSystems/ComplianceSystems'\n      )\n    ),\n  },\n  {\n    path: '/systems/:inventoryId',\n    title: `$entityTitle - ${defaultSystemsTitle}`,\n    defaultTitle: defaultSystemsTitle,\n    component: lazy(() =>\n      import(\n        /* webpackChunkName: \"SystemDetails\" */ 'SmartComponents/SystemDetails/SystemDetails'\n      )\n    ),\n  },\n];\n\nexport const routes = [...policiesRoutes, ...reportsRoutes, ...systemsRoutes];\n\nexport const Routes = (...props) => <Router {...props} routes={routes} />;\n","import PropTypes from 'prop-types';\nimport React, { useEffect } from 'react';\nimport routerParams from '@redhat-cloud-services/frontend-components-utilities/RouterParams';\nimport { Routes } from './Routes';\nimport NotificationsPortal from '@redhat-cloud-services/frontend-components-notifications/NotificationPortal';\nimport './App.scss';\nimport { useSetFlagsFromUrl } from 'Utilities/hooks/useFeature';\n\nconst appNavClick = {\n  reports(redirect) {\n    insights.chrome.appNavClick({ id: 'reports', redirect });\n  },\n  scappolicies(redirect) {\n    insights.chrome.appNavClick({ id: 'scappolicies', redirect });\n  },\n  systems(redirect) {\n    insights.chrome.appNavClick({ id: 'systems', redirect });\n  },\n};\n\nconst App = (props) => {\n  useSetFlagsFromUrl();\n  useEffect(() => {\n    insights.chrome.init();\n    insights.chrome?.hideGlobalFilter?.();\n    insights.chrome.identifyApp('compliance');\n    const baseComponentUrl = props.location.pathname.split('/')[1] || 'reports';\n    const unregister = insights.chrome.on('APP_NAVIGATION', (event) => {\n      if (event.domEvent) {\n        props.history.push(`/${event.navId}`);\n        appNavClick[baseComponentUrl](true);\n      }\n    });\n\n    return () => unregister();\n  }, []);\n\n  return (\n    <React.Fragment>\n      <NotificationsPortal />\n      <Routes childProps={props} />\n    </React.Fragment>\n  );\n};\n\nApp.propTypes = {\n  location: PropTypes.object,\n  history: PropTypes.object,\n};\n\nexport default routerParams(App);\n","import React, { useEffect, Suspense, Fragment } from 'react';\nimport propTypes from 'prop-types';\nimport {\n  Route as ReactRoute,\n  Switch,\n  Redirect,\n  useHistory,\n  useLocation,\n  matchPath,\n} from 'react-router-dom';\nimport useDocumentTitle from 'Utilities/hooks/useDocumentTitle';\n\nconst Route = (route) => {\n  const { component: Component, modal, path, props = {}, title } = route;\n  const location = useLocation();\n  const setTitle = useDocumentTitle();\n  const isCurrent = !!matchPath(location.pathname, { path, exact: true });\n  const requiresTitleEntity = title.includes('$entityTitle');\n  const routeProps = {\n    exact: true,\n    key: `${!modal ? 'fullpage' : 'modal'}-route-${path.replace('/', '-')}`,\n    path,\n  };\n  const componentProps = {\n    ...props,\n    route: { ...route, isCurrent, setTitle },\n  };\n\n  useEffect(() => {\n    isCurrent && !requiresTitleEntity && setTitle(title);\n  });\n\n  return (\n    <ReactRoute {...routeProps}>\n      <Component {...componentProps} />\n    </ReactRoute>\n  );\n};\n\nRoute.propTypes = {\n  component: propTypes.node,\n  modal: propTypes.bool,\n  path: propTypes.string,\n  props: propTypes.object,\n  title: propTypes.string,\n};\n\nconst Router = ({ routes }) => {\n  const location = useLocation();\n  const background = location?.state?.background;\n  const path = location.pathname;\n  const fullPageRoutes = routes.filter((route) => !route.modal);\n  const modalRoutes = routes.filter((route) => route.modal);\n  const paths = routes.map((route) => route.path);\n  const defaultRedirectRender = () =>\n    paths.some((p) => p === path) ? null : <Redirect to=\"/reports\" />;\n\n  return (\n    <Suspense fallback={Fragment}>\n      <Switch location={background || location}>\n        {fullPageRoutes.map(Route)}\n        <ReactRoute render={defaultRedirectRender} />\n      </Switch>\n\n      {modalRoutes.map(Route)}\n    </Suspense>\n  );\n};\n\nRouter.propTypes = {\n  routes: propTypes.array,\n};\n\nexport const useLinkToBackground = (fallbackRoute) => {\n  const location = useLocation();\n  const history = useHistory();\n\n  return (args) => {\n    const background = location?.state?.background;\n\n    history.push({\n      pathname: background ? background.pathname : fallbackRoute,\n      hash: background ? background.hash : undefined,\n      ...args,\n    });\n  };\n};\n\nexport const useAnchor = (defaultAnchor = '') => {\n  const location = useLocation();\n  const hash =\n    location.hash && location.hash.length > 0 ? location.hash : undefined;\n  return (hash || defaultAnchor).replace('#', '');\n};\n\nexport default Router;\n","import { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nimport { DEFAULT_TITLE, DEFAULT_TITLE_SUFFIX } from '@/constants';\n\nconst defaultTitleSuffixed = (title) => `${title}${DEFAULT_TITLE_SUFFIX}`;\n\nexport const useTitleEntity = (route, entityTitle) => {\n  const location = useLocation();\n\n  useEffect(() => {\n    const title = entityTitle\n      ? route.title.replace('$entityTitle', entityTitle)\n      : route.defaultTitle;\n    route.setTitle(title);\n  }, [entityTitle, location, route]);\n};\n\nconst useDocumentTitle = () => (title) => {\n  document.title = defaultTitleSuffixed(title || DEFAULT_TITLE);\n};\n\nexport default useDocumentTitle;\n","import { features } from '@/constants';\nimport { useLocation, useHistory } from 'react-router-dom';\nexport const LOCAL_STORE_FEATURE_PREFIX = 'insights:compliance';\n\nconst setFeatureFlag = (featureValue, feature) => {\n  const value = featureValue === 'enable';\n\n  if (!value) {\n    console.log(`Removing feature setting of ${feature}`);\n    localStorage.removeItem(`${LOCAL_STORE_FEATURE_PREFIX}:${feature}`);\n  } else {\n    console.log(`Setting feature value for ${feature} to ${value}`);\n    localStorage.setItem(`${LOCAL_STORE_FEATURE_PREFIX}:${feature}`, value);\n  }\n};\n\n// Allows setting feature flag values via ?feature|(enable/disable)\nexport const useSetFlagsFromUrl = () => {\n  const { search, pathName: path } = useLocation();\n  const history = useHistory();\n  if (!search) {\n    return;\n  }\n\n  const urlParams = new URLSearchParams(search);\n  urlParams.forEach(setFeatureFlag);\n\n  history.push(path);\n};\n\nconst getFlagValue = (feature) => {\n  const defaultValue = features[feature];\n  const storedValue = !!localStorage.getItem(\n    `${LOCAL_STORE_FEATURE_PREFIX}:${feature}`\n  );\n\n  return storedValue || defaultValue;\n};\n\n// A hook to query feature values\nconst useFeature = (feature) => {\n  if (!feature) {\n    return;\n  }\n\n  const featureEnabled = getFlagValue(feature);\n\n  console.log(`Feature ${feature} is set to ${featureEnabled}`);\n  return featureEnabled;\n};\n\nexport default useFeature;\n","/* eslint max-len: 0 */\nimport { version } from './../package.json';\nimport { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\n\nexport const DEFAULT_TITLE = 'Compliance | Red Hat Insights';\nexport const DEFAULT_TITLE_SUFFIX = ` - ${DEFAULT_TITLE}`;\n\nexport const COMPLIANCE_API_ROOT = '/api/compliance';\nexport const COMPLIANCE_UI_ROOT = '/rhel/compliance';\nexport const INVENTORY_API_ROOT = '/api/inventory/v1';\n\nexport const API_HEADERS = {\n  'X-Insights-Compliance': version,\n  'Content-Type': 'application/json',\n  Accept: 'application/json',\n};\n\nimport React from 'react';\nimport {\n  ExclamationCircleIcon,\n  ExclamationTriangleIcon,\n  QuestionCircleIcon,\n} from '@patternfly/react-icons';\n\nexport const REMEDIATIONS_COLUMN = 4;\nexport const COMPLIANT_COLUMN = 3;\nexport const SEVERITY_COLUMN = 2;\nexport const POLICY_COLUMN = 1;\nexport const TITLE_COLUMN = 0;\n\nconst LowSeverityIcon = (\n  <svg\n    width=\"1em\"\n    height=\"1em\"\n    viewBox=\"0 0 18 18\"\n    role=\"img\"\n    style={{ verticalAlign: '-0.125em' }}\n    xmlns=\"http://www.w3.org/2000/svg\"\n  >\n    <path\n      d=\"M2 0h14a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2zm6.67 10.46a1.67 1.67 0 1 0 0 3.338 1.67 1.67 0 0 0 0-3.338zm-1.586-6l.27 4.935a.435.435 0 0 0 .434.411H9.55c.232 0 .422-.18.435-.411l.27-4.936A.435.435 0 0 0 9.818 4h-2.3c-.25 0-.448.21-.435.46z\"\n      fill=\"#3A9CA6\"\n      fillRule=\"evenodd\"\n    />\n  </svg>\n);\n\nexport const HIGH_SEVERITY = (\n  <React.Fragment>\n    <ExclamationCircleIcon className=\"ins-u-failed\" /> High\n  </React.Fragment>\n);\nexport const MEDIUM_SEVERITY = (\n  <React.Fragment>\n    <ExclamationTriangleIcon className=\"ins-u-warning\" /> Medium\n  </React.Fragment>\n);\nexport const LOW_SEVERITY = (\n  <React.Fragment>{LowSeverityIcon} Low</React.Fragment>\n);\nexport const UNKNOWN_SEVERITY = (\n  <React.Fragment>\n    <QuestionCircleIcon /> Unknown\n  </React.Fragment>\n);\n\nexport const DEFAULT_SYSTEMS_FILTER_CONFIGURATION = [\n  {\n    type: conditionalFilterType.text,\n    label: 'Name',\n    filterString: (value) => `name ~ ${value}`,\n  },\n];\n\nexport const systemsPolicyFilterConfiguration = (policies) => [\n  {\n    type: conditionalFilterType.checkbox,\n    label: 'Policy',\n    filterString: (value) => `policy_id = ${value}`,\n    items: policies.map((policy) => ({\n      label: policy.name,\n      value: policy.id,\n    })),\n  },\n];\n\nconst majorOsVersionsFromProfiles = (policies) =>\n  Array.from(new Set(policies.map((profile) => profile.majorOsVersion)));\n\nexport const systemsOsFilterConfiguration = (policies) => [\n  {\n    type: conditionalFilterType.checkbox,\n    label: 'Operating system',\n    filterString: (value) => `os_major_version = ${value}`,\n    items: majorOsVersionsFromProfiles(policies).map((osVersion) => ({\n      label: `RHEL ${osVersion}`,\n      value: osVersion,\n    })),\n  },\n];\n\nconst toSystemsOsMinorFilterConfigurationItem =\n  (osVersions) => (majorVersion) => ({\n    label: `RHEL ${majorVersion}`,\n    value: majorVersion,\n    groupSelectable: true,\n    items: osVersions[majorVersion].map((minorVersion) => ({\n      label: `RHEL ${majorVersion}.${minorVersion}`,\n      value: minorVersion,\n    })),\n  });\n\nexport const systemsOsMinorFilterConfiguration = (osMajorVersions) => {\n  const filterString = (value) => [\n    Object.keys(value)\n      .flatMap((majorVersion) =>\n        Object.keys(value[majorVersion]).map(\n          (minorVersion) =>\n            value[majorVersion][minorVersion] &&\n            `(os_major_version = ${majorVersion} AND os_minor_version = ${minorVersion})`\n        )\n      )\n      .filter((v) => !!v)\n      .join(' OR '),\n  ];\n  const items = Object.keys(osMajorVersions).map(\n    toSystemsOsMinorFilterConfigurationItem(osMajorVersions)\n  );\n\n  return [\n    {\n      type: conditionalFilterType.group,\n      label: 'Operating system',\n      filterString,\n      items,\n    },\n  ];\n};\n\nexport const COMPLIANT_SYSTEMS_FILTER_CONFIGURATION = [\n  {\n    type: conditionalFilterType.checkbox,\n    label: 'Compliant',\n    filterString: (value) => `compliant = ${value}`,\n    items: [\n      { label: 'Compliant', value: 'true' },\n      { label: 'Non-compliant', value: 'false' },\n    ],\n  },\n  {\n    type: conditionalFilterType.checkbox,\n    label: 'Compliance score',\n    filterString: (value) => {\n      const scoreRange = value.split('-');\n      return `(compliance_score >= ${scoreRange[0]} and compliance_score < ${scoreRange[1]})`;\n    },\n    items: [\n      { label: '90 - 100%', value: '90-101' },\n      { label: '70 - 89%', value: '70-90' },\n      { label: '50 - 69%', value: '50-70' },\n      { label: 'Less than 50%', value: '0-50' },\n    ],\n  },\n];\n\nexport const features = {\n  tags: false,\n};\n","import { getRegistry } from '@redhat-cloud-services/frontend-components-utilities/Registry';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport { reducer as form } from 'redux-form';\n\nlet registry;\n\nexport function init(...middleware) {\n  registry = getRegistry({}, [\n    promiseMiddleware,\n    ...middleware.filter((item) => typeof item !== 'undefined'),\n  ]);\n\n  registry.register({ form, notifications: notificationsReducer });\n  return registry;\n}\n\nexport function getStore() {\n  return registry.getStore();\n}\n\nexport function register(...args) {\n  return registry.register(...args);\n}\n"],"sourceRoot":""}