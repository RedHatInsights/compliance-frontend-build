{"version":3,"file":"js/522.208cdb901a5b8a764ede.js","mappings":"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","sources":["webpack:///./src/Routes.js","webpack:///./src/Utilities/hooks/useFeature.js","webpack:///./src/App.js","webpack:///./src/store/index.js"],"sourcesContent":["import React, { lazy } from 'react';\nimport Router from './Utilities/Router';\n\nconst defaultReportTitle = 'Reports';\nconst reportsRoutes = [\n  {\n    path: '/reports',\n    title: defaultReportTitle,\n    component: lazy(() =>\n      import(\n        /* webpackChunkName: \"Reports\" */ './SmartComponents/Reports/Reports'\n      )\n    ),\n  },\n  {\n    path: '/reports/:report_id',\n    title: `Report: $entityTitle - ${defaultReportTitle}`,\n    defaultTitle: defaultReportTitle,\n    component: lazy(() =>\n      import(\n        /* webpackChunkName: \"ReportDetails\" */ 'SmartComponents/ReportDetails/ReportDetails'\n      )\n    ),\n  },\n  {\n    path: '/reports/:report_id/delete',\n    title: `Delete report - ${defaultReportTitle}`,\n    component: lazy(() =>\n      import(\n        /* webpackChunkName: \"DeleteReport\" */ 'SmartComponents/DeleteReport/DeleteReport'\n      )\n    ),\n    modal: true,\n  },\n\n  {\n    path: '/reports/:report_id/pdf',\n    title: `Export report - ${defaultReportTitle}`,\n    defaultTitle: defaultReportTitle,\n    modal: true,\n    component: lazy(() =>\n      import(\n        /* webpackChunkName: \"ReportDetails\" */ 'SmartComponents/ReportDownload/ReportDownload'\n      )\n    ),\n  },\n];\n\nconst defaultPoliciesTitle = 'SCAP policies';\nconst policiesRoutes = [\n  {\n    path: '/scappolicies',\n    title: defaultPoliciesTitle,\n    component: lazy(() =>\n      import(\n        /* webpackChunkName: \"CompliancePolicies\" */ 'SmartComponents/CompliancePolicies/CompliancePolicies'\n      )\n    ),\n  },\n  {\n    path: '/scappolicies/new',\n    title: defaultPoliciesTitle,\n    component: lazy(() =>\n      import(\n        /* webpackChunkName: \"CreatePolicy\" */ 'SmartComponents/CreatePolicy/CreatePolicy'\n      )\n    ),\n    modal: true,\n  },\n  {\n    path: '/scappolicies/:policy_id',\n    title: `$entityTitle - ${defaultPoliciesTitle}`,\n    defaultTitle: defaultPoliciesTitle,\n    component: lazy(() =>\n      import(\n        /* webpackChunkName: \"PolicyDetails\" */ 'SmartComponents/PolicyDetails/PolicyDetails'\n      )\n    ),\n  },\n  {\n    path: '/scappolicies/:policy_id/edit',\n    title: `$entityTitle - ${defaultPoliciesTitle}`,\n    defaultTitle: defaultPoliciesTitle,\n    component: lazy(() =>\n      import(\n        /* webpackChunkName: \"EditPolicy\" */ 'SmartComponents/EditPolicy/EditPolicy'\n      )\n    ),\n    modal: true,\n  },\n  {\n    path: '/scappolicies/:policy_id/delete',\n    title: `Delete policy - ${defaultPoliciesTitle}`,\n    component: lazy(() =>\n      import(\n        /* webpackChunkName: \"DeletePolicy\" */ 'SmartComponents/DeletePolicy/DeletePolicy'\n      )\n    ),\n    modal: true,\n  },\n];\n\nconst defaultSystemsTitle = 'Systems';\nconst systemsRoutes = [\n  {\n    path: '/systems',\n    title: defaultSystemsTitle,\n    component: lazy(() =>\n      import(\n        /* webpackChunkName: \"ComplianceSystems\" */ 'SmartComponents/ComplianceSystems/ComplianceSystems'\n      )\n    ),\n  },\n  {\n    path: '/systems/:inventoryId',\n    title: `$entityTitle - ${defaultSystemsTitle}`,\n    defaultTitle: defaultSystemsTitle,\n    component: lazy(() =>\n      import(\n        /* webpackChunkName: \"SystemDetails\" */ 'SmartComponents/SystemDetails/SystemDetails'\n      )\n    ),\n  },\n];\n\nexport const routes = [...policiesRoutes, ...reportsRoutes, ...systemsRoutes];\n\nexport const Routes = (...props) => <Router {...props} routes={routes} />;\n","import { features } from '@/constants';\nimport { useLocation, useHistory } from 'react-router-dom';\nexport const LOCAL_STORE_FEATURE_PREFIX = 'insights:compliance';\n\nconst setFeatureFlag = (featureValue, feature) => {\n  const value = featureValue === 'enable';\n\n  if (!value) {\n    console.log(`Removing feature setting of ${feature}`);\n    localStorage.removeItem(`${LOCAL_STORE_FEATURE_PREFIX}:${feature}`);\n  } else {\n    console.log(`Setting feature value for ${feature} to ${value}`);\n    localStorage.setItem(`${LOCAL_STORE_FEATURE_PREFIX}:${feature}`, value);\n  }\n};\n\n// Allows setting feature flag values via ?feature|(enable/disable)\nexport const useSetFlagsFromUrl = () => {\n  const { search, pathName: path } = useLocation();\n  const history = useHistory();\n  if (!search) {\n    return;\n  }\n\n  const urlParams = new URLSearchParams(search);\n  urlParams.forEach(setFeatureFlag);\n\n  history.push(path);\n};\n\nconst getFlagValue = (feature) => {\n  const defaultValue = features[feature];\n  const storedValue = !!localStorage.getItem(\n    `${LOCAL_STORE_FEATURE_PREFIX}:${feature}`\n  );\n\n  return storedValue || defaultValue;\n};\n\n// A hook to query feature values\nconst useFeature = (feature) => {\n  if (!feature) {\n    return;\n  }\n\n  const featureEnabled = getFlagValue(feature);\n\n  console.log(`Feature ${feature} is set to ${featureEnabled}`);\n  return featureEnabled;\n};\n\nexport default useFeature;\n","import PropTypes from 'prop-types';\nimport React, { useEffect } from 'react';\nimport routerParams from '@redhat-cloud-services/frontend-components-utilities/RouterParams';\nimport { Routes } from './Routes';\nimport NotificationsPortal from '@redhat-cloud-services/frontend-components-notifications/NotificationPortal';\nimport './App.scss';\nimport { useSetFlagsFromUrl } from 'Utilities/hooks/useFeature';\n\nconst appNavClick = {\n  reports(redirect) {\n    insights.chrome.appNavClick({ id: 'reports', redirect });\n  },\n  scappolicies(redirect) {\n    insights.chrome.appNavClick({ id: 'scappolicies', redirect });\n  },\n  systems(redirect) {\n    insights.chrome.appNavClick({ id: 'systems', redirect });\n  },\n};\n\nconst App = (props) => {\n  useSetFlagsFromUrl();\n  useEffect(() => {\n    insights.chrome.init();\n    insights.chrome?.hideGlobalFilter?.();\n    insights.chrome.identifyApp('compliance');\n    const baseComponentUrl = props.location.pathname.split('/')[1] || 'reports';\n    const unregister = insights.chrome.on('APP_NAVIGATION', (event) => {\n      if (event.domEvent) {\n        props.history.push(`/${event.navId}`);\n        appNavClick[baseComponentUrl](true);\n      }\n    });\n\n    return () => unregister();\n  }, []);\n\n  return (\n    <React.Fragment>\n      <NotificationsPortal />\n      <Routes childProps={props} />\n    </React.Fragment>\n  );\n};\n\nApp.propTypes = {\n  location: PropTypes.object,\n  history: PropTypes.object,\n};\n\nexport default routerParams(App);\n","import { getRegistry } from '@redhat-cloud-services/frontend-components-utilities/Registry';\nimport { notificationsReducer } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport promiseMiddleware from 'redux-promise-middleware';\nimport { reducer as form } from 'redux-form';\n\nlet registry;\n\nexport function init(...middleware) {\n  registry = getRegistry({}, [\n    promiseMiddleware,\n    ...middleware.filter((item) => typeof item !== 'undefined'),\n  ]);\n\n  registry.register({ form, notifications: notificationsReducer });\n  return registry;\n}\n\nexport function getStore() {\n  return registry.getStore();\n}\n\nexport function register(...args) {\n  return registry.register(...args);\n}\n"],"names":["defaultReportTitle","reportsRoutes","path","title","component","lazy","defaultTitle","modal","defaultPoliciesTitle","policiesRoutes","defaultSystemsTitle","systemsRoutes","routes","Routes","props","Router","LOCAL_STORE_FEATURE_PREFIX","setFeatureFlag","featureValue","feature","value","console","log","localStorage","setItem","removeItem","appNavClick","reports","redirect","insights","chrome","id","scappolicies","systems","App","search","history","useLocation","pathName","useHistory","URLSearchParams","forEach","push","useEffect","init","hideGlobalFilter","identifyApp","baseComponentUrl","location","pathname","split","unregister","on","event","domEvent","navId","childProps","propTypes","PropTypes","routerParams","registry","middleware","getRegistry","promiseMiddleware","filter","item","register","form","notifications","notificationsReducer","getStore"],"sourceRoot":""}