{"version":3,"sources":["webpack:///./node_modules/@redhat-cloud-services/frontend-components/components/cjs/SkeletonTable.js","webpack:///./node_modules/@apollo/react-components/lib/react-components.esm.js","webpack:///./node_modules/@apollo/react-hoc/lib/react-hoc.esm.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/components/cjs/DateFormat.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components-utilities/files/ReducerRegistry.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/components/cjs/Skeleton.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/components/cjs/Spinner.js","webpack:///./src/store/ActionTypes.js","webpack:///./src/Utilities/ruleHelpers.js","webpack:///./src/Utilities/Export.js","webpack:///./src/store/Reducers/SystemStore.js","webpack:///./src/SmartComponents/SystemsTable/Cells.js","webpack:///./src/SmartComponents/SystemsTable/SystemsTable.js"],"names":["_interopDefault","e","default","Object","defineProperty","exports","value","React__default","PropTypes__default","toConsumableArray","getPrototypeOf","pfReactTable","Skeleton","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","prototype","toString","call","SkeletonTable","_inherits","t","r","_getPrototypeOf","o","this","constructor","arguments","apply","_possibleConstructorReturn","_createSuper","_classCallCheck","length","Array","a","concat","_defineProperty","_assertThisInitialized","props","colSize","_toConsumableArray","map","title","createElement","size","SkeletonSize","sm","paddingColumnSize","columns","newArray","createColumns","rowSize","n","l","disableSelection","cells","md","hasRadio","RowSelectVariant","radio","checkbox","_createClass","key","canSelectAll","isSelectable","sortBy","Table","getColumns","rows","createRows","onSelect","selectVariant","TableHeader","TableBody","Component","propTypes","number","array","shape","index","direction","oneOf","bool","defaultProps","children","query","options","result","_a","mutation","runMutation","subscription","client","object","func","isRequired","fetchPolicy","string","notifyOnNetworkStatusChange","onCompleted","onError","pollInterval","variables","ssr","partialRefetch","returnPartialData","optimisticResponse","oneOfType","refetchQueries","arrayOf","awaitRefetchQueries","update","onSubscriptionData","onSubscriptionComplete","shouldResubscribe","_super","GraphQLBase","_this","withRef","setWrappedInstance","bind","getWrappedInstance","wrappedInstance","ref","withApollo","WrappedComponent","operationOptions","withDisplayName","displayName","name","getDisplayName$1","WithApollo","render","assign","undefined","_extends","Tooltip_js","day","formatTime","relativeTimeTable","rightBound","description","Math","round","_exact","toUTCString","split","slice","trim","dateStringByType","exact","onlyDate","relative","reduce","now","invalid","dateByType","Tooltip","content","addTooltip","DateFormat","date","type","extraTitle","tooltipProps","i","u","d","Fragment","instanceOf","c","isArray","Symbol","iterator","from","test","TypeError","_defineProperties","enumerable","configurable","writable","ownKeys","keys","getOwnPropertySymbols","filter","getOwnPropertyDescriptor","push","_objectSpread","forEach","getOwnPropertyDescriptors","defineProperties","ReducerRegistry","compose","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","reducers","s","replaceReducer","combineReducers","f","applyReducerHash","hasOwnProperty","dispatchActionsToStore","dispatch","reduxRegistry","objectWithoutProperties","classNames","xs","lg","isDark","className","_objectWithoutProperties","values","Spinner","centered","role","EXPORT","profilesRulesFailed","profiles","flatMap","profile","rules","rule","compliant","profilesRulesPassed","systemRulesFailed","system","systemsWithRuleObjectsFailed","systems","ruleObjectsFailed","getNestedObject","nestedObj","path","obj","textCsvCell","row","cell","exportValue","includes","exportFromState","state","format","selectedEntities","csvRows","column","join","encodeURI","csvFromState","JSON","stringify","jsonFromState","data","filename","link","document","setAttribute","dispatchEvent","MouseEvent","bubbles","cancelable","view","linkAndDownload","CSV_FILE_PREFIX","toISOString","detailsLink","testResultProfiles","to","pathname","id","hasOsInfo","matchingSystem","osMajorVersion","osMinorVersion","displayNameCell","TextContent","display_name","Text","component","TextVariants","small","isSelected","find","entity","systemsToInventoryEntities","entities","showAllSystems","facts","dates","last","scoreTotal","numScored","node","policies","policyNames","externalPolicyNames","p","policy","rulesPassed","rulesFailed","lastScanned","max","isFinite","every","score","acc","supported","selected","account","bios_uuid","created","fqdn","insights_id","ip_addresses","mac_addresses","rhel_machine_id","satellite_id","subscription_manager_id","tags","updated","inventory","hostname","machine_id","release","compliance","Truncate","lines","width","details_link","rules_passed","rules_failed","hidePassed","rules_failed_text","compliance_score","complianceScore","compliance_score_text","complianceScoreString","last_scanned","parse","last_scanned_text","ssg_version","ssgVersion","version","selectRowsByIds","ids","rowsToSelect","deselectRowsByIds","entitiesReducer","INVENTORY_ACTION","systemsCount","loaded","LOAD_ENTITIES_FULFILLED","total","payload","newState","clearAll","selectAllRows","deselectAllRows","selectRow","deselectRow","SSGVersion","GET_SYSTEMS","gql","GET_SYSTEMS_WITHOUT_FAILED_RULES","initFilterState","filterConfig","initialDefaultState","initialState","page","policyFilter","osFilter","systemsPolicyFilterConfiguration","systemsOsFilterConfiguration","SystemsTable","registry","React","createRef","FilterConfigBuilder","DEFAULT_SYSTEMS_FILTER_CONFIGURATION","compliantFilter","COMPLIANT_SYSTEMS_FILTER_CONFIGURATION","showOsFilter","getChipBuilder","getFilterBuilder","InventoryCmp","policyId","perPage","totalCount","activeFilters","preselectedSystems","Promise","resolve","selectEntities","then","updateSystems","fetchInventory","prevProps","complianceThreshold","per_page","current","setState","onRefreshData","showOnlySystemsWithTestResults","remediationsEnabled","filterBuilder","buildFilterString","fetchResults","prevSystems","sort","fetchSystems","items","edges","newSystems","updateRows","catch","error","prevState","_","selectedValues","chips","removeFilterWithChip","_event","clearAllFilter","deleteFilter","selectAll","clearSelection","allSelectedOnPage","clearInventoryFilter","insights","loadInventory","ReactRedux","react","reactRouterDom","pfReact","reactCore","reactIcons","inventoryConnector","INVENTORY_ACTION_TYPES","mergeWithEntities","getRegistry","register","InventoryTable","noError","compact","enableExport","showActions","showComplianceSystemsInfo","selectedEntitiesIds","systemProps","buildConfiguration","onFilterUpdate","hideLabel","filterChips","chipBuilder","chipsFor","exportConfig","isDisabled","isExportDisabled","onExportSelect","inventoryTableProps","onRefresh","tableProps","bulkSelect","checked","onBulkSelect","count","label","actions","onClick","_index","beta","location","href","origin","edge","activeFiltersConfig","filters","onDelete","onFilterDelete","variant","hasItems","hasCheckbox","dedicatedAction","allSystems","selectedRules","stateValues","stateKey","isInline","isFullView","SystemsTableWithApollo","connect","args"],"mappings":"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","file":"js/EditPolicy~PolicyDetails~ReportDetails~SystemDetails-902283046f793b2bfdce.js","sourcesContent":["\"use strict\";function _interopDefault(e){return e&&\"object\"==typeof e&&\"default\"in e?e.default:e}Object.defineProperty(exports,\"__esModule\",{value:!0}),require(\"./_commonjsHelpers-32c5d30b.js\"),require(\"./extends-7fa7e501.js\");var defineProperty=require(\"./defineProperty-cf06dcaa.js\");require(\"./objectWithoutProperties-9e2b4e81.js\");var React=require(\"react\"),React__default=_interopDefault(React),PropTypes=require(\"prop-types\"),PropTypes__default=_interopDefault(PropTypes);require(\"classnames\"),require(\"./unsupportedIterableToArray-abf8a1bc.js\");var toConsumableArray=require(\"./toConsumableArray-d88d1361.js\"),getPrototypeOf=require(\"./getPrototypeOf-c749744b.js\"),pfReactTable=require(\"@patternfly/react-table\"),Skeleton=require(\"./Skeleton.js\");function _createSuper(e){return function(){var t,r=getPrototypeOf._getPrototypeOf(e);if(_isNativeReflectConstruct()){var o=getPrototypeOf._getPrototypeOf(this).constructor;t=Reflect.construct(r,arguments,o)}else t=r.apply(this,arguments);return getPrototypeOf._possibleConstructorReturn(this,t)}}function _isNativeReflectConstruct(){if(\"undefined\"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if(\"function\"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}var SkeletonTable=function(e){getPrototypeOf._inherits(SkeletonTable,e);var t=_createSuper(SkeletonTable);function SkeletonTable(){var e;getPrototypeOf._classCallCheck(this,SkeletonTable);for(var r=arguments.length,o=new Array(r),a=0;a<r;a++)o[a]=arguments[a];return e=t.call.apply(t,[this].concat(o)),defineProperty._defineProperty(getPrototypeOf._assertThisInitialized(e),\"createColumns\",(function(){var t=e.props.colSize;return toConsumableArray._toConsumableArray(Array(t)).map((function(){return{title:React__default.createElement(Skeleton.Skeleton,{size:Skeleton.SkeletonSize.sm})}}))})),defineProperty._defineProperty(getPrototypeOf._assertThisInitialized(e),\"getColumns\",(function(){var t=e.props,r=t.paddingColumnSize,o=t.columns;return e.newArray(r).map((function(){return\"\"})).concat(o||e.createColumns())})),defineProperty._defineProperty(getPrototypeOf._assertThisInitialized(e),\"createRows\",(function(){var t=e.props,r=t.colSize,o=t.rowSize,a=t.columns,n=t.paddingColumnSize,l=a?a.length:r;return e.newArray(o).map((function(){return{disableSelection:!0,cells:e.newArray(n).map((function(){return\"\"})).concat(e.newArray(l).map((function(){return{title:React__default.createElement(Skeleton.Skeleton,{size:Skeleton.SkeletonSize.md})}})))}}))})),defineProperty._defineProperty(getPrototypeOf._assertThisInitialized(e),\"selectVariant\",(function(){return e.props.hasRadio?(null===pfReactTable.RowSelectVariant||void 0===pfReactTable.RowSelectVariant?void 0:pfReactTable.RowSelectVariant.radio)||\"radio\":(null===pfReactTable.RowSelectVariant||void 0===pfReactTable.RowSelectVariant?void 0:pfReactTable.RowSelectVariant.checkbox)||\"checkbox\"})),defineProperty._defineProperty(getPrototypeOf._assertThisInitialized(e),\"newArray\",(function(e){return toConsumableArray._toConsumableArray(Array(e))})),e}return getPrototypeOf._createClass(SkeletonTable,[{key:\"render\",value:function render(){var e=this.props,t=e.canSelectAll,r=e.isSelectable,o=e.sortBy;return(React__default.createElement(pfReactTable.Table,{cells:this.getColumns(),rows:this.createRows(),sortBy:o,\"aria-label\":\"Loading\",onSelect:r,selectVariant:r?this.selectVariant():null,canSelectAll:t},React__default.createElement(pfReactTable.TableHeader,null),React__default.createElement(pfReactTable.TableBody,null)))}}]),SkeletonTable}(React__default.Component);SkeletonTable.propTypes={colSize:PropTypes__default.number,rowSize:PropTypes__default.number,columns:PropTypes__default.array,paddingColumnSize:PropTypes__default.number,sortBy:PropTypes__default.shape({index:PropTypes__default.number,direction:PropTypes__default.oneOf([\"asc\",\"desc\"])}),isSelectable:PropTypes__default.bool,canSelectAll:PropTypes__default.bool,hasRadio:PropTypes__default.bool},SkeletonTable.defaultProps={rowSize:0,paddingColumnSize:0,canSelectAll:!1,isSelectable:!1,hasRadio:!1},exports.SkeletonTable=SkeletonTable;\n","export { ApolloConsumer, ApolloProvider, getApolloContext, resetApolloContext } from '@apollo/react-common';\nimport { __rest } from 'tslib';\nimport { useQuery, useMutation, useSubscription } from '@apollo/react-hooks';\nimport PropTypes from 'prop-types';\n\nfunction Query(props) {\n    var children = props.children, query = props.query, options = __rest(props, [\"children\", \"query\"]);\n    var result = useQuery(query, options);\n    return children && result ? children(result) : null;\n}\n(function (Query) {\n    Query.propTypes = {\n        client: PropTypes.object,\n        children: PropTypes.func.isRequired,\n        fetchPolicy: PropTypes.string,\n        notifyOnNetworkStatusChange: PropTypes.bool,\n        onCompleted: PropTypes.func,\n        onError: PropTypes.func,\n        pollInterval: PropTypes.number,\n        query: PropTypes.object.isRequired,\n        variables: PropTypes.object,\n        ssr: PropTypes.bool,\n        partialRefetch: PropTypes.bool,\n        returnPartialData: PropTypes.bool\n    };\n})(Query || (Query = {}));\n\nfunction Mutation(props) {\n    var _a = useMutation(props.mutation, props), runMutation = _a[0], result = _a[1];\n    return props.children ? props.children(runMutation, result) : null;\n}\n(function (Mutation) {\n    Mutation.propTypes = {\n        mutation: PropTypes.object.isRequired,\n        variables: PropTypes.object,\n        optimisticResponse: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n        refetchQueries: PropTypes.oneOfType([\n            PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.object])),\n            PropTypes.func\n        ]),\n        awaitRefetchQueries: PropTypes.bool,\n        update: PropTypes.func,\n        children: PropTypes.func.isRequired,\n        onCompleted: PropTypes.func,\n        onError: PropTypes.func,\n        fetchPolicy: PropTypes.string\n    };\n})(Mutation || (Mutation = {}));\n\nfunction Subscription(props) {\n    var result = useSubscription(props.subscription, props);\n    return props.children && result ? props.children(result) : null;\n}\n(function (Subscription) {\n    Subscription.propTypes = {\n        subscription: PropTypes.object.isRequired,\n        variables: PropTypes.object,\n        children: PropTypes.func,\n        onSubscriptionData: PropTypes.func,\n        onSubscriptionComplete: PropTypes.func,\n        shouldResubscribe: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n    };\n})(Subscription || (Subscription = {}));\n\nexport { Mutation, Query, Subscription };\n//# sourceMappingURL=react-components.esm.js.map\n","import { parser, DocumentType, ApolloConsumer } from '@apollo/react-common';\nexport { ApolloConsumer, ApolloProvider, getApolloContext, resetApolloContext } from '@apollo/react-common';\nimport { __extends, __assign, __rest } from 'tslib';\nimport React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { Query, Mutation, Subscription } from '@apollo/react-components';\nimport { invariant } from 'ts-invariant';\n\nvar defaultMapPropsToOptions = function () { return ({}); };\nvar defaultMapPropsToSkip = function () { return false; };\nfunction getDisplayName(WrappedComponent) {\n    return WrappedComponent.displayName || WrappedComponent.name || 'Component';\n}\nfunction calculateVariablesFromProps(operation, props) {\n    var variables = {};\n    for (var _i = 0, _a = operation.variables; _i < _a.length; _i++) {\n        var _b = _a[_i], variable = _b.variable, type = _b.type;\n        if (!variable.name || !variable.name.value)\n            continue;\n        var variableName = variable.name.value;\n        var variableProp = props[variableName];\n        if (typeof variableProp !== 'undefined') {\n            variables[variableName] = variableProp;\n            continue;\n        }\n        if (type.kind !== 'NonNullType') {\n            variables[variableName] = undefined;\n        }\n    }\n    return variables;\n}\nvar GraphQLBase = (function (_super) {\n    __extends(GraphQLBase, _super);\n    function GraphQLBase(props) {\n        var _this = _super.call(this, props) || this;\n        _this.withRef = false;\n        _this.setWrappedInstance = _this.setWrappedInstance.bind(_this);\n        return _this;\n    }\n    GraphQLBase.prototype.getWrappedInstance = function () {\n        process.env.NODE_ENV === \"production\" ? invariant(this.withRef, 2) : invariant(this.withRef, \"To access the wrapped instance, you need to specify \" +\n            \"{ withRef: true } in the options\");\n        return this.wrappedInstance;\n    };\n    GraphQLBase.prototype.setWrappedInstance = function (ref) {\n        this.wrappedInstance = ref;\n    };\n    return GraphQLBase;\n}(React.Component));\n\nfunction withQuery(document, operationOptions) {\n    if (operationOptions === void 0) { operationOptions = {}; }\n    var operation = parser(document);\n    var _a = operationOptions.options, options = _a === void 0 ? defaultMapPropsToOptions : _a, _b = operationOptions.skip, skip = _b === void 0 ? defaultMapPropsToSkip : _b, _c = operationOptions.alias, alias = _c === void 0 ? 'Apollo' : _c;\n    var mapPropsToOptions = options;\n    if (typeof mapPropsToOptions !== 'function') {\n        mapPropsToOptions = function () { return options; };\n    }\n    var mapPropsToSkip = skip;\n    if (typeof mapPropsToSkip !== 'function') {\n        mapPropsToSkip = function () { return skip; };\n    }\n    var lastResultProps;\n    return function (WrappedComponent) {\n        var graphQLDisplayName = alias + \"(\" + getDisplayName(WrappedComponent) + \")\";\n        var GraphQL = (function (_super) {\n            __extends(GraphQL, _super);\n            function GraphQL() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            GraphQL.prototype.render = function () {\n                var _this = this;\n                var props = this.props;\n                var shouldSkip = mapPropsToSkip(props);\n                var opts = shouldSkip\n                    ? Object.create(null)\n                    : __assign({}, mapPropsToOptions(props));\n                if (!shouldSkip && !opts.variables && operation.variables.length > 0) {\n                    opts.variables = calculateVariablesFromProps(operation, props);\n                }\n                return (React.createElement(Query, __assign({}, opts, { displayName: graphQLDisplayName, skip: shouldSkip, query: document }), function (_a) {\n                    var _b, _c;\n                    var _ = _a.client, data = _a.data, r = __rest(_a, [\"client\", \"data\"]);\n                    if (operationOptions.withRef) {\n                        _this.withRef = true;\n                        props = Object.assign({}, props, {\n                            ref: _this.setWrappedInstance\n                        });\n                    }\n                    if (shouldSkip) {\n                        return (React.createElement(WrappedComponent, __assign({}, props, {})));\n                    }\n                    var result = Object.assign(r, data || {});\n                    var name = operationOptions.name || 'data';\n                    var childProps = (_b = {}, _b[name] = result, _b);\n                    if (operationOptions.props) {\n                        var newResult = (_c = {},\n                            _c[name] = result,\n                            _c.ownProps = props,\n                            _c);\n                        lastResultProps = operationOptions.props(newResult, lastResultProps);\n                        childProps = lastResultProps;\n                    }\n                    return (React.createElement(WrappedComponent, __assign({}, props, childProps)));\n                }));\n            };\n            GraphQL.displayName = graphQLDisplayName;\n            GraphQL.WrappedComponent = WrappedComponent;\n            return GraphQL;\n        }(GraphQLBase));\n        return hoistNonReactStatics(GraphQL, WrappedComponent, {});\n    };\n}\n\nfunction withMutation(document, operationOptions) {\n    if (operationOptions === void 0) { operationOptions = {}; }\n    var operation = parser(document);\n    var _a = operationOptions.options, options = _a === void 0 ? defaultMapPropsToOptions : _a, _b = operationOptions.alias, alias = _b === void 0 ? 'Apollo' : _b;\n    var mapPropsToOptions = options;\n    if (typeof mapPropsToOptions !== 'function')\n        mapPropsToOptions = function () { return options; };\n    return function (WrappedComponent) {\n        var graphQLDisplayName = alias + \"(\" + getDisplayName(WrappedComponent) + \")\";\n        var GraphQL = (function (_super) {\n            __extends(GraphQL, _super);\n            function GraphQL() {\n                return _super !== null && _super.apply(this, arguments) || this;\n            }\n            GraphQL.prototype.render = function () {\n                var props = this.props;\n                var opts = mapPropsToOptions(props);\n                if (operationOptions.withRef) {\n                    this.withRef = true;\n                    props = Object.assign({}, props, {\n                        ref: this.setWrappedInstance\n                    });\n                }\n                if (!opts.variables && operation.variables.length > 0) {\n                    opts.variables = calculateVariablesFromProps(operation, props);\n                }\n                return (React.createElement(Mutation, __assign({ ignoreResults: true }, opts, { mutation: document }), function (mutate, _a) {\n                    var _b, _c;\n                    var data = _a.data, r = __rest(_a, [\"data\"]);\n                    var result = Object.assign(r, data || {});\n                    var name = operationOptions.name || 'mutate';\n                    var resultName = operationOptions.name\n                        ? name + \"Result\"\n                        : 'result';\n                    var childProps = (_b = {},\n                        _b[name] = mutate,\n                        _b[resultName] = result,\n                        _b);\n                    if (operationOptions.props) {\n                        var newResult = (_c = {},\n                            _c[name] = mutate,\n                            _c[resultName] = result,\n                            _c.ownProps = props,\n                            _c);\n                        childProps = operationOptions.props(newResult);\n                    }\n                    return React.createElement(WrappedComponent, __assign({}, props, childProps));\n                }));\n            };\n            GraphQL.displayName = graphQLDisplayName;\n            GraphQL.WrappedComponent = WrappedComponent;\n            return GraphQL;\n        }(GraphQLBase));\n        return hoistNonReactStatics(GraphQL, WrappedComponent, {});\n    };\n}\n\nfunction withSubscription(document, operationOptions) {\n    if (operationOptions === void 0) { operationOptions = {}; }\n    var operation = parser(document);\n    var _a = operationOptions.options, options = _a === void 0 ? defaultMapPropsToOptions : _a, _b = operationOptions.skip, skip = _b === void 0 ? defaultMapPropsToSkip : _b, _c = operationOptions.alias, alias = _c === void 0 ? 'Apollo' : _c, shouldResubscribe = operationOptions.shouldResubscribe;\n    var mapPropsToOptions = options;\n    if (typeof mapPropsToOptions !== 'function')\n        mapPropsToOptions = function () { return options; };\n    var mapPropsToSkip = skip;\n    if (typeof mapPropsToSkip !== 'function')\n        mapPropsToSkip = function () { return skip; };\n    var lastResultProps;\n    return function (WrappedComponent) {\n        var graphQLDisplayName = alias + \"(\" + getDisplayName(WrappedComponent) + \")\";\n        var GraphQL = (function (_super) {\n            __extends(GraphQL, _super);\n            function GraphQL(props) {\n                var _this = _super.call(this, props) || this;\n                _this.state = { resubscribe: false };\n                return _this;\n            }\n            GraphQL.prototype.componentDidUpate = function (prevProps) {\n                if (shouldResubscribe) {\n                    this.setState({\n                        resubscribe: shouldResubscribe(prevProps, this.props)\n                    });\n                }\n            };\n            GraphQL.prototype.render = function () {\n                var _this = this;\n                var props = this.props;\n                var shouldSkip = mapPropsToSkip(props);\n                var opts = shouldSkip\n                    ? Object.create(null)\n                    : mapPropsToOptions(props);\n                if (!shouldSkip && !opts.variables && operation.variables.length > 0) {\n                    opts.variables = calculateVariablesFromProps(operation, props);\n                }\n                return (React.createElement(Subscription, __assign({}, opts, { displayName: graphQLDisplayName, skip: shouldSkip, subscription: document, shouldResubscribe: this.state.resubscribe }), function (_a) {\n                    var _b, _c;\n                    var data = _a.data, r = __rest(_a, [\"data\"]);\n                    if (operationOptions.withRef) {\n                        _this.withRef = true;\n                        props = Object.assign({}, props, {\n                            ref: _this.setWrappedInstance\n                        });\n                    }\n                    if (shouldSkip) {\n                        return (React.createElement(WrappedComponent, __assign({}, props, {})));\n                    }\n                    var result = Object.assign(r, data || {});\n                    var name = operationOptions.name || 'data';\n                    var childProps = (_b = {}, _b[name] = result, _b);\n                    if (operationOptions.props) {\n                        var newResult = (_c = {},\n                            _c[name] = result,\n                            _c.ownProps = props,\n                            _c);\n                        lastResultProps = operationOptions.props(newResult, lastResultProps);\n                        childProps = lastResultProps;\n                    }\n                    return (React.createElement(WrappedComponent, __assign({}, props, childProps)));\n                }));\n            };\n            GraphQL.displayName = graphQLDisplayName;\n            GraphQL.WrappedComponent = WrappedComponent;\n            return GraphQL;\n        }(GraphQLBase));\n        return hoistNonReactStatics(GraphQL, WrappedComponent, {});\n    };\n}\n\nfunction graphql(document, operationOptions) {\n    if (operationOptions === void 0) { operationOptions = {}; }\n    switch (parser(document).type) {\n        case DocumentType.Mutation:\n            return withMutation(document, operationOptions);\n        case DocumentType.Subscription:\n            return withSubscription(document, operationOptions);\n        case DocumentType.Query:\n        default:\n            return withQuery(document, operationOptions);\n    }\n}\n\nfunction getDisplayName$1(WrappedComponent) {\n    return WrappedComponent.displayName || WrappedComponent.name || 'Component';\n}\nfunction withApollo(WrappedComponent, operationOptions) {\n    if (operationOptions === void 0) { operationOptions = {}; }\n    var withDisplayName = \"withApollo(\" + getDisplayName$1(WrappedComponent) + \")\";\n    var WithApollo = (function (_super) {\n        __extends(WithApollo, _super);\n        function WithApollo(props) {\n            var _this = _super.call(this, props) || this;\n            _this.setWrappedInstance = _this.setWrappedInstance.bind(_this);\n            return _this;\n        }\n        WithApollo.prototype.getWrappedInstance = function () {\n            process.env.NODE_ENV === \"production\" ? invariant(operationOptions.withRef, 1) : invariant(operationOptions.withRef, \"To access the wrapped instance, you need to specify \" +\n                \"{ withRef: true } in the options\");\n            return this.wrappedInstance;\n        };\n        WithApollo.prototype.setWrappedInstance = function (ref) {\n            this.wrappedInstance = ref;\n        };\n        WithApollo.prototype.render = function () {\n            var _this = this;\n            return (React.createElement(ApolloConsumer, null, function (client) {\n                var props = Object.assign({}, _this.props, {\n                    client: client,\n                    ref: operationOptions.withRef\n                        ? _this.setWrappedInstance\n                        : undefined\n                });\n                return React.createElement(WrappedComponent, __assign({}, props));\n            }));\n        };\n        WithApollo.displayName = withDisplayName;\n        WithApollo.WrappedComponent = WrappedComponent;\n        return WithApollo;\n    }(React.Component));\n    return hoistNonReactStatics(WithApollo, WrappedComponent, {});\n}\n\nexport { graphql, withApollo, withMutation, withQuery, withSubscription };\n//# sourceMappingURL=react-hoc.esm.js.map\n","\"use strict\";function _interopDefault(e){return e&&\"object\"==typeof e&&\"default\"in e?e.default:e}Object.defineProperty(exports,\"__esModule\",{value:!0}),require(\"./_commonjsHelpers-32c5d30b.js\");var _extends=require(\"./extends-7fa7e501.js\"),defineProperty=require(\"./defineProperty-cf06dcaa.js\"),React=require(\"react\"),React__default=_interopDefault(React),PropTypes=require(\"prop-types\"),PropTypes__default=_interopDefault(PropTypes),Tooltip_js=require(\"@patternfly/react-core/dist/js/components/Tooltip/Tooltip.js\"),second=1e3,minute=60*second,hour=60*minute,day=24*hour,month=30*day,year=365*day,formatTime=function formatTime(e,t){return\"\".concat(e,\" \").concat(e>1?\"\".concat(t,\"s\"):t,\" ago\")},relativeTimeTable=[{rightBound:1/0,description:function description(e){return formatTime(Math.round(e/year),\"year\")}},{rightBound:year,description:function description(e){return formatTime(Math.round(e/month),\"month\")}},{rightBound:month,description:function description(e){return formatTime(Math.round(e/day),\"day\")}},{rightBound:day,description:function description(e){return formatTime(Math.round(e/hour),\"hour\")}},{rightBound:hour,description:function description(e){return formatTime(Math.round(e/minute),\"minute\")}},{rightBound:minute,description:function description(){return\"Just now\"}}],_exact=function exact(e){return e.toUTCString().split(\",\")[1].slice(0,-7).trim()},addTooltip=function addTooltip(e,t,r){var n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:\"\";return(React__default.createElement(Tooltip_js.Tooltip,_extends._extends({},r,{content:React__default.createElement(\"div\",null,n,e)}),t))},dateStringByType=function dateStringByType(e){return{exact:function exact(e){return _exact(e)+\" UTC\"},onlyDate:function onlyDate(e){return _exact(e).slice(0,-6)},relative:function relative(e){return relativeTimeTable.reduce((function(t,r){return r.rightBound>Date.now()-e?r.description(Date.now()-e):t}),_exact(e))},invalid:function invalid(){return\"Invalid date\"}}[e]},dateByType=function dateByType(e,t,r){return{exact:function exact(t){return dateStringByType(e)(t)},onlyDate:function onlyDate(t){return dateStringByType(e)(t)},relative:function relative(n){return addTooltip(dateStringByType(\"exact\")(n),React__default.createElement(\"span\",null,dateStringByType(e)(n)),t,r)},invalid:function invalid(){return\"Invalid date\"}}[e]};function DateFormat(e){var t=e.date,r=e.type,n=void 0===r?\"relative\":r,o=e.extraTitle,a=e.tooltipProps,i=void 0===a?{}:a,u=t instanceof Date?t:new Date(t),d=null==t||\"Invalid Date\"===u.toString()?\"invalid\":n;return React__default.createElement(React__default.Fragment,null,dateByType(d,i,o)(u))}DateFormat.propTypes={date:PropTypes__default.oneOfType([PropTypes__default.instanceOf(Date),PropTypes__default.string,PropTypes__default.number]),type:PropTypes__default.oneOf([\"exact\",\"onlyDate\",\"relative\"]),extraTitle:PropTypes__default.string,tooltipProps:PropTypes__default.shape(defineProperty._defineProperty({},PropTypes__default.string,PropTypes__default.oneOfType([PropTypes__default.number,PropTypes__default.string])))},exports.DateFormat=DateFormat;\n","!function(e,r){\"object\"==typeof exports&&\"undefined\"!=typeof module?r(exports,require(\"redux\")):\"function\"==typeof define&&define.amd?define([\"exports\",\"redux\"],r):r((e=e||self)[\"@redhat-cloud-services/frontend-components-utilities-ReducerRegistry\"]={},e.redux)}(this,(function(e,r){\"use strict\";var t=function _arrayLikeToArray(e,r){(null==r||r>e.length)&&(r=e.length);for(var t=0,n=new Array(r);t<r;t++)n[t]=e[t];return n};var n=function _arrayWithoutHoles(e){if(Array.isArray(e))return t(e)};var o=function _iterableToArray(e){if(\"undefined\"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)};var i=function _unsupportedIterableToArray(e,r){if(e){if(\"string\"==typeof e)return t(e,r);var n=Object.prototype.toString.call(e).slice(8,-1);return\"Object\"===n&&e.constructor&&(n=e.constructor.name),\"Map\"===n||\"Set\"===n?Array.from(n):\"Arguments\"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?t(e,r):void 0}};var a=function _nonIterableSpread(){throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\")};var c=function _toConsumableArray(e){return n(e)||o(e)||i(e)||a()};var u=function _classCallCheck(e,r){if(!(e instanceof r))throw new TypeError(\"Cannot call a class as a function\")};function _defineProperties(e,r){for(var t=0;t<r.length;t++){var n=r[t];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var s=function _createClass(e,r,t){return r&&_defineProperties(e.prototype,r),t&&_defineProperties(e,t),e};var l=function _defineProperty(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e};function ownKeys(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function _objectSpread(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?ownKeys(Object(t),!0).forEach((function(r){l(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):ownKeys(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}var d=function(){function ReducerRegistry(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:r.compose;u(this,ReducerRegistry);var o=window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__||n;this.store=r.createStore((function(){var r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:e;return r}),e,o(r.applyMiddleware.apply(void 0,c(t)))),this.reducers={}}return s(ReducerRegistry,[{key:\"getStore\",value:function getStore(){return this.store}},{key:\"register\",value:function register(e){this.reducers=_objectSpread({},this.reducers,{},e),this.store.replaceReducer(r.combineReducers(_objectSpread({},this.reducers)))}}]),ReducerRegistry}(),f=new d;e.ReducerRegistry=d,e.applyReducerHash=function applyReducerHash(e){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:r,n=arguments.length>1?arguments[1]:void 0;return Object.prototype.hasOwnProperty.call(e,n.type)?e[n.type](t,n):t}},e.default=d,e.dispatchActionsToStore=function dispatchActionsToStore(e,r){return Object.keys(e).reduce((function(t,n){return _objectSpread({},t,l({},n,(function(){return r&&r.dispatch(e[n].apply(e,arguments))})))}),{})},e.reduxRegistry=f,Object.defineProperty(e,\"__esModule\",{value:!0})}));\n","\"use strict\";function _interopDefault(e){return e&&\"object\"==typeof e&&\"default\"in e?e.default:e}Object.defineProperty(exports,\"__esModule\",{value:!0}),require(\"./_commonjsHelpers-32c5d30b.js\");var _extends=require(\"./extends-7fa7e501.js\"),defineProperty=require(\"./defineProperty-cf06dcaa.js\"),objectWithoutProperties=require(\"./objectWithoutProperties-9e2b4e81.js\"),React=require(\"react\"),React__default=_interopDefault(React),PropTypes=require(\"prop-types\"),PropTypes__default=_interopDefault(PropTypes),classNames=_interopDefault(require(\"classnames\")),SkeletonSize={xs:\"xs\",sm:\"sm\",md:\"md\",lg:\"lg\"},Skeleton=function Skeleton(e){var t=e.size,s=e.isDark,r=e.className,o=objectWithoutProperties._objectWithoutProperties(e,[\"size\",\"isDark\",\"className\"]),a=classNames(\"ins-c-skeleton\",\"ins-c-skeleton__\".concat(t),defineProperty._defineProperty({},\"ins-m-dark\",s),r);return React__default.createElement(\"div\",_extends._extends({className:a},o),\" \")};Skeleton.propTypes={className:PropTypes__default.string,size:PropTypes__default.oneOf(Object.values(SkeletonSize)),isDark:PropTypes__default.bool},Skeleton.defaultProps={size:SkeletonSize.md,isDark:!1},exports.Skeleton=Skeleton,exports.SkeletonSize=SkeletonSize;\n","\"use strict\";function _interopDefault(e){return e&&\"object\"==typeof e&&\"default\"in e?e.default:e}Object.defineProperty(exports,\"__esModule\",{value:!0}),require(\"./_commonjsHelpers-32c5d30b.js\");var _extends=require(\"./extends-7fa7e501.js\"),defineProperty=require(\"./defineProperty-cf06dcaa.js\"),objectWithoutProperties=require(\"./objectWithoutProperties-9e2b4e81.js\"),React=require(\"react\"),React__default=_interopDefault(React),PropTypes=require(\"prop-types\"),PropTypes__default=_interopDefault(PropTypes),classNames=_interopDefault(require(\"classnames\")),Spinner=function Spinner(e){var r=e.centered,t=e.className,s=objectWithoutProperties._objectWithoutProperties(e,[\"centered\",\"className\"]),a=classNames(\"ins-c-spinner\",defineProperty._defineProperty({},\"ins-m-center\",r),t);return React__default.createElement(\"div\",_extends._extends({role:\"status\",className:a},s),React__default.createElement(\"span\",{className:\"pf-u-screen-reader\"},\"Loading...\"))};Spinner.propTypes={centered:PropTypes__default.bool,className:PropTypes__default.string},exports.Spinner=Spinner;\n","export const EXPORT = '@@COMPLIANCE/EXPORT';\nexport const SELECT_ENTITY = 'SELECT_ENTITY';\n\nexport const exportFromState = (format) => ({\n    type: EXPORT, payload: { format }\n});\n\nexport const selectAll = () => ({\n    type: SELECT_ENTITY,\n    payload: { id: 0, selected: true }\n});\n\nexport const clearSelection = () => ({\n    type: SELECT_ENTITY,\n    payload: { id: 0, selected: false }\n});\n","export const profilesRulesFailed = (profiles) => (\n    profiles.flatMap(profile => profile.rules && profile.rules.filter(rule => !rule.compliant))\n);\n\nexport const profilesRulesPassed = (profiles) => (\n    profiles.flatMap(profile => profile.rules && profile.rules.filter(rule => rule.compliant))\n);\n\nexport const systemRulesPassed = (system) => (\n    system.profiles ? profilesRulesPassed(system.profiles) : []\n);\n\nexport const systemRulesFailed = (system) => (\n    system.profiles ? profilesRulesFailed(system.profiles) : []\n);\n\nexport const systemsWithRuleObjectsFailed = (systems) => (\n    systems.map(system => (\n        { ruleObjectsFailed: systemRulesFailed(system), ...system }\n    ))\n);\n","const CSV_FILE_PREFIX = 'compliance-export';\nconst CSV_DELIMITER = ',';\n\nconst linkAndDownload = (data, filename) => {\n    if (!data) {\n        return;\n    }\n\n    let link = document.createElement('a');\n    link.setAttribute('href', data);\n    link.setAttribute('download', filename);\n    link.dispatchEvent(new MouseEvent(`click`, { bubbles: true, cancelable: true, view: window }));\n};\n\nconst getNestedObject = (nestedObj, path) => {\n    return path.split('.').reduce(\n        (obj, key) => (obj && obj[key] !== 'undefined') ? obj[key] : undefined, nestedObj\n    );\n};\n\nconst textCsvCell = (row, key) => {\n    let cell = getNestedObject(row, key);\n\n    if (cell.exportValue) {\n        cell = cell.exportValue;\n    }\n\n    if (typeof(cell) === 'object') {\n        cell = getNestedObject(row, key + '_text');\n    }\n\n    if (typeof(cell) === 'string' && cell.includes(',')) {\n        cell = '\"' + cell + '\"';\n    }\n\n    return cell;\n};\n\nexport const csvFromState = (state) => {\n    const { rows, columns, selectedEntities } = state;\n\n    if (rows) {\n        let csvRows = [columns.map((column) => column.title).join(CSV_DELIMITER)];\n        csvRows = csvRows.concat((selectedEntities || rows).map((row) => (\n            state.columns.map((column) => textCsvCell(row, column.key)).join(CSV_DELIMITER)\n        )));\n\n        return encodeURI('data:text/csv;charset=utf-8,' + csvRows.join('\\n'));\n    }\n};\n\nexport const jsonFromState = (state) => {\n    const { rows, columns, selectedEntities } = state;\n    let result;\n\n    if (rows) {\n        result = (selectedEntities || rows).map((row) => {\n            let object = {};\n            columns.forEach((column) => {\n                const keys = column.key.split('.');\n                const key = keys[keys.length - 1];\n                object[key] = textCsvCell(row, column.key);\n            });\n\n            return object;\n        });\n\n        return encodeURI('data:application/json;charset=utf-8,' + JSON.stringify(result));\n    }\n};\n\nconst filename = (format) => (\n    CSV_FILE_PREFIX + '-' + (new Date()).toISOString() + '.' + format\n);\n\nexport const exportFromState = (state, format) => {\n    let content;\n\n    if (format === 'csv') {\n        content = csvFromState(state);\n    } else if (format === 'json') {\n        content = jsonFromState(state);\n    }\n\n    linkAndDownload(content, filename(format));\n};\n\n","import React from 'react';\nimport { applyReducerHash } from '@redhat-cloud-services/frontend-components-utilities/files/ReducerRegistry';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components';\nimport { Link } from 'react-router-dom';\nimport { EXPORT, SELECT_ENTITY } from 'Store/ActionTypes';\nimport { exportFromState } from 'Utilities/Export';\nimport {\n    ComplianceScore as complianceScore,\n    complianceScoreString\n} from 'PresentationalComponents';\nimport {\n    Tooltip,\n    Text,\n    TextContent,\n    TextVariants\n} from '@patternfly/react-core';\nimport {\n    profilesRulesPassed,\n    profilesRulesFailed\n} from 'Utilities/ruleHelpers';\nimport Truncate from 'react-truncate';\n\nconst NEVER = 'Never';\n\nexport const lastScanned = ({ testResultProfiles: profiles = [] }) => {\n    const dates = profiles.map((profile) => new Date(profile.lastScanned));\n    const last = new Date(Math.max.apply(null, dates.filter((date) => isFinite(date))));\n    const result = (last instanceof Date && isFinite(last)) ? last : NEVER;\n\n    return result;\n};\n\nexport const compliant = ({ testResultProfiles: profiles = [] }) => (\n    profiles.every(profile => profile.lastScanned === NEVER || profile.compliant === true)\n);\n\nexport const score = ({ testResultProfiles: profiles = [] }) => {\n    const scoreTotal = profiles.reduce((acc, profile) => acc + profile.score, 0);\n    const numScored = profiles.reduce((acc, profile) => {\n        if (profilesRulesPassed([profile]).length + profilesRulesFailed([profile]).length > 0) { return acc + 1; }\n\n        return acc;\n    }, 0);\n    if (numScored) { return scoreTotal / numScored; }\n\n    return 0;\n};\n\nexport const supported = ({ testResultProfiles: profiles = [] }) => (\n    profiles.reduce((acc, profile) => acc && profile.supported, true)\n);\n\nexport const policyNames = (system) => {\n    if (system === {}) { return ''; }\n\n    let policyNames = system.policies.map(({ name }) => name);\n    let externalPolicyNames = system.testResultProfiles.filter(p => !p.policy).map(({ name }) => (\n        `(External) ${name}`\n    ));\n    return [...policyNames, ...externalPolicyNames].join(', ');\n};\n\nexport const policiesCell = (system) => {\n    let title;\n    if (system.policyNames) {\n        title = <Tooltip content={system.policyNames}>\n            <Truncate lines={2} width={540}>{system.policyNames}</Truncate>\n        </Tooltip>;\n    } else {\n        title = <Text className='grey-icon'>No policies</Text>;\n    }\n\n    return {\n        title,\n        exportValue: system.policyNames\n    };\n};\n\nexport const detailsLink = (system) => {\n    if (system.testResultProfiles && system.testResultProfiles.length > 0) {\n        return {\n            title: (\n                <Link to={{ pathname: `/systems/${system.id}` }}>\n                    View report\n                </Link>\n            )\n        };\n    }\n};\n\nexport const hasOsInfo = (matchingSystem) => (\n    typeof(matchingSystem.osMajorVersion) !== 'undefined' && typeof(matchingSystem.osMinorVersion) !== 'undefined' &&\n        matchingSystem.osMajorVersion !== null && matchingSystem.osMinorVersion !== null &&\n        !(matchingSystem.osMajorVersion === 0 && matchingSystem.osMinorVersion === 0)\n);\n\nconst displayNameCell = (system, matchingSystem) =>  ({\n    title: <TextContent>\n        { matchingSystem.name ? <Link to={{ pathname: `/systems/${matchingSystem.id}` }}>\n            { matchingSystem.name }\n        </Link> : system.display_name }\n        { hasOsInfo(matchingSystem) &&\n            <Text component={TextVariants.small}>RHEL {matchingSystem.osMajorVersion}.{matchingSystem.osMinorVersion}</Text> }\n    </TextContent>,\n    exportValue: system.display_name || matchingSystem.name\n});\n\nconst isSelected = (id, selectedEntities) => (\n    !!(selectedEntities || []).find((entity) => (entity.id === id))\n);\n\nconst profilesSsgVersions = ({ testResultProfiles: profiles = [] }) => (\n    profiles.map((p) => (p.ssgVersion)).filter((version) => (!!version)).join(', ')\n);\n\nexport const systemsToInventoryEntities = (systems, entities, showAllSystems, selectedEntities) => (\n    entities.map(entity => {\n        // This should compare the inventory ID instead with\n        // the ID in compliance\n        if (entity.facts === undefined) { entity.facts = {}; }\n\n        let matchingSystem = systems.map((s) => s.node).find((system) => {\n            return entity.id === system.id;\n        });\n        if (matchingSystem === undefined) {\n            if (!showAllSystems) { return; }\n\n            matchingSystem = { testResultProfiles: [], policies: [] };\n        }\n\n        matchingSystem.policyNames = policyNames(matchingSystem);\n        matchingSystem.rulesPassed = profilesRulesPassed(matchingSystem.testResultProfiles).length;\n        matchingSystem.rulesFailed = profilesRulesFailed(matchingSystem.testResultProfiles).length;\n        matchingSystem.lastScanned = lastScanned(matchingSystem);\n        matchingSystem.compliant = compliant(matchingSystem);\n        matchingSystem.score = score(matchingSystem);\n        matchingSystem.supported = supported(matchingSystem);\n\n        return {\n            /* eslint-disable camelcase */\n            id: entity.id,\n            selected: isSelected(entity.id, selectedEntities),\n            account: entity.account,\n            bios_uuid: entity.bios_uuid,\n            created: entity.created,\n            display_name: entity.display_name || matchingSystem.name,\n            fqdn: entity.fqdn,\n            insights_id: entity.insights_id,\n            ip_addresses: entity.ip_addresses,\n            mac_addresses: entity.mac_addresses,\n            rhel_machine_id: entity.rhel_machine_id,\n            satellite_id: entity.satellite_id,\n            subscription_manager_id: entity.subscription_manager_id,\n            tags: entity.tags,\n            updated: entity.updated,\n            facts: {\n                inventory: {\n                    hostname: (entity.facts.inventory !== undefined) ?\n                        entity.facts.inventory.hostname :\n                        entity.facts.hostname,\n                    machine_id: (entity.facts.inventory !== undefined) ?\n                        entity.facts.inventory.machine_id :\n                        entity.facts.machine_id,\n                    release: (entity.facts.inventory !== undefined) ?\n                        entity.facts.inventory.release :\n                        entity.facts.release\n                },\n                compliance: {\n                    display_name: displayNameCell(entity, matchingSystem),\n                    policies: policiesCell(matchingSystem),\n                    details_link: detailsLink(matchingSystem),\n                    rules_passed: matchingSystem.rulesPassed,\n                    rules_failed: { title: <Link to={{\n                        pathname: `/systems/${matchingSystem.id}`,\n                        query: {\n                            hidePassed: true\n                        }\n                    }}>{matchingSystem.rulesFailed}</Link> },\n                    rules_failed_text: matchingSystem.rulesFailed,\n                    compliance_score: complianceScore(matchingSystem),\n                    compliance_score_text: complianceScoreString(matchingSystem),\n                    last_scanned: (matchingSystem.lastScanned instanceof Date) ?\n                        { title: <DateFormat date={Date.parse(matchingSystem.lastScanned)} type='relative' /> } :\n                        matchingSystem.lastScanned,\n                    last_scanned_text: matchingSystem.lastScanned,\n                    ssg_version: profilesSsgVersions(matchingSystem),\n                    supported: matchingSystem.supported\n                }\n            }\n            /* eslint-enable camelcase */\n        };\n    }).filter((value) => (!!value))\n);\n\nconst selectRowsByIds = (state, ids) => {\n    const rowsToSelect = state.rows.filter((row) => (\n        ids.includes(row.id) && !(state.selectedEntities || []).map((e) => (e.id)).includes(row.id)\n    ));\n\n    return {\n        ...state,\n        selectedEntities: (state.selectedEntities || []).concat(rowsToSelect)\n    };\n};\n\nconst deselectRowsByIds = (state, ids) => ({\n    ...state,\n    selectedEntities: (state.selectedEntities || []).filter((row) => !ids.includes(row.id))\n});\n\nconst selectAllRows = (state) => (\n    selectRowsByIds(state, state.rows.map((row) => (row.id)))\n);\n\nconst deselectAllRows = (state) => (\n    deselectRowsByIds(state, state.rows.map((row) => (row.id)))\n);\n\nconst selectRow = (state, id) => (\n    selectRowsByIds(state, [id])\n);\n\nconst deselectRow = (state, id) => (\n    deselectRowsByIds(state, [id])\n);\n\nexport const entitiesReducer = (INVENTORY_ACTION, columns, showAllSystems) => applyReducerHash(\n    {\n        ['UPDATE_SYSTEMS']: (state, { systems, systemsCount }) => ({\n            ...state,\n            systems,\n            systemsCount\n        }),\n        ['UPDATE_ROWS']: (state) => ({\n            ...state,\n            loaded: true,\n            rows: systemsToInventoryEntities(\n                state.systems || [],\n                state.rows || [],\n                showAllSystems,\n                state.selectedEntities\n            )\n        }),\n        [INVENTORY_ACTION.LOAD_ENTITIES_FULFILLED]: (state) => ({\n            ...state,\n            rows: systemsToInventoryEntities(\n                state.systems || [],\n                state.rows,\n                showAllSystems,\n                state.selectedEntities\n            ),\n            total: !showAllSystems ? state.systemsCount : state.total,\n            columns: state.total > 0 ? columns : [{ title: '' }]\n        }),\n        [EXPORT]: (state, { payload: { format } }) => {\n            exportFromState(state, format);\n            return state;\n        },\n        [SELECT_ENTITY]: (state, { payload: { id, selected, clearAll } }) => {\n            let newState;\n\n            if (id === 0) {\n                newState = selected ? selectAllRows(state) : deselectAllRows(state);\n            } else {\n                newState = selected ? selectRow(state, id) : deselectRow(state, id);\n            }\n\n            if (newState.selectedEntities.length === 0 || clearAll) {\n                newState.selectedEntities = undefined;\n            }\n\n            return newState;\n        },\n        ['SELECT_ENTITIES']: (state, { payload: { ids } }) => ({\n            selectedEntities: ids\n        })\n    }\n);\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { UnsupportedSSGVersion } from 'PresentationalComponents';\n\nconst SSGVersion = ({ profile }) => (\n    profile.supported && profile.ssg_version ||\n    <UnsupportedSSGVersion>\n        { profile.ssg_version }\n    </UnsupportedSSGVersion>\n);\n\nSSGVersion.propTypes = {\n    profile: propTypes.object\n};\n\nexport default {\n    SSGVersion\n};\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport * as reactRouterDom from 'react-router-dom';\nimport * as reactCore from '@patternfly/react-core';\nimport * as reactIcons from '@patternfly/react-icons';\nimport * as pfReactTable from '@patternfly/react-table';\nimport * as ReactRedux from 'react-redux';\nimport { withApollo } from '@apollo/react-hoc';\nimport { connect } from 'react-redux';\nimport gql from 'graphql-tag';\nimport { pickBy } from 'lodash';\nimport {\n    SkeletonTable\n} from '@redhat-cloud-services/frontend-components';\nimport {\n    ComplianceRemediationButton\n} from '@redhat-cloud-services/frontend-components-inventory-compliance';\nimport registry from '@redhat-cloud-services/frontend-components-utilities/files/Registry';\nimport {\n    NoSystemsTableBody\n} from 'PresentationalComponents';\n\nimport { exportFromState, selectAll, clearSelection, SELECT_ENTITY } from 'Store/ActionTypes';\nimport { systemsWithRuleObjectsFailed } from 'Utilities/ruleHelpers';\nimport { FilterConfigBuilder } from '@redhat-cloud-services/frontend-components-inventory-compliance';\nimport { entitiesReducer } from 'Store/Reducers/SystemStore';\nimport {\n    DEFAULT_SYSTEMS_FILTER_CONFIGURATION, COMPLIANT_SYSTEMS_FILTER_CONFIGURATION,\n    systemsPolicyFilterConfiguration, systemsOsFilterConfiguration\n} from '@/constants';\nimport {\n    ErrorPage,\n    StateView,\n    StateViewPart\n} from 'PresentationalComponents';\n\nexport const GET_SYSTEMS = gql`\nquery getSystems($filter: String!, $policyId: ID, $perPage: Int, $page: Int) {\n    systems(search: $filter, limit: $perPage, offset: $page) {\n        totalCount\n        edges {\n            node {\n                id\n                name\n                osMajorVersion\n                osMinorVersion\n                testResultProfiles(policyId: $policyId) {\n                    id\n                    name\n                    refId\n                    lastScanned\n                    compliant\n                    external\n                    score\n                    supported\n                    ssgVersion\n                    rules {\n                        refId\n                        title\n                        compliant\n                        remediationAvailable\n                    }\n                }\n                policies(policyId: $policyId) {\n                    id\n                    name\n                }\n            }\n        }\n    }\n}\n`;\n\nexport const GET_SYSTEMS_WITHOUT_FAILED_RULES = gql`\nquery getSystems($filter: String!, $policyId: ID, $perPage: Int, $page: Int) {\n    systems(search: $filter, limit: $perPage, offset: $page) {\n        totalCount\n        edges {\n            node {\n                id\n                name\n                osMajorVersion\n                osMinorVersion\n                testResultProfiles(policyId: $policyId) {\n                    id\n                    name\n                    lastScanned\n                    external\n                    compliant\n                    score\n                    supported\n                    ssgVersion\n                    policy {\n                        id\n                    }\n                }\n                policies(policyId: $policyId) {\n                    id\n                    name\n                }\n            }\n        }\n    }\n}\n`;\n\nconst initFilterState = (filterConfig) => (\n    pickBy(filterConfig.initialDefaultState(), (value) => (!!value))\n);\n\nconst initialState = {\n    page: 1\n};\n\nconst policyFilter = (policies, osFilter) => ([\n    ...systemsPolicyFilterConfiguration(policies),\n    ...(osFilter ? systemsOsFilterConfiguration(policies) : [])\n]);\n\n@registry()\nclass SystemsTable extends React.Component {\n    inventory = React.createRef();\n    filterConfig = new FilterConfigBuilder([\n        ...DEFAULT_SYSTEMS_FILTER_CONFIGURATION,\n        ...(this.props.compliantFilter ? COMPLIANT_SYSTEMS_FILTER_CONFIGURATION : []),\n        ...(this.props.policies && this.props.policies.length > 0 ?\n            policyFilter(this.props.policies, this.props.showOsFilter) : [])\n    ]);\n    chipBuilder = this.filterConfig.getChipBuilder();\n    filterBuilder = this.filterConfig.getFilterBuilder();\n\n    state = {\n        ...initialState,\n        InventoryCmp: null,\n        policyId: this.props.policyId,\n        perPage: 50,\n        totalCount: 0,\n        activeFilters: initFilterState(this.filterConfig)\n    }\n\n    componentDidMount = () => {\n        const { clearAll, selectedEntities } = this.props;\n        if (selectedEntities && selectedEntities.length > 0) {\n            clearAll();\n        }\n\n        (this.props.preselectedSystems ?\n            Promise.resolve(this.props.selectEntities(this.props.preselectedSystems)) : Promise.resolve())\n        .then(() => {\n            this.updateSystems().then(() => this.fetchInventory());\n        });\n    }\n\n    componentDidUpdate = (prevProps) => {\n        if (prevProps.complianceThreshold !== this.props.complianceThreshold) {\n            this.updateSystems();\n        }\n    }\n\n    onRefresh = ({ page, per_page: perPage, ...options }) => {\n        const { showAllSystems } = this.props;\n        if (showAllSystems && this.inventory && this.inventory.current) {\n            this.setState({ page, perPage }, () => { this.inventory.current.onRefreshData({\n                page, perPage, ...options, per_page: perPage // eslint-disable-line camelcase\n            }); }\n            );\n        } else {\n            this.setState({ page, perPage }, () => this.updateSystems().then(() => {\n                if (this.inventory && this.inventory.current) {\n                    this.inventory.current.onRefreshData({\n                        page, perPage, ...options, per_page: perPage // eslint-disable-line camelcase\n                    });\n                }\n            }));\n        }\n    }\n\n    fetchSystems = () => {\n        const { client, showOnlySystemsWithTestResults, remediationsEnabled } = this.props;\n        const { policyId, perPage, page, activeFilters } = this.state;\n        let filter = this.filterBuilder.buildFilterString(activeFilters);\n\n        if (showOnlySystemsWithTestResults) {\n            filter = `has_test_results = true ${filter.length > 0 ? `and ${filter}` : ''}`;\n        }\n\n        let variables = { filter, perPage, page };\n        if (policyId) {\n            filter = `policy_id = ${policyId} and ${filter}`;\n            variables = { ...variables, filter, policyId };\n        }\n\n        return client.query({\n            query: remediationsEnabled ? GET_SYSTEMS : GET_SYSTEMS_WITHOUT_FAILED_RULES,\n            fetchResults: true,\n            fetchPolicy: 'no-cache',\n            variables\n        });\n    }\n\n    updateSystems = () => {\n        const prevSystems = this.props.systems.map((s) => s.node.id).sort();\n        return this.fetchSystems().then((items) => (\n            this.props.updateSystems({\n                systems: items.data.systems.edges,\n                systemsCount: items.data.systems.totalCount\n            })\n        )).then(() => {\n            const newSystems = this.props.systems.map((s) => s.node.id).sort();\n            if (JSON.stringify(newSystems) === JSON.stringify(prevSystems)) {\n                this.props.updateRows();\n            }\n        }).catch((error) => {\n            this.setState(prevState => ({ ...prevState, error }));\n        });\n    }\n\n    onExportSelect = (_, format) => (\n        this.props.exportFromState(format)\n    )\n\n    onFilterUpdate = (filter, selectedValues) => {\n        this.props.updateSystems({\n            systems: [],\n            systemsCount: 0\n        });\n        this.setState({\n            ...initialState,\n            activeFilters: {\n                ...this.state.activeFilters,\n                [filter]: selectedValues\n            }\n        }, this.updateSystems);\n    }\n\n    deleteFilter = (chips) => {\n        const activeFilters =  this.filterConfig.removeFilterWithChip(\n            chips, this.state.activeFilters\n        );\n        this.setState({\n            ...initialState,\n            activeFilters\n        }, this.updateSystems);\n    }\n\n    clearAllFilter = () => {\n        this.setState({\n            ...initialState,\n            activeFilters: initFilterState(this.filterConfig)\n        }, this.updateSystems);\n    }\n\n    onFilterDelete = (_event, chips, clearAll = false) => {\n        clearAll ? this.clearAllFilter() : this.deleteFilter(chips[0]);\n    }\n\n    onBulkSelect = () => {\n        const { selectedEntities, selectAll, clearSelection, allSelectedOnPage } = this.props;\n\n        if (selectedEntities.length === 0 ||\n            (selectedEntities.length > 0 && !allSelectedOnPage)) {\n            selectAll();\n        } else {\n            clearSelection();\n        }\n    }\n\n    isExportDisabled = () => {\n        const { total, selectedEntities } = this.props;\n        return (total || 0) === 0 && selectedEntities.length === 0;\n    }\n\n    async fetchInventory() {\n        const { columns, showAllSystems, clearInventoryFilter } = this.props;\n        const {\n            inventoryConnector,\n            INVENTORY_ACTION_TYPES,\n            mergeWithEntities\n        } = await insights.loadInventory({\n            ReactRedux,\n            react: React,\n            reactRouterDom,\n            pfReact: reactCore,\n            reactIcons,\n            pfReactTable\n        });\n\n        clearInventoryFilter();\n\n        this.getRegistry().register({\n            ...mergeWithEntities(\n                entitiesReducer(\n                    INVENTORY_ACTION_TYPES, columns, showAllSystems\n                ))\n        });\n\n        this.setState(() => ({\n            InventoryCmp: inventoryConnector(this.props.store).InventoryTable\n        }));\n    }\n\n    render() {\n        const {\n            remediationsEnabled, compact, enableExport, showAllSystems, showActions, showComplianceSystemsInfo,\n            selectedEntities, selectedEntitiesIds, systems, total, policyId, systemProps\n        } = this.props;\n        const {\n            page, perPage, InventoryCmp, activeFilters, error\n        } = this.state;\n        let noError;\n        const filterConfig = this.filterConfig.buildConfiguration(\n            this.onFilterUpdate,\n            activeFilters,\n            { hideLabel: true }\n        );\n        const filterChips = this.chipBuilder.chipsFor(this.state.activeFilters);\n        const exportConfig = enableExport ? {\n            isDisabled: this.isExportDisabled(),\n            onSelect: this.onExportSelect\n        } : {};\n        const inventoryTableProps = {\n            ...systemProps,\n            onRefresh: this.onRefresh,\n            ref: this.inventory,\n            page,\n            perPage,\n            exportConfig,\n            tableProps: {\n                canSelectAll: false\n            },\n            bulkSelect: {\n                checked: selectedEntities.length > 0 ?\n                    (this.props.allSelectedOnPage ? true : null)\n                    : false,\n                onSelect: this.onBulkSelect,\n                count: selectedEntities.length,\n                label: selectedEntities.length > 0 ? `${ selectedEntities.length } Selected` : undefined\n            }\n        };\n\n        if (showActions) {\n            inventoryTableProps.actions = [{\n                title: 'View in inventory',\n                onClick: (_event, _index, { id }) => {\n                    const beta = window.location.pathname.split('/')[1] === 'beta';\n                    window.location.href = `${window.location.origin}${beta ? '/beta' : ''}/insights/inventory/${id}`;\n                }\n            }];\n        }\n\n        if (!showAllSystems) {\n            inventoryTableProps.total = total;\n            inventoryTableProps.items = systems.map((edge) => edge.node.id);\n            inventoryTableProps.filterConfig = filterConfig;\n            inventoryTableProps.activeFiltersConfig = {\n                filters: filterChips,\n                onDelete: this.onFilterDelete\n            };\n        }\n\n        if (compact) {\n            inventoryTableProps.variant = pfReactTable.TableVariant.compact;\n        }\n\n        if (error === undefined) {\n            noError = true;\n        }\n\n        if (policyId && total === 0 && Object.keys(activeFilters).length === 0) {\n            inventoryTableProps.tableProps.rows = [{ cells: [{ title: <NoSystemsTableBody /> }] }];\n            inventoryTableProps.tableProps.columns = [];\n            inventoryTableProps.hasItems = false;\n            inventoryTableProps.hasCheckbox = false;\n        }\n\n        if (!showAllSystems && remediationsEnabled) {\n            inventoryTableProps.dedicatedAction = <ComplianceRemediationButton\n                allSystems={ systemsWithRuleObjectsFailed(systems.filter((edge) => (\n                    selectedEntitiesIds.includes(edge.node.id)\n                )).map(edge => edge.node)) }\n                selectedRules={ [] } />;\n        }\n\n        return <StateView stateValues={{ error, noError }}>\n            <StateViewPart stateKey='error'>\n                <ErrorPage error={error}/>\n            </StateViewPart>\n            <StateViewPart stateKey='noError'>\n\n                { showComplianceSystemsInfo && <reactCore.Alert\n                    isInline\n                    variant=\"info\"\n                    title={ 'The list of systems in this view is different than those that appear in the Inventory. ' +\n                            'Only systems previously or currently associated with compliance policies are displayed.' } /> }\n\n                { InventoryCmp ?\n                    <InventoryCmp { ...inventoryTableProps } /> :\n                    <SkeletonTable colSize={2} rowSize={15} /> }\n\n            </StateViewPart>\n        </StateView>;\n    }\n}\n\nSystemsTable.propTypes = {\n    allSelectedOnPage: propTypes.bool,\n    clearAll: propTypes.func,\n    clearInventoryFilter: propTypes.func,\n    clearSelection: propTypes.func,\n    client: propTypes.object,\n    columns: propTypes.array,\n    compact: propTypes.bool,\n    complianceThreshold: propTypes.number,\n    compliantFilter: propTypes.bool,\n    enableExport: propTypes.bool,\n    error: propTypes.object,\n    exportFromState: propTypes.func,\n    policies: propTypes.array,\n    policyId: propTypes.string,\n    preselectedSystems: propTypes.array,\n    remediationsEnabled: propTypes.bool,\n    selectAll: propTypes.func,\n    selectEntities: propTypes.func,\n    selectedEntities: propTypes.array,\n    selectedEntitiesIds: propTypes.array,\n    showActions: propTypes.bool,\n    showAllSystems: propTypes.bool,\n    showOnlySystemsWithTestResults: propTypes.bool,\n    showOsFilter: propTypes.bool,\n    store: propTypes.object,\n    systems: propTypes.array,\n    total: propTypes.number,\n    updateRows: propTypes.func,\n    updateSystems: propTypes.func,\n    systemProps: propTypes.shape({\n        isFullView: propTypes.bool\n    }),\n    showComplianceSystemsInfo: propTypes.bool\n};\n\nSystemsTable.defaultProps = {\n    remediationsEnabled: true,\n    compact: false,\n    enableExport: true,\n    showAllSystems: false,\n    complianceThreshold: 0,\n    showOnlySystemsWithTestResults: false,\n    showActions: true,\n    compliantFilter: false,\n    selectedEntities: [],\n    selectedEntitiesIds: [],\n    systems: [],\n    clearAll: () => ({}),\n    exportFromState: () => ({}),\n    systemProps: {},\n    showComplianceSystemsInfo: false\n};\n\nconst mapStateToProps = state => {\n    if (state.entities === undefined || state.entities.rows === undefined) {\n        return { selectedEntities: [], systems: [] };\n    }\n\n    const allSelectedOnPage = state.entities.rows.filter((row) => (\n        !(state.entities.selectedEntities || []).map((e) => e.id).includes(row.id)\n    )).length === 0;\n\n    return {\n        allSelectedOnPage,\n        selectedEntities: state.entities.selectedEntities,\n        selectedEntitiesIds: (state.entities.selectedEntities || []).map((e) => (e.id)),\n        systems: state.entities.systems,\n        total: state.entities.total\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        clearInventoryFilter: () => dispatch({ type: 'CLEAR_FILTERS' }),\n        exportFromState: (format) => dispatch(exportFromState(format)),\n        updateSystems: (args) => {\n            dispatch({\n                type: 'UPDATE_SYSTEMS',\n                ...args\n            });\n        },\n        updateRows: () => dispatch({ type: 'UPDATE_ROWS' }),\n        selectAll: () => dispatch(selectAll()),\n        clearSelection: () => dispatch(clearSelection()),\n        clearAll: () => dispatch({\n            type: SELECT_ENTITY,\n            payload: { clearAll: true }\n        }),\n        selectEntities: (ids) => dispatch({\n            type: 'SELECT_ENTITIES',\n            payload: { ids }\n        })\n    };\n};\n\nconst ConnectedSystemsTable = (props) => {\n    return <SystemsTable {...props} store={ReactRedux.useStore()} />;\n};\n\nexport { default as Cells } from './Cells';\nexport { SystemsTable };\nexport const SystemsTableWithApollo = withApollo(ConnectedSystemsTable);\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(SystemsTableWithApollo);\n"],"sourceRoot":""}