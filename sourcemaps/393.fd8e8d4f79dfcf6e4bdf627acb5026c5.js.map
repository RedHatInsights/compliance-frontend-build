{"version":3,"file":"js/393.1642156757414.132581ae22c358992898.js","mappings":"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","sources":["webpack:///./src/PresentationalComponents/ComplianceEmptyState/ComplianceEmptyState.js","webpack:///./src/PresentationalComponents/ComplianceRemediationButton/ComplianceRemediationButton.js","webpack:///./src/PresentationalComponents/ReduxFormWrappers/ReduxFormWrappers.js","webpack:///./src/PresentationalComponents/RemediationCell/RemediationCell.js","webpack:///./src/PresentationalComponents/RulesTable/Cells.js","webpack:///./src/PresentationalComponents/RulesTable/Columns.js","webpack:///./src/PresentationalComponents/RulesTable/RuleDetailsRow.js","webpack:///./src/PresentationalComponents/RulesTable/EmptyRows.js","webpack:///./src/PresentationalComponents/RulesTable/Constants.js","webpack:///./src/PresentationalComponents/RulesTable/Filters.js","webpack:///./src/PresentationalComponents/RulesTable/RulesTable.js","webpack:///./src/PresentationalComponents/TabbedRules/OsVersionText.js","webpack:///./src/PresentationalComponents/TabbedRules/ProfileTabContent.js","webpack:///./src/PresentationalComponents/TabbedRules/ruleSelection.js","webpack:///./src/PresentationalComponents/TabbedRules/TabbedRules.js","webpack:///./src/PresentationalComponents/PoliciesTable/Columns.js","webpack:///./src/PresentationalComponents/LoadingPoliciesTable/LoadingPoliciesTable.js","webpack:///./src/PresentationalComponents/ErrorPage/ErrorPage.js","webpack:///./src/PresentationalComponents/ErrorCard/ErrorCard.js","webpack:///./src/PresentationalComponents/GreySmallText/GreySmallText.js","webpack:///./src/PresentationalComponents/CheckboxGroup/CheckboxGroup.js","webpack:///./src/PresentationalComponents/ProfileTypeSelect/ProfileTypeSelect.js","webpack:///./src/PresentationalComponents/ComplianceScore/ComplianceScore.js","webpack:///./src/PresentationalComponents/PolicyDetailsContentLoader/PolicyDetailsContentLoader.js","webpack:///./src/PresentationalComponents/ReportDetailsContentLoader/ReportDetailsContentLoader.js","webpack:///./src/PresentationalComponents/PolicyDetailsDescription/PolicyDetailsDescription.js","webpack:///./src/PresentationalComponents/ReportDetailsDescription/ReportDetailsDescription.js","webpack:///./src/PresentationalComponents/ProgressBar/ProgressBar.js","webpack:///./src/PresentationalComponents/TabSwitcher/TabSwitcher.js","webpack:///./src/PresentationalComponents/StateView/StateView.js","webpack:///./src/PresentationalComponents/SystemsCountWarning/SystemsCountWarning.js","webpack:///./src/PresentationalComponents/WarningText/WarningText.js","webpack:///./src/PresentationalComponents/BackgroundLink/BackgroundLink.js","webpack:///./src/PresentationalComponents/BreadcrumbLinkItem/BreadcrumbLinkItem.js","webpack:///./src/PresentationalComponents/ReportsTable/Cells.js","webpack:///./src/PresentationalComponents/ReportsTable/Columns.js","webpack:///./src/PresentationalComponents/ReportsTable/Filters.js","webpack:///./src/PresentationalComponents/ReportsTable/ReportsTable.js","webpack:///./src/PresentationalComponents/ReportsEmptyState/ReportsEmptyState.js","webpack:///./src/PresentationalComponents/PolicyPopover/PolicyPopover.js","webpack:///./src/PresentationalComponents/PolicyThresholdTooltip/PolicyThresholdTooltip.js","webpack:///./src/PresentationalComponents/PolicyBusinessObjectiveTooltip/PolicyBusinessObjectiveTooltip.js","webpack:///./src/PresentationalComponents/NoResultsTable/NoResultsTable.js","webpack:///./src/PresentationalComponents/PoliciesTable/Filters.js","webpack:///./src/PresentationalComponents/PoliciesTable/PoliciesTable.js","webpack:///./src/PresentationalComponents/ProfileThresholdField/ProfileThresholdField.js","webpack:///./src/PresentationalComponents/ComplianceThresholdHelperText/ComplianceThresholdHelperText.js","webpack:///./src/PresentationalComponents/SupportedSSGVersionsLink/SupportedSSGVersionsLink.js","webpack:///./src/PresentationalComponents/UnsupportedSSGVersion/UnsupportedSSGVersion.js","webpack:///./src/PresentationalComponents/SubPageTitle/SubPageTitle.js","webpack:///./src/PresentationalComponents/NoSystemsTableWithWarning/NoSystemsTableWithWarning.js","webpack:///./src/PresentationalComponents/ConditionalLink/ConditionalLink.js","webpack:///./src/PresentationalComponents/ComplianceModal/ComplianceModal.js","webpack:///./src/SmartComponents/CreatePolicy/validate.js","webpack:///./src/Utilities/TextHelper.js","webpack:///./src/Utilities/helpers.js","webpack:///./src/Utilities/hooks/useTableTools/useTableSort.js","webpack:///./src/Utilities/hooks/useTableTools/usePaginate.js","webpack:///./src/Utilities/hooks/useTableTools/Components/NoResultsTable.js","webpack:///./src/Utilities/hooks/useTableTools/useRowsBuilder.js","webpack:///./src/Utilities/hooks/useTableTools/useItemIdentify.js","webpack:///./src/Utilities/hooks/useTableTools/useExpandable.js","webpack:///./src/Utilities/hooks/useTableTools/useDedicatedAction.js","webpack:///./src/Utilities/hooks/useTableTools/useToolbarActions.js","webpack:///./src/Utilities/hooks/useTableTools/Components/ColumnManagerListItem.js","webpack:///./src/Utilities/hooks/useTableTools/Components/ColumnManager.js","webpack:///./src/Utilities/hooks/useTableTools/useColumnManager.js","webpack:///./src/Utilities/hooks/useTableTools/Components/TableToolsTable.js","webpack:///./src/Utilities/hooks/useTableTools/useTableTools.js","webpack:///./src/Utilities/hooks/useTableTools/helper.js","webpack:///./src/Utilities/hooks/useTableTools/useBulkSelect.js","webpack:///./src/Utilities/hooks/useTableTools/useExport.js","webpack:///./src/Utilities/hooks/useTableTools/FilterConfigBuilder/Helpers.js","webpack:///./src/Utilities/hooks/useTableTools/FilterConfigBuilder/FilterBuilder.js","webpack:///./src/Utilities/hooks/useTableTools/FilterConfigBuilder/ChipBuilder.js","webpack:///./src/Utilities/hooks/useTableTools/FilterConfigBuilder/FilterConfigBuilder.js","webpack:///./src/Utilities/hooks/useTableTools/Components/SelectedFilterSwitch.js","webpack:///./src/Utilities/hooks/useTableTools/useSelectedFilter.js","webpack:///./src/Utilities/hooks/useTableTools/useFilterConfig.js","webpack:///./src/Utilities/ruleHelpers.js"],"sourcesContent":["import React from 'react';\nimport propTypes from 'prop-types';\nimport { ApolloClient, HttpLink, InMemoryCache } from 'apollo-boost';\nimport {\n  Title,\n  TextContent,\n  Button,\n  Bullseye,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStatePrimary,\n  EmptyStateSecondaryActions,\n  EmptyStateIcon,\n} from '@patternfly/react-core';\nimport { CloudSecurityIcon } from '@patternfly/react-icons';\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/client';\nimport { Spinner } from '@redhat-cloud-services/frontend-components/Spinner';\nimport { ErrorCard } from 'PresentationalComponents';\nconst COMPLIANCE_API_ROOT = '/api/compliance';\n\nconst QUERY = gql`\n  {\n    profiles(search: \"external = false and canonical = false\") {\n      totalCount\n    }\n  }\n`;\n\nconst ComplianceEmptyState = ({ title, mainButton, client }) => {\n  let { data, error, loading } = useQuery(QUERY, {\n    fetchPolicy: 'network-only',\n    client,\n  });\n\n  if (loading) {\n    return <Spinner />;\n  }\n\n  if (error) {\n    const errorMsg = `Oops! Error loading System data: ${error}`;\n    return <ErrorCard message={errorMsg} />;\n  }\n\n  const policiesCount = data.profiles.totalCount;\n\n  const policyWord = policiesCount > 1 ? 'policies' : 'policy';\n  const haveWord = policiesCount > 1 ? 'have' : 'has';\n\n  return (\n    <Bullseye>\n      <EmptyState>\n        <EmptyStateIcon\n          style={{\n            fontWeight: '500',\n            color: 'var(--pf-global--primary-color--100)',\n          }}\n          size=\"xl\"\n          title=\"Compliance\"\n          icon={CloudSecurityIcon}\n        />\n        <Title headingLevel=\"h1\" size=\"lg\">\n          {title}\n        </Title>\n        <br />\n        <EmptyStateBody>\n          {policiesCount > 0 && (\n            <TextContent>\n              <a href=\"insights/compliance/scappolicies\">\n                {policiesCount} {policyWord}\n              </a>{' '}\n              {haveWord} been created but {haveWord} no reports.\n            </TextContent>\n          )}\n          <TextContent>\n            The Compliance service uses SCAP policies to track your\n            organization&#39;s adherence to compliance requirements.\n          </TextContent>\n          <TextContent>\n            Get started by adding a policy, or read documentation about how to\n            connect OpenSCAP to the Compliance service.\n          </TextContent>\n        </EmptyStateBody>\n        <EmptyStatePrimary>{mainButton}</EmptyStatePrimary>\n        <EmptyStateSecondaryActions>\n          <Button\n            variant=\"link\"\n            component=\"a\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href={\n              `https://access.redhat.com/documentation/en-us/red_hat_insights/` +\n              `2021/html/assessing_and_monitoring_security_policy_compliance_of_rhel_systems/index`\n            }\n          >\n            Learn about OpenSCAP and Compliance\n          </Button>\n        </EmptyStateSecondaryActions>\n      </EmptyState>\n    </Bullseye>\n  );\n};\n\nComplianceEmptyState.propTypes = {\n  title: propTypes.string,\n  mainButton: propTypes.object,\n  client: propTypes.object,\n};\n\nComplianceEmptyState.defaultProps = {\n  title: 'No policies',\n  mainButton: (\n    <Button\n      variant=\"primary\"\n      component=\"a\"\n      href=\"/insights/compliance/scappolicies\"\n    >\n      Create new policy\n    </Button>\n  ),\n  client: new ApolloClient({\n    link: new HttpLink({\n      uri: COMPLIANCE_API_ROOT + '/graphql',\n      credentials: 'include',\n    }),\n    cache: new InMemoryCache(),\n  }),\n};\n\nexport default ComplianceEmptyState;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Button } from '@patternfly/react-core';\nimport RemediationButton from '@redhat-cloud-services/frontend-components-remediations/RemediationButton';\nimport flatten from 'lodash/flatten';\nimport { connect } from 'react-redux';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\n\nconst FallbackButton = () => (\n  <Button variant=\"primary\" isDisabled>\n    Remediate\n  </Button>\n);\n\nclass ComplianceRemediationButton extends React.Component {\n  formatRule = ({ title, refId }, profile, system, majorOsVersion) => ({\n    id: `ssg:rhel${majorOsVersion}|${\n      profile.split('xccdf_org.ssgproject.content_profile_')[1]\n    }|${refId}`,\n    description: title,\n    systems: [system],\n  });\n\n  uniqIssuesBySystem = (issues) => {\n    const issueIds = issues.map((issue) => issue.id);\n    return issues.filter((issue, index) => {\n      const originalIssueIndex = issueIds.indexOf(issue.id);\n      return originalIssueIndex === index\n        ? true\n        : (issues[originalIssueIndex].systems = Array.from(\n            new Set(issues[originalIssueIndex].systems.concat(issue.systems))\n          )) && false;\n    });\n  };\n\n  ruleProfile = (rule, system) => {\n    const profile = system.profiles.find((profile) =>\n      profile.rules.find((profileRule) => rule.refId === profileRule.refId)\n    );\n    if (!profile) {\n      console.log('No profile', rule, system);\n      return;\n    }\n\n    return profile;\n  };\n\n  rulesWithRemediations = (rules, system) => {\n    return rules\n      .filter(\n        (rule) =>\n          rule.remediationAvailable &&\n          this.ruleProfile(rule, system)?.supported &&\n          rule.compliant === false\n      )\n      .map((rule) => {\n        const profile = this.ruleProfile(rule, system);\n        return this.formatRule(\n          rule,\n          profile.refId,\n          system.id,\n          profile.majorOsVersion\n        );\n      });\n  };\n\n  dataProvider = () => {\n    const { allSystems, selectedRules } = this.props;\n    const result = { systems: [], issues: [] };\n\n    allSystems\n      .filter((system) => system.supported)\n      .forEach(async (system) => {\n        result.systems.push(system.id);\n\n        if (selectedRules.length !== 0) {\n          result.issues.push(this.rulesWithRemediations(selectedRules, system));\n        } else {\n          result.issues.push(\n            this.rulesWithRemediations(system.ruleObjectsFailed, system)\n          );\n        }\n      });\n\n    return Promise.all(result.issues).then((issues) => {\n      result.issues = this.uniqIssuesBySystem(flatten(issues));\n      return result;\n    });\n  };\n\n  notEmptyData = async () => {\n    const data = await this.dataProvider();\n    return data.issues.length > 0 && data.systems.length > 0;\n  };\n\n  remediationAvailable = () => {\n    const { allSystems, selectedRules } = this.props;\n    let rules = selectedRules.length\n      ? selectedRules\n      : allSystems.flatMap((system) => system.ruleObjectsFailed);\n\n    return rules.some(\n      (rule) =>\n        rule.remediationAvailable &&\n        (rule.profiles?.some((profile) => profile.supported) ||\n          allSystems.some(\n            (system) => this.ruleProfile(rule, system)?.supported\n          )) &&\n        rule.compliant === false\n    );\n  };\n\n  render() {\n    const { addNotification } = this.props;\n\n    return (\n      <React.Fragment>\n        <RemediationButton\n          isDisabled={!(this.remediationAvailable() && this.notEmptyData())}\n          onRemediationCreated={(result) =>\n            addNotification(result.getNotification())\n          }\n          dataProvider={this.dataProvider}\n          buttonProps={{\n            ouiaId: 'RemediateButton',\n          }}\n          fallback={<FallbackButton />}\n        >\n          Remediate\n        </RemediationButton>\n      </React.Fragment>\n    );\n  }\n}\n\nComplianceRemediationButton.propTypes = {\n  selectedRules: propTypes.array,\n  allSystems: propTypes.arrayOf(\n    propTypes.shape({\n      id: propTypes.string,\n      name: propTypes.string,\n      supported: propTypes.bool.isRequired,\n      profiles: propTypes.arrayOf(\n        propTypes.shape({\n          refId: propTypes.string,\n          name: propTypes.string,\n          rules: propTypes.arrayOf(\n            propTypes.shape({\n              title: propTypes.string,\n              severity: propTypes.string,\n              rationale: propTypes.string,\n              refId: propTypes.string,\n              description: propTypes.string,\n              compliant: propTypes.bool,\n              identifier: propTypes.string,\n              references: propTypes.string,\n            })\n          ),\n        })\n      ),\n    })\n  ),\n  addNotification: propTypes.func,\n};\n\nComplianceRemediationButton.defaultProps = {\n  allSystems: [],\n};\n\nexport default connect(\n  () => ({}),\n  (dispatch) => ({\n    addNotification: (notification) => dispatch(addNotification(notification)),\n  })\n)(ComplianceRemediationButton);\n","import React from 'react';\nimport { TextInput, TextArea } from '@patternfly/react-core';\n\nexport const ReduxFormTextInput = (field) => (\n  <TextInput\n    value={field.input.value || field.defaultValue}\n    onChange={field.input.onChange}\n    {...field}\n  />\n);\n\nexport const ReduxFormTextArea = (field) => (\n  <TextArea\n    value={field.input.value || field.defaultValue}\n    onChange={field.input.onChange}\n    {...field}\n  />\n);\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { AnsibeTowerIcon } from '@patternfly/react-icons';\n\nconst RemediationCell = ({ hasPlaybook = false }) => (\n  <>\n    {hasPlaybook && <AnsibeTowerIcon />}\n    {hasPlaybook ? ' Playbook' : ' Manual'}\n  </>\n);\nRemediationCell.propTypes = {\n  hasPlaybook: propTypes.bool,\n};\n\nexport default RemediationCell;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Text, TextVariants, TextContent } from '@patternfly/react-core';\nimport {\n  CheckCircleIcon,\n  ExclamationCircleIcon,\n  ExclamationTriangleIcon,\n  QuestionCircleIcon,\n} from '@patternfly/react-icons';\nimport RemediationCell from '../RemediationCell/RemediationCell';\nconst ruleProps = {\n  title: propTypes.string,\n  identifier: propTypes.object,\n  profile: propTypes.object,\n  compliant: propTypes.bool,\n  remediationAvailable: propTypes.bool,\n  severity: propTypes.string,\n};\n\nexport const Rule = ({ title, identifier }) => (\n  <TextContent>\n    {title}\n    {identifier ? (\n      <Text component={TextVariants.small}>{identifier.label}</Text>\n    ) : (\n      ''\n    )}\n  </TextContent>\n);\nRule.propTypes = ruleProps;\n\nexport const Policy = ({ profile }) => profile.name;\nPolicy.propTypes = ruleProps;\n\nexport const HighSeverity = () => (\n  <span>\n    <ExclamationCircleIcon className=\"ins-u-failed\" /> High\n  </span>\n);\n\nexport const MediumSeverity = () => (\n  <span>\n    <ExclamationTriangleIcon className=\"ins-u-warning\" /> Medium\n  </span>\n);\n\nexport const LowSeverityIcon = () => (\n    <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 18 18\" role=\"img\" style={ { verticalAlign: '-0.125em' } } xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M2 0h14a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2zm6.67 10.46a1.67 1.67 0 1 0 0 3.338 1.67 1.67 0 0 0 0-3.338zm-1.586-6l.27 4.935a.435.435 0 0 0 .434.411H9.55c.232 0 .422-.18.435-.411l.27-4.936A.435.435 0 0 0 9.818 4h-2.3c-.25 0-.448.21-.435.46z\" fill=\"#3A9CA6\" fillRule=\"evenodd\"/></svg> // eslint-disable-line\n);\n\nexport const LowSeverity = () => (\n  <span>\n    <LowSeverityIcon /> Low\n  </span>\n);\n\nexport const UnknownSeverity = () => (\n  <span>\n    <QuestionCircleIcon /> Unknown\n  </span>\n);\n\nexport const Severity = ({ severity }) =>\n  ({\n    high: <HighSeverity />,\n    medium: <MediumSeverity />,\n    low: <LowSeverity />,\n  }[severity?.toLowerCase()] || <UnknownSeverity />);\nSeverity.propTypes = ruleProps;\n\nexport const Passed = ({ compliant }) =>\n  compliant ? (\n    <CheckCircleIcon className=\"ins-u-passed\" />\n  ) : (\n    <ExclamationCircleIcon className=\"ins-u-failed\" />\n  );\nPassed.propTypes = ruleProps;\n\nexport const RemediationColumnCell = ({ remediationAvailable }) => (\n  <RemediationCell hasPlaybook={remediationAvailable} />\n);\nRemediationColumnCell.propTypes = ruleProps;\n","import { nowrap } from '@patternfly/react-table';\nimport { renderComponent } from 'Utilities/helpers';\nimport {\n  Rule,\n  Policy as PolicyCell,\n  Severity as SeverityCell,\n  Passed as PassedCell,\n  RemediationColumnCell,\n} from './Cells';\n\nexport const Name = {\n  title: 'Name',\n  sortByProp: 'title',\n  renderExport: ({ title, identifier }) =>\n    `${title}${identifier ? ` - ${identifier.label}` : ''}`,\n  renderFunc: renderComponent(Rule),\n};\n\nexport const Policy = {\n  title: 'Policy',\n  sortByFunction: (rule) => rule?.profile?.name,\n  renderExport: (rule) => rule?.profile?.name,\n  renderFunc: renderComponent(PolicyCell),\n};\n\nexport const Severity = {\n  title: 'Severity',\n  sortByProp: 'severity',\n  exportKey: 'severity',\n  sortByArray: ['high', 'medium', 'low', 'unknown'],\n  renderFunc: renderComponent(SeverityCell),\n};\n\nexport const Passed = {\n  title: 'Passed',\n  sortByProp: 'compliant',\n  renderExport: (rule) => (rule?.compliant ? 'Yes' : 'No'),\n  renderFunc: renderComponent(PassedCell),\n};\n\nexport const Remediation = {\n  title: 'Remediation',\n  transforms: [nowrap],\n  sortByFunction: (rule) => rule?.remediationAvailable,\n  renderExport: (rule) => (rule?.remediationAvailable ? 'Playbook' : 'Manual'),\n  renderFunc: renderComponent(RemediationColumnCell),\n};\n\nexport default [Name, Policy, Severity, Passed, Remediation];\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport {\n  Grid,\n  GridItem,\n  Stack,\n  StackItem,\n  Text,\n  TextVariants,\n} from '@patternfly/react-core';\nimport { ConditionalLink } from 'PresentationalComponents';\n\nconst RuleDetailsRow = ({ rule }) => {\n  const { refId, description, identifier, references, rationale } = rule;\n  const key = `rule-child-row-${refId}`;\n\n  return (\n    <div key={key} style={{ marginTop: 'var(--pf-global--spacer--lg)' }}>\n      <Stack id={`rule-description-${key}`} className=\"margin-bottom-lg\">\n        <StackItem style={{ marginBottom: 'var(--pf-global--spacer--sm)' }}>\n          <Text className=\"pf-c-form__label\" component={TextVariants.h5}>\n            <b>Description</b>\n          </Text>\n        </StackItem>\n        <StackItem isFilled>{description}</StackItem>\n      </Stack>\n      <Stack\n        id={`rule-identifiers-references-${key}`}\n        className=\"margin-bottom-lg\"\n      >\n        <Grid>\n          {identifier && identifier.length > 0 && (\n            <GridItem span={2}>\n              <Text className=\"pf-c-form__label\" component={TextVariants.h5}>\n                <b>Identifier</b>\n              </Text>\n              <Text>\n                {identifier\n                  .map((ident, idx) => (\n                    <ConditionalLink\n                      href={ident.system}\n                      target=\"_blank\"\n                      key={`${refId}-identifier-${idx}`}\n                    >\n                      {ident.label}\n                    </ConditionalLink>\n                  ))\n                  .reduce((prev, next) => [prev, ', ', next])}\n              </Text>\n            </GridItem>\n          )}\n\n          {references && references.length > 0 && (\n            <GridItem span={10}>\n              <Text className=\"pf-c-form__label\" component={TextVariants.h5}>\n                <b>References</b>\n              </Text>\n              <Text>\n                {references\n                  .map((ref, idx) => (\n                    <ConditionalLink\n                      href={ref.href}\n                      target=\"_blank\"\n                      key={`${refId}-reference-${idx}`}\n                    >\n                      {ref.label}\n                    </ConditionalLink>\n                  ))\n                  .reduce((prev, next) => [prev, ', ', next])}\n              </Text>\n            </GridItem>\n          )}\n        </Grid>\n      </Stack>\n\n      {rationale && (\n        <Stack\n          id={`rule-rationale-${key}`}\n          style={{ marginBottom: 'var(--pf-global--spacer--lg)' }}\n        >\n          <StackItem style={{ marginBottom: 'var(--pf-global--spacer--sm)' }}>\n            <Text className=\"pf-c-form__label\" component={TextVariants.h5}>\n              <b>Rationale</b>\n            </Text>\n          </StackItem>\n          <StackItem isFilled>{rationale}</StackItem>\n        </Stack>\n      )}\n    </div>\n  );\n};\n\nRuleDetailsRow.propTypes = {\n  rule: propTypes.object,\n};\n\nexport default RuleDetailsRow;\n","import React from 'react';\nimport {\n  Bullseye,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateVariant,\n  Title,\n} from '@patternfly/react-core';\nimport { EmptyTable } from '@redhat-cloud-services/frontend-components/EmptyTable';\n\nconst emptyRows = (columns) => [\n  {\n    cells: [\n      {\n        title: (\n          <EmptyTable>\n            <Bullseye>\n              <EmptyState variant={EmptyStateVariant.full}>\n                <Title headingLevel=\"h5\" size=\"lg\">\n                  No matching rules found\n                </Title>\n                <EmptyStateBody>\n                  This filter criteria matches no rules. <br /> Try changing\n                  your filter settings.\n                </EmptyStateBody>\n              </EmptyState>\n            </Bullseye>\n          </EmptyTable>\n        ),\n        props: {\n          colSpan: columns.length,\n        },\n      },\n    ],\n  },\n];\n\nexport default emptyRows;\n","import React from 'react';\nimport {\n  ExclamationCircleIcon,\n  ExclamationTriangleIcon,\n  QuestionCircleIcon,\n} from '@patternfly/react-icons';\nimport { LowSeverityIcon } from './Cells';\n\nexport const HIGH_SEVERITY = (\n  <span>\n    <ExclamationCircleIcon className=\"ins-u-failed\" /> High\n  </span>\n);\nexport const MEDIUM_SEVERITY = (\n  <span>\n    <ExclamationTriangleIcon className=\"ins-u-warning\" /> Medium\n  </span>\n);\nexport const LOW_SEVERITY = (\n  <span>\n    <LowSeverityIcon /> Low\n  </span>\n);\nexport const UNKNOWN_SEVERITY = (\n  <span>\n    <QuestionCircleIcon /> Unknown\n  </span>\n);\n","import {\n  HIGH_SEVERITY,\n  MEDIUM_SEVERITY,\n  LOW_SEVERITY,\n  UNKNOWN_SEVERITY,\n} from './Constants';\nimport { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\n\nconst filterRulesWithAllValues = (rules, values, valueCheck) =>\n  rules.filter(\n    (rule) =>\n      values.map((value) => valueCheck(rule, value)).filter((v) => !!v).length >\n      0\n  );\n\nconst anyFilterApply = (rules, values, valueCheck) => {\n  let filteredRules = [];\n  rules.forEach((rule) => {\n    if (\n      values.map((value) => valueCheck(rule, value)).filter((v) => !!v).length >\n      0\n    ) {\n      filteredRules.push(rule);\n    }\n  });\n  return filteredRules;\n};\n\nconst BASE_FILTER_CONFIGURATION = [\n  {\n    type: conditionalFilterType.text,\n    label: 'Name',\n    filter: (rules, value) =>\n      filterRulesWithAllValues(\n        rules,\n        [value],\n        (rule, value) =>\n          rule.title.toLowerCase().includes(value.toLowerCase()) ||\n          (rule.identifier &&\n            rule.identifier.label\n              .toLowerCase()\n              .includes(value.toLowerCase())) ||\n          rule.references.filter((reference) =>\n            reference.label.toLowerCase().includes(value.toLowerCase())\n          ).length > 0\n      ),\n  },\n  {\n    type: conditionalFilterType.checkbox,\n    label: 'Severity',\n    items: [\n      { label: HIGH_SEVERITY, value: 'high' },\n      { label: MEDIUM_SEVERITY, value: 'medium' },\n      { label: LOW_SEVERITY, value: 'low' },\n      { label: UNKNOWN_SEVERITY, value: 'unknown' },\n    ],\n    filter: (rules, values) =>\n      anyFilterApply(rules, values, (rule, value) => rule.severity === value),\n  },\n];\n\nconst PASS_FILTER_CONFIG = {\n  type: conditionalFilterType.checkbox,\n  label: 'Passed',\n  items: [\n    { label: 'Passed rules', value: 'passed' },\n    { label: 'Failed rules', value: 'failed' },\n  ],\n  filter: (rules, values) =>\n    anyFilterApply(\n      rules,\n      values,\n      (rule, value) => rule.compliant === (value === 'passed')\n    ),\n};\n\nexport const policiesFilterConfig = (policies) => ({\n  type: conditionalFilterType.checkbox,\n  label: 'Policy',\n  items: policies.map((policy) => ({ label: policy.name, value: policy.id })),\n  filter: (rules, values) =>\n    filterRulesWithAllValues(\n      rules,\n      values,\n      (rule, value) =>\n        (rule.profile.policy ? rule.profile.policy.id : rule.profile.id) ===\n        value\n    ),\n});\n\nexport const REMEDIATION_AVAILABLE_FILTER_CONFIG = {\n  type: conditionalFilterType.checkbox,\n  label: 'Remediation available',\n  items: [{ label: 'Remediation available', value: 'true' }],\n  filter: (rules, value) =>\n    rules.filter((rule) =>\n      value[0] === 'true' ? rule.remediationAvailable === true : true\n    ),\n};\n\nconst buildFilterConfig = ({\n  showPassFailFilter,\n  policies,\n  remediationAvailableFilter,\n}) => {\n  const config = [...BASE_FILTER_CONFIGURATION];\n\n  if (showPassFailFilter) {\n    config.push(PASS_FILTER_CONFIG);\n  }\n\n  if (policies && policies.length > 1) {\n    config.push(policiesFilterConfig(policies));\n  }\n\n  if (remediationAvailableFilter) {\n    config.push(REMEDIATION_AVAILABLE_FILTER_CONFIG);\n  }\n\n  return config;\n};\n\nexport default buildFilterConfig;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { COMPLIANCE_TABLE_DEFAULTS } from '@/constants';\n// eslint-disable-next-line\nimport ComplianceRemediationButton from 'PresentationalComponents/ComplianceRemediationButton';\nimport { TableToolsTable } from 'Utilities/hooks/useTableTools';\nimport useFeature from 'Utilities/hooks/useFeature';\nimport { toRulesArrayWithProfile } from 'Utilities/ruleHelpers';\nimport RuleDetailsRow from './RuleDetailsRow';\nimport emptyRows from './EmptyRows';\nimport buildFilterConfig from './Filters';\nimport defaultColumns from './Columns';\n\nconst RulesTable = ({\n  system,\n  profileRules,\n  columns = defaultColumns,\n  remediationsEnabled = true,\n  remediationAvailableFilter = false,\n  selectedFilter = false,\n  handleSelect,\n  selectedRules = [],\n  hidePassed = false,\n  options,\n  ...rulesTableProps\n}) => {\n  const manageColumnsEnabled = useFeature('manageColumns');\n  const rules = toRulesArrayWithProfile(profileRules);\n  const selectedRulesWithRemediations = (selectedRules) =>\n    (selectedRules || []).filter((rule) => rule.remediationAvailable);\n  const showPassFailFilter =\n    columns.filter((c) => c.title === 'Passed').length > 0;\n  const policies = profileRules\n    .filter(({ profile }) => !!profile)\n    .map(({ profile }) => ({\n      id: profile.policy ? profile.policy.id : profile.id,\n      name: profile.name,\n    }));\n\n  const remediationAction = ({ selected }) => (\n    <ComplianceRemediationButton\n      allSystems={[\n        {\n          id: system.id,\n          profiles: system.testResultProfiles,\n          ruleObjectsFailed: [],\n          supported: system.supported,\n        },\n      ]}\n      selectedRules={selectedRulesWithRemediations(selected)}\n    />\n  );\n\n  return (\n    <TableToolsTable\n      aria-label=\"Rules Table\"\n      items={rules}\n      columns={columns}\n      isStickyHeader\n      filters={{\n        filterConfig: buildFilterConfig({\n          showPassFailFilter,\n          policies,\n          remediationAvailableFilter,\n        }),\n        ...(hidePassed && {\n          activeFilters: {\n            passed: ['failed'],\n          },\n        }),\n      }}\n      options={{\n        ...COMPLIANCE_TABLE_DEFAULTS,\n        ...options,\n        identifier: (item) => `${item.profile.id}|${item.refId}`,\n        selectable: !!handleSelect || remediationsEnabled,\n        onSelect: handleSelect,\n        preselected: selectedRules,\n        detailsComponent: RuleDetailsRow,\n        emptyRows: emptyRows(columns),\n        selectedFilter,\n        ...(remediationsEnabled ? { dedicatedAction: remediationAction } : {}),\n        manageColumns: manageColumnsEnabled,\n      }}\n      {...rulesTableProps}\n    />\n  );\n};\n\nRulesTable.propTypes = {\n  profileRules: propTypes.array,\n  loading: propTypes.bool,\n  hidePassed: propTypes.bool,\n  system: propTypes.object,\n  remediationsEnabled: propTypes.bool,\n  remediationAvailableFilter: propTypes.bool,\n  selectedRules: propTypes.array,\n  selectedFilter: propTypes.bool,\n  handleSelect: propTypes.func,\n  columns: propTypes.array,\n  options: propTypes.object,\n};\n\nexport default RulesTable;\n","const OsVersionText = ({ profile, newOsMinorVersion }) =>\n  `RHEL${'\\u00A0'}${profile.osMajorVersion}.${\n    profile.osMinorVersion || newOsMinorVersion\n  }`;\n\nexport default OsVersionText;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport {\n  Text,\n  TextVariants,\n  TextContent,\n  Grid,\n  Spinner,\n  Badge,\n  Popover,\n} from '@patternfly/react-core';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport {\n  StateViewWithError,\n  StateViewPart,\n  SupportedSSGVersionsLink,\n  RulesTable,\n} from 'PresentationalComponents';\nimport { pluralize } from 'Utilities/TextHelper';\nimport OsVersionText from './OsVersionText';\n\nconst ProfileSystemCount = ({ count = 0 }) => (\n  <Badge isRead>{`${count} ${pluralize(count, 'system')}`}</Badge>\n);\n\nProfileSystemCount.propTypes = {\n  profile: propTypes.object,\n  count: propTypes.number,\n};\n\nconst SSGVersionText = ({ profile, newOsMinorVersion }) => (\n  <Text component={TextVariants.p}>\n    SSG version: {profile.ssgVersion}{' '}\n    <Popover\n      position=\"right\"\n      bodyContent={<SSGPopoverBody {...{ profile, newOsMinorVersion }} />}\n      footerContent={<SupportedSSGVersionsLink />}\n    >\n      <span style={{ cursor: 'pointer' }}>\n        <OutlinedQuestionCircleIcon className=\"grey-icon\" />\n      </span>\n    </Popover>\n  </Text>\n);\n\nSSGVersionText.propTypes = {\n  profile: propTypes.object.isRequired,\n  newOsMinorVersion: propTypes.string,\n};\n\nconst SSGPopoverBody = ({ profile, newOsMinorVersion }) => (\n  <TextContent style={{ fontSize: 'var(--pf-c-popover--FontSize)' }}>\n    <Text>\n      This is the latest supported version of the SCAP Security Guide (SSG) for{' '}\n      <OsVersionText {...{ profile, newOsMinorVersion }} />\n    </Text>\n    <Text>\n      <OsVersionText {...{ profile, newOsMinorVersion }} /> systems assigned to\n      this policy will report using this rule list.\n    </Text>\n  </TextContent>\n);\n\nSSGPopoverBody.propTypes = {\n  profile: propTypes.object.isRequired,\n  newOsMinorVersion: propTypes.string,\n};\n\nconst BENCHMARK_QUERY = gql`\n  query benchmarkQuery($id: String!) {\n    benchmark(id: $id) {\n      id\n      osMajorVersion\n      rules {\n        id\n        title\n        severity\n        rationale\n        refId\n        description\n        remediationAvailable\n        identifier\n      }\n    }\n  }\n`;\n\nconst ProfileTabContent = ({\n  profile,\n  columns,\n  handleSelect,\n  systemCount,\n  selectedRuleRefIds,\n  rulesTableProps,\n  newOsMinorVersion,\n}) => {\n  const {\n    data: benchmark,\n    error,\n    loading,\n  } = useQuery(BENCHMARK_QUERY, {\n    variables: {\n      id: profile.benchmark.id,\n    },\n    skip: !handleSelect || !profile.benchmark?.id,\n  });\n  const rules = handleSelect ? benchmark?.benchmark?.rules : profile?.rules;\n\n  return (\n    <React.Fragment>\n      <Grid>\n        <TextContent className=\"pf-u-mt-md\">\n          <Text component={TextVariants.h3}>\n            <span className=\"pf-u-pr-sm\">\n              <OsVersionText {...{ profile, newOsMinorVersion }} />\n            </span>\n            <ProfileSystemCount count={systemCount} />\n          </Text>\n          <SSGVersionText {...{ profile, newOsMinorVersion }} />\n        </TextContent>\n      </Grid>\n      <StateViewWithError stateValues={{ error, loading, rules }}>\n        <StateViewPart stateKey=\"loading\">\n          <Spinner />\n        </StateViewPart>\n        <StateViewPart stateKey=\"rules\">\n          <RulesTable\n            remediationAvailableFilter\n            remediationsEnabled={false}\n            columns={columns}\n            profileRules={[{ profile, rules: rules || [] }]}\n            selectedRules={selectedRuleRefIds.map(\n              (refId) => `${profile.id}|${refId}`\n            )}\n            handleSelect={\n              handleSelect &&\n              ((selectedRuleRefIds) =>\n                handleSelect(\n                  profile,\n                  newOsMinorVersion,\n                  selectedRuleRefIds.map(\n                    (profileRuleRefId) => profileRuleRefId.split('|')[1]\n                  )\n                ))\n            }\n            {...rulesTableProps}\n          />\n        </StateViewPart>\n      </StateViewWithError>\n    </React.Fragment>\n  );\n};\n\nProfileTabContent.propTypes = {\n  profile: propTypes.object,\n  newOsMinorVersion: propTypes.string,\n  columns: propTypes.array,\n  handleSelect: propTypes.func,\n  systemCount: propTypes.object,\n  selectedRuleRefIds: propTypes.array,\n  rulesTableProps: propTypes.object,\n};\n\nexport default ProfileTabContent;\n","// Rule selection utilities\n\nexport const matchesSelectionItem = (\n  selectionItem,\n  profile,\n  newOsMinorVersion\n) =>\n  selectionItem.id === profile.id &&\n  selectionItem.osMinorVersion ===\n    (newOsMinorVersion || profile.osMinorVersion);\n\nexport const selectedRuleRefIdsForTab = (\n  selectedRuleRefIds,\n  profile,\n  newOsMinorVersion\n) => {\n  const tabSelection = (selectedRuleRefIds || []).find((selectionItem) =>\n    matchesSelectionItem(selectionItem, profile, newOsMinorVersion)\n  );\n  return tabSelection?.ruleRefIds || [];\n};\n\nexport const profilesWithRulesToSelection = (\n  profiles,\n  prevSelection = [],\n  options = {}\n) => {\n  const { only } = options;\n  const additionalSelection = profiles\n    .map((profile) => {\n      const foundSelection = prevSelection.find((selectionItem) =>\n        matchesSelectionItem(selectionItem, profile)\n      );\n      if (!foundSelection) {\n        if (!profile.rules) {\n          console.error(\n            `Profile ${profile.id} is missing rules for selection!`\n          );\n        }\n\n        if (!profile.osMinorVersion) {\n          console.error(\n            `Profile ${profile.id} is missing osMinorVersion for selection!`\n          );\n        }\n\n        return {\n          id: profile.id,\n          osMinorVersion: profile.osMinorVersion,\n          ruleRefIds: profile.rules?.map((rule) => rule.refId) || [],\n        };\n      } else if (only) {\n        return foundSelection;\n      }\n    })\n    .filter((v) => !!v);\n\n  return only\n    ? additionalSelection\n    : [...prevSelection, ...additionalSelection];\n};\n\nexport const tabsDataToOsMinorMap = (tabsData) => {\n  const osMinorMap = {};\n  tabsData.forEach(({ profile, newOsMinorVersion }) => {\n    if (profile?.id) {\n      const osMinorVersion = newOsMinorVersion || profile.osMinorVersion;\n      osMinorMap[profile.id] = [\n        ...(osMinorMap[profile.id] || []),\n        osMinorVersion,\n      ];\n    }\n  });\n  return osMinorMap;\n};\n\nexport const extendProfilesByOsMinor = (profiles, osMinorMap) =>\n  profiles.flatMap((profile) =>\n    (osMinorMap[profile.id] || [undefined]).map((osMinorVersion) => ({\n      ...profile,\n      osMinorVersion,\n    }))\n  );\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Tab, Badge } from '@patternfly/react-core';\nimport { RoutedTabs } from 'PresentationalComponents';\nimport ProfileTabContent from './ProfileTabContent';\nimport OsVersionText from './OsVersionText';\nimport {\n  selectedRuleRefIdsForTab,\n  matchesSelectionItem,\n} from './ruleSelection';\n\nconst eventKey = ({ id, osMinorVersion }, newOsMinorVersion) =>\n  `rules-${id}-${osMinorVersion || newOsMinorVersion}`;\n\nconst getDefaultTab = (tabsData, defaultTab) => {\n  if (!tabsData || tabsData.length === 0) {\n    return;\n  }\n\n  if (!defaultTab) {\n    const firstTab = tabsData[0];\n    defaultTab = {\n      id: firstTab.profile.id,\n      osMinorVersion:\n        firstTab.profile.osMinorVersion || firstTab.newOsMinorVersion,\n    };\n  }\n\n  return eventKey(defaultTab);\n};\n\nconst TabbedRules = ({\n  tabsData,\n  defaultTab,\n  selectedRuleRefIds,\n  setSelectedRuleRefIds,\n  columns,\n  level = 0,\n  ouiaId,\n  ...rulesTableProps\n}) => {\n  const handleSelect = (\n    profile,\n    newOsMinorVersion,\n    profileSelectedRuleRefIds\n  ) => {\n    const filteredSelection = (selectedRuleRefIds || []).filter(\n      (selectionItem) =>\n        !matchesSelectionItem(selectionItem, profile, newOsMinorVersion)\n    );\n\n    const newItem = {\n      id: profile.id,\n      osMinorVersion: newOsMinorVersion || profile.osMinorVersion,\n      ruleRefIds: profileSelectedRuleRefIds,\n    };\n    setSelectedRuleRefIds([newItem, ...filteredSelection]);\n  };\n\n  return (\n    <RoutedTabs\n      ouiaId={ouiaId}\n      level={level}\n      defaultTab={getDefaultTab(tabsData, defaultTab)}\n    >\n      {tabsData?.map(({ profile, newOsMinorVersion, systemCount }) => (\n        <Tab\n          key={eventKey(profile, newOsMinorVersion)}\n          eventKey={eventKey(profile, newOsMinorVersion)}\n          title={\n            <span>\n              <span className=\"pf-u-pr-sm\">\n                <OsVersionText\n                  profile={profile}\n                  newOsMinorVersion={newOsMinorVersion}\n                />\n              </span>\n              <Badge isRead>{systemCount}</Badge>\n            </span>\n          }\n          ouiaId={`RHEL ${profile.osMajorVersion}.${\n            profile.osMinorVersion || newOsMinorVersion\n          }`}\n        >\n          <ProfileTabContent\n            {...{\n              profile,\n              newOsMinorVersion,\n              columns,\n              rulesTableProps,\n              systemCount,\n              selectedRuleRefIds: selectedRuleRefIdsForTab(\n                selectedRuleRefIds,\n                profile,\n                newOsMinorVersion\n              ),\n              handleSelect: setSelectedRuleRefIds ? handleSelect : undefined,\n            }}\n          />\n        </Tab>\n      ))}\n    </RoutedTabs>\n  );\n};\n\nTabbedRules.propTypes = {\n  tabsData: propTypes.arrayOf(\n    propTypes.shape({\n      profile: propTypes.object.isRequired,\n      selectedRuleRefIds: propTypes.arrayOf(propTypes.string),\n      newOsMinorVersion: propTypes.string,\n      systemCount: propTypes.number,\n    })\n  ).isRequired,\n  selectedRuleRefIds: propTypes.arrayOf(\n    propTypes.shape({\n      id: propTypes.string,\n      ruleRefIds: propTypes.arrayOf(propTypes.string),\n    })\n  ),\n  setSelectedRuleRefIds: propTypes.func,\n  columns: propTypes.arrayOf(propTypes.object),\n  defaultTab: propTypes.shape({\n    id: propTypes.string,\n    osMinorVersion: propTypes.string,\n  }),\n  level: propTypes.number,\n  ouiaId: propTypes.string,\n};\n\nexport default TabbedRules;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { TextContent } from '@patternfly/react-core';\nimport { fitContent } from '@patternfly/react-table';\nimport { Link } from 'react-router-dom';\nimport { GreySmallText, SystemsCountWarning } from 'PresentationalComponents';\nimport { renderComponent } from 'Utilities/helpers';\n\nconst PolicyNameCell = ({ id, policy, policyType }) => (\n  <TextContent>\n    <Link to={'/scappolicies/' + id}>{policy.name}</Link>\n    <GreySmallText>{policyType}</GreySmallText>\n  </TextContent>\n);\n\nPolicyNameCell.propTypes = {\n  id: propTypes.string,\n  policy: propTypes.object,\n  policyType: propTypes.string,\n};\n\nexport const Name = {\n  title: 'Name',\n  props: {\n    width: 45,\n  },\n  sortByProp: 'name',\n  renderExport: (policy) => policy.name,\n  renderFunc: renderComponent(PolicyNameCell),\n};\n\nconst PolicyType = {\n  title: 'Policy Type',\n  renderExport: (policy) => policy.policyType,\n};\n\nconst osString = (policy) => `RHEL ${policy.majorOsVersion}`;\n\nexport const OperatingSystem = {\n  title: 'Operating system',\n  transforms: [fitContent],\n  props: {\n    width: 15,\n  },\n  sortByProp: 'majorOsVersion',\n  renderExport: osString,\n  renderFunc: (_data, _id, policy) => osString(policy),\n};\n\nexport const Systems = {\n  title: 'Systems',\n  props: {\n    width: 15,\n  },\n  sortByProp: 'totalHostCount',\n  renderExport: (policy) => policy.totalHostCount,\n  // eslint-disable-next-line react/display-name\n  renderFunc: (_data, _id, policy) =>\n    policy.totalHostCount > 0 ? (\n      policy.totalHostCount\n    ) : (\n      <SystemsCountWarning count={policy.totalHostCount} variant=\"count\" />\n    ),\n};\n\nconst businessObjectiveString = (policy) =>\n  (policy.businessObjective && policy.businessObjective.title) || '--';\n\nexport const BusinessObjective = {\n  title: 'Business objective',\n  sortByFunction: (policy) => policy?.businessObjective?.title,\n  renderExport: businessObjectiveString,\n  renderFunc: (_data, _id, policy) => businessObjectiveString(policy),\n};\n\nconst complianceThresholdString = (policy) => `${policy.complianceThreshold}%`;\n\nexport const ComplianceThreshold = {\n  title: 'Compliance threshold',\n  sortByProp: 'complianceThreshold',\n  renderExport: complianceThresholdString,\n  renderFunc: (_data, _id, policy) => complianceThresholdString(policy),\n};\n\nexport const exportableColumns = [\n  Name,\n  PolicyType,\n  OperatingSystem,\n  Systems,\n  BusinessObjective,\n  ComplianceThreshold,\n];\n\nexport default [\n  Name,\n  OperatingSystem,\n  Systems,\n  BusinessObjective,\n  ComplianceThreshold,\n];\n","import React from 'react';\nimport { Table, TableHeader, TableBody } from '@patternfly/react-table';\nimport RowLoader from '@redhat-cloud-services/frontend-components-utilities/RowLoader';\nimport columns from '../PoliciesTable/Columns';\n\nconst LoadingPoliciesTable = () => (\n  <Table\n    aria-label=\"policies-table\"\n    ouiaId=\"PoliciesTable\"\n    cells={columns}\n    rows={[...Array(5)].map(() => ({\n      cells: [\n        {\n          title: <RowLoader />,\n          colSpan: 5,\n        },\n      ],\n    }))}\n  >\n    <TableHeader />\n    <TableBody />\n  </Table>\n);\n\nexport default LoadingPoliciesTable;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Title, Button, Text } from '@patternfly/react-core';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport InvalidObject from '@redhat-cloud-services/frontend-components/InvalidObject';\nimport NotAuthorized from '@redhat-cloud-services/frontend-components/NotAuthorized';\n\nconst ErrorPage = ({ error, ...props }) => {\n  if (error.networkError && error.networkError.statusCode === 401) {\n    window.insights.chrome.auth.logout(true);\n    return false;\n  }\n\n  if (error.networkError && error.networkError.statusCode === 403) {\n    return <NotAuthorized serviceName=\"Compliance\" />;\n  }\n\n  if (error.networkError && error.networkError.statusCode === 404) {\n    return <InvalidObject />;\n  }\n\n  return (\n    <section\n      {...props}\n      className=\"pf-l-page__main-section pf-c-page__main-section ins-c-component_invalid-componet\"\n    >\n      <ExclamationCircleIcon\n        size=\"xl\"\n        style={{ color: 'var(--pf-global--danger-color--100)' }}\n      />\n      <Title headingLevel=\"h1\">There was an error</Title>\n      <Text>\n        If you need to contact Red Hat Support about this, this is the exact\n        error:\n        <Text>{error.message}</Text>\n      </Text>\n      <Button\n        variant=\"link\"\n        ouiaId=\"ErrorPageGoBackButton\"\n        onClick={history.goBack}\n      >\n        Go back\n      </Button>\n    </section>\n  );\n};\n\nErrorPage.propTypes = {\n  error: propTypes.object,\n};\n\nexport default ErrorPage;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Card, CardHeader, CardBody } from '@patternfly/react-core';\nimport { NotEqualIcon } from '@patternfly/react-icons';\n\nconst ErrorCard = ({ errorMsg }) => (\n  <Card className=\"ins-error-card\">\n    <CardHeader>\n      <NotEqualIcon />\n    </CardHeader>\n    <CardBody>\n      <div>{errorMsg}</div>\n    </CardBody>\n  </Card>\n);\n\nErrorCard.propTypes = {\n  errorMsg: propTypes.string,\n};\n\nexport default ErrorCard;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Text, TextVariants } from '@patternfly/react-core';\n\nexport const GreySmallText = ({ children }) => (\n  <Text\n    style={{ color: 'var(--pf-global--Color--200)' }}\n    component={TextVariants.small}\n  >\n    {children}\n  </Text>\n);\n\nGreySmallText.propTypes = {\n  children: propTypes.node,\n};\n\nexport default GreySmallText;\n","import React from 'react';\nimport { Field } from 'redux-form';\nimport propTypes from 'prop-types';\nimport { Checkbox } from '@patternfly/react-core';\n\nconst CheckboxFieldArray = ({ input, options }) => {\n  const { name, onChange } = input;\n  const inputValue = input.value;\n\n  const handleChange = (checked, value) => {\n    const arr = [...new Set(inputValue)];\n    if (checked) {\n      arr.push(value);\n    } else {\n      arr.splice(arr.indexOf(value), 1);\n    }\n\n    return onChange(arr);\n  };\n\n  return (\n    <React.Fragment>\n      {options.map(({ label, value, defaultChecked }, index) => (\n        <Checkbox\n          key={value}\n          id={value}\n          label={label}\n          name={`${name}[${index}]`}\n          value={value}\n          isChecked={\n            inputValue === '' ? defaultChecked : inputValue.includes(value)\n          }\n          onChange={(checked) => handleChange(checked, value)}\n        />\n      ))}\n    </React.Fragment>\n  );\n};\n\nCheckboxFieldArray.propTypes = {\n  input: propTypes.shape({\n    name: propTypes.string.isRequired,\n    onChange: propTypes.func,\n    value: propTypes.string,\n  }),\n  options: propTypes.arrayOf(\n    propTypes.shape({\n      label: propTypes.string.isRequired,\n      value: propTypes.string.isRequired,\n      defaultChecked: propTypes.bool,\n    })\n  ).isRequired,\n};\n\nconst CheckboxGroup = (props) => (\n  <Field {...props} type=\"checkbox\" component={CheckboxFieldArray} />\n);\n\nCheckboxGroup.propTypes = {\n  options: propTypes.arrayOf(\n    propTypes.shape({\n      label: propTypes.string.isRequired,\n      value: propTypes.string.isRequired,\n      defaultChecked: propTypes.bool,\n    })\n  ).isRequired,\n};\n\nexport { CheckboxFieldArray };\nexport default CheckboxGroup;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport Truncate from '@redhat-cloud-services/frontend-components/Truncate';\nimport {\n  Grid,\n  GridItem,\n  Label,\n  TextContent,\n  Text,\n  Tooltip,\n  Radio,\n} from '@patternfly/react-core';\n\nconst InUseProfileLabel = () => (\n  <Tooltip\n    position=\"right\"\n    content=\"A policy of this type is already in use.\n        Only one policy per policy type can be created for a major release of RHEL.\"\n  >\n    <Label color=\"orange\" style={{ lineHeight: '1.5em' }}>\n      In use\n    </Label>\n  </Tooltip>\n);\n\nconst ProfileTypeSelect = ({ profiles, onChange, selectedProfile }) => (\n  <React.Fragment>\n    {profiles?.length === 0 && (\n      <TextContent style={{ color: 'var(--pf-c-content--blockquote--Color)' }}>\n        <Text>Select an operating system to view policy types.</Text>\n      </TextContent>\n    )}\n\n    <Grid hasGutter>\n      {profiles.map((profile) => {\n        const { description, name, id, disabled } = profile;\n        return (\n          <React.Fragment key={`profile-select-${id}`}>\n            <GridItem span={8} rowSpan={2}>\n              <Radio\n                id={`profile-select-text-${id}`}\n                label={\n                  <>\n                    {` ${name} `}\n                    {disabled && <InUseProfileLabel />}\n                  </>\n                }\n                isDisabled={disabled}\n                description={\n                  <Truncate\n                    inline\n                    key={`profile-select-text-${id}`}\n                    length={190}\n                    text={description}\n                  />\n                }\n                isChecked={selectedProfile === JSON.stringify(profile)}\n                onChange={(_, event) => onChange(event.currentTarget?.value)}\n                value={JSON.stringify(profile)}\n              />\n            </GridItem>\n          </React.Fragment>\n        );\n      })}\n    </Grid>\n  </React.Fragment>\n);\n\nProfileTypeSelect.propTypes = {\n  profiles: propTypes.array,\n  onChange: propTypes.func,\n  selectedProfile: propTypes.object,\n};\n\nProfileTypeSelect.defaultProps = {\n  profiles: [],\n  onClick: () => ({}),\n};\n\nexport default ProfileTypeSelect;\n","import React from 'react';\nimport {\n  QuestionCircleIcon,\n  CheckCircleIcon,\n  ExclamationCircleIcon,\n} from '@patternfly/react-icons';\nimport { Text, Tooltip } from '@patternfly/react-core';\nimport { fixedPercentage } from 'Utilities/TextHelper';\n\nconst CompliantIcon = (system) => {\n  if (system.rulesPassed + system.rulesFailed === 0) {\n    return <QuestionCircleIcon color=\"var(--pf-global--disabled-color--100)\" />;\n  } else {\n    return system.compliant ? (\n      <CheckCircleIcon color=\"var(--pf-global--success-color--200)\" />\n    ) : (\n      <ExclamationCircleIcon color=\"var(--pf-global--danger-color--100)\" />\n    );\n  }\n};\n\nexport const complianceScoreString = (system) => {\n  if (system.supported === false) {\n    return ' Unsupported';\n  } else if (system.rulesPassed + system.rulesFailed === 0) {\n    return ' N/A';\n  }\n\n  return ' ' + fixedPercentage(system.score);\n};\n\nconst ComplianceScore = (system) => (\n  <Text>\n    {system.supported ? (\n      <Tooltip\n        content={\n          'The system compliance score is calculated by OpenSCAP and ' +\n          'is a normalized weighted sum of rules selected for this policy.'\n        }\n      >\n        <CompliantIcon\n          key={`system-compliance-icon-${system.id}`}\n          {...system}\n        />\n        {complianceScoreString(system)}\n      </Tooltip>\n    ) : (\n      complianceScoreString(system)\n    )}\n  </Text>\n);\n\nexport default ComplianceScore;\n","import React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nconst PolicyDetailsContentLoader = () => (\n  <ContentLoader\n    speed={2}\n    width={1000}\n    height={400}\n    viewBox=\"0 0 1000 400\"\n    backgroundcolor=\"#f3f3f3\"\n    foregroundcolor=\"#ecebeb\"\n  >\n    <rect x=\"-3\" y=\"7\" rx=\"3\" ry=\"3\" width=\"760\" height=\"19\" />\n    <rect x=\"823\" y=\"3\" rx=\"3\" ry=\"3\" width=\"67\" height=\"29\" />\n    <rect x=\"910\" y=\"3\" rx=\"3\" ry=\"3\" width=\"67\" height=\"29\" />\n    <rect x=\"6\" y=\"54\" rx=\"0\" ry=\"0\" width=\"46\" height=\"19\" />\n    <rect x=\"68\" y=\"54\" rx=\"0\" ry=\"0\" width=\"46\" height=\"19\" />\n    <rect x=\"133\" y=\"54\" rx=\"0\" ry=\"0\" width=\"46\" height=\"19\" />\n    <rect x=\"3\" y=\"110\" rx=\"0\" ry=\"0\" width=\"255\" height=\"17\" />\n    <rect x=\"1\" y=\"149\" rx=\"0\" ry=\"0\" width=\"47\" height=\"16\" />\n    <rect x=\"1\" y=\"185\" rx=\"0\" ry=\"0\" width=\"255\" height=\"17\" />\n    <rect x=\"-1\" y=\"224\" rx=\"0\" ry=\"0\" width=\"187\" height=\"16\" />\n    <rect x=\"-4\" y=\"267\" rx=\"0\" ry=\"0\" width=\"255\" height=\"17\" />\n    <rect x=\"-6\" y=\"306\" rx=\"0\" ry=\"0\" width=\"47\" height=\"16\" />\n    <rect x=\"-6\" y=\"342\" rx=\"0\" ry=\"0\" width=\"255\" height=\"17\" />\n    <rect x=\"-8\" y=\"381\" rx=\"0\" ry=\"0\" width=\"187\" height=\"16\" />\n  </ContentLoader>\n);\n\nexport default PolicyDetailsContentLoader;\n","import React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nconst ReportDetailsContentLoader = () => (\n  <ContentLoader\n    height={320}\n    width={1550}\n    speed={2}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n  >\n    <rect x=\"18\" y=\"50\" rx=\"4\" ry=\"4\" width=\"478\" height=\"15\" />\n    <rect x=\"19\" y=\"18\" rx=\"3\" ry=\"3\" width=\"220\" height=\"9\" />\n    <circle cx=\"118\" cy=\"156\" r=\"73\" />\n    <rect x=\"1002\" y=\"40\" rx=\"0\" ry=\"0\" width=\"69\" height=\"23\" />\n    <rect x=\"47\" y=\"77\" rx=\"0\" ry=\"0\" width=\"0\" height=\"0\" />\n    <rect x=\"36\" y=\"77\" rx=\"0\" ry=\"0\" width=\"16\" height=\"0\" />\n    <rect x=\"409\" y=\"149\" rx=\"0\" ry=\"0\" width=\"0\" height=\"0\" />\n    <rect x=\"214\" y=\"145\" rx=\"0\" ry=\"0\" width=\"205\" height=\"9\" />\n    <rect x=\"216\" y=\"119\" rx=\"0\" ry=\"0\" width=\"205\" height=\"9\" />\n    <rect x=\"526\" y=\"100\" rx=\"0\" ry=\"0\" width=\"431\" height=\"8\" />\n    <rect x=\"526\" y=\"122\" rx=\"0\" ry=\"0\" width=\"431\" height=\"8\" />\n    <rect x=\"526\" y=\"146\" rx=\"0\" ry=\"0\" width=\"431\" height=\"8\" />\n    <rect x=\"527\" y=\"170\" rx=\"0\" ry=\"0\" width=\"431\" height=\"8\" />\n    <rect x=\"527\" y=\"194\" rx=\"0\" ry=\"0\" width=\"431\" height=\"8\" />\n    <rect x=\"527\" y=\"218\" rx=\"0\" ry=\"0\" width=\"431\" height=\"8\" />\n    <rect x=\"529\" y=\"275\" rx=\"0\" ry=\"0\" width=\"231\" height=\"7\" />\n  </ContentLoader>\n);\n\nexport default ReportDetailsContentLoader;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { fixedPercentage } from 'Utilities/TextHelper';\nimport {\n  PolicyBusinessObjectiveTooltip,\n  PolicyThresholdTooltip,\n} from 'PresentationalComponents';\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  TextContent,\n  TextVariants,\n  Text,\n} from '@patternfly/react-core';\nimport Truncate from '@redhat-cloud-services/frontend-components/Truncate';\nimport linkifyHtml from 'linkifyjs/html';\n\nconst PolicyDetailsDescription = ({ policy }) => (\n  <Card ouiaId=\"PolicyDetailsCard\">\n    <CardHeader>\n      <Text style={{ fontSize: 20 }}>\n        <b>Policy details</b>\n      </Text>\n    </CardHeader>\n    <CardBody>\n      <TextContent>\n        <Text component={TextVariants.h5}>\n          Compliance threshold\n          <PolicyThresholdTooltip />\n        </Text>\n        <Text className=\"threshold-tooltip\" component={TextVariants.p}>\n          {fixedPercentage(policy.complianceThreshold, 1)}\n        </Text>\n        <Text component={TextVariants.h5}>\n          Business objective\n          <PolicyBusinessObjectiveTooltip />\n        </Text>\n        <Text component={TextVariants.p}>\n          {(policy.businessObjective && policy.businessObjective.title) || '-'}\n        </Text>\n        <Text component={TextVariants.h5}>Policy description</Text>\n        <Text component={TextVariants.p}>\n          <Truncate\n            text={linkifyHtml(policy.description || '')}\n            length={380}\n            inline={true}\n          />\n        </Text>\n        <Text component={TextVariants.h5}>Operating system</Text>\n        <Text component={TextVariants.p}>RHEL {policy.majorOsVersion}</Text>\n        <Text component={TextVariants.h5}>Policy type </Text>\n        <Text component={TextVariants.p}>{policy.policyType}</Text>\n        <Text component={TextVariants.h5}>Reference ID</Text>\n        <Text component={TextVariants.p}>{policy.refId}</Text>\n      </TextContent>\n    </CardBody>\n  </Card>\n);\n\nPolicyDetailsDescription.propTypes = {\n  policy: propTypes.object,\n};\n\nexport default PolicyDetailsDescription;\n","import React from 'react';\nimport { fixedPercentage } from 'Utilities/TextHelper';\nimport propTypes from 'prop-types';\nimport {\n  Text,\n  TextContent,\n  TextList,\n  TextListVariants,\n  TextListItem,\n  TextListItemVariants,\n} from '@patternfly/react-core';\nimport { Link } from 'react-router-dom';\n\nconst PropTypes = {\n  children: propTypes.node,\n};\n\nconst Dt = ({ children, ...props }) => (\n  <TextListItem {...props} component={TextListItemVariants.dt}>\n    {children}\n  </TextListItem>\n);\nDt.propTypes = PropTypes;\n\nconst Dd = ({ children, ...props }) => (\n  <TextListItem {...props} component={TextListItemVariants.dd}>\n    {children}\n  </TextListItem>\n);\nDd.propTypes = PropTypes;\n\nconst PolicyDescription = ({ profile }) => (\n  <React.Fragment>\n    <TextList component={TextListVariants.dl}>\n      <Dt>\n        <Text className=\"ins-c-non-bold-h2\">Policy details</Text>\n      </Dt>\n      <Dt>Operating system</Dt>\n      <Dd>RHEL {profile.majorOsVersion}</Dd>\n      <Dt>Compliance threshold</Dt>\n      <Dd>{fixedPercentage(profile.complianceThreshold, 1)}</Dd>\n      <Dt>Business objective</Dt>\n      <Dd>\n        {profile.businessObjective ? profile.businessObjective.title : '--'}\n      </Dd>\n    </TextList>\n    <Link to={'/scappolicies/' + profile.policy.id}>View policy</Link>\n  </React.Fragment>\n);\n\nPolicyDescription.propTypes = {\n  profile: propTypes.shape({\n    id: propTypes.string,\n    complianceThreshold: propTypes.number,\n    businessObjective: propTypes.object,\n    majorOsVersion: propTypes.string,\n    policy: propTypes.shape({\n      id: propTypes.string,\n    }),\n    benchmark: propTypes.shape({\n      version: propTypes.string,\n    }),\n  }),\n};\n\nconst ReportDetailsDescription = ({ profile }) => (\n  <TextContent className=\"policy-details\">\n    <PolicyDescription {...{ profile }} />\n  </TextContent>\n);\n\nReportDetailsDescription.propTypes = {\n  profile: propTypes.object,\n};\n\nexport default ReportDetailsDescription;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport {\n  Progress,\n  ProgressVariant,\n} from '@patternfly/react-core/dist/js/components/Progress';\n\nconst ProgressBar = ({ percent, failed }) => {\n  let variant;\n  let title;\n\n  if (percent === 100) {\n    title = 'Success';\n    variant = ProgressVariant.success;\n  } else if (failed) {\n    title = 'Error';\n    variant = ProgressVariant.danger;\n  } else {\n    title = 'Progress';\n    variant = ProgressVariant.info;\n  }\n\n  return (\n    <Progress\n      id={'finished-create-policy'}\n      value={percent}\n      title={title}\n      variant={variant}\n      className=\"wizard-progress-bar\"\n    />\n  );\n};\n\nProgressBar.propTypes = {\n  percent: propTypes.number,\n  failed: propTypes.bool,\n};\n\nexport default ProgressBar;\n","import React from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport propTypes from 'prop-types';\nimport { Tabs } from '@patternfly/react-core';\nimport { useAnchor } from 'Utilities/Router';\n\n// Plain tab component without any styling\nexport const ContentTab = ({ children }) => children;\n\nconst findTab = (tabs, key) => tabs.find((tab) => tab.props.eventKey === key);\n\nconst useAnchorLevels = (defaultAnchor, level) => {\n  const anchor = useAnchor(defaultAnchor);\n  const levels = anchor.split('|');\n  const currentAnchor = levels[level] || defaultAnchor;\n\n  return {\n    levels,\n    currentAnchor,\n  };\n};\n\n// Shows always only one tab, either the current or if not available the default\nconst TabSwitcher = ({ children, activeKey: currentAnchor, defaultTab }) => {\n  const getDefaultTab = () =>\n    defaultTab ? findTab(children, defaultTab) : children[0];\n  const currentTab = findTab(children, currentAnchor);\n\n  return currentTab ? [currentTab] : [getDefaultTab()];\n};\n\nTabSwitcher.propTypes = {\n  activeTab: propTypes.number,\n  children: propTypes.node,\n};\n\n// Routed Plain switcher that can be used with PatternFly tabs\nexport const RoutedTabSwitcher = ({ children, defaultTab, level }) => {\n  const { currentAnchor } = useAnchorLevels(defaultTab, level);\n\n  return <TabSwitcher activeKey={currentAnchor}>{children}</TabSwitcher>;\n};\n\nRoutedTabSwitcher.propTypes = {\n  children: propTypes.node,\n  defaultTab: propTypes.string,\n  level: propTypes.number,\n};\n\nRoutedTabSwitcher.defaultProps = {\n  level: 0,\n};\n\n// Allows to use full PatternFly tabs and switch them using the URL hash\n// It can be used with filled tabs (EditPolicyForm) or just tab \"buttons\" (PolicyDetails)\nexport const RoutedTabs = ({\n  children,\n  defaultTab,\n  level,\n  ouiaId,\n  ...props\n}) => {\n  const { push } = useHistory();\n  const { pathname, state } = useLocation();\n  const { currentAnchor, levels } = useAnchorLevels(defaultTab, level);\n  const handleTabSelect = (e, eventKey) => {\n    e.preventDefault();\n    const tabToActivate = eventKey.replace('#', '');\n    let tabAnchor = levels;\n    tabAnchor[level] = tabToActivate;\n\n    push({\n      state,\n      to: pathname,\n      hash: tabAnchor.slice(0, level + 1).join('|'),\n    });\n  };\n  const tabAvailable = children\n    .map(({ props: { eventKey } }) => eventKey)\n    .find((tabAnchor) => tabAnchor === currentAnchor);\n\n  return (\n    <Tabs\n      {...props}\n      ouiaId={ouiaId}\n      onSelect={handleTabSelect}\n      activeKey={tabAvailable ? currentAnchor : defaultTab}\n    >\n      {children}\n    </Tabs>\n  );\n};\n\nRoutedTabs.defaultProps = {\n  level: 0,\n};\n\nRoutedTabs.propTypes = {\n  children: propTypes.node,\n  defaultTab: propTypes.string,\n  level: propTypes.number,\n  ouiaId: propTypes.string,\n};\n\nexport default TabSwitcher;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { ErrorPage } from 'PresentationalComponents';\n\nexport const StateViewPart = ({ children }) => children;\n\nconst props = {\n  stateValues: propTypes.object,\n  children: propTypes.node,\n};\n\nexport const StateView = ({ stateValues, children }) =>\n  children\n    .flatMap((c) => c)\n    .filter((child) => stateValues[child.props.stateKey]);\n\nStateView.propTypes = props;\n\nexport const StateViewWithError = ({ stateValues, children }) => (\n  <StateView stateValues={stateValues}>\n    <StateViewPart key=\"error-state\" stateKey=\"error\">\n      <ErrorPage error={stateValues.error} />\n    </StateViewPart>\n    {children}\n  </StateView>\n);\n\nStateViewWithError.propTypes = props;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport { WarningText } from 'PresentationalComponents';\n\nconst WARNING_TEXT = 'Policies without systems will not have reports.';\n\nconst WithOptionalToolTip = ({ showTooltip, children }) =>\n  showTooltip ? (\n    <Tooltip position={TooltipPosition.bottom} content={WARNING_TEXT}>\n      {children}\n    </Tooltip>\n  ) : (\n    children\n  );\n\nWithOptionalToolTip.propTypes = {\n  showTooltip: propTypes.bool,\n  children: propTypes.node,\n};\n\nconst SystemsCountWarning = ({ count, variant }) => {\n  let text;\n\n  switch (variant) {\n    case 'count':\n      text = count;\n      break;\n    case 'compact':\n      text = 'No Systems';\n      break;\n    case 'full':\n      text = WARNING_TEXT;\n      break;\n    default:\n      text = count;\n  }\n\n  return (\n    <WithOptionalToolTip\n      showTooltip={variant === 'count' || variant === 'compact'}\n    >\n      <WarningText>{text}</WarningText>\n    </WithOptionalToolTip>\n  );\n};\n\nSystemsCountWarning.defaultProps = {\n  variant: 'compact',\n};\n\nSystemsCountWarning.propTypes = {\n  count: propTypes.number.isRequired,\n  variant: propTypes.string,\n};\n\nexport { WARNING_TEXT };\nexport default SystemsCountWarning;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Text } from '@patternfly/react-core';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\n\nconst WarningText = ({ children }) => (\n  <React.Fragment>\n    <ExclamationTriangleIcon className=\"ins-u-warning\" />\n    <Text component=\"span\" className=\"ins-c-warning-text\">\n      &nbsp;{children}\n    </Text>\n  </React.Fragment>\n);\n\nWarningText.propTypes = {\n  children: propTypes.node,\n};\n\nexport default WarningText;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst BackgroundLink = ({\n  to,\n  hash,\n  children,\n  state: desiredState,\n  backgroundLocation,\n  ...props\n}) => {\n  const currentLocation = useLocation();\n  const background = { ...currentLocation, ...backgroundLocation };\n  const state = { ...desiredState, background };\n\n  return (\n    <Link to={{ pathname: to, state, hash }} {...props}>\n      {children}\n    </Link>\n  );\n};\n\nBackgroundLink.propTypes = {\n  backgroundLocation: propTypes.object,\n  children: propTypes.node,\n  hash: propTypes.string,\n  state: propTypes.object,\n  to: propTypes.string.isRequired,\n};\n\nexport default BackgroundLink;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Link as ReactRouterLink } from 'react-router-dom';\nimport { BreadcrumbItem } from '@patternfly/react-core';\n\nconst RouterLink = ({ href, ...props }) => (\n  <ReactRouterLink {...props} to={href} />\n);\n\nRouterLink.propTypes = {\n  href: propTypes.string,\n};\n\nconst BreadcrumbLinkItem = ({ children, ...props }) => (\n  <BreadcrumbItem {...props} component={RouterLink}>\n    {children}\n  </BreadcrumbItem>\n);\n\nBreadcrumbLinkItem.propTypes = {\n  children: propTypes.node,\n};\n\nexport default BreadcrumbLinkItem;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Button, TextContent, Text, Progress } from '@patternfly/react-core';\nimport { DownloadIcon } from '@patternfly/react-icons';\nimport { Link } from 'react-router-dom';\nimport {\n  BackgroundLink,\n  PolicyPopover,\n  GreySmallText,\n  UnsupportedSSGVersion,\n} from 'PresentationalComponents';\n\nexport const Name = (profile) => (\n  <TextContent>\n    <Link to={'/reports/' + profile.id} style={{ marginRight: '.5rem' }}>\n      {profile.policy?.name}\n    </Link>\n    <React.Fragment>\n      <PolicyPopover {...{ profile, position: 'right' }} />\n      <GreySmallText>{profile.policyType}</GreySmallText>\n    </React.Fragment>\n  </TextContent>\n);\n\nName.propTypes = {\n  profile: propTypes.object,\n};\n\nexport const OperatingSystem = ({\n  majorOsVersion,\n  ssgVersion,\n  unsupportedHostCount,\n  policy,\n}) => {\n  const supported = unsupportedHostCount === 0;\n  ssgVersion = 'SSG: ' + ssgVersion;\n\n  return (\n    <React.Fragment>\n      RHEL {majorOsVersion}\n      {policy === null && ssgVersion && (\n        <Text>\n          <GreySmallText>\n            {supported ? (\n              ssgVersion\n            ) : (\n              <UnsupportedSSGVersion>{ssgVersion}</UnsupportedSSGVersion>\n            )}\n          </GreySmallText>\n        </Text>\n      )}\n    </React.Fragment>\n  );\n};\n\nOperatingSystem.propTypes = {\n  majorOsVersion: propTypes.string,\n  ssgVersion: propTypes.string,\n  unsupportedHostCount: propTypes.number,\n  policy: propTypes.object,\n};\n\nexport const CompliantSystems = ({\n  testResultHostCount = 0,\n  compliantHostCount = 0,\n  unsupportedHostCount = 0,\n}) => {\n  const tooltipText =\n    'Insights cannot provide a compliance score for systems running an unsupported ' +\n    'version of the SSG at the time this report was created, as the SSG version was not supported by RHEL.';\n  return (\n    <React.Fragment>\n      <Progress\n        aria-label=\"Compliant systems\"\n        measureLocation={'outside'}\n        value={\n          testResultHostCount\n            ? (100 / testResultHostCount) * compliantHostCount\n            : 0\n        }\n      />\n      <GreySmallText>\n        {`${compliantHostCount} of ${testResultHostCount} systems `}\n\n        {unsupportedHostCount > 0 && (\n          <UnsupportedSSGVersion\n            {...{ tooltipText }}\n            style={{ marginLeft: '.5em' }}\n          >\n            <strong className=\"ins-c-warning-text\">\n              {unsupportedHostCount} unsupported\n            </strong>\n          </UnsupportedSSGVersion>\n        )}\n      </GreySmallText>\n    </React.Fragment>\n  );\n};\n\nCompliantSystems.propTypes = {\n  testResultHostCount: propTypes.number,\n  compliantHostCount: propTypes.number,\n  unsupportedHostCount: propTypes.number,\n};\n\nexport const PDFExportDownload = (profile) => {\n  return (\n    <BackgroundLink to={`/reports/${profile.id}/pdf`}>\n      <Button\n        ouiaId=\"ReportsDownloadReportPDFLink\"\n        variant=\"plain\"\n        className=\"pf-u-mr-md\"\n      >\n        <DownloadIcon />\n      </Button>\n    </BackgroundLink>\n  );\n};\n","import { fitContent } from '@patternfly/react-table';\nimport { renderComponent } from 'Utilities/helpers';\nimport {\n  Name as NameCell,\n  OperatingSystem as OperatingSystemCell,\n  CompliantSystems as CompliantSystemsCell,\n  PDFExportDownload as PDFExportDownloadCell,\n} from './Cells';\n\nexport const Name = {\n  title: 'Policy',\n  sortByProp: 'name',\n  props: {\n    width: 60,\n  },\n  exportKey: 'name',\n  renderFunc: renderComponent(NameCell),\n};\n\nexport const OperatingSystem = {\n  title: 'Operating system',\n  transforms: [fitContent],\n  sortByProp: 'majorOsVersion',\n  props: {\n    width: 20,\n  },\n  renderExport: ({ majorOsVersion }) => `RHEL ${majorOsVersion} `,\n  renderFunc: renderComponent(OperatingSystemCell),\n};\n\nexport const CompliantSystems = {\n  title: 'Systems meeting compliance',\n  transforms: [fitContent],\n  sortByFunction: ({ testResultHostCount, compliantHostCount }) =>\n    (100 / testResultHostCount) * compliantHostCount,\n  props: {\n    width: 20,\n  },\n  renderExport: ({\n    testResultHostCount = 0,\n    compliantHostCount = 0,\n    unsupportedHostCount = 0,\n  }) =>\n    `${compliantHostCount} of ${testResultHostCount} systems${\n      unsupportedHostCount > 0 ? ` | ${unsupportedHostCount} unsupported` : ''\n    }`,\n  renderFunc: renderComponent(CompliantSystemsCell),\n};\n\nexport const PDFExportDownload = {\n  title: '',\n  renderFunc: renderComponent(PDFExportDownloadCell),\n  managable: false,\n};\n\nconst PolicyType = {\n  title: 'Policy Type',\n  renderExport: (profile) => profile.policyType,\n};\n\nexport const exportableColumns = [\n  Name,\n  PolicyType,\n  OperatingSystem,\n  CompliantSystems,\n];\n\nexport default [Name, OperatingSystem, CompliantSystems];\n","import { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\n\nexport const policyNameFilter = [\n  {\n    type: conditionalFilterType.text,\n    label: 'Policy name',\n    filter: (profiles, value) => {\n      const lowerCaseValue = value.toLowerCase();\n      return profiles.filter((profile) =>\n        [profile.name, profile.policy.name]\n          .join()\n          .toLowerCase()\n          .includes(lowerCaseValue)\n      );\n    },\n  },\n];\n\nexport const policyTypeFilter = (policyTypes) => [\n  {\n    type: conditionalFilterType.checkbox,\n    label: 'Policy type',\n    filter: (profiles, values) =>\n      profiles.filter(({ policyType }) => values.includes(policyType)),\n    items: policyTypes.map((policyType) => ({\n      label: policyType,\n      value: policyType,\n    })),\n  },\n];\n\nexport const operatingSystemFilter = (operatingSystems) => [\n  {\n    type: conditionalFilterType.checkbox,\n    label: 'Operating system',\n    filter: (profiles, values) =>\n      profiles.filter(({ majorOsVersion }) => values.includes(majorOsVersion)),\n    items: operatingSystems.map((operatingSystem) => ({\n      label: `RHEL ${operatingSystem}`,\n      value: operatingSystem,\n    })),\n  },\n];\n\nexport const policyComplianceFilter = [\n  {\n    type: conditionalFilterType.checkbox,\n    label: 'Systems meeting compliance',\n    filter: (profiles, values) =>\n      profiles.filter(({ testResultHostCount, compliantHostCount }) => {\n        const compliantHostsPercent = Math.round(\n          (100 / testResultHostCount) * compliantHostCount\n        );\n        const matching = values\n          .map((value) => {\n            const [min, max] = value.split('-');\n            return compliantHostsPercent >= min && compliantHostsPercent <= max;\n          })\n          .filter((i) => !!i);\n        return matching.length > 0;\n      }),\n    items: [\n      { label: '90 - 100%', value: '90-100' },\n      { label: '70 - 89%', value: '70-89' },\n      { label: '50 - 69%', value: '50-69' },\n      { label: 'Less than 50%', value: '0-49' },\n    ],\n  },\n];\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { COMPLIANCE_TABLE_DEFAULTS } from '@/constants';\nimport { emptyRows } from 'PresentationalComponents';\nimport { TableToolsTable } from 'Utilities/hooks/useTableTools';\nimport { uniq } from 'Utilities/helpers';\nimport useFeature from 'Utilities/hooks/useFeature';\nimport columns, { exportableColumns, PDFExportDownload } from './Columns';\nimport {\n  policyNameFilter,\n  policyTypeFilter,\n  operatingSystemFilter,\n  policyComplianceFilter,\n} from './Filters';\n\nconst ReportsTable = ({ profiles }) => {\n  const manageColumnsEnabled = useFeature('manageColumns');\n  const pdfReportEnabled = useFeature('pdfReport');\n  const policyTypes = uniq(\n    profiles.map(({ policyType }) => policyType).filter((i) => !!i)\n  );\n  const operatingSystems = uniq(\n    profiles.map(({ majorOsVersion }) => majorOsVersion).filter((i) => !!i)\n  );\n\n  return (\n    <TableToolsTable\n      aria-label=\"Reports\"\n      ouiaId=\"ReportsTable\"\n      columns={[\n        ...columns,\n        ...((pdfReportEnabled && [PDFExportDownload]) || []),\n      ]}\n      items={profiles}\n      emptyRows={emptyRows}\n      isStickyHeader\n      filters={{\n        filterConfig: [\n          ...policyNameFilter,\n          ...((policyTypes.length > 0 && policyTypeFilter(policyTypes)) || []),\n          ...((operatingSystems.length > 0 &&\n            operatingSystemFilter(operatingSystems)) ||\n            []),\n          ...policyComplianceFilter,\n        ],\n      }}\n      options={{\n        ...COMPLIANCE_TABLE_DEFAULTS,\n        exportable: {\n          ...COMPLIANCE_TABLE_DEFAULTS.exportable,\n          columns: exportableColumns,\n        },\n        manageColumns: manageColumnsEnabled,\n      }}\n    />\n  );\n};\n\nReportsTable.propTypes = {\n  profiles: propTypes.array,\n};\n\nexport default ReportsTable;\n","import React from 'react';\nimport { Button } from '@patternfly/react-core';\nimport ComplianceEmptyState from '../ComplianceEmptyState';\nimport { BackgroundLink } from 'PresentationalComponents';\n\nconst ReportsEmptyState = () => (\n  <ComplianceEmptyState\n    title={'No policies are reporting'}\n    mainButton={\n      <BackgroundLink to=\"/scappolicies/new\">\n        <Button variant=\"primary\" ouiaId=\"CreateNewPolicyButton\">\n          Create new policy\n        </Button>\n      </BackgroundLink>\n    }\n  />\n);\n\nexport default ReportsEmptyState;\n","import React from 'react';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport {\n  Button,\n  Popover,\n  Text,\n  TextList,\n  TextListVariants,\n  TextListItem,\n  TextListItemVariants,\n  TextContent,\n  TextVariants,\n} from '@patternfly/react-core';\nimport { fixedPercentage } from 'Utilities/TextHelper';\nimport { Link } from 'react-router-dom';\nimport propTypes from 'prop-types';\n\nconst PolicyPopover = ({ profile, position = 'top' }) => {\n  const {\n    policy,\n    policyType,\n    complianceThreshold,\n    majorOsVersion,\n    businessObjective,\n  } = profile;\n  return (\n    <Popover\n      {...{ position }}\n      headerContent={\n        <TextContent>\n          {policy?.name}\n          <Text component={TextVariants.small}>{policyType}</Text>\n        </TextContent>\n      }\n      footerContent={\n        <Link to={'/scappolicies/' + policy?.id}>View policy</Link>\n      }\n      bodyContent={\n        <TextContent className=\"policy-details\">\n          <TextList component={TextListVariants.dl}>\n            <TextListItem component={TextListItemVariants.dt}>\n              Operating system\n            </TextListItem>\n            <TextListItem component={TextListItemVariants.dd}>\n              RHEL {majorOsVersion}\n            </TextListItem>\n            <TextListItem component={TextListItemVariants.dt}>\n              Compliance threshold\n            </TextListItem>\n            <TextListItem component={TextListItemVariants.dd}>\n              {fixedPercentage(complianceThreshold, 1)}\n            </TextListItem>\n            {businessObjective && (\n              <React.Fragment>\n                <TextListItem component={TextListItemVariants.dt}>\n                  Business objective\n                </TextListItem>\n                <TextListItem component={TextListItemVariants.dd}>\n                  {businessObjective.title}\n                </TextListItem>\n              </React.Fragment>\n            )}\n          </TextList>\n        </TextContent>\n      }\n    >\n      <Button variant=\"link\" ouiaId=\"PopoverViewPolicyLink\" isInline>\n        <OutlinedQuestionCircleIcon className=\"grey-icon\" />\n      </Button>\n    </Popover>\n  );\n};\n\nPolicyPopover.propTypes = {\n  profile: propTypes.object,\n  position: propTypes.string,\n};\n\nexport default PolicyPopover;\n","import React, { Fragment } from 'react';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport { Tooltip } from '@patternfly/react-core';\n\nconst PolicyThresholdTooltip = () => (\n  <Tooltip\n    position=\"right\"\n    content={\n      <Fragment>\n        The compliance threshold defines what percentage of rules must be met in\n        order for a system to be determined &quot;compliant&quot;.\n      </Fragment>\n    }\n  >\n    <span>\n      &nbsp;\n      <OutlinedQuestionCircleIcon className=\"grey-icon\" />\n    </span>\n  </Tooltip>\n);\n\nexport default PolicyThresholdTooltip;\n","import React, { Fragment } from 'react';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport { Tooltip } from '@patternfly/react-core';\n\nconst PolicyBusinessObjectiveTooltip = () => (\n  <Tooltip\n    position=\"right\"\n    content={\n      <Fragment>\n        This is an optional field that can be used to label policies that are\n        related to specific business objectives.\n      </Fragment>\n    }\n  >\n    <span>\n      &nbsp;\n      <OutlinedQuestionCircleIcon className=\"grey-icon\" />\n    </span>\n  </Tooltip>\n);\n\nexport default PolicyBusinessObjectiveTooltip;\n","import React from 'react';\nimport {\n  Bullseye,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateVariant,\n  Title,\n} from '@patternfly/react-core';\nimport EmptyTable from '@redhat-cloud-services/frontend-components/EmptyTable';\n\nconst NoResultsTable = () => (\n  <EmptyTable>\n    <Bullseye>\n      <EmptyState variant={EmptyStateVariant.full}>\n        <Title headingLevel=\"h5\" size=\"lg\">\n          No matching policies found\n        </Title>\n        <EmptyStateBody>\n          This filter criteria matches no policies. <br /> Try changing your\n          filter settings.\n        </EmptyStateBody>\n      </EmptyState>\n    </Bullseye>\n  </EmptyTable>\n);\n\nexport const emptyRows = [\n  {\n    cells: [\n      {\n            title: () => (<NoResultsTable />),  // eslint-disable-line\n        props: {\n          colSpan: 3,\n        },\n      },\n    ],\n  },\n];\n\nexport default NoResultsTable;\n","import { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\n\nexport const nameFilter = {\n  type: conditionalFilterType.text,\n  label: 'Name',\n  filter: (policies, value) =>\n    policies.filter((policy) =>\n      policy.name.toLowerCase().includes(value.toLowerCase())\n    ),\n};\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { Button } from '@patternfly/react-core';\nimport { COMPLIANCE_TABLE_DEFAULTS } from '@/constants';\nimport { BackgroundLink, emptyRows } from 'PresentationalComponents';\nimport { TableToolsTable } from 'Utilities/hooks/useTableTools';\nimport useFeature from 'Utilities/hooks/useFeature';\nimport columns, { exportableColumns } from './Columns';\nimport * as Filters from './Filters';\n\nconst DedicatedAction = () => (\n  <div>\n    <BackgroundLink to=\"/scappolicies/new\">\n      <Button variant=\"primary\" ouiaId=\"CreateNewPolicyButton\">\n        Create new policy\n      </Button>\n    </BackgroundLink>\n  </div>\n);\n\nexport const PoliciesTable = ({ policies, location, history }) => {\n  const manageColumnsEnabled = useFeature('manageColumns');\n  const filters = Object.values(Filters);\n\n  const actionResolver = () => [\n    {\n      title: 'Delete policy',\n      onClick: (_event, _index, { itemId: policyId }) => {\n        const policy = policies.find((policy) => policy.id === policyId);\n        history.push(`/scappolicies/${policyId}/delete`, {\n          policy,\n          background: location,\n        });\n      },\n    },\n    {\n      title: 'Edit policy',\n      onClick: (_event, _index, { itemId: policyId }) => {\n        const policy = policies.find((policy) => policy.id === policyId);\n        history.push(`/scappolicies/${policyId}/edit`, {\n          policy,\n          background: location,\n          state: { policy },\n        });\n      },\n    },\n  ];\n\n  return (\n    <TableToolsTable\n      aria-label=\"Policies\"\n      ouiaId=\"PoliciesTable\"\n      className=\"compliance-policies-table\"\n      columns={columns}\n      items={policies}\n      emptyRows={emptyRows}\n      isStickyHeader\n      filters={{\n        filterConfig: filters,\n      }}\n      options={{\n        ...COMPLIANCE_TABLE_DEFAULTS,\n        dedicatedAction: DedicatedAction,\n        exportable: {\n          ...COMPLIANCE_TABLE_DEFAULTS.exportable,\n          columns: exportableColumns,\n        },\n        manageColumns: manageColumnsEnabled,\n      }}\n      actionResolver={actionResolver}\n    />\n  );\n};\n\nPoliciesTable.propTypes = {\n  policies: propTypes.array.isRequired,\n  history: propTypes.object.isRequired,\n  location: propTypes.object.isRequired,\n};\n\nPoliciesTable.defaultProps = {\n  policies: [],\n};\n\nexport default withRouter(PoliciesTable);\n","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { FormGroup } from '@patternfly/react-core';\nimport { ReduxFormTextInput } from 'PresentationalComponents/ReduxFormWrappers/ReduxFormWrappers';\nimport propTypes from 'prop-types';\nimport { thresholdValid } from '../../SmartComponents/CreatePolicy/validate';\nimport {\n  PolicyThresholdTooltip,\n  ComplianceThresholdHelperText,\n} from 'PresentationalComponents';\n\nexport class ProfileThresholdField extends React.Component {\n  state = {\n    validThreshold: thresholdValid(this.props.previousThreshold),\n    threshold: this.props.previousThreshold,\n  };\n\n  handleThresholdChange = (threshold) => {\n    this.setState({\n      validThreshold: thresholdValid(threshold),\n      threshold: threshold,\n    });\n  };\n\n  render() {\n    const { threshold, validThreshold } = this.state;\n\n    return (\n      <React.Fragment>\n        <FormGroup\n          fieldId=\"policy-threshold\"\n          validated={validThreshold ? 'default' : 'error'}\n          helperTextInvalid={\n            <ComplianceThresholdHelperText threshold={threshold} />\n          }\n          helperText=\"A value of 95% or higher is recommended\"\n          labelIcon={<PolicyThresholdTooltip />}\n          label=\"Compliance threshold (%)\"\n        >\n          <Field\n            name=\"complianceThreshold\"\n            id=\"complianceThreshold\"\n            isRequired={true}\n            onChange={this.handleThresholdChange}\n            validated={validThreshold ? 'default' : 'error'}\n            defaultValue={threshold}\n            aria-label=\"compliance threshold\"\n            component={ReduxFormTextInput}\n            type=\"number\"\n            style={{ width: '60%', display: 'block' }}\n          />\n        </FormGroup>\n      </React.Fragment>\n    );\n  }\n}\n\nProfileThresholdField.propTypes = {\n  previousThreshold: propTypes.number,\n};\n\nexport default reduxForm({\n  form: 'policyForm',\n  destroyOnUnmount: false,\n  forceUnregisterOnUnmount: true,\n})(ProfileThresholdField);\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { HelperText, HelperTextItem } from '@patternfly/react-core';\nimport { hasMaxDecimals } from '../../SmartComponents/CreatePolicy/validate';\n\nconst ComplianceThresholdHelperText = ({ threshold }) => {\n  const parsedThreshold = parseFloat(threshold);\n\n  return (\n    <React.Fragment>\n      <HelperText>\n        {(parsedThreshold < 0 ||\n          parsedThreshold > 100 ||\n          isNaN(parsedThreshold)) && (\n          <HelperTextItem variant=\"error\">\n            Threshold has to be a number between 0 and 100\n          </HelperTextItem>\n        )}\n        {!hasMaxDecimals(parsedThreshold, 1) && (\n          <HelperTextItem variant=\"error\">\n            Threshold values can have a maximum of one decimal place\n          </HelperTextItem>\n        )}\n      </HelperText>\n    </React.Fragment>\n  );\n};\n\nComplianceThresholdHelperText.propTypes = {\n  threshold: propTypes.string,\n};\n\nexport default ComplianceThresholdHelperText;\n","import React from 'react';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport { supportedConfigsLink } from '@/constants';\n\nconst SupportedSSGVersionsLink = () => (\n  <a target=\"_blank\" rel=\"noopener noreferrer\" href={supportedConfigsLink}>\n    Supported SSG versions <ExternalLinkAltIcon />\n  </a>\n);\n\nexport default SupportedSSGVersionsLink;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Popover, Tooltip, Text } from '@patternfly/react-core';\nimport {\n  ExclamationTriangleIcon,\n  OutlinedQuestionCircleIcon,\n} from '@patternfly/react-icons';\nimport { SupportedSSGVersionsLink } from 'PresentationalComponents';\n\nconst UNSUPPORTED_SINGULAR_MESSAGE =\n  'This system was using an incompatible version of the SSG at the time this report was generated. ' +\n  'Assessment of rules failed/passed on this system is a best-guess effort and may not be accurate.';\n\nconst UNSUPPORTED_PLURAL_MESSAGE = (\n  <React.Fragment>\n    <Text variant=\"p\" style={{ marginBottom: '1rem' }}>\n      These systems are running unsupported versions of the SCAP Security Guide\n      (SSG) for the version of RHEL installed on them. Assessment of rules\n      failed/passed on these systems is a best-guess effort and may not be\n      accurate.\n    </Text>\n    <Text variant=\"p\">\n      The policy&apos;s compliance score excludes these systems.\n    </Text>\n  </React.Fragment>\n);\n\nconst WarningWithPopover = ({ children, variant = 'plural' }) => (\n  <Popover\n    id=\"unsupported-popover\"\n    maxWidth=\"25rem\"\n    headerContent=\"Unsupported SSG versions\"\n    bodyContent={\n      variant === 'plural'\n        ? UNSUPPORTED_PLURAL_MESSAGE\n        : UNSUPPORTED_SINGULAR_MESSAGE\n    }\n    footerContent={<SupportedSSGVersionsLink />}\n  >\n    {children}\n  </Popover>\n);\n\nWarningWithPopover.propTypes = {\n  children: propTypes.node,\n  variant: propTypes.oneOf(['singular', 'plural']),\n};\n\nconst WarningWithTooltip = ({ children, content }) => (\n  <Tooltip content={content} position=\"bottom\">\n    {children}\n  </Tooltip>\n);\n\nWarningWithTooltip.propTypes = {\n  content: propTypes.string,\n  children: propTypes.node,\n};\n\nconst TooltipOrPopover = ({ variant, children, tooltipProps }) => {\n  const { Component, componentProps } = {\n    tooltip: {\n      Component: WarningWithTooltip,\n      componentProps: tooltipProps,\n    },\n    popover: {\n      Component: WarningWithPopover,\n      componentProps: {\n        showHeader: tooltipProps.showPopupHeader,\n        variant: tooltipProps.messageVariant,\n      },\n    },\n  }[variant];\n\n  return <Component {...componentProps}>{children}</Component>;\n};\n\nTooltipOrPopover.propTypes = {\n  children: propTypes.node,\n  variant: propTypes.oneOf(['tooltip', 'popover']),\n  tooltipProps: propTypes.object,\n};\n\nconst UnsupportedSSGVersion = ({\n  children,\n  showWarningIcon = true,\n  showHelpIcon = false,\n  style,\n  tooltipText,\n  messageVariant,\n}) => {\n  const tooltipProps = {\n    ...(tooltipText && { content: <div>{tooltipText}</div> }),\n    messageVariant,\n  };\n  const variant = tooltipText ? 'tooltip' : 'popover';\n  const iconProps = {\n    variant,\n    tooltipProps,\n  };\n  const defaultStyle = !tooltipText ? { cursor: 'pointer' } : {};\n\n  return (\n    <span style={{ ...style, display: 'inline-block' }}>\n      {showWarningIcon && (\n        <TooltipOrPopover {...iconProps}>\n          <span style={defaultStyle} className=\"pf-u-mr-xs\">\n            <ExclamationTriangleIcon color=\"var(--pf-global--warning-color--100)\" />\n          </span>\n        </TooltipOrPopover>\n      )}\n\n      {children}\n\n      {showHelpIcon && (\n        <TooltipOrPopover {...iconProps}>\n          <span style={defaultStyle} className=\"pf-u-ml-xs\">\n            <OutlinedQuestionCircleIcon />\n          </span>\n        </TooltipOrPopover>\n      )}\n    </span>\n  );\n};\n\nUnsupportedSSGVersion.propTypes = {\n  showWarningIcon: propTypes.bool,\n  showHelpIcon: propTypes.bool,\n  style: propTypes.object,\n  tooltipText: propTypes.string,\n  children: propTypes.node,\n  variant: propTypes.string,\n  messageVariant: propTypes.string,\n  showPopupHeader: propTypes.bool,\n};\n\nexport default UnsupportedSSGVersion;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Text } from '@patternfly/react-core';\n\nconst SubPageTitle = ({ children }) => (\n  <Text\n    component=\"h2\"\n    style={{\n      color: 'var(--pf-global--Color--200)',\n      lineHeight: '2rem',\n    }}\n  >\n    {children}\n  </Text>\n);\n\nSubPageTitle.propTypes = {\n  children: propTypes.node,\n};\n\nexport default SubPageTitle;\n","import React from 'react';\nimport {\n  EmptyStateBody,\n  EmptyState,\n  EmptyStateVariant,\n  Text,\n  TextContent,\n  TextVariants,\n  Title,\n  Bullseye,\n} from '@patternfly/react-core';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\nimport { WARNING_TEXT } from 'PresentationalComponents';\n\nconst NoSystemsTableWithWarning = () => (\n  <Bullseye>\n    <EmptyState variant={EmptyStateVariant.full}>\n      <Title headingLevel=\"h2\" size=\"lg\" style={{ fontWeight: 'bold' }}>\n        No systems on this policy\n      </Title>\n      <EmptyStateBody>\n        <TextContent>\n          <Text component={TextVariants.p}>\n            Add systems to this policy from the systems page\n          </Text>\n          <Text style={{ color: 'var(--pf-global--warning-color--100)' }}>\n            <ExclamationTriangleIcon /> {WARNING_TEXT}\n          </Text>\n        </TextContent>\n      </EmptyStateBody>\n    </EmptyState>\n  </Bullseye>\n);\n\nexport default NoSystemsTableWithWarning;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ConditionalLink = ({ children, href, ...additionalProps }) =>\n  (href && (\n    <a href={href} {...additionalProps}>\n      {children}\n    </a>\n  )) ||\n  children ||\n  '';\n\nConditionalLink.propTypes = {\n  children: PropTypes.node,\n  href: PropTypes.string,\n};\n\nexport default ConditionalLink;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Modal } from '@patternfly/react-core';\n\n// Provides a modal with defaults used in compliance\nconst ComplianceModal = ({ children, className = '', ...props }) => {\n  return (\n    <Modal\n      className={`compliance${className ? ` ${className}` : ''}`}\n      {...props}\n    >\n      {children}\n    </Modal>\n  );\n};\n\nComplianceModal.propTypes = {\n  children: propTypes.node,\n  className: propTypes.string,\n};\n\nexport default ComplianceModal;\n","export const validateBenchmarkPage = (benchmark, osMajorVersion, profile) => {\n  if (benchmark && osMajorVersion && profile) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport const hasMaxDecimals = (num, dec) =>\n  new RegExp(`^[-]?\\\\d+(\\\\.\\\\d{1${dec > 1 ? ',' + dec : ''}})?$`, 'g').test(\n    num.toString()\n  );\n\nexport const thresholdValid = (threshold) => {\n  const parsedThreshold = parseFloat(threshold);\n  return (\n    parsedThreshold <= 100 &&\n    parsedThreshold >= 0 &&\n    hasMaxDecimals(parsedThreshold, 1)\n  );\n};\n\nexport const validateDetailsPage = (name, refId, complianceThreshold) =>\n  !name ||\n  !refId ||\n  !complianceThreshold ||\n  !thresholdValid(complianceThreshold)\n    ? false\n    : true;\n\nexport const validateRulesPage = (selectedRuleRefIds) =>\n  selectedRuleRefIds?.length > 0;\n\nexport const validateSystemsPage = (systemIds) => {\n  if (systemIds) {\n    return systemIds.length > 0;\n  } else {\n    return false;\n  }\n};\n","export const isNumberRange = (value) => value && !!value.match(/\\d\\d*-\\d\\d*/);\n\nexport const fixedPercentage = (value, fixed = 0, withPercent = true) => {\n  const fixedValue = value?.toFixed(fixed);\n  return fixedValue ? fixedValue + (withPercent ? '%' : '') : 'N/A';\n};\n\nexport const pluralize = (value, singular, plural) => {\n  if (!plural) {\n    plural = singular + 's';\n  }\n\n  return value > 1 || value === 0 ? plural : singular;\n};\n\nexport const stringToId = (string) => string.replace(' ', '').toLowerCase();\n","import React from 'react';\nimport natsort from 'natsort';\n\nexport const uniq = (collection) => [...new Set(collection)];\n\nexport const sortingByProp =\n  (propName, order = 'asc') =>\n  (objA, objB) => {\n    const descending = order != 'asc';\n    const propA = (objA && objA[propName]) || '';\n    const propB = (objB && objB[propName]) || '';\n\n    const sorter = natsort({ desc: descending });\n    return sorter(propA, propB);\n  };\n\n// eslint-disable-next-line react/display-name\nexport const renderComponent = (Component, props) => (_data, _id, entity) =>\n  <Component {...entity} {...props} />;\n\nconst getSortable = (property, item) => {\n  if (typeof property === 'function') {\n    return property(item);\n  } else {\n    return item[property];\n  }\n};\n\nexport const stringToId = (string) => string.split(' ').join('').toLowerCase();\n\nexport const orderArrayByProp = (property, objects, direction) =>\n  objects.sort((a, b) => {\n    if (direction === 'asc') {\n      return String(getSortable(property, a)).localeCompare(\n        String(getSortable(property, b))\n      );\n    } else {\n      return -String(getSortable(property, a)).localeCompare(\n        String(getSortable(property, b))\n      );\n    }\n  });\n\nexport const orderByArray = (objectArray, orderProp, orderArray, direction) => {\n  const sortedObjectArray = orderArray.flatMap((orderKey) =>\n    objectArray.filter((item) => item[orderProp] === orderKey)\n  );\n  return direction !== 'asc' ? sortedObjectArray.reverse() : sortedObjectArray;\n};\n\nexport const getProperty = (obj, path, fallback) => {\n  const parts = path.split('.');\n  const key = parts.shift();\n  if (typeof obj[key] !== 'undefined') {\n    return parts.length > 0\n      ? getProperty(obj[key], parts.join('.'), fallback)\n      : obj[key];\n  }\n\n  return fallback;\n};\n\nexport const camelCase = (string) =>\n  string\n    .split(/[-_\\W]+/g)\n    .map((string) => string.trim())\n    .map((string) => string[0].toUpperCase() + string.substring(1))\n    .join('');\n","import { useState } from 'react';\nimport { sortable } from '@patternfly/react-table';\nimport { orderArrayByProp, orderByArray, uniq } from 'Utilities/helpers';\n\nconst isSortable = (column) => column.sortByProp || column.sortByFunction;\n\nconst addSortableTransform = (columns) =>\n  columns.map((column) => ({\n    ...column,\n    ...(isSortable(column)\n      ? {\n          transforms: uniq([...(column?.transforms || []), sortable]),\n        }\n      : {}),\n  }));\n\nconst columnOffset = (options = {}) =>\n  (typeof options.onSelect === 'function') +\n  (typeof options.detailsComponent !== 'undefined');\n\nconst useTableSort = (columns, options = {}) => {\n  const [sortBy, setSortBy] = useState(\n    options.sortBy || {\n      index: 0,\n      direction: 'asc',\n    }\n  );\n  const onSort = (_, index, direction) =>\n    setSortBy({\n      index,\n      direction,\n    });\n  const currentSortableColumn = columns[sortBy.index - columnOffset(options)];\n  const sorter = (items) =>\n    currentSortableColumn?.sortByArray\n      ? orderByArray(\n          items,\n          currentSortableColumn?.sortByProp,\n          currentSortableColumn?.sortByArray,\n          sortBy.direction\n        )\n      : orderArrayByProp(\n          currentSortableColumn?.sortByProp ||\n            currentSortableColumn?.sortByFunction,\n          items,\n          sortBy.direction\n        );\n\n  return {\n    sorter,\n    tableProps: {\n      onSort,\n      sortBy,\n      cells: addSortableTransform(columns),\n    },\n  };\n};\n\nexport const useTableSortWithItems = (items, columns, options) => {\n  const { tableProps, sorter } = useTableSort(columns, options);\n\n  return {\n    tableProps: {\n      ...tableProps,\n      sortBy: items.length > 0 ? tableProps.sortBy : undefined,\n    },\n    sorter,\n  };\n};\n\nexport default useTableSort;\n","import { useState } from 'react';\n\nconst usePaginate = (options = {}) => {\n  const { perPage = 10 } = options;\n  const enablePagination = options?.pagination !== false;\n\n  const [paginationState, setPaginationState] = useState({\n    perPage,\n    page: 1,\n  });\n  const setPagination = (newState) =>\n    setPaginationState({\n      ...paginationState,\n      ...newState,\n    });\n\n  const onSetPage = (_, page) => setPagination({ ...paginationState, page });\n\n  const onPerPageSelect = (_, perPage) => setPagination({ page: 1, perPage });\n\n  const paginator = (items) => {\n    const { page, perPage } = paginationState;\n    const start = (page - 1) * perPage;\n    const end = start + perPage;\n\n    return items.slice(start, end);\n  };\n\n  const setPage = (page) => {\n    const nextPage = page < 0 ? paginationState.page + page : page;\n    setPagination({\n      page: nextPage > 0 ? nextPage : 1,\n    });\n  };\n\n  return enablePagination\n    ? {\n        paginator,\n        setPage,\n        toolbarProps: {\n          pagination: {\n            ...paginationState,\n            onSetPage,\n            onPerPageSelect,\n          },\n        },\n      }\n    : {};\n};\n\nexport default usePaginate;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport {\n  Bullseye,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateVariant,\n  Title,\n} from '@patternfly/react-core';\nimport EmptyTable from '@redhat-cloud-services/frontend-components/EmptyTable';\n\nexport const NoResultsTable = ({ kind = 'results' }) => (\n  <EmptyTable>\n    <Bullseye>\n      <EmptyState variant={EmptyStateVariant.full}>\n        <Title headingLevel=\"h5\" size=\"lg\">\n          No matching {kind} found\n        </Title>\n        <EmptyStateBody>\n          This filter criteria matches no {kind}.<br />\n          Try changing your filter settings.\n        </EmptyStateBody>\n      </EmptyState>\n    </Bullseye>\n  </EmptyTable>\n);\n\nNoResultsTable.propTypes = {\n  kind: propTypes.string,\n};\n\nexport const emptyRows = [\n  {\n    cells: [\n      {\n            title: () => (<NoResultsTable />),  // eslint-disable-line\n        props: {\n          colSpan: 3,\n        },\n      },\n    ],\n  },\n];\n\nexport default NoResultsTable;\n","import { emptyRows } from './Components/NoResultsTable';\n\nconst columnProp = (column) =>\n  column.key || column.original?.toLowerCase() || column.title?.toLowerCase();\n\nconst itemRow = (item, columns) => ({\n  ...item.rowProps,\n  itemId: item.itemId,\n  cells: columns.map((column) => ({\n    title: column.renderFunc\n      ? column.renderFunc(undefined, undefined, item)\n      : item[columnProp(column)],\n  })),\n});\n\nconst primeItem = (item, transformers) => {\n  let newItem = item;\n\n  transformers.forEach((transformer) => {\n    if (transformer) {\n      newItem = transformer(newItem);\n    }\n  });\n\n  return newItem;\n};\n\nconst applyTransformers = (items, transformers = []) =>\n  items.map((item) => primeItem(item, transformers));\n\nconst buildRow = (item, columns, rowTransformer, idx) =>\n  rowTransformer.flatMap((transformer) => {\n    const row = itemRow(item, columns);\n    return transformer ? transformer(row, item, columns, idx) : row;\n  });\n\nconst useRowsBuilder = (items, columns, options = {}) => {\n  const { transformer = [], rowTransformer = [] } = options;\n  const EmptyRowsComponent = options.emptyRows || emptyRows;\n  const transformedItems = transformer\n    ? applyTransformers(items, transformer)\n    : items;\n\n  const filteredItems = options?.filter\n    ? options.filter(transformedItems)\n    : transformedItems;\n\n  const sortedItems = options?.sorter\n    ? options.sorter(filteredItems)\n    : filteredItems;\n\n  const paginatedItems = options?.paginator\n    ? options?.paginator(sortedItems)\n    : sortedItems;\n\n  const rows =\n    paginatedItems.length > 0\n      ? paginatedItems\n          .flatMap((item, idx) => buildRow(item, columns, rowTransformer, idx))\n          .filter((v) => !!v)\n      : EmptyRowsComponent;\n\n  const pagination = options?.pagination\n    ? {\n        ...options.pagination,\n        itemCount: filteredItems.length,\n      }\n    : undefined;\n\n  return {\n    tableProps: {\n      rows,\n    },\n    toolbarProps: {\n      pagination,\n    },\n  };\n};\n\nexport default useRowsBuilder;\n","const getIdProp = (item, idProp = 'id') => item[idProp];\n\nconst identify = (item, identifier) => {\n  if (typeof identifier === 'string') {\n    return {\n      ...item,\n      itemId: getIdProp(item, identifier),\n    };\n  } else {\n    return {\n      ...item,\n      itemId: identifier(item),\n    };\n  }\n};\n\nexport const useItemIdentify = (items, options = {}) => {\n  const identifier = options?.identifier || getIdProp;\n\n  return items.map((item) => identify(item, identifier));\n};\n\nexport default useItemIdentify;\n","import React, { useState } from 'react';\n\nconst childRowForRule = (item, idx, DetailsComponent) => ({\n  parent: idx * 2,\n  fullWidth: true,\n  cells: [\n    { title: <DetailsComponent rule={item} key={'item-' + item.rowId} /> },\n  ],\n});\n\nconst itemDetailsRow = (item, idx, options) =>\n  typeof options?.detailsComponent !== 'undefined' &&\n  childRowForRule(item, idx, options.detailsComponent);\n\nconst useExpandable = (options) => {\n  const enableExpanbale = !!options.detailsComponent;\n  const [openItems, setOpenItems] = useState([]);\n  const onCollapse = (_event, _index, _isOpen, row) => {\n    if (openItems.includes(row.itemId)) {\n      setOpenItems(openItems.filter((itemId) => itemId !== row.itemId));\n    } else {\n      setOpenItems([...openItems, row.itemId]);\n    }\n  };\n\n  const openItem = (row, item, _columns, rowIndex) => {\n    const isOpen = openItems.includes(item.itemId);\n    const newRow = {\n      ...row,\n      isOpen,\n    };\n    const expandableRow = itemDetailsRow(item, rowIndex, options);\n\n    return [newRow, expandableRow];\n  };\n\n  return enableExpanbale\n    ? {\n        transformer: openItem,\n        tableProps: {\n          onCollapse,\n        },\n      }\n    : {};\n};\n\nexport default useExpandable;\n","import React from 'react';\n\nconst useDedicatedAction = (options) => {\n  const enableDedicatedAction = !!options.dedicatedAction;\n  const {\n    dedicatedAction: DedicatedActionOption,\n    AdditionalDedicatedActions,\n    selected,\n  } = options;\n\n  return enableDedicatedAction\n    ? {\n        toolbarProps: {\n          dedicatedAction: (\n            <div>\n              {DedicatedActionOption && (\n                <DedicatedActionOption {...(selected && { selected })} />\n              )}\n              {AdditionalDedicatedActions && (\n                <AdditionalDedicatedActions {...(selected && { selected })} />\n              )}\n            </div>\n          ),\n        },\n      }\n    : {};\n};\n\nexport default useDedicatedAction;\n","const prependEmptyFirstAction = (actions) => [undefined, ...actions];\n\nconst useToolbarActions = ({ actions: actionsOption = [] }) => {\n  const actions = prependEmptyFirstAction(actionsOption);\n\n  return {\n    toolbarProps: {\n      actionsConfig: {\n        actions,\n      },\n    },\n  };\n};\n\nexport default useToolbarActions;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport {\n  DataListCheck,\n  DataListControl,\n  DataListItem,\n  DataListItemRow,\n  DataListCell,\n  DataListItemCells,\n} from '@patternfly/react-core';\n\nconst ColumnManagerListItem = ({\n  column,\n  onChange,\n  isSelected,\n  isDisabled,\n  id,\n}) => (\n  <DataListItem>\n    <DataListItemRow>\n      <DataListControl>\n        <DataListCheck\n          checked={isSelected}\n          onChange={onChange}\n          otherControls\n          isDisabled={isDisabled}\n          id={`${id}-id`}\n          name={`${id}-id`}\n        />\n      </DataListControl>\n      <DataListItemCells\n        dataListCells={[\n          <DataListCell key={`${id}-cell`}>\n            <label htmlFor={`${id}-id`}>{column.title}</label>\n          </DataListCell>,\n        ]}\n      />\n    </DataListItemRow>\n  </DataListItem>\n);\n\nColumnManagerListItem.propTypes = {\n  id: propTypes.string,\n  column: propTypes.object,\n  onChange: propTypes.func,\n  isSelected: propTypes.bool,\n  isDisabled: propTypes.bool,\n};\n\nexport default ColumnManagerListItem;\n","import React, { useState } from 'react';\nimport propTypes from 'prop-types';\nimport {\n  Button,\n  DataList,\n  Modal,\n  Text,\n  TextContent,\n  TextVariants,\n} from '@patternfly/react-core';\nimport ColumnManagerListItem from './ColumnManagerListItem';\n\nconst ColumnManager = ({\n  isOpen,\n  columns,\n  onSave: onSaveArgument,\n  onClose: onCloseProp,\n  selectedColumns: selectedColumnsProp = [],\n}) => {\n  const [selectedColumns, setSelectedColumns] = useState(selectedColumnsProp);\n  const isSelectedColumn = ({ title }) => selectedColumns.includes(title);\n  const selectAllColumns = () => {\n    setSelectedColumns(columns.map(({ title }) => title));\n  };\n  const toggleColumn = (column) => {\n    if (isSelectedColumn(column)) {\n      setSelectedColumns(\n        selectedColumns.filter((title) => title !== column.title)\n      );\n    } else {\n      setSelectedColumns([...selectedColumns, column.title]);\n    }\n  };\n  const onSave = () => {\n    onSaveArgument && onSaveArgument(selectedColumns);\n  };\n  const onClose = () => {\n    setSelectedColumns(selectedColumnsProp);\n    onCloseProp && onCloseProp();\n  };\n\n  const description = (\n    <TextContent>\n      <Text component={TextVariants.p}>\n        Selected categories will be displayed in the table.\n      </Text>\n      <Button isInline onClick={selectAllColumns} variant=\"link\">\n        Select all\n      </Button>\n    </TextContent>\n  );\n\n  return (\n    <Modal\n      title=\"Manage columns\"\n      isOpen={isOpen}\n      variant=\"small\"\n      onClose={onClose}\n      description={description}\n      actions={[\n        <Button key=\"save\" variant=\"primary\" onClick={onSave}>\n          Save\n        </Button>,\n        <Button key=\"cancel\" variant=\"secondary\" onClick={onClose}>\n          Cancel\n        </Button>,\n      ]}\n    >\n      <DataList\n        aria-label=\"Table column management\"\n        id=\"table-column-management\"\n        isCompact\n      >\n        {columns.map((column, idx) => (\n          <ColumnManagerListItem\n            key={`column-${idx}`}\n            id={`column-${idx}`}\n            column={column}\n            isSelected={isSelectedColumn(column)}\n            onChange={() => {\n              toggleColumn(column);\n            }}\n            isDisabled={idx === 0}\n          />\n        ))}\n      </DataList>\n    </Modal>\n  );\n};\n\nColumnManager.propTypes = {\n  columns: propTypes.array,\n  selectedColumns: propTypes.array,\n  isOpen: propTypes.bool,\n  onSave: propTypes.func,\n  onClose: propTypes.func,\n};\n\nexport default ColumnManager;\n","import React, { useState } from 'react';\nimport ColumnManager from './Components/ColumnManager';\n\nconst filterColumnsBySelected = (columns, selected) =>\n  columns.filter((column) => selected.includes(column.title));\n\nconst useColumnManager = (columns = [], options = {}) => {\n  const managableColumns = columns\n    .map((column) =>\n      column?.managable === undefined ? { ...column, managable: true } : column\n    )\n    .filter((column) => column.managable === true);\n  const [selectedColumns, setSelectedColumns] = useState(\n    columns.map(({ title }) => title)\n  );\n  const [isManagerOpen, setIsManagerOpen] = useState(false);\n  const { manageColumns: enableColumnManager } = options;\n  const onClick = () => {\n    setIsManagerOpen(true);\n  };\n\n  const onSave = (newSelectedColumns) => {\n    setSelectedColumns(newSelectedColumns);\n    setIsManagerOpen(false);\n  };\n\n  return enableColumnManager\n    ? {\n        columns: filterColumnsBySelected(columns, selectedColumns),\n        columnManagerAction: {\n          label: 'Manage columns',\n          onClick,\n        },\n        ColumnManager: () => (\n          <ColumnManager\n            columns={managableColumns}\n            isOpen={isManagerOpen}\n            onClose={() => setIsManagerOpen(false)}\n            selectedColumns={selectedColumns}\n            onSave={onSave}\n          />\n        ),\n      }\n    : { columns };\n};\n\nexport default useColumnManager;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Pagination, PaginationVariant } from '@patternfly/react-core';\nimport { Table, TableBody, TableHeader } from '@patternfly/react-table';\nimport PrimaryToolbar from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport TableToolbar from '@redhat-cloud-services/frontend-components/TableToolbar';\nimport useTableTools from '../useTableTools';\n\nconst TableToolsTable = ({\n  items = [],\n  columns = [],\n  filters = [],\n  options = {},\n  toolbarProps: toolbarPropsProp,\n  ...tablePropsRest\n}) => {\n  const { toolbarProps, tableProps, ColumnManager } = useTableTools(\n    items,\n    columns,\n    {\n      filters,\n      toolbarProps: toolbarPropsProp,\n      tableProps: tablePropsRest,\n      ...options,\n    }\n  );\n\n  return (\n    <React.Fragment>\n      <PrimaryToolbar {...toolbarProps} />\n\n      <Table {...tableProps}>\n        <TableHeader />\n        <TableBody />\n      </Table>\n\n      <TableToolbar isFooter>\n        <Pagination\n          variant={PaginationVariant.bottom}\n          {...toolbarProps.pagination}\n        />\n      </TableToolbar>\n\n      {ColumnManager && <ColumnManager />}\n    </React.Fragment>\n  );\n};\n\nTableToolsTable.propTypes = {\n  items: propTypes.array.isRequired,\n  columns: propTypes.arrayOf(\n    propTypes.shape({\n      title: propTypes.node,\n      transforms: propTypes.array,\n      sortByProperty: propTypes.string,\n      sortByArray: propTypes.array,\n      sortByFunction: propTypes.func,\n      renderFunc: propTypes.func,\n    })\n  ).isRequired,\n  filters: propTypes.object,\n  options: propTypes.object,\n  toolbarProps: propTypes.object,\n};\n\nexport default TableToolsTable;\n","import useFilterConfig from './useFilterConfig';\nimport { useTableSortWithItems } from './useTableSort';\nimport usePaginate from './usePaginate';\nimport useRowsBuilder from './useRowsBuilder';\nimport { useBulkSelectWithItems } from './useBulkSelect';\nimport useItemIdentify from './useItemIdentify';\nimport useExpandable from './useExpandable';\nimport useDedicatedAction from './useDedicatedAction';\nimport useToolbarActions from './useToolbarActions';\nimport useColumnManager from './useColumnManager';\nimport { useExportWithItems } from './useExport';\n\nconst useTableTools = (items = [], columns = [], options = {}) => {\n  const { toolbarProps: toolbarPropsOption, tableProps: tablePropsOption } =\n    options;\n\n  const identifiedItems = useItemIdentify(items, options);\n\n  const {\n    columnManagerAction,\n    ColumnManager,\n    columns: managedColumns,\n  } = useColumnManager(columns, options);\n\n  const { toolbarProps: toolbarActionsProps } = useToolbarActions({\n    ...options,\n    actions: [\n      ...(options?.actions || []),\n      ...((columnManagerAction && [columnManagerAction]) || []),\n    ],\n  });\n\n  const {\n    toolbarProps: pagintionToolbarProps,\n    setPage,\n    paginator,\n  } = usePaginate(options);\n\n  const {\n    toolbarProps: conditionalFilterProps,\n    filter,\n    selectedFilterToolbarProps,\n  } = useFilterConfig({\n    ...options,\n    setPage,\n  });\n\n  const { transformer: openItem, tableProps: expandableProps } =\n    useExpandable(options);\n\n  const { tableProps: sortableTableProps, sorter } = useTableSortWithItems(\n    filter ? filter(items) : items,\n    managedColumns,\n    options\n  );\n\n  const {\n    transformer: selectItem,\n    toolbarProps: bulkSelectToolbarProps,\n    tableProps: bulkSelectTableProps,\n    selectedItems,\n  } = useBulkSelectWithItems({\n    ...options,\n    items: sorter(identifiedItems),\n    filter,\n    paginator,\n    setPage,\n  });\n\n  const { toolbarProps: dedicatedActionToolbarProps } = useDedicatedAction({\n    ...options,\n    selected: selectedItems,\n    additionalDedicatedActions: selectedFilterToolbarProps?.dedicatedAction,\n  });\n\n  const filteredAndSortedItems = (items, filter, sorter) => {\n    const filtered = filter ? filter(items) : items;\n    return sorter ? sorter(filtered) : filtered;\n  };\n\n  const { toolbarProps: exportToolbarProps } = useExportWithItems(\n    filteredAndSortedItems(\n      selectedItems?.length > 0 ? selectedItems : items,\n      filter,\n      sorter\n    ),\n    managedColumns,\n    options\n  );\n\n  const {\n    toolbarProps: rowBuilderToolbarProps,\n    tableProps: rowBuilderTableProps,\n  } = useRowsBuilder(identifiedItems, sortableTableProps.cells, {\n    emptyRows: options.emptyRows,\n    transformer: [selectItem],\n    rowTransformer: [openItem],\n    pagination: pagintionToolbarProps?.pagination,\n    paginator,\n    filter,\n    sorter,\n  });\n\n  const toolbarProps = {\n    ...pagintionToolbarProps,\n    ...bulkSelectToolbarProps,\n    ...conditionalFilterProps,\n    ...selectedFilterToolbarProps,\n    ...dedicatedActionToolbarProps,\n    ...rowBuilderToolbarProps,\n    ...toolbarPropsOption,\n    ...exportToolbarProps,\n    ...toolbarActionsProps,\n  };\n\n  const tableProps = {\n    cells: managedColumns,\n    ...rowBuilderTableProps,\n    ...sortableTableProps,\n    ...bulkSelectTableProps,\n    ...expandableProps,\n    ...tablePropsOption,\n  };\n\n  return {\n    toolbarProps,\n    tableProps,\n    ColumnManager,\n  };\n};\n\nexport default useTableTools;\n","export const filterSelected = (items, selectedIds = []) =>\n  items.filter((item) => selectedIds.includes(item.itemId));\n\nexport const filteredAndSortedItems = (items, filter, sorter) => {\n  const filtered = filter ? filter(items) : items;\n  return sorter ? sorter(filtered) : filtered;\n};\n","import { useEffect, useMemo, useState } from 'react';\nimport { filterSelected } from './helper';\n\nconst compileTitle = (itemsTotal, titleOption) => {\n  if (typeof titleOption === 'string') {\n    return titleOption;\n  } else if (typeof titleOption === 'function') {\n    return titleOption(itemsTotal);\n  } else {\n    return `${itemsTotal} selected`;\n  }\n};\n\nconst checkboxState = (selectedItemsTotal, itemsTotal) => {\n  if (selectedItemsTotal === 0) {\n    return false;\n  } else if (selectedItemsTotal === itemsTotal) {\n    return true;\n  } else {\n    return null;\n  }\n};\n\nconst allItemsIncluded = (items, selection = []) =>\n  items.filter((item) => selection.includes(item)).length === items.length;\n\nconst selectOrUnselect = (selected) => (selected ? 'Unselect' : 'Select');\n\nconst checkCurrentPageSelected = (items, selectedItems) => {\n  if (selectedItems.length === 0) {\n    return false;\n  } else {\n    return allItemsIncluded(items, selectedItems);\n  }\n};\n\nconst itemIds = (items) => items.map((item) => item.itemId);\nconst mergeArraysUniqly = (arrayA, arrayB) =>\n  Array.from(new Set([...arrayA, ...arrayB]));\n\nexport const useBulkSelect = ({\n  total,\n  onSelect,\n  preselected,\n  itemIdsInTable,\n  itemIdsOnPage,\n  identifier = 'id',\n}) => {\n  const enableBulkSelect = !!onSelect;\n  const [selectedIds, setSelectedItemIds] = useState(preselected);\n  const selectedIdsTotal = (selectedIds || []).length;\n  const paginatedTotal = itemIdsOnPage().length;\n  const allSelected = selectedIdsTotal === total;\n  const noneSelected = selectedIdsTotal === 0;\n  const currentPageSelected = checkCurrentPageSelected(\n    itemIdsOnPage(),\n    selectedIds || []\n  );\n\n  const isDisabled = total === 0;\n  const checked = checkboxState(selectedIdsTotal, total);\n  const title = compileTitle(selectedIdsTotal);\n\n  const onSelectCallback = async (func) => {\n    const newSelectedItemsIds = await func();\n    setSelectedItemIds(newSelectedItemsIds);\n    onSelect && onSelect(newSelectedItemsIds);\n  };\n\n  const selectItems = (itemIds) => mergeArraysUniqly(selectedIds, itemIds);\n\n  const unselectItems = (itemIds) =>\n    selectedIds.filter((itemId) => !itemIds.includes(itemId));\n\n  const unselectAll = () => [];\n  const selectNone = () => onSelectCallback(unselectAll);\n  const selectOne = (_, selected, key, row) =>\n    onSelectCallback(() =>\n      selected\n        ? selectItems([row[identifier]])\n        : unselectItems([row[identifier]])\n    );\n\n  const selectPage = () =>\n    onSelectCallback(() => {\n      const currentPageIds = itemIdsOnPage();\n      const currentPageSelected =\n        mergeArraysUniqly(selectedIds, currentPageIds).length ===\n        selectedIds.length;\n\n      return currentPageSelected\n        ? unselectItems(currentPageIds)\n        : selectItems(currentPageIds);\n    });\n\n  const selectAll = () =>\n    onSelectCallback(async () =>\n      allSelected ? unselectAll() : selectItems(await itemIdsInTable())\n    );\n\n  useEffect(() => {\n    setSelectedItemIds(preselected);\n  }, [preselected]);\n\n  return enableBulkSelect\n    ? {\n        selectedIds,\n        selectNone,\n        tableProps: {\n          onSelect: total > 0 ? selectOne : undefined,\n          canSelectAll: false,\n        },\n        toolbarProps: {\n          bulkSelect: {\n            toggleProps: { children: [title] },\n            isDisabled,\n            items: [\n              {\n                title: 'Select none',\n                onClick: selectNone,\n                props: {\n                  isDisabled: noneSelected,\n                },\n              },\n              {\n                title: `${selectOrUnselect(\n                  currentPageSelected\n                )} page (${paginatedTotal} items)`,\n                onClick: selectPage,\n              },\n              {\n                title: `${selectOrUnselect(allSelected)} all (${total} items)`,\n                onClick: selectAll,\n              },\n            ],\n            checked,\n            onSelect: !isDisabled ? selectPage : undefined,\n          },\n        },\n      }\n    : {};\n};\n\nconst selectItemTransformer = (item, selectedIds) => ({\n  ...item,\n  rowProps: {\n    selected: (selectedIds || []).includes(item.itemId),\n  },\n});\n\nexport const useBulkSelectWithItems = ({\n  onSelect,\n  items: propItems,\n  filter,\n  paginator,\n  preselected,\n  setPage,\n}) => {\n  const enableBulkSelect = !!onSelect;\n  const items = propItems.map((item) =>\n    selectItemTransformer(item, preselected)\n  );\n  const total = items.length;\n\n  const filteredItems = filter ? filter(items) : items;\n  const filteredTotal = filteredItems.length;\n  const filtered = filteredTotal !== total;\n\n  const paginatedItems = paginator ? paginator(filteredItems) : filteredItems;\n  const paginatedTotal = paginatedItems.length;\n\n  const allCount = filtered ? filteredTotal : total;\n\n  const setPageMemo = useMemo(() => setPage, []);\n\n  useEffect(() => {\n    if (paginatedTotal === 0) {\n      setPageMemo(-1);\n    }\n  }, [paginatedTotal, setPageMemo]);\n\n  const { selectNone, selectedIds, ...bulkSelect } = useBulkSelect({\n    total: allCount,\n    onSelect,\n    preselected,\n    itemIdsInTable: () => (filtered ? itemIds(filteredItems) : itemIds(items)),\n    itemIdsOnPage: () => itemIds(paginatedItems),\n    identifier: 'itemId',\n  });\n\n  return enableBulkSelect\n    ? {\n        transformer: (item) => selectItemTransformer(item, selectedIds),\n        selectedItems: filterSelected(items, selectedIds),\n        selected: selectedIds,\n        clearSelection: selectNone,\n        ...bulkSelect,\n      }\n    : {};\n};\n","import { camelCase, getProperty } from 'Utilities/helpers';\n\nconst CSV_FILE_PREFIX = 'compliance-export';\nconst CSV_DELIMITER = ',';\nconst ENCODINGS = {\n  csv: 'text/csv',\n  json: 'application/json',\n};\n\nconst filename = (format) =>\n  CSV_FILE_PREFIX + '-' + new Date().toISOString() + '.' + format;\n\nconst encoding = (format) => `data:${ENCODINGS[format]};charset=utf-8`;\n\nexport const linkAndDownload = (data, filename) => {\n  const link = document.createElement('a');\n  link.href = data;\n  link.download = filename;\n  link.click();\n};\n\nconst textForCell = (row, column) => {\n  const { exportKey, renderExport } = column;\n  let cell = exportKey ? getProperty(row, exportKey) : row;\n  if (renderExport) {\n    return renderExport(cell);\n  } else {\n    return cell;\n  }\n};\n\nexport const csvForItems = ({ items, columns }) => {\n  const header = columns\n    .map((column) => column.original || column.title)\n    .join(CSV_DELIMITER);\n  const csvRows = [\n    header,\n    ...items.map((row) =>\n      columns\n        .map((column) => `\"${textForCell(row, column)}\"`)\n        .join(CSV_DELIMITER)\n    ),\n  ];\n\n  return encodeURI(`${encoding('csv')},${csvRows.join('\\n')}`);\n};\n\nexport const jsonForItems = ({ items, columns }) => {\n  const result = items.map((row) =>\n    columns.reduce((object, column) => {\n      const key = camelCase(column.original || column.title);\n      const value = textForCell(row, column);\n\n      object[key] = value;\n      return object;\n    }, {})\n  );\n\n  return encodeURI(`${encoding('json')},${JSON.stringify(result)}`);\n};\n\nconst callCallback = (callback, ...args) => callback && callback(...args);\n\nconst useExport = ({\n  exporter,\n  columns = [],\n  isDisabled = false,\n  onStart,\n  onComplete,\n  onError,\n}) => {\n  const exportableColumns = columns.filter(\n    (column) =>\n      column.export !== false && (column.exportKey || column.renderExport)\n  );\n  const exportWithFormat = async (format) => {\n    callCallback(onStart);\n    const items = await exporter()\n      .then((items) => {\n        callCallback(onComplete, items);\n        return items;\n      })\n      .catch((error) => callCallback(onError, error));\n\n    const formater = format === 'csv' ? csvForItems : jsonForItems;\n\n    if (items) {\n      return linkAndDownload(\n        formater({\n          items,\n          columns: exportableColumns,\n        }),\n        filename(format)\n      );\n    } else {\n      console.info('No items returned for export');\n      return;\n    }\n  };\n\n  return {\n    toolbarProps: {\n      exportConfig: {\n        isDisabled,\n        onSelect: (_, format) => exportWithFormat(format),\n      },\n    },\n  };\n};\n\nexport const useExportWithItems = (items, columns, options = {}) => {\n  const exportEnabled = options?.exportable;\n  const {\n    columns: exportableColumns,\n    onStart,\n    onComplete,\n  } = typeof options.exportable === 'object' ? options.exportable : {};\n  const exportableSelectedColumns = (exportableColumns || columns).filter(\n    (column) => columns.includes(column)\n  );\n\n  const exportProps = useExport({\n    exporter: () => Promise.resolve(items),\n    columns: exportableSelectedColumns,\n    isDisabled: items.length === 0,\n    onStart,\n    onComplete,\n  });\n\n  return exportEnabled ? exportProps : {};\n};\n\nexport default useExport;\n","export const stringToId = (string) => string.split(' ').join('').toLowerCase();\n","import { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\nimport { stringToId } from './Helpers';\n\nclass FilterBuilder {\n  constructor(filterConfig) {\n    this.filterConfig = filterConfig;\n    this.config = this.filterConfig.config;\n  }\n\n  buildFilterFilterString = (configItem, value) => {\n    const { type, filterString } = configItem;\n\n    if (type !== 'hidden' && !value) {\n      return [];\n    }\n\n    switch (type) {\n      case conditionalFilterType.text:\n        return [filterString(value)];\n      case conditionalFilterType.checkbox:\n        return value.map((filter) => filterString(filter));\n\n      case conditionalFilterType.group:\n        return filterString(value);\n\n      case 'hidden':\n        return filterString();\n\n      default:\n        return [];\n    }\n  };\n\n  combineFilterStrings = (filterStringArray) => {\n    const moreThanTwo =\n      filterStringArray.map((f) => f.length).filter((fl) => fl > 0).length >= 2;\n    return filterStringArray\n      .map((fs) => fs.join(' or '))\n      .join(moreThanTwo ? ' and ' : '');\n  };\n\n  buildFilterString = (filters) => {\n    const filterStringArray = this.config\n      .map((configItem) =>\n        this.buildFilterFilterString(\n          configItem,\n          filters[stringToId(configItem.label)]\n        )\n      )\n      .filter((f) => f.length > 0);\n    return this.combineFilterStrings(filterStringArray);\n  };\n}\n\nexport default FilterBuilder;\n","import { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\n\nconst findWithString = (value) => (item) =>\n  String(item.value) === String(value);\n\nclass ChipBuilder {\n  constructor(filterConfig) {\n    this.filterConfig = filterConfig;\n    this.config = this.filterConfig.config;\n  }\n\n  textFilterChip = (category, currentValue) =>\n    currentValue && currentValue !== ''\n      ? {\n          category,\n          chips: [{ name: currentValue }],\n        }\n      : null;\n\n  checkboxFilterChip = (category, currentValue) =>\n    currentValue && currentValue.length > 0\n      ? {\n          category,\n          chips: currentValue.map((value) => ({\n            name: this.filterConfig.labelForValue(value, category),\n          })),\n        }\n      : null;\n\n  radioFilterChip = (category, currentValue) =>\n    currentValue && currentValue !== ''\n      ? {\n          category,\n          chips: [\n            { name: this.filterConfig.labelForValue(currentValue, category) },\n          ],\n        }\n      : null;\n\n  groupFilterChip = (category, currentValue = {}, categoryConfig) => {\n    const items = Object.keys(currentValue)\n      .flatMap((groupValue) => {\n        const group = categoryConfig.items.find(findWithString(groupValue));\n\n        return Object.keys(currentValue[groupValue]).map((itemValue) =>\n          currentValue[groupValue][itemValue]\n            ? [\n                ...(group.groupSelectable\n                  ? [\n                      {\n                        label: group.label,\n                        value: group.value,\n                      },\n                    ]\n                  : []),\n                ...(group?.items || []),\n              ].find(findWithString(itemValue))\n            : null\n        );\n      })\n      .filter((v) => !!v);\n\n    return currentValue && items.length > 0\n      ? {\n          category,\n          chips: items.map((item) => ({ name: item.label })),\n        }\n      : null;\n  };\n\n  chipFor = (filter, currentValue) => {\n    const categoryConfig = this.filterConfig.getCategoryForLabel(filter);\n    const { label, type } = categoryConfig\n      ? categoryConfig\n      : { label: filter, type: null };\n\n    switch (type) {\n      case conditionalFilterType.text:\n        return this.textFilterChip(label, currentValue);\n\n      case conditionalFilterType.checkbox:\n        return this.checkboxFilterChip(label, currentValue);\n\n      case conditionalFilterType.radio:\n        return this.radioFilterChip(label, currentValue);\n\n      case conditionalFilterType.group:\n        return this.groupFilterChip(label, currentValue, categoryConfig);\n\n      default:\n        return null;\n    }\n  };\n\n  chipsFor = (filters) =>\n    Object.keys(filters)\n      .map((filter) => this.chipFor(filter, filters[filter]))\n      .filter((f) => !!f);\n}\n\nexport default ChipBuilder;\n","import { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\nimport FilterBuilder from './FilterBuilder';\nimport ChipBuilder from './ChipBuilder';\nimport { stringToId } from './Helpers';\n\nconst defaultPlaceholder = (label) => `Filter by ${label.toLowerCase()}`;\n\nclass FilterConfigBuilder {\n  chipBuilder = null;\n  filterBuilder = null;\n\n  constructor(config) {\n    this.config = config;\n  }\n\n  addConfigItem = (item) =>\n    (this.config = this.config\n      .filter((i) => i.label !== item.label)\n      .concat(item));\n\n  getChipBuilder = (config) => {\n    if (config) {\n      this.config = config;\n    }\n\n    return (this.chipBuilder = this.chipBuilder\n      ? this.chipBuilder\n      : new ChipBuilder(this));\n  };\n\n  getFilterBuilder = (config) => {\n    if (config) {\n      this.config = config;\n    }\n\n    return (this.filterBuilder = this.filterBuilder\n      ? this.filterBuilder\n      : new FilterBuilder(this));\n  };\n\n  toTextFilterConfig = (item, handler, value) => ({\n    type: conditionalFilterType.text,\n    label: item.label,\n    placeholder: defaultPlaceholder(item.label),\n    id: stringToId(item.label),\n    filterValues: {\n      value,\n      [item.event || 'onChange']: (_event, selectedValues) => {\n        handler(stringToId(item.label), selectedValues);\n      },\n    },\n  });\n\n  toCheckboxFilterConfig = (item, handler, value) => ({\n    type: conditionalFilterType.checkbox,\n    label: item.label,\n    placeholder: defaultPlaceholder(item.label),\n    id: stringToId(item.label),\n    filterValues: {\n      value,\n      items: item.items,\n      onChange: (_event, selectedValues) => {\n        handler(stringToId(item.label), selectedValues);\n      },\n    },\n  });\n\n  toRadioFilterConfig = (item, handler, value) => ({\n    type: conditionalFilterType.radio,\n    label: item.label,\n    placeholder: defaultPlaceholder(item.label),\n    id: stringToId(item.label),\n    filterValues: {\n      value,\n      items: item.items,\n      onChange: (_event, selectedValues) => {\n        handler(stringToId(item.label), selectedValues);\n      },\n    },\n  });\n\n  toGroupedFilterConfig = (item, handler, value) => ({\n    type: conditionalFilterType.group,\n    label: item.label,\n    id: stringToId(item.label),\n    className: item.className,\n    filterValues: {\n      selected: value,\n      onChange: (_event, selectedValues) => {\n        handler(stringToId(item.label), selectedValues);\n      },\n      groups: item.items.map((item) => ({\n        ...item,\n        type: 'checkbox',\n        items: item.items.map((subItem) => ({\n          ...subItem,\n          type: 'checkbox',\n        })),\n      })),\n    },\n  });\n\n  toFilterConfigItem = (item, handler, value) => {\n    switch (item.type) {\n      case conditionalFilterType.text:\n        return this.toTextFilterConfig(item, handler, value);\n\n      case conditionalFilterType.checkbox:\n        return this.toCheckboxFilterConfig(item, handler, value);\n\n      case conditionalFilterType.radio:\n        return this.toRadioFilterConfig(item, handler, value);\n\n      case conditionalFilterType.group:\n        return this.toGroupedFilterConfig(item, handler, value);\n\n      default:\n        return null;\n    }\n  };\n\n  buildConfiguration = (handler, states, props = {}, initConfig) => ({\n    ...props,\n    items: (initConfig || this.config)\n      .map((item) =>\n        this.toFilterConfigItem(item, handler, states[stringToId(item.label)])\n      )\n      .filter((v) => !!v),\n  });\n\n  defaultValueForFilter = (filter) => {\n    switch (filter.type) {\n      case conditionalFilterType.text:\n        return '';\n      case conditionalFilterType.checkbox:\n        return [];\n      case 'hidden':\n        return filter.default || false;\n      default:\n        return;\n    }\n  };\n\n  initialDefaultState = (defaultStates = {}, initConfig) => {\n    let initialState = {};\n    (initConfig || this.config).forEach((filter) => {\n      const filterStateName = stringToId(filter.key || filter.label);\n      initialState[filterStateName] =\n        defaultStates[filterStateName] || this.defaultValueForFilter(filter);\n    });\n\n    return initialState;\n  };\n\n  categoryLabelForValue = (value) => {\n    const category = this.config.filter((category) =>\n      category.items\n        ? category.items.map((item) => item.value).includes(value)\n        : false\n    )[0];\n\n    return category ? category.label : value;\n  };\n\n  getCategoryForLabel = (query) =>\n    this.config.filter(\n      (item) => stringToId(item.key || item.label) === stringToId(query)\n    )[0] || {};\n\n  getItemByLabelOrValue = (query, category) => {\n    const categoryConfig = this.getCategoryForLabel(category);\n    const items =\n      categoryConfig.type !== conditionalFilterType.group\n        ? categoryConfig.items\n        : categoryConfig.items.flatMap((item) =>\n            item.items.map((subItem) => ({\n              ...subItem,\n              parentValue: item.value,\n            }))\n          );\n    const results = (items || []).filter(\n      (item) => item.value === query || item.label === query\n    );\n\n    if (results.length === 1) {\n      return results[0];\n    } else if (results.length > 1) {\n      // eslint-disable-next-line no-console\n      console.info(\n        `Multiple items found for ${query} in ${category}! Returning first one.`\n      );\n      return results[0];\n    } else {\n      // eslint-disable-next-line no-console\n      console.info('No item found for ' + query + ' in ', category);\n    }\n  };\n\n  labelForValue = (value, category) => {\n    const item = this.getItemByLabelOrValue(value, category);\n    return item ? item.label : value;\n  };\n\n  valueForLabel = (label, category) => {\n    const item = this.getItemByLabelOrValue(label, category);\n    return item ? item.value : label;\n  };\n\n  applyFilterToObjectArray = (objects, activeFilters) => {\n    let filteredObjects = [...objects];\n\n    Object.keys(activeFilters).forEach((filter) => {\n      const category = this.getCategoryForLabel(filter);\n      const value = activeFilters[filter];\n      if (!category || !value) {\n        return;\n      }\n\n      if (\n        value.length > 0 ||\n        (category.type === 'hidden' && typeof value === 'boolean')\n      ) {\n        filteredObjects = category.filter(filteredObjects, value);\n      }\n    });\n\n    return filteredObjects;\n  };\n\n  removeFilterFromFilterState = (currentState, filter) =>\n    typeof currentState === 'string'\n      ? ''\n      : currentState.filter((value) => value !== filter);\n\n  removeFilterFromGroupFilterState = (currentState, filter, chipItem) => {\n    // eslint-disable-next-line\n        const { [chipItem.value]: _remove, ...newGroupState } = currentState[chipItem.parentValue];\n    return {\n      ...currentState,\n      [chipItem.parentValue]: newGroupState,\n    };\n  };\n\n  removeFilterWithChip = (chips, activeFilters) => {\n    const chipCategory = chips.category;\n    const chipLabel = chips.chips[0].name;\n    const chipItem = this.getItemByLabelOrValue(chipLabel, chipCategory);\n    const chipValue = chipItem ? chipItem.value : chipLabel;\n    const stateProp = stringToId(chipCategory);\n    const currentState = activeFilters[stateProp];\n    const categoryConfig = this.getCategoryForLabel(chipCategory);\n    const isGroup = categoryConfig.type === conditionalFilterType.group;\n    const newFilterState = (\n      isGroup\n        ? this.removeFilterFromGroupFilterState\n        : this.removeFilterFromFilterState\n    )(currentState, chipValue, chipItem);\n\n    return {\n      ...activeFilters,\n      [stateProp]: newFilterState,\n    };\n  };\n}\n\nexport default FilterConfigBuilder;\n","import React from 'react';\nimport { Switch } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\n\nconst SelectedFilterSwitch = ({ isChecked, setActiveFilter }) => (\n  <Switch\n    label=\"Selected only\"\n    isChecked={isChecked}\n    onChange={() => setActiveFilter('selected', !isChecked)}\n  />\n);\n\nSelectedFilterSwitch.propTypes = {\n  isChecked: propTypes.bool,\n  setActiveFilter: propTypes.func,\n};\n\nexport default SelectedFilterSwitch;\n","import React from 'react';\nimport SelectedFilterSwitch from './Components/SelectedFilterSwitch';\n\nconst useSelectedFilter = ({\n  setActiveFilter,\n  activeFilters,\n  selectedFilter,\n}) => {\n  const enableSelectedFilter = !!selectedFilter;\n  const filterKey = 'selected';\n  const filterItem = {\n    type: 'hidden',\n    label: 'selectFilter',\n    key: filterKey,\n    default: true,\n    filter: (items, value) => {\n      return items.filter((item) => item?.rowProps?.selected === value);\n    },\n  };\n  const isChecked = activeFilters[filterKey] === true;\n  const selectedToggle = (\n    <SelectedFilterSwitch\n      {...{\n        setActiveFilter,\n        isChecked,\n      }}\n    />\n  );\n\n  return enableSelectedFilter\n    ? {\n        filterItem,\n        toolbarProps: {\n          dedicatedAction: selectedToggle,\n        },\n      }\n    : {};\n};\n\nexport default useSelectedFilter;\n","import { useState, useEffect, useMemo } from 'react';\nimport FilterConfigBuilder from './FilterConfigBuilder/FilterConfigBuilder';\nimport useSelectedFilter from './useSelectedFilter';\n\nconst filterValues = (activeFilters) =>\n  Object.values(activeFilters).filter((value) => {\n    if (typeof value === Object) {\n      return Object.values(value).length > 0;\n    }\n\n    if (typeof value === Array) {\n      return value.length > 0;\n    }\n\n    return !!value;\n  });\n\nconst filterConfigBuilder = new FilterConfigBuilder([]);\n\nconst useFilterConfig = (options = {}) => {\n  const { filters, setPage, selectedFilter } = options;\n  const enableFilters = !!filters;\n  const { filterConfig = [], activeFilters: initialActiveFilters } =\n    filters || {};\n  const [activeFilters, setActiveFilters] = useState(\n    filterConfigBuilder.initialDefaultState(initialActiveFilters, filterConfig)\n  );\n  const onFilterUpdate = (filter, value) => {\n    setActiveFilters((prevFilters) => ({\n      ...prevFilters,\n      [filter]: value,\n    }));\n\n    setPage && setPage(1);\n  };\n\n  const addConfigItem = (item) => {\n    filterConfigBuilder.addConfigItem(item);\n    setActiveFilters(filterConfigBuilder.initialDefaultState(activeFilters));\n  };\n\n  const clearAllFilter = () =>\n    setActiveFilters(filterConfigBuilder.initialDefaultState());\n\n  const deleteFilter = (chips) =>\n    setActiveFilters(\n      filterConfigBuilder.removeFilterWithChip(chips, activeFilters)\n    );\n  const onFilterDelete = (_event, chips, clearAll = false) =>\n    clearAll ? clearAllFilter() : deleteFilter(chips[0]);\n\n  const filter = (items) =>\n    filterConfigBuilder.applyFilterToObjectArray(items, activeFilters);\n\n  const {\n    toolbarProps: selectedFilterToolbarProps,\n    filterItem: selectFilterItem,\n  } = useSelectedFilter({\n    activeFilters,\n    setActiveFilter: onFilterUpdate,\n    selectedFilter,\n  });\n\n  const activeFilterValues = useMemo(\n    () => filterValues(activeFilters),\n    [activeFilters]\n  );\n\n  const filterConfigWithSelected = [\n    ...filterConfig,\n    ...(selectFilterItem ? [selectFilterItem] : []),\n  ];\n\n  useEffect(() => {\n    filterConfigBuilder.config = [];\n    filterConfigWithSelected.filter((v) => !!v).forEach(addConfigItem);\n    setActiveFilters(\n      filterConfigBuilder.initialDefaultState(initialActiveFilters || []),\n      filterConfig\n    );\n\n    return () => {\n      filterConfigBuilder.config = [];\n    };\n  }, []);\n\n  return enableFilters\n    ? {\n        filter,\n        selectedFilterToolbarProps,\n        toolbarProps: {\n          filterConfig: filterConfigBuilder.buildConfiguration(\n            onFilterUpdate,\n            activeFilters,\n            {},\n            filterConfigWithSelected\n          ),\n          activeFiltersConfig: {\n            filters: filterConfigBuilder\n              .getChipBuilder(filterConfigWithSelected)\n              .chipsFor(activeFilters),\n            onDelete: onFilterDelete,\n          },\n        },\n        setActiveFilter: onFilterUpdate,\n        activeFilters,\n        activeFilterValues,\n        addConfigItem,\n        filterConfigBuilder,\n        filterString: () =>\n          filterConfigBuilder\n            .getFilterBuilder(filterConfigWithSelected)\n            .buildFilterString(activeFilters),\n      }\n    : {};\n};\n\nexport default useFilterConfig;\n","export const NEVER = 'Never';\n\nexport const profilesRulesFailed = (profiles) =>\n  profiles.flatMap(\n    (profile) =>\n      profile.rules && profile.rules.filter((rule) => !rule.compliant)\n  );\n\nexport const profilesRulesPassed = (profiles) =>\n  profiles.flatMap(\n    (profile) => profile.rules && profile.rules.filter((rule) => rule.compliant)\n  );\n\nexport const systemRulesPassed = (system) =>\n  system.testResultProfiles\n    ? profilesRulesPassed(system.testResultProfiles)\n    : [];\n\nexport const systemRulesFailed = (system) =>\n  system.testResultProfiles\n    ? profilesRulesFailed(system.testResultProfiles)\n    : [];\n\nexport const systemSupportedByProfiles = (profiles = []) =>\n  profiles.reduce((acc, profile) => acc && !!profile.supported, true);\n\nexport const systemsWithRuleObjectsFailed = (systems) =>\n  systems.map((system) => ({\n    ...system,\n    ruleObjectsFailed: systemRulesFailed(system),\n    supported: systemSupportedByProfiles(system.testResultProfiles),\n    profiles: system.testResultProfiles,\n  }));\n\nexport const toRulesArrayWithProfile = (profilesWithRules) =>\n  profilesWithRules.flatMap((profileWithRules) =>\n    profileWithRules.rules.map((rule) => {\n      const identifier = rule.identifier && JSON.parse(rule.identifier);\n      return {\n        ...rule,\n        references: rule.references ? JSON.parse(rule.references) : [],\n        identifier: identifier && identifier.label ? identifier : null,\n        profile: profileWithRules.profile,\n      };\n    })\n  );\n\nexport const complianceScoreData = (profiles) => {\n  const scoreTotal = profiles.reduce((acc, profile) => acc + profile.score, 0);\n  const rulesPassed = profilesRulesPassed(profiles).length;\n  const rulesFailed = profilesRulesFailed(profiles).length;\n  const numScored = profiles.reduce((acc, profile) => {\n    if (\n      profilesRulesPassed([profile]).length +\n        profilesRulesFailed([profile]).length >\n      0\n    ) {\n      return acc + 1;\n    }\n\n    return acc;\n  }, 0);\n  const score = numScored ? scoreTotal / numScored : 0;\n  const compliant = profiles.every(\n    (profile) => profile.lastScanned === NEVER || profile.compliant === true\n  );\n\n  return {\n    score,\n    rulesPassed,\n    rulesFailed,\n    compliant,\n    supported: systemSupportedByProfiles(profiles),\n  };\n};\n"],"names":["QUERY","gql","ComplianceEmptyState","title","mainButton","client","useQuery","fetchPolicy","data","error","loading","Spinner","errorMsg","message","policiesCount","profiles","totalCount","policyWord","haveWord","Bullseye","EmptyState","EmptyStateIcon","style","fontWeight","color","size","icon","CloudSecurityIcon","Title","headingLevel","EmptyStateBody","TextContent","href","EmptyStatePrimary","EmptyStateSecondaryActions","Button","variant","component","target","rel","propTypes","defaultProps","ApolloClient","link","HttpLink","uri","COMPLIANCE_API_ROOT","credentials","cache","InMemoryCache","FallbackButton","isDisabled","ComplianceRemediationButton","profile","system","majorOsVersion","refId","id","split","description","systems","issues","issueIds","map","issue","filter","index","originalIssueIndex","indexOf","Array","from","Set","concat","rule","find","rules","profileRule","console","log","remediationAvailable","ruleProfile","supported","compliant","formatRule","props","allSystems","selectedRules","result","forEach","push","length","rulesWithRemediations","ruleObjectsFailed","Promise","all","then","uniqIssuesBySystem","flatten","dataProvider","flatMap","some","addNotification","this","RemediationButton","notEmptyData","onRemediationCreated","getNotification","buttonProps","ouiaId","fallback","React","name","severity","rationale","identifier","references","connect","dispatch","notification","ReduxFormTextInput","field","TextInput","value","input","defaultValue","onChange","ReduxFormTextArea","TextArea","RemediationCell","hasPlaybook","ruleProps","Rule","Text","TextVariants","label","Policy","HighSeverity","className","MediumSeverity","LowSeverityIcon","width","height","viewBox","role","verticalAlign","xmlns","d","fill","fillRule","LowSeverity","UnknownSeverity","Severity","high","medium","low","toLowerCase","Passed","RemediationColumnCell","Name","sortByProp","renderExport","renderFunc","renderComponent","sortByFunction","PolicyCell","exportKey","sortByArray","SeverityCell","PassedCell","Remediation","transforms","nowrap","RuleDetailsRow","key","marginTop","Stack","StackItem","marginBottom","isFilled","Grid","GridItem","span","ident","idx","reduce","prev","next","ref","columns","cells","EmptyTable","EmptyStateVariant","colSpan","HIGH_SEVERITY","MEDIUM_SEVERITY","LOW_SEVERITY","UNKNOWN_SEVERITY","filterRulesWithAllValues","values","valueCheck","v","anyFilterApply","filteredRules","BASE_FILTER_CONFIGURATION","type","conditionalFilterType","includes","reference","items","PASS_FILTER_CONFIG","REMEDIATION_AVAILABLE_FILTER_CONFIG","showPassFailFilter","policies","remediationAvailableFilter","config","policy","policiesFilterConfig","RulesTable","profileRules","defaultColumns","remediationsEnabled","selectedFilter","handleSelect","hidePassed","options","rulesTableProps","manageColumnsEnabled","useFeature","toRulesArrayWithProfile","selectedRulesWithRemediations","c","isStickyHeader","filters","filterConfig","buildFilterConfig","activeFilters","passed","COMPLIANCE_TABLE_DEFAULTS","item","selectable","onSelect","preselected","detailsComponent","emptyRows","dedicatedAction","selected","testResultProfiles","manageColumns","newOsMinorVersion","osMajorVersion","osMinorVersion","ProfileSystemCount","count","Badge","isRead","pluralize","SSGVersionText","ssgVersion","Popover","position","bodyContent","SSGPopoverBody","footerContent","cursor","fontSize","BENCHMARK_QUERY","ProfileTabContent","systemCount","selectedRuleRefIds","variables","benchmark","skip","stateValues","stateKey","profileRuleRefId","matchesSelectionItem","selectionItem","selectedRuleRefIdsForTab","tabSelection","ruleRefIds","profilesWithRulesToSelection","prevSelection","only","additionalSelection","foundSelection","tabsDataToOsMinorMap","tabsData","osMinorMap","extendProfilesByOsMinor","undefined","eventKey","getDefaultTab","defaultTab","firstTab","TabbedRules","setSelectedRuleRefIds","level","profileSelectedRuleRefIds","filteredSelection","newItem","Tab","isRequired","PolicyNameCell","policyType","Link","to","osString","OperatingSystem","fitContent","_data","_id","Systems","totalHostCount","businessObjectiveString","businessObjective","BusinessObjective","complianceThresholdString","complianceThreshold","ComplianceThreshold","exportableColumns","Table","rows","RowLoader","TableHeader","TableBody","ErrorPage","networkError","statusCode","window","insights","chrome","auth","logout","NotAuthorized","serviceName","InvalidObject","onClick","history","goBack","ErrorCard","Card","CardHeader","CardBody","GreySmallText","children","CheckboxFieldArray","inputValue","defaultChecked","Checkbox","isChecked","checked","arr","splice","handleChange","InUseProfileLabel","Tooltip","content","Label","lineHeight","ProfileTypeSelect","selectedProfile","hasGutter","disabled","rowSpan","Radio","Truncate","inline","text","JSON","stringify","_","event","currentTarget","CompliantIcon","rulesPassed","rulesFailed","complianceScoreString","fixedPercentage","score","speed","backgroundcolor","foregroundcolor","x","y","rx","ry","primaryColor","secondaryColor","cx","cy","r","PolicyDetailsDescription","linkifyHtml","PropTypes","Dt","TextListItem","TextListItemVariants","Dd","PolicyDescription","TextList","TextListVariants","version","ReportDetailsDescription","ProgressBar","percent","failed","ProgressVariant","Progress","ContentTab","findTab","tabs","tab","useAnchorLevels","defaultAnchor","levels","useAnchor","currentAnchor","TabSwitcher","activeKey","currentTab","activeTab","RoutedTabSwitcher","RoutedTabs","useHistory","useLocation","pathname","state","tabAvailable","tabAnchor","Tabs","e","preventDefault","tabToActivate","replace","hash","slice","join","StateViewPart","StateView","child","StateViewWithError","WARNING_TEXT","WithOptionalToolTip","showTooltip","TooltipPosition","SystemsCountWarning","WarningText","BackgroundLink","desiredState","backgroundLocation","background","RouterLink","BreadcrumbLinkItem","BreadcrumbItem","marginRight","unsupportedHostCount","CompliantSystems","testResultHostCount","compliantHostCount","measureLocation","tooltipText","marginLeft","NameCell","OperatingSystemCell","CompliantSystemsCell","PDFExportDownload","managable","policyNameFilter","lowerCaseValue","policyTypeFilter","policyTypes","operatingSystemFilter","operatingSystems","operatingSystem","policyComplianceFilter","compliantHostsPercent","Math","round","min","max","i","ReportsTable","pdfReportEnabled","uniq","exportable","PolicyPopover","headerContent","isInline","Fragment","NoResultsTable","nameFilter","DedicatedAction","PoliciesTable","location","Object","Filters","actionResolver","_event","_index","policyId","itemId","withRouter","ProfileThresholdField","validThreshold","thresholdValid","previousThreshold","threshold","setState","FormGroup","fieldId","validated","helperTextInvalid","helperText","labelIcon","Field","handleThresholdChange","display","reduxForm","form","destroyOnUnmount","forceUnregisterOnUnmount","ComplianceThresholdHelperText","parsedThreshold","parseFloat","HelperText","isNaN","HelperTextItem","hasMaxDecimals","supportedConfigsLink","UNSUPPORTED_PLURAL_MESSAGE","WarningWithPopover","maxWidth","WarningWithTooltip","TooltipOrPopover","tooltipProps","tooltip","Component","componentProps","popover","showHeader","showPopupHeader","messageVariant","UnsupportedSSGVersion","showWarningIcon","showHelpIcon","iconProps","defaultStyle","SubPageTitle","ConditionalLink","additionalProps","ComplianceModal","Modal","validateBenchmarkPage","num","dec","RegExp","test","toString","validateDetailsPage","validateRulesPage","validateSystemsPage","systemIds","fixed","withPercent","fixedValue","toFixed","singular","plural","collection","sortingByProp","propName","order","objA","objB","descending","propA","propB","natsort","desc","sorter","entity","getSortable","property","orderArrayByProp","objects","direction","sort","a","b","String","localeCompare","orderByArray","objectArray","orderProp","orderArray","sortedObjectArray","orderKey","reverse","getProperty","obj","path","parts","shift","camelCase","string","trim","toUpperCase","substring","addSortableTransform","column","isSortable","sortable","columnOffset","useTableSortWithItems","useState","sortBy","setSortBy","onSort","currentSortableColumn","tableProps","useTableSort","perPage","enablePagination","pagination","page","paginationState","setPaginationState","setPagination","newState","onSetPage","onPerPageSelect","paginator","start","end","setPage","nextPage","toolbarProps","kind","columnProp","original","primeItem","transformers","transformer","applyTransformers","buildRow","rowTransformer","row","rowProps","itemRow","EmptyRowsComponent","transformedItems","filteredItems","sortedItems","paginatedItems","itemCount","getIdProp","idProp","identify","itemDetailsRow","DetailsComponent","parent","fullWidth","rowId","childRowForRule","enableExpanbale","openItems","setOpenItems","_columns","rowIndex","isOpen","onCollapse","_isOpen","enableDedicatedAction","DedicatedActionOption","AdditionalDedicatedActions","actions","actionsConfig","ColumnManagerListItem","isSelected","DataListItem","DataListItemRow","DataListControl","DataListCheck","otherControls","DataListItemCells","dataListCells","DataListCell","htmlFor","ColumnManager","onSaveArgument","onSave","onCloseProp","onClose","selectedColumns","selectedColumnsProp","setSelectedColumns","isSelectedColumn","DataList","isCompact","toggleColumn","filterColumnsBySelected","managableColumns","isManagerOpen","setIsManagerOpen","enableColumnManager","newSelectedColumns","columnManagerAction","TableToolsTable","toolbarPropsOption","tablePropsOption","identifiedItems","useItemIdentify","useColumnManager","managedColumns","toolbarActionsProps","useToolbarActions","usePaginate","pagintionToolbarProps","useFilterConfig","conditionalFilterProps","selectedFilterToolbarProps","useExpandable","openItem","expandableProps","sortableTableProps","useBulkSelectWithItems","selectItem","bulkSelectToolbarProps","bulkSelectTableProps","selectedItems","dedicatedActionToolbarProps","useDedicatedAction","additionalDedicatedActions","filteredAndSortedItems","filtered","exportToolbarProps","useExportWithItems","useRowsBuilder","rowBuilderToolbarProps","rowBuilderTableProps","useTableTools","PrimaryToolbar","TableToolbar","isFooter","Pagination","PaginationVariant","sortByProperty","filterSelected","selectedIds","selectOrUnselect","itemIds","mergeArraysUniqly","arrayA","arrayB","useBulkSelect","selectedItemsTotal","total","itemIdsInTable","itemIdsOnPage","enableBulkSelect","setSelectedItemIds","selectedIdsTotal","paginatedTotal","allSelected","noneSelected","currentPageSelected","selection","allItemsIncluded","itemsTotal","titleOption","compileTitle","onSelectCallback","func","newSelectedItemsIds","selectItems","unselectItems","unselectAll","selectNone","selectPage","currentPageIds","useEffect","canSelectAll","bulkSelect","toggleProps","selectItemTransformer","propItems","filteredTotal","allCount","setPageMemo","useMemo","clearSelection","ENCODINGS","csv","json","filename","format","CSV_FILE_PREFIX","Date","toISOString","encoding","linkAndDownload","document","createElement","download","click","textForCell","cell","csvForItems","csvRows","encodeURI","jsonForItems","object","callCallback","callback","args","useExport","exporter","onStart","onComplete","onError","export","exportWithFormat","catch","formater","info","exportConfig","exportEnabled","exportableSelectedColumns","exportProps","resolve","stringToId","configItem","filterString","filterStringArray","moreThanTwo","f","fl","fs","buildFilterFilterString","combineFilterStrings","findWithString","category","currentValue","chips","labelForValue","categoryConfig","keys","groupValue","group","itemValue","groupSelectable","getCategoryForLabel","textFilterChip","checkboxFilterChip","radioFilterChip","groupFilterChip","chipFor","defaultPlaceholder","SelectedFilterSwitch","setActiveFilter","Switch","enableSelectedFilter","filterItem","default","filterValues","filterConfigBuilder","chipBuilder","ChipBuilder","filterBuilder","FilterBuilder","handler","placeholder","selectedValues","groups","subItem","toTextFilterConfig","toCheckboxFilterConfig","toRadioFilterConfig","toGroupedFilterConfig","states","initConfig","toFilterConfigItem","defaultStates","initialState","filterStateName","defaultValueForFilter","query","results","parentValue","getItemByLabelOrValue","filteredObjects","currentState","chipItem","newGroupState","chipCategory","chipLabel","chipValue","stateProp","newFilterState","removeFilterFromGroupFilterState","removeFilterFromFilterState","enableFilters","initialActiveFilters","initialDefaultState","setActiveFilters","onFilterUpdate","prevFilters","addConfigItem","clearAllFilter","deleteFilter","removeFilterWithChip","onFilterDelete","clearAll","applyFilterToObjectArray","useSelectedFilter","selectFilterItem","activeFilterValues","filterConfigWithSelected","buildConfiguration","activeFiltersConfig","getChipBuilder","chipsFor","onDelete","getFilterBuilder","buildFilterString","NEVER","profilesRulesFailed","profilesRulesPassed","systemRulesFailed","systemSupportedByProfiles","acc","systemsWithRuleObjectsFailed","profilesWithRules","profileWithRules","parse","complianceScoreData","scoreTotal","numScored","every","lastScanned"],"sourceRoot":""}