{"version":3,"sources":["webpack:///./src/SmartComponents/SystemDetails/SystemDetails.js","webpack:///./node_modules/@patternfly/react-core/dist/js/components/Breadcrumb/Breadcrumb.js"],"names":["QUERY","gql","SystemDetails","route","inventoryId","useParams","useQuery","variables","data","error","loading","systemName","system","name","useTitleEntity","stateValues","stateKey","to","isActive","hidePassed","size","SkeletonSize","md","propTypes","object","Object","defineProperty","exports","value","Breadcrumb","tslib_1","React","__importStar","breadcrumb_1","__importDefault","react_styles_1","helpers_1","_a","children","className","ariaLabel","ouiaId","ouiaSafe","props","__rest","ouiaProps","useOUIAProps","displayName","createElement","assign","css","default","breadcrumb","breadcrumbList","Children","map","child","index","showDivider","isValidElement","cloneElement"],"mappings":"8eA4BA,IAAMA,EAAQC,IAAH,KASEC,EAAgB,SAAC,GAAc,MAAZC,EAAY,EAAZA,MACpBC,EAAgBC,cAAhBD,YADgC,EAEPE,mBAASN,EAAO,CAC7CO,UAAW,CAAEH,iBADTI,EAFgC,EAEhCA,KAAMC,EAF0B,EAE1BA,MAAOC,EAFmB,EAEnBA,QAGfC,EAAaH,SAAH,UAAGA,EAAMI,cAAT,aAAG,EAAcC,KAIjC,OAFAC,YAAeX,EAAOQ,GAEf,kBAAC,IAAD,CAAoBI,YAAc,CAAEN,QAAOD,OAAME,YACpD,kBAAC,IAAD,CAAeM,SAAS,QACpB,kBAAC,aAAD,KACI,kBAAC,aAAD,KACI,kBAAC,IAAD,CAAoBC,GAAG,YAAvB,WAGA,kBAAC,iBAAD,CAAgBC,UAAQ,GAAGP,IAE/B,kBAAC,IAAD,MACA,8BAEJ,kBAAC,OAAD,KACI,kBAAC,IAAD,CAAyBQ,YAAU,EAACf,YAAcA,MAG1D,kBAAC,IAAD,CAAeY,SAAS,WACpB,kBAAC,aAAD,KACI,kBAAC,WAAD,CAAUI,KAAOC,eAAaC,SAM9CpB,EAAcqB,UAAY,CACtBpB,MAAOoB,IAAUC,QAGNtB,a,iCCzEfuB,OAAOC,eAAeC,EAAS,aAAc,CAAEC,OAAO,IACtDD,EAAQE,gBAAa,EACrB,MAAMC,EAAU,EAAQ,GAClBC,EAAQD,EAAQE,aAAa,EAAQ,IACrCC,EAAeH,EAAQI,gBAAgB,EAAQ,KAC/CC,EAAiB,EAAQ,GACzBC,EAAY,EAAQ,IAC1BT,EAAQE,WAAcQ,IAClB,IAAI,SAAEC,EAAW,KAAI,UAAEC,EAAY,GAAI,aAAcC,EAAY,aAAY,OAAEC,EAAM,SAAEC,GAAW,GAASL,EAAIM,EAAQb,EAAQc,OAAOP,EAAI,CAAC,WAAY,YAAa,aAAc,SAAU,aAC5L,MAAMQ,EAAYT,EAAUU,aAAanB,EAAQE,WAAWkB,YAAaN,EAAQC,GACjF,OAAQX,EAAMiB,cAAc,MAAOvB,OAAOwB,OAAO,GAAIN,EAAO,CAAE,aAAcH,EAAWD,UAAWJ,EAAee,IAAIjB,EAAakB,QAAQC,WAAYb,IAAcM,GAChKd,EAAMiB,cAAc,KAAM,CAAET,UAAWN,EAAakB,QAAQE,gBAAkBtB,EAAMuB,SAASC,IAAIjB,EAAU,CAACkB,EAAOC,KAC/G,MAAMC,EAAcD,EAAQ,EAC5B,OAAI1B,EAAM4B,eAAeH,GACdzB,EAAM6B,aAAaJ,EAAO,CAAEE,gBAEhCF,OAGnB7B,EAAQE,WAAWkB,YAAc","file":"js/SystemDetails-64de6be69e4baef87ddb.js","sourcesContent":["import React from 'react';\nimport propTypes from 'prop-types';\nimport gql from 'graphql-tag';\nimport {\n    useQuery\n} from '@apollo/react-hooks';\nimport {\n    useParams\n} from 'react-router-dom';\nimport {\n    PageHeader,\n    Main,\n    Skeleton,\n    SkeletonSize\n} from '@redhat-cloud-services/frontend-components';\nimport {\n    Breadcrumb,\n    BreadcrumbItem\n} from '@patternfly/react-core';\nimport ComplianceSystemDetails from '@redhat-cloud-services/frontend-components-inventory-compliance';\nimport {\n    BreadcrumbLinkItem,\n    StateViewWithError,\n    StateViewPart\n} from 'PresentationalComponents';\nimport { InventoryDetails } from 'SmartComponents';\nimport { useTitleEntity } from 'Utilities/hooks/useDocumentTitle';\n\nconst QUERY = gql`\nquery System($inventoryId: String!){\n    system(id: $inventoryId) {\n        id\n        name\n    }\n}\n`;\n\nexport const SystemDetails = ({ route }) => {\n    const { inventoryId } = useParams();\n    const { data, error, loading } = useQuery(QUERY, {\n        variables: { inventoryId }\n    });\n    const systemName = data?.system?.name;\n\n    useTitleEntity(route, systemName);\n\n    return <StateViewWithError stateValues={ { error, data, loading } }>\n        <StateViewPart stateKey='data'>\n            <PageHeader>\n                <Breadcrumb>\n                    <BreadcrumbLinkItem to='/systems'>\n                        Systems\n                    </BreadcrumbLinkItem>\n                    <BreadcrumbItem isActive>{ systemName }</BreadcrumbItem>\n                </Breadcrumb>\n                <InventoryDetails />\n                <br/>\n            </PageHeader>\n            <Main>\n                <ComplianceSystemDetails hidePassed inventoryId={ inventoryId } />\n            </Main>\n        </StateViewPart>\n        <StateViewPart stateKey='loading'>\n            <PageHeader>\n                <Skeleton size={ SkeletonSize.md } />\n            </PageHeader>\n        </StateViewPart>\n    </StateViewWithError>;\n};\n\nSystemDetails.propTypes = {\n    route: propTypes.object\n};\n\nexport default SystemDetails;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Breadcrumb = void 0;\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nconst breadcrumb_1 = tslib_1.__importDefault(require(\"@patternfly/react-styles/css/components/Breadcrumb/breadcrumb\"));\nconst react_styles_1 = require(\"@patternfly/react-styles\");\nconst helpers_1 = require(\"../../helpers\");\nexports.Breadcrumb = (_a) => {\n    var { children = null, className = '', 'aria-label': ariaLabel = 'Breadcrumb', ouiaId, ouiaSafe = true } = _a, props = tslib_1.__rest(_a, [\"children\", \"className\", 'aria-label', \"ouiaId\", \"ouiaSafe\"]);\n    const ouiaProps = helpers_1.useOUIAProps(exports.Breadcrumb.displayName, ouiaId, ouiaSafe);\n    return (React.createElement(\"nav\", Object.assign({}, props, { \"aria-label\": ariaLabel, className: react_styles_1.css(breadcrumb_1.default.breadcrumb, className) }, ouiaProps),\n        React.createElement(\"ol\", { className: breadcrumb_1.default.breadcrumbList }, React.Children.map(children, (child, index) => {\n            const showDivider = index > 0;\n            if (React.isValidElement(child)) {\n                return React.cloneElement(child, { showDivider });\n            }\n            return child;\n        }))));\n};\nexports.Breadcrumb.displayName = 'Breadcrumb';\n//# sourceMappingURL=Breadcrumb.js.map"],"sourceRoot":""}