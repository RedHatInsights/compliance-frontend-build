{"version":3,"sources":["webpack:///./src/SmartComponents/DeletePolicy/DeletePolicy.js"],"names":["DeletePolicy","useState","deleteEnabled","setDeleteEnabled","location","useLocation","history","useHistory","state","policy","name","id","onClose","push","useMutation","DELETE_PROFILE","onCompleted","dispatchAction","addNotification","variant","title","onError","error","description","message","deletePolicy","Modal","ModalVariant","className","Text","component","ouiaId","isOpen","actions","Button","key","aria-label","isDisabled","onClick","variables","input","Checkbox","label","isChecked","onChange","propTypes"],"mappings":"wRAkBMA,EAAe,WACjB,OAA0CC,eAAS,GAAnD,eAAOC,EAAP,KAAsBC,EAAtB,KACMC,GAAWC,mBACXC,GAAUC,kBAChB,EAAqBH,EAASI,MAAMC,OAA5BC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,GACRC,EAAU,WACZN,EAAQO,KAAK,kBAGjB,GAAuBC,iBAAYC,KAAgB,CAC/CC,YAAa,YACTC,QAAeC,QAAgB,CAC3BC,QAAS,UACTC,MAAO,cAAF,OAAiBV,EAAjB,mDAETE,KAEJS,QAAS,SAACC,IACNL,QAAeC,QAAgB,CAC3BC,QAAS,SACTC,MAAO,wBACPG,YAAaD,EAAME,WAEvBZ,OAdDa,GAAP,eAkBA,OACI,kBAAC,EAAAC,MAAD,CACIP,QAAUQ,qBACVP,MACI,kBAAC,aAAD,KACI,kBAAC,KAAD,CAA0BQ,UAAU,kBACpC,kBAAC,EAAAC,KAAD,CAAMC,UAAU,OAAOF,UAAU,6BAAjC,mBAKRG,OAAO,oBACPC,QAAM,EACNpB,QAAUA,EACVqB,QAAS,CACL,kBAAC,EAAAC,OAAD,CAAQC,IAAI,UACRJ,OAAO,qBACPK,aAAW,SACXC,YAAcnC,EACdiB,QAAQ,SACRmB,QAAS,kBAAMb,EAAa,CAAEc,UAAW,CAAEC,MAAO,CAAE7B,WALxD,wCAQA,kBAAC,EAAAuB,OAAD,CAAQC,IAAI,SAASJ,OAAO,2BAA2BZ,QAAQ,YAAYmB,QAAU1B,GAArF,YAKJ,kBAAC,EAAAiB,KAAD,CAAMD,UAAU,2BAAhB,uBACwB,2BAAKlB,GAD7B,6CAGA,kBAAC,EAAA+B,SAAD,CACIC,MAAM,sEACN/B,GAAE,gCAA4BA,GAC9BgC,UAAYzC,EACZ0C,SAAWzC,MAM3BH,EAAa6C,UAAY,CACrBpC,OAAQoC,YAGZ","file":"js/DeletePolicy.66449a730fc18710ba20.js","sourcesContent":["import {\n    Button,\n    Checkbox,\n    Modal,\n    ModalVariant,\n    Text\n} from '@patternfly/react-core';\nimport {\n    ExclamationTriangleIcon\n} from '@patternfly/react-icons';\nimport propTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\nimport { DELETE_PROFILE } from 'Mutations';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport { dispatchAction } from 'Utilities/Dispatcher';\n\nconst DeletePolicy = () => {\n    const [deleteEnabled, setDeleteEnabled] = useState(false);\n    const location = useLocation();\n    const history = useHistory();\n    const { name, id } = location.state.policy;\n    const onClose = () => {\n        history.push('/scappolicies');\n    };\n\n    const [deletePolicy] = useMutation(DELETE_PROFILE, {\n        onCompleted: () => {\n            dispatchAction(addNotification({\n                variant: 'success',\n                title: `The policy ${ name } and its associated reports has been deleted`\n            }));\n            onClose();\n        },\n        onError: (error) => {\n            dispatchAction(addNotification({\n                variant: 'danger',\n                title: 'Error removing policy',\n                description: error.message\n            }));\n            onClose();\n        }\n    });\n\n    return (\n        <Modal\n            variant={ ModalVariant.small }\n            title={\n                <React.Fragment>\n                    <ExclamationTriangleIcon  className='ins-u-warning'/>\n                    <Text component=\"span\" className='policy-delete-header-text'>\n                        Delete policy?\n                    </Text>\n                </React.Fragment>\n            }\n            ouiaId=\"DeletePolicyModal\"\n            isOpen\n            onClose={ onClose }\n            actions={[\n                <Button key='destroy'\n                    ouiaId=\"DeletePolicyButton\"\n                    aria-label=\"delete\"\n                    isDisabled={ !deleteEnabled }\n                    variant='danger'\n                    onClick={() => deletePolicy({ variables: { input: { id } } })}>\n                    Delete policy and associated reports\n                </Button>,\n                <Button key='cancel' ouiaId=\"DeletePolicyCancelButton\" variant='secondary' onClick={ onClose }>\n                    Cancel\n                </Button>\n            ]}\n        >\n            <Text className='policy-delete-body-text'>\n                Deleting the policy <b>{ name }</b> will also delete its associated reports.\n            </Text>\n            <Checkbox\n                label='I understand this will delete the policy and all associated reports'\n                id={ `deleting-policy-check-${id}` }\n                isChecked={ deleteEnabled }\n                onChange={ setDeleteEnabled }\n            />\n        </Modal>\n    );\n};\n\nDeletePolicy.propTypes = {\n    policy: propTypes.object\n};\n\nexport default DeletePolicy;\n"],"sourceRoot":""}