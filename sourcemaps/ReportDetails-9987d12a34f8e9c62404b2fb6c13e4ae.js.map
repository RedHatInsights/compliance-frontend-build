{"version":3,"sources":["webpack:///./src/SmartComponents/ReportDetails/ReportDetails.scss","webpack:///./src/SmartComponents/ReportDetails/ReportDetails.scss?d617","webpack:///./src/SmartComponents/ReportDetails/ReportDetails.js","webpack:///./src/Utilities/hooks/useFeature.js","webpack:///./node_modules/@patternfly/react-core/dist/js/components/Breadcrumb/Breadcrumb.js"],"names":["exports","___CSS_LOADER_API_IMPORT___","push","module","i","options","locals","QUERY","gql","ReportDetails","showSsgVersions","chartColorScale","policyName","legendData","compliancePercentage","route","showSsgVersionsFeature","useFeature","policyId","useParams","report_id","useQuery","variables","data","error","loading","donutValues","donutId","profile","policy","name","compliantHostCount","testResultHostCount","replace","x","y","black300","value","blue300","blue200","pluralize","fixedPercentage","Math","floor","columns","key","title","props","width","renderFunc","SSGVersion","useTitleEntity","stateValues","stateKey","PageHeader","Main","EmptyTable","Spinner","Breadcrumb","to","BreadcrumbItem","isActive","Grid","hasGutter","GridItem","sm","md","lg","xl","className","state","id","Button","variant","isInline","ChartDonut","identifier","subTitle","themeVariant","ChartThemeVariant","light","colorScale","style","fontSize","innerRadius","legendPosition","legendOrientation","padding","bottom","left","right","top","unsupportedHostCount","Text","showHelpIcon","span","SystemsTable","showOnlySystemsWithTestResults","compliantFilter","defaultFilter","propTypes","object","setFeatureFlag","featureValue","feature","console","log","localStorage","setItem","removeItem","featureDefault","features","search","path","history","useLocation","pathName","useHistory","URLSearchParams","forEach","featureEnabled","getItem","getLocatStateFlag","Object","defineProperty","tslib_1","React","__importStar","breadcrumb_1","__importDefault","react_styles_1","helpers_1","_a","children","ariaLabel","ouiaId","ouiaSafe","__rest","ouiaProps","useOUIAProps","displayName","createElement","assign","css","default","breadcrumb","breadcrumbList","Children","map","child","index","showDivider","isValidElement","cloneElement"],"mappings":"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","file":"js/ReportDetails-b6f60e1bf92c1687803c.js","sourcesContent":["// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".threshold-tooltip {\\n  margin-bottom: var(--pf-global--spacer--md); }\\n\\n.grey-icon {\\n  color: var(--pf-global--Color--200); }\\n\\n.policy-details {\\n  padding-top: 10px; }\\n\\n.report-details-button {\\n  text-align: right; }\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","import api from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./ReportDetails.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","/* eslint-disable react/display-name */\nimport React from 'react';\nimport {\n    global_palette_black_300 as black300,\n    chart_color_blue_200 as blue200,\n    chart_color_blue_300 as blue300\n} from '@patternfly/react-tokens';\nimport propTypes from 'prop-types';\nimport { useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\n\nimport { ChartDonut, ChartThemeVariant } from '@patternfly/react-charts';\nimport { Breadcrumb, BreadcrumbItem, Button, Grid, GridItem, Text } from '@patternfly/react-core';\n\nimport {\n    PageHeader, PageHeaderTitle, Main, EmptyTable, Spinner\n} from '@redhat-cloud-services/frontend-components';\n\nimport { fixedPercentage, pluralize } from 'Utilities/TextHelper';\nimport useFeature from 'Utilities/hooks/useFeature';\nimport {\n    BackgroundLink, BreadcrumbLinkItem, ReportDetailsContentLoader, ReportDetailsDescription,\n    StateViewWithError, StateViewPart, UnsupportedSSGVersion\n} from 'PresentationalComponents';\nimport SystemsTable, { Cells } from '@/SmartComponents/SystemsTable/SystemsTable';\nimport { useTitleEntity } from 'Utilities/hooks/useDocumentTitle';\nimport '@/Charts.scss';\nimport './ReportDetails.scss';\n\nexport const QUERY = gql`\nquery Profile($policyId: String!){\n    profile(id: $policyId) {\n        id\n        name\n        refId\n        testResultHostCount\n        compliantHostCount\n        unsupportedHostCount\n        complianceThreshold\n        majorOsVersion\n        lastScanned\n        policy {\n            id\n            name\n        }\n        benchmark {\n            id\n            version\n        }\n        businessObjective {\n            id\n            title\n        }\n    }\n}\n`;\n\nexport const ReportDetails = ({ route }) => {\n    let showSsgVersions;\n    let showSsgVersionsFeature = useFeature('showSsgVersions');\n    const { report_id: policyId } = useParams();\n    const { data, error, loading } = useQuery(QUERY, {\n        variables: { policyId }\n    });\n    let donutValues = [];\n    let donutId = 'loading-donut';\n    let chartColorScale;\n    let profile = {};\n    let policyName;\n    let legendData;\n    let compliancePercentage;\n\n    if (!loading && data) {\n        profile = data.profile;\n        policyName = profile.policy ? profile.policy.name : profile.name;\n        showSsgVersions = !!profile?.policy && showSsgVersionsFeature;\n        const compliantHostCount = profile.compliantHostCount;\n        const testResultHostCount = profile.testResultHostCount;\n        donutId = profile.name.replace(/ /g, '');\n        donutValues = [\n            { x: 'Compliant', y: testResultHostCount ? compliantHostCount : '0' },\n            { x: 'Non-compliant', y: testResultHostCount - compliantHostCount }\n        ];\n        chartColorScale = testResultHostCount === 0 && [black300.value] ||\n            [blue300.value, blue200.value];\n        legendData = [\n            { name: donutValues[0].y + ' ' + pluralize(donutValues[0].y, 'system') + ' compliant' },\n            { name: donutValues[1].y + ' ' + pluralize(donutValues[1].y, 'system') + ' non-compliant' }\n        ];\n        compliancePercentage = testResultHostCount ? fixedPercentage(Math.floor(100 *\n                (donutValues[0].y / (donutValues[0].y + donutValues[1].y)))) : 0;\n    }\n\n    const columns = [{\n        key: 'facts.compliance.display_name',\n        title: 'System name',\n        props: {\n            width: 30\n        }\n    }, {\n        key: 'facts.compliance.rules_failed',\n        title: 'Rules failed',\n        props: {\n            width: 5\n        }\n    }, ...showSsgVersions ? [{\n        key: 'facts.compliance',\n        title: 'SSG version',\n        props: {\n            width: 5\n        },\n        renderFunc: (profile) => (\n            profile && <Cells.SSGVersion { ...{ profile } } />\n        )\n    }] : [], {\n        key: 'facts.compliance.compliance_score',\n        title: 'Compliance score',\n        props: {\n            width: 5\n        }\n    }, {\n        key: 'facts.compliance.last_scanned',\n        title: 'Last scanned',\n        props: {\n            width: 10\n        }\n    }];\n\n    useTitleEntity(route, policyName);\n\n    return <StateViewWithError stateValues={ { error, data, loading } }>\n        <StateViewPart stateKey='loading'>\n            <PageHeader><ReportDetailsContentLoader/></PageHeader>\n            <Main><EmptyTable><Spinner/></EmptyTable></Main>\n        </StateViewPart>\n        <StateViewPart stateKey='data'>\n            <PageHeader>\n                <Breadcrumb>\n                    <BreadcrumbLinkItem to='/reports'>\n                        Reports\n                    </BreadcrumbLinkItem>\n                    <BreadcrumbItem isActive>{policyName}</BreadcrumbItem>\n                </Breadcrumb>\n                <Grid hasGutter>\n                    <GridItem sm={9} md={9} lg={9} xl={9}>\n                        <PageHeaderTitle title={policyName + ' report'} />\n                    </GridItem>\n                    <GridItem className='report-details-button' sm={3} md={3} lg={3} xl={3}>\n                        <BackgroundLink\n                            state={ { profile } }\n                            to={ `/reports/${ profile.id }/delete` }>\n                            <Button variant='link' isInline>Delete report</Button>\n                        </BackgroundLink>\n                    </GridItem>\n                </Grid>\n                <Grid hasGutter>\n                    <GridItem sm={12} md={12} lg={12} xl={6}>\n                        <div className='chart-inline'>\n                            <div className='chart-container'>\n                                <ChartDonut data={donutValues}\n                                    identifier={donutId}\n                                    title={compliancePercentage}\n                                    subTitle=\"Compliant\"\n                                    themeVariant={ChartThemeVariant.light}\n                                    colorScale={chartColorScale}\n                                    style={{ fontSize: 20 }}\n                                    innerRadius={88}\n                                    width={462}\n                                    legendPosition='right'\n                                    legendData={legendData}\n                                    legendOrientation='vertical'\n                                    padding={{\n                                        bottom: 20,\n                                        left: 0,\n                                        right: 250,\n                                        top: 20\n                                    }}\n                                />\n                            </div>\n                        </div>\n                        {  profile.unsupportedHostCount > 0 && <Text>\n                            <UnsupportedSSGVersion showHelpIcon>\n                                <strong className='ins-u-warning'>\n                                    { profile.unsupportedHostCount } systems not supported\n                                </strong>\n                            </UnsupportedSSGVersion>\n                        </Text> }\n                    </GridItem>\n                    <GridItem sm={12} md={12} lg={12} xl={6}>\n                        <ReportDetailsDescription profile={profile} />\n                    </GridItem>\n                </Grid>\n            </PageHeader>\n            <Main>\n                <Grid hasGutter>\n                    <GridItem span={12}>\n                        <SystemsTable\n                            showOnlySystemsWithTestResults\n                            compliantFilter\n                            defaultFilter={`with_results_for_policy_id = ${profile.id}`}\n                            policyId={profile.id}\n                            columns={columns} />\n                    </GridItem>\n                </Grid>\n            </Main>\n        </StateViewPart>\n    </StateViewWithError>;\n};\n\nReportDetails.propTypes = {\n    route: propTypes.object\n};\n\nexport default ReportDetails;\n","import { features } from '@/constants';\nimport { useLocation, useHistory } from 'react-router-dom';\nconst LOCAL_STORE_FEATURE_PREFIX = 'insights:compliance';\n\nconst setFeatureFlag = (featureValue, feature) => {\n    const value = featureValue === 'enable';\n\n    if (!value) {\n        console.log(`Removing feature setting of ${feature}`);\n        localStorage.removeItem(`${LOCAL_STORE_FEATURE_PREFIX}:${feature}`);\n    } else {\n        console.log(`Setting feature value for ${feature} to ${value}`);\n        localStorage.setItem(`${LOCAL_STORE_FEATURE_PREFIX}:${feature}`, value);\n    }\n};\n\n// Allows setting feature flag values via ?feature|(enable/disable)\nconst setFlagsFromUrl = () => {\n    const { search, pathName: path } = useLocation();\n    const history = useHistory();\n    if (!search) {\n        return;\n    }\n\n    const urlParams = new URLSearchParams(search);\n    urlParams.forEach(setFeatureFlag);\n\n    history.push(path);\n};\n\n// Queries the local storage for feature flag values\nconst getLocatStateFlag = (feature) => (\n    !!localStorage.getItem(`${LOCAL_STORE_FEATURE_PREFIX}:${feature}`)\n);\n\n// A hook to query feature values\nconst useFeature = (feature) => {\n    const featureDefault = features[feature];\n    if (!feature) {\n        return;\n    }\n\n    setFlagsFromUrl();\n\n    const localStoreValue = getLocatStateFlag(feature);\n    const featureEnabled = localStoreValue || featureDefault;\n\n    console.log(`Feature ${feature} is set to ${featureEnabled}`);\n    return featureEnabled;\n};\n\nexport default useFeature;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Breadcrumb = void 0;\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nconst breadcrumb_1 = tslib_1.__importDefault(require(\"@patternfly/react-styles/css/components/Breadcrumb/breadcrumb\"));\nconst react_styles_1 = require(\"@patternfly/react-styles\");\nconst helpers_1 = require(\"../../helpers\");\nexports.Breadcrumb = (_a) => {\n    var { children = null, className = '', 'aria-label': ariaLabel = 'Breadcrumb', ouiaId, ouiaSafe = true } = _a, props = tslib_1.__rest(_a, [\"children\", \"className\", 'aria-label', \"ouiaId\", \"ouiaSafe\"]);\n    const ouiaProps = helpers_1.useOUIAProps(exports.Breadcrumb.displayName, ouiaId, ouiaSafe);\n    return (React.createElement(\"nav\", Object.assign({}, props, { \"aria-label\": ariaLabel, className: react_styles_1.css(breadcrumb_1.default.breadcrumb, className) }, ouiaProps),\n        React.createElement(\"ol\", { className: breadcrumb_1.default.breadcrumbList }, React.Children.map(children, (child, index) => {\n            const showDivider = index > 0;\n            if (React.isValidElement(child)) {\n                return React.cloneElement(child, { showDivider });\n            }\n            return child;\n        }))));\n};\nexports.Breadcrumb.displayName = 'Breadcrumb';\n//# sourceMappingURL=Breadcrumb.js.map"],"sourceRoot":""}