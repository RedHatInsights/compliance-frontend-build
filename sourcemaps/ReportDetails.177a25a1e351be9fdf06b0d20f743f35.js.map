{"version":3,"file":"js/ReportDetails.e92886ff11eb4eb1be25.js","mappings":"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","sources":["webpack:///./src/SmartComponents/ReportDetails/Components/ReportedSystemRow.js","webpack:///./src/SmartComponents/ReportDetails/ReportDetailsWithNotReportedSystems.js","webpack:///./src/SmartComponents/ReportDetails/ReportDetails.js","webpack:///./src/SmartComponents/ReportDownload/constants.js","webpack:///./src/SmartComponents/ReportDownload/Components/ExportPDFForm.js","webpack:///./src/SmartComponents/ReportDownload/hooks/helpers.js","webpack:///./src/SmartComponents/ReportDownload/hooks/useQueryExportData.js","webpack:///./src/SmartComponents/ReportDownload/Components/ReportPDF/StyleSheet.js","webpack:///./src/SmartComponents/ReportDownload/Components/ReportPDF/SystemsTable.js","webpack:///./src/SmartComponents/ReportDownload/Components/ReportPDF/UnsupportedSystemsTable.js","webpack:///./src/SmartComponents/ReportDownload/Components/ReportPDF/NonReportedSystemsTable.js","webpack:///./src/SmartComponents/ReportDownload/Components/ReportPDF/RulesTable.js","webpack:///./src/SmartComponents/ReportDownload/Components/ReportPDF/PanelItem.js","webpack:///./src/SmartComponents/ReportDownload/Components/ReportPDF/SubSection.js","webpack:///./src/SmartComponents/ReportDownload/Components/ReportPDF/ComplianceChart.js","webpack:///./src/SmartComponents/ReportDownload/Components/ReportPDF.js","webpack:///./src/Utilities/hooks/api/utils/ApiClient.js","webpack:///./src/Utilities/hooks/api/useApi.js","webpack:///./src/Utilities/hooks/api/useCollection.js","webpack:///./src/SmartComponents/ReportDownload/hooks/useSupportedSsgFinder.js","webpack:///./src/SmartComponents/ReportDownload/hooks/usePDFExport.js","webpack:///./src/SmartComponents/ReportDownload/hooks/usePDFBuilder.js","webpack:///./src/SmartComponents/ReportDownload/ReportDownload.js","webpack:///./src/SmartComponents/ReportDownload/hooks/useExportSettings.js"],"sourcesContent":["import React from 'react';\nimport propTypes from 'prop-types';\nimport { RowWrapper } from '@patternfly/react-table';\n\nconst ReportedSystemRow = ({ row, children }) => (\n  <RowWrapper\n    style={\n      row.testResultProfiles?.length === 0\n        ? {\n            background: '#F0F0F0',\n            borderLeft:\n              'var(--pf-c-table--border-width--base) solid var(--pf-c-table--BorderColor)',\n            borderRight:\n              'var(--pf-c-table--border-width--base) solid var(--pf-c-table--BorderColor)',\n          }\n        : {}\n    }\n  >\n    {children}\n  </RowWrapper>\n);\n\nReportedSystemRow.propTypes = {\n  row: propTypes.node,\n  children: propTypes.node,\n};\n\nexport default ReportedSystemRow;\n","/* eslint-disable react/display-name */\nimport React from 'react';\nimport propTypes from 'prop-types';\nimport { useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Grid,\n  GridItem,\n} from '@patternfly/react-core';\nimport PageHeader, {\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport EmptyTable from '@redhat-cloud-services/frontend-components/EmptyTable';\nimport Spinner from '@redhat-cloud-services/frontend-components/Spinner';\nimport {\n  BackgroundLink,\n  BreadcrumbLinkItem,\n  ReportDetailsContentLoader,\n  ReportDetailsDescription,\n  StateViewWithError,\n  StateViewPart,\n  SubPageTitle,\n  LinkButton,\n} from 'PresentationalComponents';\nimport { useTitleEntity } from 'Utilities/hooks/useDocumentTitle';\nimport useFeature from 'Utilities/hooks/useFeature';\nimport { SystemsTable } from 'SmartComponents';\nimport '@/Charts.scss';\nimport './ReportDetails.scss';\nimport * as Columns from '../SystemsTable/Columns';\nimport ReportedSystemRow from './Components/ReportedSystemRow';\nimport ReportChart from './Components/ReportChart';\n\nexport const QUERY = gql`\n  query Profile($policyId: String!) {\n    profile(id: $policyId) {\n      id\n      name\n      refId\n      totalHostCount\n      testResultHostCount\n      compliantHostCount\n      unsupportedHostCount\n      complianceThreshold\n      osMajorVersion\n      lastScanned\n      policyType\n      policy {\n        id\n        name\n        profiles {\n          benchmark {\n            version\n          }\n        }\n      }\n      businessObjective {\n        id\n        title\n      }\n    }\n  }\n`;\n\nexport const ReportDetails = ({ route }) => {\n  const { report_id: policyId } = useParams();\n  const pdfReportEnabled = useFeature('pdfReport');\n  const { data, error, loading } = useQuery(QUERY, {\n    variables: { policyId },\n    fetchPolicy: 'no-cache',\n  });\n  let profile = {};\n  let policyName;\n  let pageTitle;\n  let ssgVersions = [];\n\n  if (!loading && data) {\n    profile = data.profile;\n    policyName = profile.policy.name;\n    pageTitle = `Report: ${policyName}`;\n    ssgVersions = [\n      ...new Set(\n        profile.policy.profiles.flatMap(({ benchmark: { version } }) => version)\n      ),\n    ];\n  }\n\n  useTitleEntity(route, policyName);\n\n  return (\n    <StateViewWithError stateValues={{ error, data, loading }}>\n      <StateViewPart stateKey=\"loading\">\n        <PageHeader>\n          <ReportDetailsContentLoader />\n        </PageHeader>\n        <Main>\n          <EmptyTable>\n            <Spinner />\n          </EmptyTable>\n        </Main>\n      </StateViewPart>\n      <StateViewPart stateKey=\"data\">\n        <PageHeader>\n          <Breadcrumb ouiaId=\"ReportDetailsPathBreadcrumb\">\n            <BreadcrumbLinkItem to=\"/\">Compliance</BreadcrumbLinkItem>\n            <BreadcrumbLinkItem to=\"/reports\">Reports</BreadcrumbLinkItem>\n            <BreadcrumbItem isActive>{pageTitle}</BreadcrumbItem>\n          </Breadcrumb>\n          <Grid hasGutter>\n            <GridItem sm={9} md={9} lg={9} xl={9}>\n              <PageHeaderTitle title={pageTitle} />\n              <SubPageTitle>{profile.policyType}</SubPageTitle>\n            </GridItem>\n            <GridItem\n              className=\"report-details-button\"\n              sm={3}\n              md={3}\n              lg={3}\n              xl={3}\n            >\n              {pdfReportEnabled && (\n                <BackgroundLink\n                  state={{ profile }}\n                  to={`/reports/${profile.id}/pdf`}\n                  component={LinkButton}\n                  ouiaId=\"ReportDetailsDownloadReportPDFLink\"\n                  variant=\"primary\"\n                  className=\"pf-u-mr-md\"\n                >\n                  Download PDF\n                </BackgroundLink>\n              )}\n              <BackgroundLink\n                state={{ profile }}\n                to={`/reports/${profile.id}/delete`}\n                component={LinkButton}\n                variant=\"link\"\n                ouiaId=\"ReportDetailsDeleteReportLink\"\n                isInline\n              >\n                Delete report\n              </BackgroundLink>\n            </GridItem>\n          </Grid>\n          <Grid hasGutter>\n            <GridItem sm={12} md={12} lg={12} xl={6}>\n              <ReportChart\n                profile={profile}\n                hasLegend={true}\n                chartClass=\"report-details-chart-container\"\n              />\n            </GridItem>\n            <GridItem sm={12} md={12} lg={12} xl={6}>\n              <ReportDetailsDescription profile={profile} />\n            </GridItem>\n          </Grid>\n        </PageHeader>\n        <Main>\n          <Grid hasGutter>\n            <GridItem span={12}>\n              <SystemsTable\n                showOsMinorVersionFilter={[profile.osMajorVersion]}\n                ssgVersions={ssgVersions}\n                columns={[\n                  Columns.customName({\n                    showLink: true,\n                    showOsInfo: true,\n                  }),\n                  Columns.inventoryColumn('tags'),\n                  Columns.SsgVersion,\n                  Columns.FailedRules,\n                  Columns.ComplianceScore,\n                  Columns.LastScanned,\n                ]}\n                compliantFilter\n                defaultFilter={`policy_id = ${profile.id}`}\n                policyId={profile.id}\n                tableProps={{\n                  rowWrapper: ReportedSystemRow,\n                }}\n              />\n            </GridItem>\n          </Grid>\n        </Main>\n      </StateViewPart>\n    </StateViewWithError>\n  );\n};\n\nReportDetails.propTypes = {\n  route: propTypes.object,\n};\n\nexport default ReportDetails;\n","/* eslint-disable react/display-name */\nimport React from 'react';\nimport propTypes from 'prop-types';\nimport { useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport {\n  Breadcrumb,\n  BreadcrumbItem,\n  Grid,\n  GridItem,\n} from '@patternfly/react-core';\nimport PageHeader, {\n  PageHeaderTitle,\n} from '@redhat-cloud-services/frontend-components/PageHeader';\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport EmptyTable from '@redhat-cloud-services/frontend-components/EmptyTable';\nimport Spinner from '@redhat-cloud-services/frontend-components/Spinner';\nimport {\n  BackgroundLink,\n  BreadcrumbLinkItem,\n  ReportDetailsContentLoader,\n  ReportDetailsDescription,\n  StateViewWithError,\n  StateViewPart,\n  SubPageTitle,\n  LinkButton,\n} from 'PresentationalComponents';\nimport { useTitleEntity } from 'Utilities/hooks/useDocumentTitle';\nimport useFeature from 'Utilities/hooks/useFeature';\nimport { SystemsTable } from 'SmartComponents';\nimport '@/Charts.scss';\nimport './ReportDetails.scss';\nimport * as Columns from '../SystemsTable/Columns';\nimport { default as ReportDetailsWithNotReportedSystems } from './ReportDetailsWithNotReportedSystems';\nimport ReportChart from './Components/ReportChart';\n\nexport const QUERY = gql`\n  query Profile($policyId: String!) {\n    profile(id: $policyId) {\n      id\n      name\n      refId\n      testResultHostCount\n      compliantHostCount\n      unsupportedHostCount\n      complianceThreshold\n      osMajorVersion\n      lastScanned\n      policyType\n      policy {\n        id\n        name\n      }\n      businessObjective {\n        id\n        title\n      }\n    }\n  }\n`;\n\nexport const ReportDetails = ({ route }) => {\n  const { report_id: policyId } = useParams();\n  const pdfReportEnabled = useFeature('pdfReport');\n  const { data, error, loading } = useQuery(QUERY, {\n    variables: { policyId },\n    fetchPolicy: 'no-cache',\n  });\n  let profile = {};\n  let policyName;\n  let pageTitle;\n\n  if (!loading && data) {\n    profile = data.profile;\n    policyName = profile.policy.name;\n    pageTitle = `Report: ${policyName}`;\n  }\n\n  useTitleEntity(route, policyName);\n\n  return (\n    <StateViewWithError stateValues={{ error, data, loading }}>\n      <StateViewPart stateKey=\"loading\">\n        <PageHeader>\n          <ReportDetailsContentLoader />\n        </PageHeader>\n        <Main>\n          <EmptyTable>\n            <Spinner />\n          </EmptyTable>\n        </Main>\n      </StateViewPart>\n      <StateViewPart stateKey=\"data\">\n        <PageHeader>\n          <Breadcrumb ouiaId=\"ReportDetailsPathBreadcrumb\">\n            <BreadcrumbLinkItem to=\"/\">Compliance</BreadcrumbLinkItem>\n            <BreadcrumbLinkItem to=\"/reports\">Reports</BreadcrumbLinkItem>\n            <BreadcrumbItem isActive>{pageTitle}</BreadcrumbItem>\n          </Breadcrumb>\n          <Grid hasGutter>\n            <GridItem sm={9} md={9} lg={9} xl={9}>\n              <PageHeaderTitle title={pageTitle} />\n              <SubPageTitle>{profile.policyType}</SubPageTitle>\n            </GridItem>\n            <GridItem\n              className=\"report-details-button\"\n              sm={3}\n              md={3}\n              lg={3}\n              xl={3}\n            >\n              {pdfReportEnabled && (\n                <BackgroundLink\n                  state={{ profile }}\n                  to={`/reports/${profile.id}/pdf`}\n                  component={LinkButton}\n                  ouiaId=\"ReportDetailsDownloadReportPDFLink\"\n                  variant=\"plain\"\n                  className=\"pf-u-mr-md\"\n                >\n                  Download PDF\n                </BackgroundLink>\n              )}\n              <BackgroundLink\n                state={{ profile }}\n                to={`/reports/${profile.id}/delete`}\n                component={LinkButton}\n                variant=\"link\"\n                ouiaId=\"ReportDetailsDeleteReportLink\"\n                isInline\n              >\n                Delete report\n              </BackgroundLink>\n            </GridItem>\n          </Grid>\n          <Grid hasGutter>\n            <GridItem sm={12} md={12} lg={12} xl={6}>\n              <div className=\"chart-inline\">\n                <div className=\"chart-container\">\n                  <ReportChart\n                    profile={profile}\n                    hasLegend={true}\n                    chartClass=\"report-details-chart-container\"\n                  />\n                </div>\n              </div>\n            </GridItem>\n            <GridItem sm={12} md={12} lg={12} xl={6}>\n              <ReportDetailsDescription profile={profile} />\n            </GridItem>\n          </Grid>\n        </PageHeader>\n        <Main>\n          <Grid hasGutter>\n            <GridItem span={12}>\n              <SystemsTable\n                showOsMinorVersionFilter={[profile.osMajorVersion]}\n                columns={[\n                  Columns.customName({\n                    showLink: true,\n                    showOsInfo: true,\n                  }),\n                  Columns.inventoryColumn('tags'),\n                  Columns.SsgVersion,\n                  Columns.FailedRules,\n                  Columns.ComplianceScore,\n                  Columns.LastScanned,\n                ]}\n                showOnlySystemsWithTestResults\n                compliantFilter\n                defaultFilter={`with_results_for_policy_id = ${profile.id}`}\n                policyId={profile.id}\n              />\n            </GridItem>\n          </Grid>\n        </Main>\n      </StateViewPart>\n    </StateViewWithError>\n  );\n};\n\nReportDetails.propTypes = {\n  route: propTypes.object,\n};\n\nconst ReportDetailsFeatureWrapper = (props) => {\n  const systemsNotReporting = useFeature('systemsNotReporting');\n\n  return systemsNotReporting ? (\n    <ReportDetailsWithNotReportedSystems {...props} />\n  ) : (\n    <ReportDetails {...props} />\n  );\n};\n\nexport default ReportDetailsFeatureWrapper;\n","import gql from 'graphql-tag';\n\nexport const DEFAULT_EXPORT_SETTINGS = {\n  compliantSystems: false,\n  nonCompliantSystems: true,\n  unsupportedSystems: true,\n  nonReportingSystems: true,\n  topTenFailedRules: true,\n  userNotes: undefined,\n};\n\nexport const GET_SYSTEMS = gql`\n  query getSystems(\n    $filter: String!\n    $policyId: ID\n    $perPage: Int\n    $page: Int\n    $sortBy: [String!]\n    $tags: [String!]\n  ) {\n    systems(\n      search: $filter\n      limit: $perPage\n      offset: $page\n      sortBy: $sortBy\n      tags: $tags\n    ) {\n      totalCount\n      edges {\n        node {\n          id\n          name\n          osMajorVersion\n          osMinorVersion\n          insightsId\n          testResultProfiles(policyId: $policyId) {\n            lastScanned\n            compliant\n            score\n            supported\n            benchmark {\n              version\n            }\n            rulesFailed\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport const GET_PROFILE = gql`\n  query Profile($policyId: String!) {\n    profile(id: $policyId) {\n      id\n      name\n      refId\n      testResultHostCount\n      compliantHostCount\n      unsupportedHostCount\n      complianceThreshold\n      osMajorVersion\n      lastScanned\n      policyType\n      totalHostCount\n      policy {\n        id\n        name\n      }\n      benchmark {\n        id\n      }\n      businessObjective {\n        id\n        title\n      }\n    }\n  }\n`;\n\nexport const GET_RULES = gql`\n  query getProfiles($filter: String!, $policyId: ID!) {\n    profiles(search: $filter) {\n      totalCount\n      edges {\n        node {\n          topFailedRules(policyId: $policyId) {\n            refId\n            title\n            remediationAvailable\n            severity\n            identifier\n            failedCount\n          }\n        }\n      }\n    }\n  }\n`;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport {\n  Form,\n  FormGroup,\n  Text,\n  TextArea,\n  Checkbox,\n} from '@patternfly/react-core';\nimport useFeature from 'Utilities/hooks/useFeature';\n\nconst ExportPDFForm = ({ policy, setExportSetting, exportSettings }) => {\n  const systemsNotReporting = useFeature('systemsNotReporting');\n\n  return (\n    <Form>\n      <FormGroup isInline fieldId=\"simple-form-checkbox-group\" label=\"Policy\">\n        <Text>{policy.name}</Text>\n      </FormGroup>\n\n      <FormGroup\n        fieldId=\"simple-form-checkbox-group\"\n        label=\"System data to include\"\n      >\n        <Checkbox\n          label=\"Non-compliant systems\"\n          id=\"non-compliant-systems-export-setting\"\n          aria-label=\"Non-compliant systems\"\n          onChange={setExportSetting('nonCompliantSystems')}\n          isChecked={exportSettings.nonCompliantSystems}\n        />\n        <Checkbox\n          label=\"Systems with unsupported configuration\"\n          id=\"unsupported-systems-export-setting\"\n          aria-label=\"Systems with unsupported configuration\"\n          onChange={setExportSetting('unsupportedSystems')}\n          isChecked={exportSettings.unsupportedSystems}\n        />\n        {systemsNotReporting && (\n          <Checkbox\n            label=\"Systems with no reports\"\n            id=\"nonreporting-systems-export-setting\"\n            aria-label=\"Systems never reported\"\n            onChange={setExportSetting('nonReportingSystems')}\n            isChecked={exportSettings.nonReportingSystems}\n          />\n        )}\n        <Checkbox\n          id=\"compliant-systems-export-setting\"\n          onChange={setExportSetting('compliantSystems')}\n          isChecked={exportSettings.compliantSystems}\n          label=\"Compliant systems\"\n          aria-label=\"Compliant systems\"\n        />\n      </FormGroup>\n\n      <FormGroup label=\"Rule data to include\" fieldId=\"checkbox01\">\n        <Checkbox\n          id=\"failed-rules-export-setting\"\n          label=\"Top failed rules (Up to 10)\"\n          aria-label=\"Rule data to include\"\n          onChange={setExportSetting('topTenFailedRules')}\n          isChecked={exportSettings.topTenFailedRules}\n        />\n      </FormGroup>\n\n      <FormGroup label=\"User notes (optional)\" fieldId=\"checkbox01\">\n        <TextArea\n          aria-label=\"User notes (optional)\"\n          onChange={setExportSetting('userNotes')}\n          value={exportSettings.userNotes}\n        />\n      </FormGroup>\n    </Form>\n  );\n};\n\nExportPDFForm.propTypes = {\n  policy: propTypes.object,\n  exportSettings: propTypes.object,\n  setExportSetting: propTypes.func,\n};\n\nexport default ExportPDFForm;\n","// TODO move to utilities\n// to make these helpers available elsewhere and then use where needed\n\nconst scannedProfiles = (profiles) =>\n  profiles?.filter((profile) => profile.lastScanned != 'Never') || [];\n\nconst isSystemCompliant = (system) => {\n  const hasScannedProfiles =\n    scannedProfiles(system.testResultProfiles).length > 0;\n  const hasOnlyCompliantScannedProfiles = scannedProfiles(\n    system.testResultProfiles\n  ).every((profile) => profile.compliant);\n\n  return hasScannedProfiles && hasOnlyCompliantScannedProfiles;\n};\n\nconst isSystemNonCompliant = (system) => {\n  const hasScannedProfiles =\n    scannedProfiles(system.testResultProfiles).length > 0;\n  const hasNonCompliantProfiles =\n    scannedProfiles(system.testResultProfiles).filter(\n      (profile) => !profile.compliant\n    ).length > 0;\n\n  return hasScannedProfiles && hasNonCompliantProfiles;\n};\n\nconst hasProfiles = ({ testResultProfiles }) =>\n  scannedProfiles(testResultProfiles).length > 0;\n\nconst isSystemSupported = (system) =>\n  hasProfiles(system) &&\n  scannedProfiles(system.testResultProfiles).every(\n    (profile) => profile.supported\n  );\n\nconst isSystemUnsupported = (system) =>\n  hasProfiles(system) &&\n  scannedProfiles(system.testResultProfiles).every(\n    (profile) => !profile.supported\n  );\n\nexport const compliantSystemsData = (systems) =>\n  systems.filter(\n    (system) => isSystemSupported(system) && isSystemCompliant(system)\n  );\n\nexport const nonCompliantSystemsData = (systems) =>\n  systems.filter(\n    (system) => isSystemSupported(system) && isSystemNonCompliant(system)\n  );\n\nexport const unsupportedSystemsData = (systems) =>\n  systems.filter((system) => isSystemUnsupported(system));\n\nexport const supportedSystemsData = (systems) =>\n  systems.filter((system) => isSystemSupported(system));\n\nexport const nonReportingSystemsData = (systems) => {\n  const reportingSystemIds = [\n    ...compliantSystemsData(systems),\n    ...nonCompliantSystemsData(systems),\n    ...unsupportedSystemsData(systems),\n  ].map((system) => system.id);\n\n  return systems.filter((system) => !reportingSystemIds.includes(system.id));\n};\n\nexport const prepareForExport = (\n  exportSettings,\n  systems,\n  topTenFailedRules\n) => {\n  const compliantSystems = compliantSystemsData(systems);\n  const nonCompliantSystems = nonCompliantSystemsData(systems);\n  const unsupportedSystems = unsupportedSystemsData(systems);\n  const nonReportingSystems = nonReportingSystemsData(systems);\n\n  return {\n    totalHostCount: systems.length,\n\n    compliantSystemCount: compliantSystems.length,\n    ...(exportSettings.compliantSystems && {\n      compliantSystems: compliantSystems,\n    }),\n\n    nonCompliantSystemCount: nonCompliantSystems.length,\n    ...(exportSettings.nonCompliantSystems && {\n      nonCompliantSystems: nonCompliantSystems,\n    }),\n\n    unsupportedSystemCount: unsupportedSystems.length,\n    ...(exportSettings.unsupportedSystems && {\n      unsupportedSystems: unsupportedSystems,\n    }),\n\n    ...(exportSettings.topTenFailedRules && {\n      topTenFailedRules,\n    }),\n    nonReportingSystemCount: nonReportingSystems.length,\n    ...(exportSettings.nonReportingSystems && {\n      nonReportingSystems: nonReportingSystems,\n    }),\n    ...(exportSettings.userNotes && { userNotes: exportSettings.userNotes }),\n  };\n};\n","import { useApolloClient } from '@apollo/client';\nimport { GET_SYSTEMS, GET_RULES } from '../constants';\nimport { prepareForExport } from './helpers';\nimport usePromiseQueue from 'Utilities/hooks/usePromiseQueue';\n\nconst useFetchBatched = () => {\n  const { isResolving: isLoading, resolve } = usePromiseQueue();\n\n  return {\n    isLoading,\n    fetchBatched: (fetchFunction, total, filter, batchSize = 50) => {\n      const pages = Math.ceil(total / batchSize) || 1;\n\n      const results = resolve(\n        [...new Array(pages)].map(\n          (_, pageIdx) => () => fetchFunction(batchSize, pageIdx + 1, filter)\n        )\n      );\n\n      return results;\n    },\n  };\n};\n\nconst useSystemsFetch = ({ id: policyId, totalHostCount } = {}) => {\n  const client = useApolloClient();\n  const { fetchBatched } = useFetchBatched();\n\n  const fetchFunction = (perPage, page) =>\n    client.query({\n      query: GET_SYSTEMS,\n      fetchResults: true,\n      fetchPolicy: 'no-cache',\n      variables: {\n        perPage,\n        page,\n        filter: `policy_id = ${policyId}`,\n        policyId,\n      },\n    });\n\n  return async () =>\n    (await fetchBatched(fetchFunction, totalHostCount)).flatMap(\n      ({\n        data: {\n          systems: { edges },\n        },\n      }) => edges.map(({ node }) => node)\n    );\n};\n\nconst useFetchRules = ({ id: policyId } = {}) => {\n  const client = useApolloClient();\n\n  const fetchFunction = (perPage = 10, page = 1) =>\n    client.query({\n      query: GET_RULES,\n      fetchResults: true,\n      fetchPolicy: 'no-cache',\n      variables: {\n        perPage,\n        page,\n        filter: `policy_id = ${policyId}`,\n        policyId,\n      },\n    });\n\n  return async () =>\n    (await fetchFunction()).data.profiles?.edges.flatMap(\n      (edge) => edge.node.topFailedRules\n    );\n};\n\n// Hook that provides a wrapper function for a preconfigured GraphQL client to fetch export data\nconst useQueryExportData = (\n  exportSettings,\n  policy,\n  { onComplete, onError } = {\n    onComplete: () => undefined,\n    onError: () => undefined,\n  }\n) => {\n  const fetchSystems = useSystemsFetch(policy);\n  const fetchRules = useFetchRules(policy);\n\n  return async () => {\n    try {\n      const systems = await fetchSystems();\n      const rules = await fetchRules();\n      const exportData = prepareForExport(exportSettings, systems, rules);\n      onComplete?.(exportData);\n      return exportData;\n    } catch (error) {\n      if (onError) {\n        onError?.(error);\n        return [];\n      } else {\n        throw error;\n      }\n    }\n  };\n};\n\nexport default useQueryExportData;\n","import { StyleSheet } from '@react-pdf/renderer';\n\n// Supported style properties see: https://react-pdf.org/styling\nexport default StyleSheet.create({\n  // TODO: bold rendering in PDF does not appear to work\n  bold: {\n    fontWeight: 'bold',\n  },\n  italic: {\n    fontStyle: 'italic',\n  },\n\n  metaTitle: {\n    color: '#C9190B',\n    marginBottom: '20px',\n  },\n\n  userNotes: {\n    backgroundColor: '#F0F0F0',\n    padding: '8px',\n  },\n  userNotesTitle: {\n    marginBottom: '4px',\n  },\n\n  sectionTitle: {\n    color: '#C9190B',\n    fontWeight: 'bold',\n    fontSize: 14,\n  },\n\n  subSectionTitle: {\n    color: '#C9190B',\n    fontWeight: 'bold',\n    fontSize: 10,\n    marginBottom: '10pt',\n  },\n});\n","import React from 'react';\nimport propTypes from 'prop-types';\n// eslint-disable-next-line rulesdir/disallow-fec-relative-imports\nimport { Table } from '@redhat-cloud-services/frontend-components-pdf-generator';\nimport { fixedPercentage } from 'Utilities/TextHelper';\n\nconst SystemsTable = ({ systems }) => {\n  const headerRow = ['System name', 'OS', 'Failed rules', 'Compliance score'];\n  const rows = systems.map((system) => [\n    system.name,\n    `RHEL ${system.osMajorVersion}.${system.osMinorVersion}`,\n    `${system.testResultProfiles[0].rulesFailed || ''}`,\n    fixedPercentage(system.testResultProfiles[0].score),\n  ]);\n\n  return <Table withHeader rows={[headerRow, ...rows]} />;\n};\n\nSystemsTable.propTypes = {\n  systems: propTypes.array,\n};\n\nexport default SystemsTable;\n","import React from 'react';\nimport propTypes from 'prop-types';\n// eslint-disable-next-line rulesdir/disallow-fec-relative-imports\nimport { Table } from '@redhat-cloud-services/frontend-components-pdf-generator';\n\nconst UnsupportedSystemsTable = ({ systems, ssgFinder }) => {\n  const headerRow = [\n    'System name',\n    'OS',\n    'Running SSG version',\n    'Expected SSG version',\n  ];\n  const rows = systems.map((system) => [\n    system.name,\n    `RHEL ${system.osMajorVersion}.${system.osMinorVersion}`,\n    system.testResultProfiles[0]?.benchmark.version,\n    ssgFinder(system.osMajorVersion, system.osMinorVersion),\n  ]);\n\n  return <Table withHeader rows={[headerRow, ...rows]} />;\n};\n\nUnsupportedSystemsTable.propTypes = {\n  systems: propTypes.array,\n  ssgFinder: propTypes.func,\n};\n\nexport default UnsupportedSystemsTable;\n","import React from 'react';\nimport propTypes from 'prop-types';\n// eslint-disable-next-line rulesdir/disallow-fec-relative-imports\nimport { Table } from '@redhat-cloud-services/frontend-components-pdf-generator';\n\nconst NonReportedSystemsTable = ({ systems }) => {\n  const headerRow = ['System name', 'OS'];\n  const rows = systems.map((system) => [\n    system.name,\n    `RHEL ${system.osMajorVersion}.${system.osMinorVersion}`,\n  ]);\n\n  return <Table withHeader rows={[headerRow, ...rows]} />;\n};\n\nNonReportedSystemsTable.propTypes = {\n  systems: propTypes.array,\n  ssgFinder: propTypes.func,\n};\n\nexport default NonReportedSystemsTable;\n","import React from 'react';\nimport propTypes from 'prop-types';\n// eslint-disable-next-line rulesdir/disallow-fec-relative-imports\nimport { Table } from '@redhat-cloud-services/frontend-components-pdf-generator';\n\nconst identifierLabel = ({ identifier }) => (identifier || '{}').label || '';\n\nconst capitalize = (str = '') => str.charAt(0).toUpperCase() + str.slice(1);\n\nconst RulesTable = ({ rules }) => {\n  const headerRow = ['Rule name', 'ID', 'Severity', 'Failed systems'];\n  const failedRuleRows = rules.slice(0, 10).map((rule) => [\n    rule.title,\n    identifierLabel(rule),\n    // TODO: Add icon svg for severity\n    capitalize(rule?.severity),\n    `${rule.failedCount}`,\n  ]);\n\n  return <Table withHeader rows={[headerRow, ...failedRuleRows]} />;\n};\n\nRulesTable.propTypes = {\n  rules: propTypes.array,\n};\n\nexport default RulesTable;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Text, View } from '@react-pdf/renderer';\n\n// TODO: Move into pdf-generator components as option to render title at the bottom\nconst PanelItem = (props) => {\n  const { children, title } = props;\n  return (\n    <View\n      style={{\n        justifyContent: 'space-evenly',\n        width: '24%',\n        paddingRight: '1%',\n      }}\n    >\n      <View>\n        <Text style={{ color: '#C9190B', fontSize: 20 }}>{children}</Text>\n      </View>\n      <Text>{title}</Text>\n    </View>\n  );\n};\n\nPanelItem.propTypes = {\n  children: propTypes.node,\n  title: propTypes.string,\n};\n\nexport default PanelItem;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Text, View } from '@react-pdf/renderer';\nimport styles from './StyleSheet';\n\nconst SubSection = ({ children, metaTitle, title }) => {\n  return (\n    <View\n      style={{\n        marginBottom: '20pt',\n      }}\n    >\n      <View\n        style={{\n          justifyContent: 'start',\n        }}\n      >\n        <Text\n          style={{\n            ...styles.subSectionTitle,\n            width: '70%',\n          }}\n        >\n          {title}\n        </Text>\n        <Text>{metaTitle}</Text>\n      </View>\n\n      {children}\n    </View>\n  );\n};\n\nSubSection.propTypes = {\n  children: propTypes.node,\n  metaTitle: propTypes.string,\n  title: propTypes.string,\n};\n\nexport default SubSection;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport chart_color_gold_300 from '@patternfly/react-tokens/dist/esm/chart_color_gold_300';\n// eslint-disable-next-line rulesdir/disallow-fec-relative-imports\nimport { Chart } from '@redhat-cloud-services/frontend-components-pdf-generator';\nimport { fixedPercentage } from 'Utilities/TextHelper';\n\n// TODO Legend table style need to be disablable\nconst ComplianceChart = ({\n  policy: { percentCompliant = 0 },\n  compliantSystemCount,\n  nonCompliantSystemCount,\n  unsupportedSystemCount,\n  nonReportingSystemCount,\n}) => {\n  const compliantSystemsChartData = [\n    {\n      x: `${compliantSystemCount} systems compliant`,\n      y: compliantSystemCount,\n    },\n    {\n      x: `${nonCompliantSystemCount} systems non-compliant`,\n      y: nonCompliantSystemCount,\n    },\n    ...(unsupportedSystemCount > 0\n      ? [\n          {\n            x: `${unsupportedSystemCount} systems not supported`,\n            y: unsupportedSystemCount,\n            color: chart_color_gold_300.value,\n          },\n        ]\n      : []),\n    ...(nonReportingSystemCount > 0\n      ? [\n          {\n            x: `${nonReportingSystemCount} systems never reported`,\n            y: nonReportingSystemCount,\n          },\n        ]\n      : []),\n  ];\n  const compliancePercentage = fixedPercentage(percentCompliant);\n\n  return (\n    <Chart\n      legendHeader={''}\n      chartType=\"donut\"\n      subTitle=\"Compliant\"\n      colorSchema=\"multi\"\n      title={compliancePercentage}\n      data={compliantSystemsChartData}\n    />\n  );\n};\n\nComplianceChart.propTypes = {\n  policy: propTypes.object,\n  compliantSystemCount: propTypes.number,\n  nonCompliantSystemCount: propTypes.number,\n  unsupportedSystemCount: propTypes.number,\n  nonReportingSystemCount: propTypes.number,\n};\n\nexport default ComplianceChart;\n","import React, { Fragment } from 'react';\nimport propTypes from 'prop-types';\nimport { Text, View } from '@react-pdf/renderer';\n// eslint-disable-next-line rulesdir/disallow-fec-relative-imports\nimport {\n  Panel,\n  Table,\n  Column,\n  Section,\n} from '@redhat-cloud-services/frontend-components-pdf-generator';\nimport { DateFormat } from '@redhat-cloud-services/frontend-components/DateFormat';\nimport { fixedPercentage } from 'Utilities/TextHelper';\nimport styles from './ReportPDF/StyleSheet';\nimport SystemsTable from './ReportPDF/SystemsTable';\nimport UnsupportedSystemsTable from './ReportPDF/UnsupportedSystemsTable';\nimport NonReportedSystemsTable from './ReportPDF/NonReportedSystemsTable';\nimport RulesTable from './ReportPDF/RulesTable';\nimport PanelItem from './ReportPDF/PanelItem';\nimport SubSection from './ReportPDF/SubSection';\nimport ComplianceChart from './ReportPDF/ComplianceChart';\n\nconst ReportPDF = ({ data, ssgFinder }) => {\n  const {\n    totalHostCount,\n    compliantSystems,\n    compliantSystemCount,\n    nonCompliantSystems,\n    nonCompliantSystemCount,\n    topTenFailedRules,\n    unsupportedSystems,\n    unsupportedSystemCount,\n    nonReportingSystems,\n    nonReportingSystemCount,\n    userNotes,\n    policy,\n  } = data;\n  const { testResultHostCount = 0, compliantHostCount = 0 } = policy;\n  const percentCompliant =\n    testResultHostCount != 0\n      ? fixedPercentage(Math.floor(100 * (compliantHostCount / totalHostCount)))\n      : 0;\n\n  return (\n    <Fragment>\n      <Text style={styles.subSectionTitle}>{`Report prepared ${\n        DateFormat({ date: new Date(), type: 'exact' }).props.children\n      }`}</Text>\n\n      {userNotes && (\n        <View style={styles.userNotes}>\n          <View style={styles.userNotesTitle}>\n            <Text>User notes</Text>\n          </View>\n          <View>\n            <Text>{userNotes}</Text>\n          </View>\n        </View>\n      )}\n\n      <Section\n        title=\"Policy Details\"\n        titleProps={{\n          style: styles.sectionTitle,\n        }}\n      >\n        <Column style={{ width: '150px' }}>\n          <Table\n            // TODO: correct left side styling\n            rows={[\n              ['Policy type', policy.policyType],\n              ['Operating system', `RHEL ${policy.osMajorVersion}`],\n              ['Compliance threshold', `${policy.complianceThreshold}%`],\n              ['Business Objective', policy.businessObjective?.title || '--'],\n            ]}\n          />\n        </Column>\n        <Column>\n          <ComplianceChart\n            policy={{\n              ...policy,\n              percentCompliant,\n            }}\n            {...{\n              compliantSystemCount,\n              nonCompliantSystemCount,\n              unsupportedSystemCount,\n              nonReportingSystemCount,\n            }}\n          />\n        </Column>\n      </Section>\n\n      <Section\n        title=\"Systems\"\n        withColumn={false}\n        titleProps={{\n          style: styles.sectionTitle,\n        }}\n      >\n        <Panel withColumn={false} style={{ marginBottom: '20px' }}>\n          <PanelItem title=\"Non-compliant systems\">\n            {nonCompliantSystemCount}\n          </PanelItem>\n\n          {unsupportedSystemCount ? (\n            <PanelItem title=\"Systems with unsupported configuration\">\n              {unsupportedSystemCount}\n            </PanelItem>\n          ) : null}\n\n          {nonReportingSystemCount ? (\n            <PanelItem title=\"Systems never reported\">\n              {nonReportingSystemCount}\n            </PanelItem>\n          ) : null}\n\n          <PanelItem title=\"Compliant systems\">\n            {compliantSystemCount}\n          </PanelItem>\n        </Panel>\n\n        {nonCompliantSystems && nonCompliantSystemCount ? (\n          <SubSection title=\"Non-compliant systems\">\n            <SystemsTable systems={nonCompliantSystems} />\n          </SubSection>\n        ) : null}\n\n        {unsupportedSystems && unsupportedSystemCount ? (\n          <SubSection title=\"Systems with unsupported configuration\">\n            <UnsupportedSystemsTable\n              systems={unsupportedSystems}\n              ssgFinder={ssgFinder}\n            />\n          </SubSection>\n        ) : null}\n\n        {nonReportingSystems && nonReportingSystemCount ? (\n          <SubSection title=\"Systems never reported\">\n            <NonReportedSystemsTable systems={nonReportingSystems} />\n          </SubSection>\n        ) : null}\n\n        {compliantSystems && compliantSystemCount ? (\n          <SubSection title=\"Compliant systems\">\n            <SystemsTable systems={compliantSystems} />\n          </SubSection>\n        ) : null}\n      </Section>\n\n      {topTenFailedRules ? (\n        <Section\n          title=\"Rules\"\n          withColumn={false}\n          titleProps={{\n            style: styles.sectionTitle,\n          }}\n        >\n          <SubSection title=\"Top failed rules\">\n            <RulesTable rules={topTenFailedRules} />\n          </SubSection>\n        </Section>\n      ) : null}\n    </Fragment>\n  );\n};\n\nReportPDF.propTypes = {\n  data: propTypes.object,\n  ssgFinder: propTypes.func,\n};\n\nexport default ReportPDF;\n","class ApiClient {\n  DEFAULT_API_HEADERS = {\n    'Content-Type': 'application/vnd.api+json',\n    Accept: 'application/json',\n  };\n\n  constructor(options = {}) {\n    this.apiBase = options.apiBase || '/api';\n    this.path = options.path || '';\n    this.authenticate = options.authenticate || (() => Promise.resolve({}));\n    this.onUnauthorised = options.onUnauthorised || (() => Promise.resolve({}));\n    this.defaultHeaders = options.headers || this.DEFAULT_API_HEADERS;\n  }\n\n  async request(path, apiProps, method, options = {}) {\n    return await this.callAuthenticate()\n      .then(() => this.fetch(path, apiProps, method, options))\n      .then(this.checkForEmptyResponse)\n      .then((response) => this.checkForErrors(response, options))\n      .then((response) => response.json())\n      .catch(this.finalCatch);\n  }\n\n  finalCatch(promise) {\n    if (promise.errors === undefined) {\n      return Promise.reject({ title: 'Error parsing' });\n    } else {\n      return Promise.reject({ ...promise });\n    }\n  }\n\n  fetch(path, apiProps, method, options) {\n    let params = {\n      method: method || 'get',\n      headers: this.defaultHeaders,\n      credentials: 'include',\n    };\n    const fullPath = `${this.apiBase}${this.path ? this.path : ''}${\n      path ? path : ''\n    }`;\n    let url = new URL(fullPath, window.location.origin);\n    if (options.params) {\n      const params = Object.keys(options.params)\n        .map(\n          (key) =>\n            encodeURIComponent(key) +\n            '=' +\n            encodeURIComponent(options.params[key])\n        )\n        .join('&');\n      url.search = new URLSearchParams(params);\n    }\n\n    if (apiProps) {\n      params.body = JSON.stringify(apiProps);\n    }\n\n    return fetch(url, params);\n  }\n\n  checkForEmptyResponse(response) {\n    return response.status === 204 ? { json: () => ({}) } : response;\n  }\n\n  checkForErrors(response, options = {}) {\n    if (response.status === 404 && options.ignore404) {\n      return { json: () => ({}) };\n    }\n\n    if (response.status === 401) {\n      return this.onUnauthorised();\n    }\n\n    const responseCloneJson = response.clone\n      ? response.clone().json()\n      : response;\n\n    if (response.status === 422) {\n      return responseCloneJson.then((json) =>\n        Promise.reject({ ...json, title: 'Validation error' })\n      );\n    }\n\n    if (response.status >= 400 && response.status <= 600) {\n      return responseCloneJson.then((json) => Promise.reject(json.errors[0]));\n    }\n\n    return response;\n  }\n\n  callAuthenticate() {\n    return Promise.resolve(this.authenticate() || true);\n  }\n\n  create(path, apiProps) {\n    return this.request(path, apiProps, 'post');\n  }\n\n  update(path, apiProps) {\n    return this.request(path, apiProps, 'put');\n  }\n\n  get(path, options = {}) {\n    return this.request(path, null, 'get', options);\n  }\n\n  destroy(path) {\n    return this.request(path, null, 'delete');\n  }\n}\n\nexport default ApiClient;\n","import ApiClient from './utils/ApiClient';\n\nconst useApi = (options) => {\n  const apiClient = new ApiClient({\n    ...options,\n  });\n\n  return apiClient;\n};\n\nexport default useApi;\n","import { useEffect, useState } from 'react';\nimport { COMPLIANCE_API_ROOT } from '@/constants';\nimport normalize from 'json-api-normalizer';\nimport useApi from './useApi';\n\nconst includePropAndDelete = (entity, prop) => {\n  const attributes = entity[prop];\n  let newEntity = entity;\n  delete newEntity[prop];\n  return { ...newEntity, ...attributes };\n};\n\nconst includeAttributes = (entity) =>\n  entity && includePropAndDelete(entity, 'attributes');\n\nconst includeRelationship = (entity, normalizedJson) => {\n  let relationships = {};\n  Object.entries(entity?.relationships || []).forEach((item) => {\n    const [relationship, relationshipData] = item;\n    relationships[relationship] = relationshipData?.data\n      .map((entity) =>\n        includeAttributes(normalizedJson?.[entity.type]?.[entity.id])\n      )\n      .filter((v) => !!v);\n  });\n  delete entity.relationships;\n  return { ...entity, ...relationships };\n};\n\nconst normalizeData = (json, type) => {\n  const jsonNormalized = normalize(json);\n  return Object.values(jsonNormalized[type] || {})?.map((entity) =>\n    includeRelationship(includeAttributes(entity), jsonNormalized)\n  );\n};\n\nconst fetchCollection = async (\n  apiClient,\n  collection,\n  params = {},\n  options = {}\n) => {\n  const json = await apiClient.get(`/${collection}`, { params });\n  const normalized = await normalizeData(json, options?.type || collection);\n\n  return {\n    collection: normalized,\n    meta: json.meta,\n    total: json.meta.total,\n    json,\n  };\n};\n\nconst useCollection = (collection, options = {}, dependencies = []) => {\n  const [collectionState, setCollectionState] = useState({\n    data: undefined,\n    loading: false,\n    error: undefined,\n  });\n  const apiClient = useApi({\n    apiBase: COMPLIANCE_API_ROOT,\n  });\n  const params = {\n    ...(options?.params || {}),\n    include: options?.include || [],\n  };\n\n  useEffect(() => {\n    if (!options?.skip) {\n      setCollectionState({\n        data: undefined,\n        loading: true,\n        error: undefined,\n      });\n\n      fetchCollection(apiClient, collection, params, options).then((data) => {\n        setCollectionState({\n          data,\n          loading: false,\n          error: undefined,\n        });\n      });\n    }\n  }, [...dependencies, options?.skip]);\n\n  return collectionState;\n};\n\nexport default useCollection;\n","import useCollection from 'Utilities/hooks/api/useCollection';\n\nconst compareAsIntegers = (firstString, secondString) =>\n  parseInt(firstString) === parseInt(secondString);\n\nconst useSupportedSsgFinder = (skip) => {\n  const { data: supportedSsgs } = useCollection('supported_ssgs', {\n    type: 'supportedSsg',\n    skip,\n  });\n  return (majorVersion, minorVersion) => {\n    const matchingVersion = (supportedSsgs || {}).collection?.find(\n      (profile) =>\n        compareAsIntegers(profile.osMajorVersion, majorVersion) &&\n        compareAsIntegers(profile.osMinorVersion, minorVersion)\n    );\n\n    return matchingVersion?.version || 'N/A';\n  };\n};\n\nexport default useSupportedSsgFinder;\n","import { dispatchNotification } from 'Utilities/Dispatcher';\nimport useQueryExportData from './useQueryExportData';\nimport usePDFBuilder from './usePDFBuilder';\nimport useSupportedSsgFinder from './useSupportedSsgFinder';\n\n// Hook to provide a function that fetches the necessary data to export\n// and compile it into pages for the pdf-generator DownloadButton\nconst usePDFExport = (exportSettings, policy) => {\n  const ssgFinder = useSupportedSsgFinder();\n  const queryExportData = useQueryExportData(exportSettings, policy, {\n    onError: () => {\n      dispatchNotification({\n        variant: 'danger',\n        title: 'Couldn’t download export',\n        description: 'Reinitiate this export to try again.',\n      });\n    },\n    onComplete: () => {\n      dispatchNotification({\n        variant: 'success',\n        title: 'Downloading export',\n      });\n    },\n  });\n  const buildPDFPages = usePDFBuilder(policy);\n\n  const exportPDF = async () => {\n    dispatchNotification({\n      variant: 'info',\n      title: 'Preparing export',\n      description: 'Once complete, your download will start automatically.',\n    });\n    const data = await queryExportData();\n    return await buildPDFPages(data, ssgFinder);\n  };\n\n  return exportPDF;\n};\n\nexport default usePDFExport;\n","import React from 'react';\nimport ReportPDF from '../Components/ReportPDF';\n\n// (Eventually) responsible for rendering sections and splitting into pages\nconst usePDFBuilder = (policy) => async (data, ssgFinder) =>\n  [\n    <ReportPDF\n      key=\"pdf-page-1\"\n      data={{ ...data, policy }}\n      ssgFinder={ssgFinder}\n    />,\n  ];\n\nexport default usePDFBuilder;\n","import React from 'react';\nimport { Button, Spinner } from '@patternfly/react-core';\nimport { useParams } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\n// eslint-disable-next-line\nimport { DownloadButton } from '@redhat-cloud-services/frontend-components-pdf-generator';\nimport {\n  ComplianceModal,\n  StateViewWithError,\n  StateViewPart,\n} from 'PresentationalComponents';\nimport { useLinkToBackground } from 'Utilities/Router';\nimport { GET_PROFILE } from './constants';\nimport ExportPDFForm from './Components/ExportPDFForm';\nimport usePDFExport from './hooks/usePDFExport';\nimport useExportSettings from './hooks/useExportSettings';\n\n// Provides that export settings modal accessible in the report details\nexport const ReportDownload = () => {\n  const { report_id: policyId } = useParams();\n  const linkToReport = useLinkToBackground('/reports/' + policyId);\n  const { data, loading, error } = useQuery(GET_PROFILE, {\n    variables: { policyId },\n  });\n  const policy = data?.profile;\n  const {\n    exportSettings,\n    setExportSetting,\n    isValid: settingsValid,\n  } = useExportSettings();\n\n  const exportPDF = usePDFExport(exportSettings, policy);\n  const exportFileName = `compliance-report--${\n    new Date().toISOString().split('T')[0]\n  }`;\n  const buttonLabel = 'Export report';\n  const buttonProps = {\n    ouiaId: 'ExportReportButton',\n    variant: 'primary',\n    isDisabled: !settingsValid,\n  };\n\n  const FallbackButton = () => <Button {...buttonProps}>{buttonLabel}</Button>;\n\n  const actions = [\n    <DownloadButton\n      groupName=\"Red Hat Insights\"\n      key=\"export\"\n      label={buttonLabel}\n      reportName={`Compliance:`}\n      type={policy && policy.name}\n      fileName={exportFileName}\n      asyncFunction={exportPDF}\n      buttonProps={buttonProps}\n      fallback={<FallbackButton />}\n      className=\"pf-u-mr-sm\"\n    />,\n    <Button\n      variant=\"secondary\"\n      key=\"cancel\"\n      ouiaId=\"ExportReportCancelButton\"\n      onClick={(event) => {\n        event.preventDefault();\n        window.history.back();\n      }}\n    >\n      Cancel\n    </Button>,\n  ];\n\n  return (\n    <ComplianceModal\n      isOpen\n      width=\"440px\"\n      ouiaId=\"DownloadReportModal\"\n      title=\"Compliance report\"\n      onClose={() => linkToReport()}\n      actions={actions}\n    >\n      <StateViewWithError stateValues={{ error, data, loading }}>\n        <StateViewPart stateKey=\"loading\">\n          <Spinner />\n        </StateViewPart>\n        <StateViewPart stateKey=\"data\">\n          <ExportPDFForm {...{ policy, setExportSetting, exportSettings }} />\n        </StateViewPart>\n      </StateViewWithError>\n    </ComplianceModal>\n  );\n};\n\nexport default ReportDownload;\n","import { useState } from 'react';\nimport pickBy from 'lodash/pickBy';\nimport useFeature from 'Utilities/hooks/useFeature';\nimport { DEFAULT_EXPORT_SETTINGS } from '../constants';\n\nconst preparedSettings = (withReporting) =>\n  pickBy(\n    DEFAULT_EXPORT_SETTINGS,\n    (_value, key) => !(key === 'nonReportingSystems' && !withReporting)\n  );\n\nconst useExportSettings = () => {\n  const systemsNotReporting = useFeature('systemsNotReporting');\n  const [exportSettings, setExportSettings] = useState(\n    preparedSettings(systemsNotReporting)\n  );\n\n  const setExportSetting = (setting) => (value) =>\n    setExportSettings({\n      ...exportSettings,\n      [setting]: value,\n    });\n\n  const isValid = () =>\n    Object.keys(exportSettings).some(\n      (key) => (key !== 'userNotes' && !!exportSettings[key]) === true\n    );\n\n  return {\n    exportSettings,\n    setExportSetting,\n    isValid: isValid(),\n  };\n};\n\nexport default useExportSettings;\n"],"names":["ReportedSystemRow","row","children","RowWrapper","style","testResultProfiles","length","background","borderLeft","borderRight","propTypes","QUERY","gql","ReportDetails","policyName","pageTitle","route","policyId","useParams","report_id","pdfReportEnabled","useFeature","useQuery","variables","fetchPolicy","data","error","loading","profile","ssgVersions","policy","name","Set","profiles","flatMap","benchmark","version","useTitleEntity","stateValues","stateKey","PageHeader","Main","EmptyTable","Spinner","Breadcrumb","ouiaId","to","BreadcrumbItem","isActive","Grid","hasGutter","GridItem","sm","md","lg","xl","PageHeaderTitle","title","policyType","className","state","id","component","LinkButton","variant","isInline","ReportChart","hasLegend","chartClass","span","showOsMinorVersionFilter","osMajorVersion","columns","Columns","showLink","showOsInfo","compliantFilter","defaultFilter","tableProps","rowWrapper","showOnlySystemsWithTestResults","props","ReportDetailsWithNotReportedSystems","DEFAULT_EXPORT_SETTINGS","compliantSystems","nonCompliantSystems","unsupportedSystems","nonReportingSystems","topTenFailedRules","userNotes","undefined","GET_SYSTEMS","GET_PROFILE","GET_RULES","ExportPDFForm","setExportSetting","exportSettings","systemsNotReporting","Form","FormGroup","fieldId","label","Text","Checkbox","onChange","isChecked","TextArea","value","scannedProfiles","filter","lastScanned","hasProfiles","isSystemSupported","system","every","supported","compliantSystemsData","systems","hasScannedProfiles","hasOnlyCompliantScannedProfiles","compliant","isSystemCompliant","nonCompliantSystemsData","hasNonCompliantProfiles","isSystemNonCompliant","unsupportedSystemsData","isSystemUnsupported","prepareForExport","reportingSystemIds","map","includes","nonReportingSystemsData","totalHostCount","compliantSystemCount","nonCompliantSystemCount","unsupportedSystemCount","nonReportingSystemCount","useFetchBatched","usePromiseQueue","isLoading","isResolving","resolve","fetchBatched","fetchFunction","total","batchSize","pages","Math","ceil","results","Array","_","pageIdx","useSystemsFetch","client","useApolloClient","perPage","page","query","fetchResults","edges","node","useFetchRules","edge","topFailedRules","StyleSheet","bold","fontWeight","italic","fontStyle","metaTitle","color","marginBottom","backgroundColor","padding","userNotesTitle","sectionTitle","fontSize","subSectionTitle","SystemsTable","rows","osMinorVersion","rulesFailed","fixedPercentage","score","withHeader","UnsupportedSystemsTable","ssgFinder","NonReportedSystemsTable","capitalize","str","charAt","toUpperCase","slice","RulesTable","failedRuleRows","rules","rule","identifier","severity","failedCount","PanelItem","justifyContent","width","paddingRight","SubSection","styles","ComplianceChart","percentCompliant","compliantSystemsChartData","x","y","chart_color_gold_300","compliancePercentage","legendHeader","chartType","subTitle","colorSchema","ReportPDF","testResultHostCount","compliantHostCount","floor","Fragment","DateFormat","date","Date","type","titleProps","complianceThreshold","businessObjective","withColumn","options","Accept","this","apiBase","path","authenticate","Promise","onUnauthorised","defaultHeaders","headers","DEFAULT_API_HEADERS","apiProps","method","callAuthenticate","then","fetch","checkForEmptyResponse","response","checkForErrors","json","catch","finalCatch","promise","errors","reject","params","credentials","fullPath","url","URL","window","location","origin","Object","keys","key","encodeURIComponent","join","search","URLSearchParams","body","JSON","stringify","status","ignore404","responseCloneJson","clone","request","apiClient","ApiClient","includeAttributes","entity","prop","attributes","newEntity","includePropAndDelete","normalizeData","jsonNormalized","normalize","values","normalizedJson","relationships","entries","forEach","item","relationship","relationshipData","v","includeRelationship","fetchCollection","collection","get","normalized","meta","compareAsIntegers","firstString","secondString","parseInt","skip","supportedSsgs","dependencies","useState","collectionState","setCollectionState","useApi","COMPLIANCE_API_ROOT","include","useEffect","useCollection","majorVersion","minorVersion","matchingVersion","find","useSupportedSsgFinder","queryExportData","onComplete","onError","fetchSystems","fetchRules","exportData","useQueryExportData","dispatchNotification","description","buildPDFPages","usePDFBuilder","exportPDF","ReportDownload","linkToReport","useLinkToBackground","withReporting","pickBy","_value","setExportSettings","setting","isValid","some","useExportSettings","settingsValid","usePDFExport","exportFileName","toISOString","split","buttonLabel","buttonProps","isDisabled","FallbackButton","Button","actions","groupName","reportName","fileName","asyncFunction","fallback","onClick","event","preventDefault","history","back","C","isOpen","onClose"],"sourceRoot":""}