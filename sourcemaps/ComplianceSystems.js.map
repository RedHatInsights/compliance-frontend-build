{"version":3,"sources":["webpack:///./src/SmartComponents/ErrorPage/ErrorPage.js","webpack:///./src/SmartComponents/ComplianceTabs/ComplianceTabs.js","webpack:///./src/SmartComponents/ComplianceSystemsTable/ComplianceSystemsTable.js","webpack:///./src/SmartComponents/ComplianceSystems/ComplianceSystems.js"],"names":["ErrorPage","props","_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default","this","_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default","_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default","call","error","networkError","statusCode","window","insights","chrome","auth","logout","react__WEBPACK_IMPORTED_MODULE_5__","propTypes","prop_types__WEBPACK_IMPORTED_MODULE_6___default","a","object","__webpack_exports__","ComplianceTabs","_this","redirect","bind","_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5___default","tab","history","push","itemId","react__WEBPACK_IMPORTED_MODULE_8___default","createElement","Fragment","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_10__","onSelect","aria-label","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_11__","variant","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_12__","horizontal","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_13__","preventDefault","isActive","match","path","_Routes__WEBPACK_IMPORTED_MODULE_9__","compliancePolicies","complianceSystems","react__WEBPACK_IMPORTED_MODULE_8__","prop_types__WEBPACK_IMPORTED_MODULE_7___default","Object","_red_hat_insights_insights_frontend_components__WEBPACK_IMPORTED_MODULE_6__","QUERY","src_default","_templateObject","SmartComponents_ComplianceSystemsTable_ComplianceSystemsTable","insights_frontend_components","react_default","react_apollo_browser_umd","query","_ref","data","loading","systems","allSystems","className","SystemsTable","disableRemediations","items","columns","composed","key","title","width"],"mappings":"+MAGMA,cACF,SAAAA,EAAYC,GAAO,OAAAC,IAAAC,KAAAH,GAAAI,IAAAD,KAAAE,IAAAL,GAAAM,KAAAH,KACTF,0DAGD,IACGM,EAAUJ,KAAKF,MAAfM,MAKR,OAJsC,MAAlCA,EAAMC,aAAaC,YACnBC,OAAOC,SAASC,OAAOC,KAAKC,SAGzB,iIAEHP,EAAMC,aAAaC,WAAa,IAAMF,SAb1BQ,EAAA,WAiBxBf,EAAUgB,WACNT,MAAOU,EAAAC,EAAUC,QAGNC,EAAA,4OClBTC,cACF,SAAAA,EAAYpB,GAAO,IAAAqB,EAAA,OAAApB,IAAAC,KAAAkB,IACfC,EAAAlB,IAAAD,KAAAE,IAAAgB,GAAAf,KAAAH,KAAMF,KACDsB,SAAWD,EAAKC,SAASC,KAAdC,QAAAH,KAFDA,wDAIVI,GACLvB,KAAKF,MAAM0B,QAAQC,KAAKF,EAAIG,yCAG5B,OACIC,EAAAZ,EAAAa,cAACD,EAAAZ,EAAMc,SAAP,KACIF,EAAAZ,EAAAa,cAACE,EAAA,GAAIC,SAAU/B,KAAKoB,SAAUY,aAAW,mBACrCL,EAAAZ,EAAAa,cAACK,EAAA,GAAQC,QAASC,EAAA,EAAYC,YAC1BT,EAAAZ,EAAAa,cAACS,EAAA,GAAQC,gBAAgB,EACrBC,SAAUvC,KAAKF,MAAM0C,MAAMC,OAASC,EAAA,EAAMC,mBAC1CjB,OAAQgB,EAAA,EAAMC,oBAFlB,YAKAhB,EAAAZ,EAAAa,cAACS,EAAA,GAAQC,gBAAgB,EACrBC,SAAUvC,KAAKF,MAAM0C,MAAMC,OAASC,EAAA,EAAME,kBAC1ClB,OAAQgB,EAAA,EAAME,mBAFlB,qBAlBKC,EAAA,WA8B7B3B,EAAeL,WACXW,QAASsB,EAAA/B,EAAUC,OACnBwB,MAAOM,EAAA/B,EAAUC,QAGNC,EAAA,EAAA8B,OAAAC,EAAA,cAAa9B,0SClC5B,IAAM+B,EAAQC,IAAHC,KA8CIC,EAAAL,OAAAM,EAAA,cAnCgB,kBAC3BC,EAAAvC,EAAAa,cAAC2B,EAAA,OAAMC,MAAOP,GACT,SAAAQ,GAA8B,IAA3BC,EAA2BD,EAA3BC,KAAMtD,EAAqBqD,EAArBrD,MAAOuD,EAAcF,EAAdE,QACb,GAAIvD,EAAS,OAAOkD,EAAAvC,EAAAa,cAAC/B,EAAA,GAAUO,MAAOA,IAEtC,GAAIuD,EAAW,MAAO,qBAEtB,IAAMC,EAAUF,EAAKG,WAmBrB,OACIP,EAAAvC,EAAAa,cAAA,OAAKkC,UAAU,iBACXR,EAAAvC,EAAAa,cAACmC,EAAA,GAAaC,qBAAqB,EAAMC,MAAOL,EAASM,UAnB7DC,UAAW,mBAAoB,gBAC/BC,IAAK,eACLC,MAAO,SAEPD,IAAK,4BACLC,MAAO,WACPvE,OACIwE,MAAO,MAGXF,IAAK,6BACLC,MAAO,YACPvE,OACIwE,MAAO,sBCrBZrD,EAAA,QAdW,WACtB,OACIqC,EAAAvC,EAAAa,cAAC0B,EAAAvC,EAAMc,SAAP,KACIyB,EAAAvC,EAAAa,cAACyB,EAAA,WAAD,KACIC,EAAAvC,EAAAa,cAACyB,EAAA,iBAAgBgB,MAAM,eACvBf,EAAAvC,EAAAa,cAACV,EAAA,EAAD,OAEJoC,EAAAvC,EAAAa,cAACyB,EAAA,KAAD,KACIC,EAAAvC,EAAAa,cAACwB,EAAD","file":"js/ComplianceSystems.js","sourcesContent":["import { Component } from 'react';\nimport propTypes from 'prop-types';\n\nclass ErrorPage extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { error } = this.props;\n        if (error.networkError.statusCode === 401) {\n            window.insights.chrome.auth.logout();\n        }\n\n        return 'Oops! There was an error loading Compliance data. If you need to contact ' +\n            'Red Hat Support about this, this is the exact error: ' +\n            error.networkError.statusCode + ' ' + error;\n    }\n}\n\nErrorPage.propTypes = {\n    error: propTypes.object\n};\n\nexport default ErrorPage;\n","import { routerParams } from '@red-hat-insights/insights-frontend-components';\nimport propTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { paths } from '../../Routes';\nimport { Nav, NavList, NavItem, NavVariants } from '@patternfly/react-core';\n\nclass ComplianceTabs extends Component {\n    constructor(props) {\n        super(props);\n        this.redirect = this.redirect.bind(this);\n    }\n    redirect(tab) {\n        this.props.history.push(tab.itemId);\n    }\n    render() {\n        return (\n            <React.Fragment>\n                <Nav onSelect={this.redirect} aria-label=\"Compliance Tabs\">\n                    <NavList variant={NavVariants.horizontal}>\n                        <NavItem preventDefault={true}\n                            isActive={this.props.match.path === paths.compliancePolicies}\n                            itemId={paths.compliancePolicies}>\n                            Policies\n                        </NavItem>\n                        <NavItem preventDefault={true}\n                            isActive={this.props.match.path === paths.complianceSystems}\n                            itemId={paths.complianceSystems}>\n                            Systems\n                        </NavItem>\n                    </NavList>\n                </Nav>\n            </React.Fragment>\n        );\n    }\n}\n\nComplianceTabs.propTypes = {\n    history: propTypes.object,\n    match: propTypes.object\n};\n\nexport default routerParams(ComplianceTabs);\n","import React from 'react';\nimport { routerParams } from '@red-hat-insights/insights-frontend-components';\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport SystemsTable from '../SystemsTable/SystemsTable';\nimport ErrorPage from '../ErrorPage/ErrorPage';\n\nconst QUERY = gql`\n{\n    allSystems {\n        id\n        name\n        profile_names\n        compliant\n    }\n}\n`;\n\nconst ComplianceSystemsTable = () => (\n    <Query query={QUERY}>\n        {({ data, error, loading }) => {\n            if (error) { return <ErrorPage error={error}/>; }\n\n            if (loading) { return 'Loading Systems...'; }\n\n            const systems = data.allSystems;\n            const columns = [{\n                composed: ['facts.os_release', 'display_name'],\n                key: 'display_name',\n                title: 'Name'\n            }, {\n                key: 'facts.compliance.profiles',\n                title: 'Profiles',\n                props: {\n                    width: 40\n                }\n            }, {\n                key: 'facts.compliance.compliant',\n                title: 'Compliant',\n                props: {\n                    width: 10\n                }\n            }];\n\n            return (\n                <div className=\"systems-table\">\n                    <SystemsTable disableRemediations={true} items={systems} columns={columns} />\n                </div>\n            );\n        }}\n    </Query>\n);\n\nexport default routerParams(ComplianceSystemsTable);\n","import React from 'react';\nimport ComplianceSystemsTable from '../ComplianceSystemsTable/ComplianceSystemsTable';\nimport ComplianceTabs from '../ComplianceTabs/ComplianceTabs';\nimport { PageHeader, PageHeaderTitle, Main } from '@red-hat-insights/insights-frontend-components';\n\nconst ComplianceSystems = () => {\n    return (\n        <React.Fragment>\n            <PageHeader>\n                <PageHeaderTitle title=\"Compliance\" />\n                <ComplianceTabs/>\n            </PageHeader>\n            <Main>\n                <ComplianceSystemsTable />\n            </Main>\n        </React.Fragment>\n    );\n};\n\nexport default ComplianceSystems;\n"],"sourceRoot":""}