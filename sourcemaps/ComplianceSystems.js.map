{"version":3,"sources":["webpack:///./src/SmartComponents/ComplianceTabs/ComplianceTabs.js","webpack:///./src/SmartComponents/DownloadTableButton/DownloadTableButton.js","webpack:///./src/SmartComponents/SystemsTable/SystemsTable.js","webpack:///./src/SmartComponents/ComplianceSystemsTable/ComplianceSystemsTable.js","webpack:///./src/SmartComponents/ComplianceSystems/ComplianceSystems.js"],"names":["ComplianceTabs","props","_this","_babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_0___default","this","_babel_runtime_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2___default","_babel_runtime_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3___default","call","redirect","bind","_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_5___default","tab","history","push","itemId","react__WEBPACK_IMPORTED_MODULE_8___default","a","createElement","Fragment","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_10__","onSelect","aria-label","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_11__","variant","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_12__","horizontal","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_13__","preventDefault","_Routes__WEBPACK_IMPORTED_MODULE_9__","compliancePolicies","complianceSystems","react__WEBPACK_IMPORTED_MODULE_8__","propTypes","prop_types__WEBPACK_IMPORTED_MODULE_7___default","object","__webpack_exports__","Object","_red_hat_insights_insights_frontend_components__WEBPACK_IMPORTED_MODULE_6__","DownloadTableButton_DownloadTableButton","DownloadTableButton","classCallCheck_default","possibleConstructorReturn_default","getPrototypeOf_default","state","isOpen","onToggle","assertThisInitialized_default","setState","format","link","selectedEntities","constants","join","dropdownItems","react_default","Item","key","href","downloadLink","target","Dropdown","toggle","DropdownToggle","download_icon","Component","prop_types_default","array","SmartComponents_DownloadTableButton_DownloadTableButton","react_redux_es","undefined","entities","filter","entity","selected","map","id","SystemsTable_SystemsTable","insights_frontend_components","SystemsTable","InventoryCmp","fetchInventory","insights","loadInventory","react","reactRouterDom","es","reactCore","esm","reactIcons","dist_esm","pfReact","PaginationRow","inventoryConnector","INVENTORY_ACTION_TYPES","mergeWithEntities","getRegistry","register","objectSpread_default","SystemStore","items","columns","InventoryTable","tableHeaderButtons","Level","gutter","LevelItem","ComplianceRemediationButton","Card","QUERY","src_default","_templateObject","SmartComponents_ComplianceSystemsTable_ComplianceSystemsTable","react_apollo_browser_umd","query","_ref","data","error","loading","systems","allSystems","className","title"],"mappings":"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","file":"js/ComplianceSystems.js","sourcesContent":["import { routerParams } from '@red-hat-insights/insights-frontend-components';\nimport propTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { paths } from '../../Routes';\nimport { Nav, NavList, NavItem, NavVariants } from '@patternfly/react-core';\n\nclass ComplianceTabs extends Component {\n    constructor(props) {\n        super(props);\n        this.redirect = this.redirect.bind(this);\n    }\n    redirect(tab) {\n        this.props.history.push(tab.itemId);\n    }\n    render() {\n        return (\n            <React.Fragment>\n                <Nav onSelect={this.redirect} aria-label=\"Compliance Tabs\">\n                    <NavList variant={NavVariants.horizontal}>\n                        <NavItem preventDefault={true} itemId={paths.compliancePolicies}>\n                            Policies\n                        </NavItem>\n                        <NavItem preventDefault={true} itemId={paths.complianceSystems}>\n                            Systems\n                        </NavItem>\n                    </NavList>\n                </Nav>\n            </React.Fragment>\n        );\n    }\n}\n\nComplianceTabs.propTypes = {\n    history: propTypes.object\n};\n\nexport default routerParams(ComplianceTabs);\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { COMPLIANCE_API_ROOT } from '../../constants';\nimport { connect } from 'react-redux';\nimport { DownloadIcon } from '@patternfly/react-icons';\nimport { Dropdown, DropdownToggle, DropdownItem } from '@patternfly/react-core';\n\nclass DownloadTableButton extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isOpen: false\n        };\n        this.onToggle = this.onToggle.bind(this);\n        this.onSelect = this.onSelect.bind(this);\n    }\n\n    onToggle(isOpen) {\n        this.setState({\n            isOpen\n        });\n    };\n\n    onSelect() {\n        this.setState({\n            isOpen: !this.state.isOpen\n        });\n    };\n\n    downloadLink(format) {\n        let link = '';\n        if (this.props !== null && this.props.selectedEntities !== null) {\n            link = COMPLIANCE_API_ROOT + '/systems.' + format + '?search=(id ^ (' +\n                this.props.selectedEntities.join(',') + '))';\n        }\n\n        return link;\n    }\n\n    render() {\n        const { isOpen } = this.state;\n        const dropdownItems = [\n            <DropdownItem key='csv' href={this.downloadLink('csv')}>\n                CSV\n            </DropdownItem>,\n            <DropdownItem target='_blank' key='json' href={this.downloadLink('json')}>\n                JSON\n            </DropdownItem>\n        ];\n        return (\n            <React.Fragment>\n                <Dropdown\n                    onSelect={this.onSelect}\n                    toggle={<DropdownToggle onToggle={this.onToggle}><DownloadIcon/></DropdownToggle>}\n                    isOpen={isOpen}\n                    dropdownItems={dropdownItems}\n                />\n            </React.Fragment>\n        );\n    }\n}\n\nDownloadTableButton.propTypes = {\n    selectedEntities: propTypes.array\n};\n\nconst mapStateToProps = state => {\n    if (state.entities === undefined || state.entities.entities === undefined) {\n        return { selectedEntities: [] };\n    }\n\n    return {\n        selectedEntities: state.entities.entities.\n        filter(entity => entity.selected).\n        map(entity => entity.id)\n    };\n};\n\nexport default connect(mapStateToProps)(DownloadTableButton);\n","import React from 'react';\nimport * as reactRouterDom from 'react-router-dom';\nimport * as reactCore from '@patternfly/react-core';\nimport * as reactIcons from '@patternfly/react-icons';\nimport propTypes from 'prop-types';\nimport { entitiesReducer } from '../../store/Reducers/SystemStore';\nimport DownloadTableButton from '../DownloadTableButton/DownloadTableButton';\nimport ComplianceRemediationButton from '../ComplianceRemediationButton/ComplianceRemediationButton';\nimport { registry } from '@red-hat-insights/insights-frontend-components';\nimport { PaginationRow } from 'patternfly-react';\n\n@registry()\nclass SystemsTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            InventoryCmp: () => <div>Loading...</div>\n        };\n\n        this.fetchInventory = this.fetchInventory.bind(this);\n        this.fetchInventory();\n    }\n\n    async fetchInventory() {\n        const {\n            inventoryConnector,\n            INVENTORY_ACTION_TYPES,\n            mergeWithEntities\n        } = await insights.loadInventory({\n            react: React,\n            reactRouterDom,\n            reactCore,\n            reactIcons,\n            pfReact: { PaginationRow }\n        });\n\n        this.getRegistry().register({\n            ...mergeWithEntities(\n                entitiesReducer(\n                    INVENTORY_ACTION_TYPES, this.props.items, this.props.columns\n                ))\n        });\n\n        this.setState({\n            InventoryCmp: inventoryConnector().InventoryTable\n        });\n    }\n\n    render() {\n        const { InventoryCmp } = this.state;\n        const tableHeaderButtons = <reactCore.Level gutter=\"md\">\n            <reactCore.LevelItem>\n                <DownloadTableButton />\n            </reactCore.LevelItem>\n            <reactCore.LevelItem>\n                <ComplianceRemediationButton />\n            </reactCore.LevelItem>\n        </reactCore.Level>;\n\n        //const items = this.props.items;\n        // concatenate the names of profiles\n        // let hosts = [{ id: '19200f9f-dd49-4ec9-ac91-83009ec0acec', profiles: 'profile 1, profile 2', compliant: 'true' }];\n        // Ideally change items to look like the right Entities format\n        return (\n            <reactCore.Card>\n                <InventoryCmp>\n                    { tableHeaderButtons }\n                </InventoryCmp>\n            </reactCore.Card>\n        );\n    }\n}\n\nSystemsTable.propTypes = {\n    items: propTypes.array,\n    columns: propTypes.array\n};\n\nexport default SystemsTable;\n","import React from 'react';\nimport { routerParams } from '@red-hat-insights/insights-frontend-components';\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport SystemsTable from '../SystemsTable/SystemsTable';\n\nconst QUERY = gql`\n{\n    allSystems {\n        id\n        name\n        profile_names\n        compliant\n    }\n}\n`;\n\nconst ComplianceSystemsTable = () => (\n    <Query query={QUERY}>\n        {({ data, error, loading }) => {\n            if (error) { return 'Oops! Error loading Systems data: ' + error; }\n\n            if (loading) { return 'Loading Systems...'; }\n\n            const systems = data.allSystems;\n            const columns = [{\n                key: 'facts.compliance.profiles',\n                title: 'Profiles'\n            }, {\n                key: 'facts.compliance.compliant',\n                title: 'Compliant'\n            }];\n\n            return (\n                <div className=\"systems-table\">\n                    <SystemsTable items={systems} columns={columns} />\n                </div>\n            );\n        }}\n    </Query>\n);\n\nexport default routerParams(ComplianceSystemsTable);\n","import React from 'react';\nimport ComplianceSystemsTable from '../ComplianceSystemsTable/ComplianceSystemsTable';\nimport ComplianceTabs from '../ComplianceTabs/ComplianceTabs';\nimport { PageHeader, PageHeaderTitle, Main } from '@red-hat-insights/insights-frontend-components';\n\nconst ComplianceSystems = () => {\n    return (\n        <React.Fragment>\n            <PageHeader>\n                <PageHeaderTitle title=\"Compliance\" />\n                <ComplianceTabs/>\n            </PageHeader>\n            <Main>\n                <ComplianceSystemsTable />\n            </Main>\n        </React.Fragment>\n    );\n};\n\nexport default ComplianceSystems;\n"],"sourceRoot":""}