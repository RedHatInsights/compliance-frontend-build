{"version":3,"file":"js/SystemDetails.a82ee73d06d1451022b9.js","mappings":"gWAoBMA,GAAQC,EAAAA,EAAAA,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,qHASJC,EAAgB,SAAHC,GAAkB,IAAAC,EAAZC,EAAKF,EAALE,MACtBC,GAAgBC,EAAAA,EAAAA,aAAhBD,YACRE,GAAiCC,EAAAA,EAAAA,GAASX,EAAO,CAC/CY,UAAW,CAAEJ,YAAAA,KADPK,EAAIH,EAAJG,KAAMC,EAAKJ,EAALI,MAAOC,EAAOL,EAAPK,QAGfC,EAAaH,SAAY,QAARP,EAAJO,EAAMI,cAAM,IAAAX,OAAR,EAAJA,EAAcY,KAIjC,OAFAC,EAAAA,EAAAA,GAAeZ,EAAOS,GAGpBI,IAAAA,cAACC,EAAAA,GAAkB,CAACC,YAAa,CAAER,MAAAA,EAAOD,KAAAA,EAAME,QAAAA,IAC9CK,IAAAA,cAACG,EAAAA,GAAa,CAACC,SAAS,QACtBJ,IAAAA,cAACK,EAAAA,EAAU,KACTL,IAAAA,cAACM,EAAAA,WAAU,CAACC,OAAO,+BACjBP,IAAAA,cAACQ,EAAAA,GAAkB,CAACC,GAAG,KAAI,cAC3BT,IAAAA,cAACQ,EAAAA,GAAkB,CAACC,GAAG,YAAW,WAClCT,IAAAA,cAACU,EAAAA,eAAc,CAACC,UAAQ,GAAEf,IAE5BI,IAAAA,cAACY,EAAAA,GAAgB,CAACxB,YAAaA,KAEjCY,IAAAA,cAACa,EAAAA,GAAI,KACHb,IAAAA,cAACc,EAAAA,EAAO,CAACC,YAAU,EAAC3B,YAAaA,MAGrCY,IAAAA,cAACG,EAAAA,GAAa,CAACC,SAAS,WACtBJ,IAAAA,cAACK,EAAAA,EAAU,KACTL,IAAAA,cAACgB,EAAAA,EAAQ,CAACC,KAAMC,EAAAA,EAAAA,OAK1B,EAEAlC,EAAcmC,UAAY,CACxBhC,MAAOgC,IAAAA,QAGT,S","sources":["webpack:///./src/SmartComponents/SystemDetails/SystemDetails.js"],"sourcesContent":["import React from 'react';\nimport propTypes from 'prop-types';\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/client';\nimport { useParams } from 'react-router-dom';\nimport PageHeader from '@redhat-cloud-services/frontend-components/PageHeader';\nimport Skeleton, {\n  SkeletonSize,\n} from '@redhat-cloud-services/frontend-components/Skeleton';\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport { Breadcrumb, BreadcrumbItem } from '@patternfly/react-core';\nimport Details from './ComplianceDetail';\nimport {\n  BreadcrumbLinkItem,\n  StateViewWithError,\n  StateViewPart,\n} from 'PresentationalComponents';\nimport { InventoryDetails } from 'SmartComponents';\nimport { useTitleEntity } from 'Utilities/hooks/useDocumentTitle';\n\nconst QUERY = gql`\n  query System($inventoryId: String!) {\n    system(id: $inventoryId) {\n      id\n      name\n    }\n  }\n`;\n\nexport const SystemDetails = ({ route }) => {\n  const { inventoryId } = useParams();\n  const { data, error, loading } = useQuery(QUERY, {\n    variables: { inventoryId },\n  });\n  const systemName = data?.system?.name;\n\n  useTitleEntity(route, systemName);\n\n  return (\n    <StateViewWithError stateValues={{ error, data, loading }}>\n      <StateViewPart stateKey=\"data\">\n        <PageHeader>\n          <Breadcrumb ouiaId=\"SystemDetailsPathBreadcrumb\">\n            <BreadcrumbLinkItem to=\"/\">Compliance</BreadcrumbLinkItem>\n            <BreadcrumbLinkItem to=\"/systems\">Systems</BreadcrumbLinkItem>\n            <BreadcrumbItem isActive>{systemName}</BreadcrumbItem>\n          </Breadcrumb>\n          <InventoryDetails inventoryId={inventoryId} />\n        </PageHeader>\n        <Main>\n          <Details hidePassed inventoryId={inventoryId} />\n        </Main>\n      </StateViewPart>\n      <StateViewPart stateKey=\"loading\">\n        <PageHeader>\n          <Skeleton size={SkeletonSize.md} />\n        </PageHeader>\n      </StateViewPart>\n    </StateViewWithError>\n  );\n};\n\nSystemDetails.propTypes = {\n  route: propTypes.object,\n};\n\nexport default SystemDetails;\n"],"names":["QUERY","gql","_templateObject","_taggedTemplateLiteral","SystemDetails","_ref","_data$system","route","inventoryId","useParams","_useQuery","useQuery","variables","data","error","loading","systemName","system","name","useTitleEntity","React","StateViewWithError","stateValues","StateViewPart","stateKey","PageHeader","Breadcrumb","ouiaId","BreadcrumbLinkItem","to","BreadcrumbItem","isActive","InventoryDetails","Main","Details","hidePassed","Skeleton","size","SkeletonSize","propTypes"],"sourceRoot":""}