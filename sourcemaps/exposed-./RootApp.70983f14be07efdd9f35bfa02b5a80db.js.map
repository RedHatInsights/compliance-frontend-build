{"version":3,"file":"js/exposed-./RootApp.7c4aebf1dd0a654bfce0.js","mappings":"0NAUMA,EAAM,SAACC,GACX,IAAMC,GAASC,EAAAA,EAAAA,KAOf,OALAC,EAAAA,EAAAA,OACAC,EAAAA,EAAAA,YAAU,WACRH,EAAOI,kBACT,GAAG,IAGDC,IAAAA,cAACC,EAAAA,EAAY,CAACC,QAAQ,cACpBF,IAAAA,cAACG,EAAAA,GAAmB,MACpBH,IAAAA,cAACI,EAAAA,GAAM,CAACC,WAAYX,IAG1B,EAEAD,EAAIa,UAAY,CACdC,SAAUC,IAAAA,OACVC,QAASD,IAAAA,QAGX,S,+LCpBME,EAAS,IAAIC,EAAAA,GAAa,CAC9BC,KAAM,IAAIC,EAAAA,EAAS,CACjBC,YAAa,UACbC,IAAKC,EAAAA,GAAsB,aAE7BC,MAAO,IAAIC,EAAAA,KAGPC,EAAW,SAAHC,GAAA,IAAMC,EAAMD,EAANC,OAAM,OACxBrB,IAAAA,cAACsB,EAAAA,GAAQ,CAACC,OAAOC,EAAAA,EAAAA,IAAKH,GAAQI,YAC5BzB,IAAAA,cAAC0B,EAAAA,EAAY,CAACC,OAAQC,UAAUC,UAC9B7B,IAAAA,cAAC8B,EAAAA,EAAc,CAACpB,OAAQA,GACtBV,IAAAA,cAACP,EAAAA,EAAG,QAGC,EAGb0B,EAASb,UAAY,CACnBe,OAAQb,IAAAA,KAGV,S,oGC5BMuB,EAAY,SAAHX,GAAA,IAAMY,EAAQZ,EAARY,SAAQ,OAC3BhC,IAAAA,cAACiC,EAAAA,KAAI,CAACC,UAAU,kBACdlC,IAAAA,cAACmC,EAAAA,SAAQ,KACPnC,IAAAA,cAACoC,EAAAA,EAAU,CAACC,iBAAkBL,KAE3B,EAGTD,EAAUzB,UAAY,CACpB0B,SAAU1B,IAAAA,QAGZ,S","sources":["webpack:///./src/App.js","webpack:///./src/AppEntry.js","webpack:///./src/PresentationalComponents/ErrorCard/ErrorCard.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport React, { useEffect } from 'react';\nimport Routes from './Routes';\nimport NotificationsPortal from '@redhat-cloud-services/frontend-components-notifications/NotificationPortal';\nimport { RBACProvider } from '@redhat-cloud-services/frontend-components/RBACProvider';\nimport useChrome from '@redhat-cloud-services/frontend-components/useChrome';\n\nimport './App.scss';\nimport { useSetFlagsFromUrl } from 'Utilities/hooks/useFeature';\n\nconst App = (props) => {\n  const chrome = useChrome();\n\n  useSetFlagsFromUrl();\n  useEffect(() => {\n    chrome.hideGlobalFilter();\n  }, []);\n\n  return (\n    <RBACProvider appName=\"compliance\">\n      <NotificationsPortal />\n      <Routes childProps={props} />\n    </RBACProvider>\n  );\n};\n\nApp.propTypes = {\n  location: PropTypes.object,\n  history: PropTypes.object,\n};\n\nexport default App;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { IntlProvider } from 'react-intl';\nimport { ApolloProvider } from '@apollo/client';\nimport { ApolloClient, HttpLink, InMemoryCache } from 'apollo-boost';\nimport { Provider } from 'react-redux';\nimport { init } from 'Store';\nimport App from './App';\n\nimport { COMPLIANCE_API_ROOT } from '@/constants';\n\nconst client = new ApolloClient({\n  link: new HttpLink({\n    credentials: 'include',\n    uri: COMPLIANCE_API_ROOT + '/graphql',\n  }),\n  cache: new InMemoryCache(),\n});\n\nconst AppEntry = ({ logger }) => (\n  <Provider store={init(logger).getStore()}>\n    <IntlProvider locale={navigator.language}>\n      <ApolloProvider client={client}>\n        <App />\n      </ApolloProvider>\n    </IntlProvider>\n  </Provider>\n);\n\nAppEntry.propTypes = {\n  logger: PropTypes.any,\n};\n\nexport default AppEntry;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Card, CardBody } from '@patternfly/react-core';\nimport { ErrorState } from '@redhat-cloud-services/frontend-components/ErrorState';\n\nconst ErrorCard = ({ errorMsg }) => (\n  <Card className=\"ins-error-card\">\n    <CardBody>\n      <ErrorState errorDescription={errorMsg} />\n    </CardBody>\n  </Card>\n);\n\nErrorCard.propTypes = {\n  errorMsg: propTypes.string,\n};\n\nexport default ErrorCard;\n"],"names":["App","props","chrome","useChrome","useSetFlagsFromUrl","useEffect","hideGlobalFilter","React","RBACProvider","appName","NotificationsPortal","Routes","childProps","propTypes","location","PropTypes","history","client","ApolloClient","link","HttpLink","credentials","uri","COMPLIANCE_API_ROOT","cache","InMemoryCache","AppEntry","_ref","logger","Provider","store","init","getStore","IntlProvider","locale","navigator","language","ApolloProvider","ErrorCard","errorMsg","Card","className","CardBody","ErrorState","errorDescription"],"sourceRoot":""}