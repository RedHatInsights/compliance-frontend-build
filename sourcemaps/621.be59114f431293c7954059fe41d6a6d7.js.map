{"version":3,"file":"js/621.1651226434463.1884eaf83c9504bc3e2c.js","mappings":"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","sources":["webpack:///./src/PresentationalComponents/ComplianceEmptyState/ComplianceEmptyState.js","webpack:///./src/PresentationalComponents/ComplianceRemediationButton/ComplianceRemediationButton.js","webpack:///./src/PresentationalComponents/ReduxFormWrappers/ReduxFormWrappers.js","webpack:///./src/PresentationalComponents/RemediationCell/RemediationCell.js","webpack:///./src/PresentationalComponents/RulesTable/Cells.js","webpack:///./src/PresentationalComponents/RulesTable/Columns.js","webpack:///./src/PresentationalComponents/RulesTable/RuleDetailsRow.js","webpack:///./src/PresentationalComponents/RulesTable/EmptyRows.js","webpack:///./src/PresentationalComponents/RulesTable/Constants.js","webpack:///./src/PresentationalComponents/RulesTable/Filters.js","webpack:///./src/PresentationalComponents/RulesTable/RulesTable.js","webpack:///./src/PresentationalComponents/TabbedRules/OsVersionText.js","webpack:///./src/PresentationalComponents/TabbedRules/ProfileTabContent.js","webpack:///./src/PresentationalComponents/TabbedRules/ruleSelection.js","webpack:///./src/PresentationalComponents/TabbedRules/TabbedRules.js","webpack:///./src/PresentationalComponents/PoliciesTable/Columns.js","webpack:///./src/PresentationalComponents/LoadingPoliciesTable/LoadingPoliciesTable.js","webpack:///./src/PresentationalComponents/ErrorPage/ErrorPage.js","webpack:///./src/PresentationalComponents/ErrorCard/ErrorCard.js","webpack:///./src/PresentationalComponents/GreySmallText/GreySmallText.js","webpack:///./src/PresentationalComponents/CheckboxGroup/CheckboxGroup.js","webpack:///./src/PresentationalComponents/ProfileTypeSelect/ProfileTypeSelect.js","webpack:///./src/PresentationalComponents/ComplianceScore/ComplianceScore.js","webpack:///./src/PresentationalComponents/PolicyDetailsContentLoader/PolicyDetailsContentLoader.js","webpack:///./src/PresentationalComponents/ReportDetailsContentLoader/ReportDetailsContentLoader.js","webpack:///./src/PresentationalComponents/PolicyDetailsDescription/PolicyDetailsDescription.js","webpack:///./src/PresentationalComponents/ReportDetailsDescription/ReportDetailsDescription.js","webpack:///./src/PresentationalComponents/ProgressBar/ProgressBar.js","webpack:///./src/PresentationalComponents/TabSwitcher/TabSwitcher.js","webpack:///./src/PresentationalComponents/StateView/StateView.js","webpack:///./src/PresentationalComponents/SystemsCountWarning/SystemsCountWarning.js","webpack:///./src/PresentationalComponents/WarningText/WarningText.js","webpack:///./src/PresentationalComponents/BackgroundLink/BackgroundLink.js","webpack:///./src/PresentationalComponents/BreadcrumbLinkItem/BreadcrumbLinkItem.js","webpack:///./src/PresentationalComponents/ReportsTable/Cells.js","webpack:///./src/PresentationalComponents/ReportsTable/Columns.js","webpack:///./src/PresentationalComponents/ReportsTable/Filters.js","webpack:///./src/PresentationalComponents/ReportsTable/ReportsTable.js","webpack:///./src/PresentationalComponents/ReportsEmptyState/ReportsEmptyState.js","webpack:///./src/PresentationalComponents/PolicyPopover/PolicyPopover.js","webpack:///./src/PresentationalComponents/PolicyThresholdTooltip/PolicyThresholdTooltip.js","webpack:///./src/PresentationalComponents/PolicyBusinessObjectiveTooltip/PolicyBusinessObjectiveTooltip.js","webpack:///./src/PresentationalComponents/NoResultsTable/NoResultsTable.js","webpack:///./src/PresentationalComponents/PoliciesTable/Filters.js","webpack:///./src/PresentationalComponents/PoliciesTable/PoliciesTable.js","webpack:///./src/PresentationalComponents/ProfileThresholdField/ProfileThresholdField.js","webpack:///./src/PresentationalComponents/ComplianceThresholdHelperText/ComplianceThresholdHelperText.js","webpack:///./src/PresentationalComponents/SupportedSSGVersionsLink/SupportedSSGVersionsLink.js","webpack:///./src/PresentationalComponents/UnsupportedSSGVersion/UnsupportedSSGVersion.js","webpack:///./src/PresentationalComponents/SubPageTitle/SubPageTitle.js","webpack:///./src/PresentationalComponents/NoSystemsTableWithWarning/NoSystemsTableWithWarning.js","webpack:///./src/PresentationalComponents/ConditionalLink/ConditionalLink.js","webpack:///./src/PresentationalComponents/ComplianceModal/ComplianceModal.js","webpack:///./src/PresentationalComponents/InUseProfileLabel/InUseProfileLabel.js","webpack:///./src/SmartComponents/CreatePolicy/validate.js","webpack:///./src/Utilities/TextHelper.js","webpack:///./src/Utilities/helpers.js","webpack:///./src/Utilities/hooks/useTableTools/useTableSort.js","webpack:///./src/Utilities/hooks/useTableTools/usePaginate.js","webpack:///./src/Utilities/hooks/useTableTools/Components/NoResultsTable.js","webpack:///./src/Utilities/hooks/useTableTools/useRowsBuilder.js","webpack:///./src/Utilities/hooks/useTableTools/useItemIdentify.js","webpack:///./src/Utilities/hooks/useTableTools/useExpandable.js","webpack:///./src/Utilities/hooks/useTableTools/useDedicatedAction.js","webpack:///./src/Utilities/hooks/useTableTools/useToolbarActions.js","webpack:///./src/Utilities/hooks/useTableTools/Components/ColumnManagerListItem.js","webpack:///./src/Utilities/hooks/useTableTools/Components/ColumnManager.js","webpack:///./src/Utilities/hooks/useTableTools/useColumnManager.js","webpack:///./src/Utilities/hooks/useTableTools/useRadioSelect.js","webpack:///./src/Utilities/hooks/useTableTools/useActionResolver.js","webpack:///./src/Utilities/hooks/useTableTools/useTableTools.js","webpack:///./src/Utilities/hooks/useTableTools/Components/TableToolsTable.js","webpack:///./src/Utilities/hooks/useTableTools/helper.js","webpack:///./src/Utilities/hooks/useTableTools/useBulkSelect.js","webpack:///./src/Utilities/hooks/useTableTools/useExport.js","webpack:///./src/Utilities/hooks/useTableTools/FilterConfigBuilder/Helpers.js","webpack:///./src/Utilities/hooks/useTableTools/FilterConfigBuilder/FilterBuilder.js","webpack:///./src/Utilities/hooks/useTableTools/FilterConfigBuilder/ChipBuilder.js","webpack:///./src/Utilities/hooks/useTableTools/FilterConfigBuilder/FilterConfigBuilder.js","webpack:///./src/Utilities/hooks/useTableTools/Components/SelectedFilterSwitch.js","webpack:///./src/Utilities/hooks/useTableTools/useSelectedFilter.js","webpack:///./src/Utilities/hooks/useTableTools/useFilterConfig.js","webpack:///./src/Utilities/ruleHelpers.js"],"sourcesContent":["import React from 'react';\nimport propTypes from 'prop-types';\nimport { ApolloClient, HttpLink, InMemoryCache } from 'apollo-boost';\nimport {\n  Title,\n  TextContent,\n  Button,\n  Bullseye,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStatePrimary,\n  EmptyStateSecondaryActions,\n  EmptyStateIcon,\n} from '@patternfly/react-core';\nimport { CloudSecurityIcon } from '@patternfly/react-icons';\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/client';\nimport { Spinner } from '@redhat-cloud-services/frontend-components/Spinner';\nimport { ErrorCard } from 'PresentationalComponents';\nconst COMPLIANCE_API_ROOT = '/api/compliance';\n\nconst QUERY = gql`\n  {\n    profiles(search: \"external = false and canonical = false\") {\n      totalCount\n    }\n  }\n`;\n\nconst ComplianceEmptyState = ({ title, mainButton, client }) => {\n  let { data, error, loading } = useQuery(QUERY, {\n    fetchPolicy: 'network-only',\n    client,\n  });\n\n  if (loading) {\n    return <Spinner />;\n  }\n\n  if (error) {\n    const errorMsg = `Oops! Error loading System data: ${error}`;\n    return <ErrorCard message={errorMsg} />;\n  }\n\n  const policiesCount = data.profiles.totalCount;\n\n  const policyWord = policiesCount > 1 ? 'policies' : 'policy';\n  const haveWord = policiesCount > 1 ? 'have' : 'has';\n\n  return (\n    <Bullseye>\n      <EmptyState>\n        <EmptyStateIcon\n          style={{\n            fontWeight: '500',\n            color: 'var(--pf-global--primary-color--100)',\n          }}\n          size=\"xl\"\n          title=\"Compliance\"\n          icon={CloudSecurityIcon}\n        />\n        <Title headingLevel=\"h1\" size=\"lg\">\n          {title}\n        </Title>\n        <br />\n        <EmptyStateBody>\n          {policiesCount > 0 && (\n            <TextContent>\n              <a href=\"insights/compliance/scappolicies\">\n                {policiesCount} {policyWord}\n              </a>{' '}\n              {haveWord} been created but {haveWord} no reports.\n            </TextContent>\n          )}\n          <TextContent>\n            The Compliance service uses SCAP policies to track your\n            organization&#39;s adherence to compliance requirements.\n          </TextContent>\n          <TextContent>\n            Get started by adding a policy, or read documentation about how to\n            connect OpenSCAP to the Compliance service.\n          </TextContent>\n        </EmptyStateBody>\n        <EmptyStatePrimary>{mainButton}</EmptyStatePrimary>\n        <EmptyStateSecondaryActions>\n          <Button\n            variant=\"link\"\n            component=\"a\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href={\n              `https://access.redhat.com/documentation/en-us/red_hat_insights/` +\n              `2022/html/assessing_and_monitoring_security_policy_compliance_of_rhel_systems/index`\n            }\n          >\n            Learn about OpenSCAP and Compliance\n          </Button>\n        </EmptyStateSecondaryActions>\n      </EmptyState>\n    </Bullseye>\n  );\n};\n\nComplianceEmptyState.propTypes = {\n  title: propTypes.string,\n  mainButton: propTypes.object,\n  client: propTypes.object,\n};\n\nComplianceEmptyState.defaultProps = {\n  title: 'No policies',\n  mainButton: (\n    <Button\n      variant=\"primary\"\n      component=\"a\"\n      href=\"/insights/compliance/scappolicies\"\n    >\n      Create new policy\n    </Button>\n  ),\n  client: new ApolloClient({\n    link: new HttpLink({\n      uri: COMPLIANCE_API_ROOT + '/graphql',\n      credentials: 'include',\n    }),\n    cache: new InMemoryCache(),\n  }),\n};\n\nexport default ComplianceEmptyState;\n","import React from 'react';\nimport sortBy from 'lodash/sortBy';\nimport propTypes from 'prop-types';\nimport { Button } from '@patternfly/react-core';\nimport RemediationButton from '@redhat-cloud-services/frontend-components-remediations/RemediationButton';\nimport flatten from 'lodash/flatten';\nimport { connect } from 'react-redux';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\n\nconst FallbackButton = () => (\n  <Button variant=\"primary\" isDisabled>\n    Remediate\n  </Button>\n);\n\nclass ComplianceRemediationButton extends React.Component {\n  formatRule = ({ title, refId }, profile, system, osMajorVersion) => ({\n    id: `ssg:rhel${osMajorVersion}|${\n      profile.split('xccdf_org.ssgproject.content_profile_')[1]\n    }|${refId}`,\n    description: title,\n    systems: [system],\n  });\n\n  uniqIssuesBySystem = (issues) => {\n    const issueIds = issues.map((issue) => issue.id);\n    return issues.filter((issue, index) => {\n      const originalIssueIndex = issueIds.indexOf(issue.id);\n      return originalIssueIndex === index\n        ? true\n        : (issues[originalIssueIndex].systems = Array.from(\n            new Set(issues[originalIssueIndex].systems.concat(issue.systems))\n          )) && false;\n    });\n  };\n\n  ruleProfile = (rule, system) => {\n    const profile = system.profiles.find((profile) =>\n      profile.rules.find((profileRule) => rule.refId === profileRule.refId)\n    );\n    if (!profile) {\n      console.log('No profile', rule, system);\n      return;\n    }\n\n    return profile;\n  };\n\n  rulesWithRemediations = (rules, system) => {\n    return rules\n      .filter(\n        (rule) =>\n          rule.remediationAvailable &&\n          this.ruleProfile(rule, system)?.supported &&\n          rule.compliant === false\n      )\n      .map((rule) => {\n        const profile = this.ruleProfile(rule, system);\n        return this.formatRule(\n          rule,\n          profile.refId,\n          system.id,\n          profile.osMajorVersion\n        );\n      });\n  };\n\n  sortByPrecedence = (issues) => sortBy(issues, ['precedence']);\n\n  dataProvider = () => {\n    const { allSystems, selectedRules } = this.props;\n    const result = { systems: [], issues: [] };\n\n    allSystems\n      .filter((system) => system.supported)\n      .forEach(async (system) => {\n        result.systems.push(system.id);\n\n        if (selectedRules.length !== 0) {\n          result.issues.push(this.rulesWithRemediations(selectedRules, system));\n        } else {\n          result.issues.push(\n            this.rulesWithRemediations(system.ruleObjectsFailed, system)\n          );\n        }\n      });\n\n    return Promise.all(result.issues).then((issues) => {\n      result.issues = this.sortByPrecedence(\n        this.uniqIssuesBySystem(flatten(issues))\n      );\n      return result;\n    });\n  };\n\n  notEmptyData = async () => {\n    const data = await this.dataProvider();\n    return data.issues.length > 0 && data.systems.length > 0;\n  };\n\n  remediationAvailable = () => {\n    const { allSystems, selectedRules } = this.props;\n    let rules = selectedRules.length\n      ? selectedRules\n      : allSystems.flatMap((system) => system.ruleObjectsFailed);\n\n    return rules.some(\n      (rule) =>\n        rule.remediationAvailable &&\n        (rule.profiles?.some((profile) => profile.supported) ||\n          allSystems.some(\n            (system) => this.ruleProfile(rule, system)?.supported\n          )) &&\n        rule.compliant === false\n    );\n  };\n\n  render() {\n    const { addNotification } = this.props;\n\n    return (\n      <React.Fragment>\n        <RemediationButton\n          isDisabled={!(this.remediationAvailable() && this.notEmptyData())}\n          onRemediationCreated={(result) =>\n            addNotification(result.getNotification())\n          }\n          dataProvider={this.dataProvider}\n          buttonProps={{\n            ouiaId: 'RemediateButton',\n          }}\n          fallback={<FallbackButton />}\n        >\n          Remediate\n        </RemediationButton>\n      </React.Fragment>\n    );\n  }\n}\n\nComplianceRemediationButton.propTypes = {\n  selectedRules: propTypes.array,\n  allSystems: propTypes.arrayOf(\n    propTypes.shape({\n      id: propTypes.string,\n      name: propTypes.string,\n      supported: propTypes.bool.isRequired,\n      profiles: propTypes.arrayOf(\n        propTypes.shape({\n          refId: propTypes.string,\n          name: propTypes.string,\n          rules: propTypes.arrayOf(\n            propTypes.shape({\n              title: propTypes.string,\n              severity: propTypes.string,\n              rationale: propTypes.string,\n              refId: propTypes.string,\n              description: propTypes.string,\n              compliant: propTypes.bool,\n              identifier: propTypes.string,\n              references: propTypes.string,\n            })\n          ),\n        })\n      ),\n    })\n  ),\n  addNotification: propTypes.func,\n};\n\nComplianceRemediationButton.defaultProps = {\n  allSystems: [],\n};\n\nexport default connect(\n  () => ({}),\n  (dispatch) => ({\n    addNotification: (notification) => dispatch(addNotification(notification)),\n  })\n)(ComplianceRemediationButton);\n","import React from 'react';\nimport { TextInput, TextArea } from '@patternfly/react-core';\n\nexport const ReduxFormTextInput = (field) => (\n  <TextInput\n    value={field.input.value || field.defaultValue}\n    onChange={field.input.onChange}\n    {...field}\n  />\n);\n\nexport const ReduxFormTextArea = (field) => (\n  <TextArea\n    value={field.input.value || field.defaultValue}\n    onChange={field.input.onChange}\n    {...field}\n  />\n);\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { AnsibeTowerIcon } from '@patternfly/react-icons';\n\nconst RemediationCell = ({ hasPlaybook = false }) => (\n  <>\n    {hasPlaybook && <AnsibeTowerIcon />}\n    {hasPlaybook ? ' Playbook' : ' Manual'}\n  </>\n);\nRemediationCell.propTypes = {\n  hasPlaybook: propTypes.bool,\n};\n\nexport default RemediationCell;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Text, TextVariants, TextContent } from '@patternfly/react-core';\nimport {\n  CheckCircleIcon,\n  ExclamationCircleIcon,\n  ExclamationTriangleIcon,\n  QuestionCircleIcon,\n} from '@patternfly/react-icons';\nimport RemediationCell from '../RemediationCell/RemediationCell';\nconst ruleProps = {\n  title: propTypes.string,\n  identifier: propTypes.object,\n  profile: propTypes.object,\n  compliant: propTypes.bool,\n  remediationAvailable: propTypes.bool,\n  severity: propTypes.string,\n};\n\nexport const Rule = ({ title, identifier }) => (\n  <TextContent>\n    {title}\n    {identifier ? (\n      <Text component={TextVariants.small}>{identifier.label}</Text>\n    ) : (\n      ''\n    )}\n  </TextContent>\n);\nRule.propTypes = ruleProps;\n\nexport const Policy = ({ profile }) => profile.name;\nPolicy.propTypes = ruleProps;\n\nexport const HighSeverity = () => (\n  <span>\n    <ExclamationCircleIcon className=\"ins-u-failed\" /> High\n  </span>\n);\n\nexport const MediumSeverity = () => (\n  <span>\n    <ExclamationTriangleIcon className=\"ins-u-warning\" /> Medium\n  </span>\n);\n\nexport const LowSeverityIcon = () => (\n    <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 18 18\" role=\"img\" style={ { verticalAlign: '-0.125em' } } xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M2 0h14a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2zm6.67 10.46a1.67 1.67 0 1 0 0 3.338 1.67 1.67 0 0 0 0-3.338zm-1.586-6l.27 4.935a.435.435 0 0 0 .434.411H9.55c.232 0 .422-.18.435-.411l.27-4.936A.435.435 0 0 0 9.818 4h-2.3c-.25 0-.448.21-.435.46z\" fill=\"#3A9CA6\" fillRule=\"evenodd\"/></svg> // eslint-disable-line\n);\n\nexport const LowSeverity = () => (\n  <span>\n    <LowSeverityIcon /> Low\n  </span>\n);\n\nexport const UnknownSeverity = () => (\n  <span>\n    <QuestionCircleIcon /> Unknown\n  </span>\n);\n\nexport const Severity = ({ severity }) =>\n  ({\n    high: <HighSeverity />,\n    medium: <MediumSeverity />,\n    low: <LowSeverity />,\n  }[severity?.toLowerCase()] || <UnknownSeverity />);\nSeverity.propTypes = ruleProps;\n\nexport const Passed = ({ compliant }) =>\n  compliant ? (\n    <CheckCircleIcon className=\"ins-u-passed\" />\n  ) : (\n    <ExclamationCircleIcon className=\"ins-u-failed\" />\n  );\nPassed.propTypes = ruleProps;\n\nexport const RemediationColumnCell = ({ remediationAvailable }) => (\n  <RemediationCell hasPlaybook={remediationAvailable} />\n);\nRemediationColumnCell.propTypes = ruleProps;\n","import { nowrap } from '@patternfly/react-table';\nimport { renderComponent } from 'Utilities/helpers';\nimport {\n  Rule,\n  Policy as PolicyCell,\n  Severity as SeverityCell,\n  Passed as PassedCell,\n  RemediationColumnCell,\n} from './Cells';\n\nexport const Name = {\n  title: 'Name',\n  sortByProp: 'title',\n  renderExport: ({ title, identifier }) =>\n    `${title}${identifier ? ` - ${identifier.label}` : ''}`,\n  renderFunc: renderComponent(Rule),\n};\n\nexport const Policy = {\n  title: 'Policy',\n  sortByFunction: (rule) => rule?.profile?.name,\n  renderExport: (rule) => rule?.profile?.name,\n  renderFunc: renderComponent(PolicyCell),\n};\n\nexport const Severity = {\n  title: 'Severity',\n  sortByProp: 'severity',\n  exportKey: 'severity',\n  sortByArray: ['high', 'medium', 'low', 'unknown'],\n  renderFunc: renderComponent(SeverityCell),\n};\n\nexport const Passed = {\n  title: 'Passed',\n  sortByProp: 'compliant',\n  renderExport: (rule) => (rule?.compliant ? 'Yes' : 'No'),\n  renderFunc: renderComponent(PassedCell),\n};\n\nexport const Remediation = {\n  title: 'Remediation',\n  transforms: [nowrap],\n  sortByFunction: (rule) => rule?.remediationAvailable,\n  renderExport: (rule) => (rule?.remediationAvailable ? 'Playbook' : 'Manual'),\n  renderFunc: renderComponent(RemediationColumnCell),\n};\n\nexport default [Name, Policy, Severity, Passed, Remediation];\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport {\n  Grid,\n  GridItem,\n  Stack,\n  StackItem,\n  Text,\n  TextVariants,\n} from '@patternfly/react-core';\nimport { ConditionalLink } from 'PresentationalComponents';\n\nconst RuleDetailsRow = ({ item: rule }) => {\n  const { refId, description, identifier, references, rationale } = rule;\n  const key = `rule-child-row-${refId}`;\n\n  return (\n    <div key={key} style={{ marginTop: 'var(--pf-global--spacer--lg)' }}>\n      <Stack id={`rule-description-${key}`} className=\"margin-bottom-lg\">\n        <StackItem style={{ marginBottom: 'var(--pf-global--spacer--sm)' }}>\n          <Text className=\"pf-c-form__label\" component={TextVariants.h5}>\n            <b>Description</b>\n          </Text>\n        </StackItem>\n        <StackItem isFilled>{description}</StackItem>\n      </Stack>\n      <Stack\n        id={`rule-identifiers-references-${key}`}\n        className=\"margin-bottom-lg\"\n      >\n        <Grid>\n          {identifier && identifier.length > 0 && (\n            <GridItem span={2}>\n              <Text className=\"pf-c-form__label\" component={TextVariants.h5}>\n                <b>Identifier</b>\n              </Text>\n              <Text>\n                {identifier\n                  .map((ident, idx) => (\n                    <ConditionalLink\n                      href={ident.system}\n                      target=\"_blank\"\n                      key={`${refId}-identifier-${idx}`}\n                    >\n                      {ident.label}\n                    </ConditionalLink>\n                  ))\n                  .reduce((prev, next) => [prev, ', ', next])}\n              </Text>\n            </GridItem>\n          )}\n\n          {references && references.length > 0 && (\n            <GridItem span={10}>\n              <Text className=\"pf-c-form__label\" component={TextVariants.h5}>\n                <b>References</b>\n              </Text>\n              <Text>\n                {references\n                  .map((ref, idx) => (\n                    <ConditionalLink\n                      href={ref.href}\n                      target=\"_blank\"\n                      key={`${refId}-reference-${idx}`}\n                    >\n                      {ref.label}\n                    </ConditionalLink>\n                  ))\n                  .reduce((prev, next) => [prev, ', ', next])}\n              </Text>\n            </GridItem>\n          )}\n        </Grid>\n      </Stack>\n\n      {rationale && (\n        <Stack\n          id={`rule-rationale-${key}`}\n          style={{ marginBottom: 'var(--pf-global--spacer--lg)' }}\n        >\n          <StackItem style={{ marginBottom: 'var(--pf-global--spacer--sm)' }}>\n            <Text className=\"pf-c-form__label\" component={TextVariants.h5}>\n              <b>Rationale</b>\n            </Text>\n          </StackItem>\n          <StackItem isFilled>{rationale}</StackItem>\n        </Stack>\n      )}\n    </div>\n  );\n};\n\nRuleDetailsRow.propTypes = {\n  item: propTypes.object,\n};\n\nexport default RuleDetailsRow;\n","import React from 'react';\nimport {\n  Bullseye,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateVariant,\n  Title,\n} from '@patternfly/react-core';\nimport { EmptyTable } from '@redhat-cloud-services/frontend-components/EmptyTable';\n\nconst emptyRows = (columns) => [\n  {\n    cells: [\n      {\n        title: (\n          <EmptyTable>\n            <Bullseye>\n              <EmptyState variant={EmptyStateVariant.full}>\n                <Title headingLevel=\"h5\" size=\"lg\">\n                  No matching rules found\n                </Title>\n                <EmptyStateBody>\n                  This filter criteria matches no rules. <br /> Try changing\n                  your filter settings.\n                </EmptyStateBody>\n              </EmptyState>\n            </Bullseye>\n          </EmptyTable>\n        ),\n        props: {\n          colSpan: columns.length,\n        },\n      },\n    ],\n  },\n];\n\nexport default emptyRows;\n","import React from 'react';\nimport {\n  ExclamationCircleIcon,\n  ExclamationTriangleIcon,\n  QuestionCircleIcon,\n} from '@patternfly/react-icons';\nimport { LowSeverityIcon } from './Cells';\n\nexport const HIGH_SEVERITY = (\n  <span>\n    <ExclamationCircleIcon className=\"ins-u-failed\" /> High\n  </span>\n);\nexport const MEDIUM_SEVERITY = (\n  <span>\n    <ExclamationTriangleIcon className=\"ins-u-warning\" /> Medium\n  </span>\n);\nexport const LOW_SEVERITY = (\n  <span>\n    <LowSeverityIcon /> Low\n  </span>\n);\nexport const UNKNOWN_SEVERITY = (\n  <span>\n    <QuestionCircleIcon /> Unknown\n  </span>\n);\n","import {\n  HIGH_SEVERITY,\n  MEDIUM_SEVERITY,\n  LOW_SEVERITY,\n  UNKNOWN_SEVERITY,\n} from './Constants';\nimport { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\n\nconst filterRulesWithAllValues = (rules, values, valueCheck) =>\n  rules.filter(\n    (rule) =>\n      values.map((value) => valueCheck(rule, value)).filter((v) => !!v).length >\n      0\n  );\n\nconst anyFilterApply = (rules, values, valueCheck) => {\n  let filteredRules = [];\n  rules.forEach((rule) => {\n    if (\n      values.map((value) => valueCheck(rule, value)).filter((v) => !!v).length >\n      0\n    ) {\n      filteredRules.push(rule);\n    }\n  });\n  return filteredRules;\n};\n\nconst BASE_FILTER_CONFIGURATION = [\n  {\n    type: conditionalFilterType.text,\n    label: 'Name',\n    filter: (rules, value) =>\n      filterRulesWithAllValues(\n        rules,\n        [value],\n        (rule, value) =>\n          rule.title.toLowerCase().includes(value.toLowerCase()) ||\n          (rule.identifier &&\n            rule.identifier.label\n              .toLowerCase()\n              .includes(value.toLowerCase())) ||\n          rule.references.filter((reference) =>\n            reference.label.toLowerCase().includes(value.toLowerCase())\n          ).length > 0\n      ),\n  },\n  {\n    type: conditionalFilterType.checkbox,\n    label: 'Severity',\n    items: [\n      { label: HIGH_SEVERITY, value: 'high' },\n      { label: MEDIUM_SEVERITY, value: 'medium' },\n      { label: LOW_SEVERITY, value: 'low' },\n      { label: UNKNOWN_SEVERITY, value: 'unknown' },\n    ],\n    filter: (rules, values) =>\n      anyFilterApply(rules, values, (rule, value) => rule.severity === value),\n  },\n];\n\nconst PASS_FILTER_CONFIG = {\n  type: conditionalFilterType.checkbox,\n  label: 'Passed',\n  items: [\n    { label: 'Passed rules', value: 'passed' },\n    { label: 'Failed rules', value: 'failed' },\n  ],\n  filter: (rules, values) =>\n    anyFilterApply(\n      rules,\n      values,\n      (rule, value) => rule.compliant === (value === 'passed')\n    ),\n};\n\nexport const policiesFilterConfig = (policies) => ({\n  type: conditionalFilterType.checkbox,\n  label: 'Policy',\n  items: policies.map((policy) => ({ label: policy.name, value: policy.id })),\n  filter: (rules, values) =>\n    filterRulesWithAllValues(\n      rules,\n      values,\n      (rule, value) => rule.profile.id === value\n    ),\n});\n\nexport const ANSIBLE_SUPPORT_FILTER_CONFIG = {\n  type: conditionalFilterType.checkbox,\n  label: 'Ansible support',\n  items: [\n    { label: 'Ansible remediation support', value: 'true' },\n    { label: 'No Ansible remediation support', value: 'false' },\n  ],\n  filter: (rules, values) =>\n    anyFilterApply(\n      rules,\n      values,\n      (rule, value) => rule.remediationAvailable === (value === 'true')\n    ),\n};\n\nconst buildFilterConfig = ({\n  showPassFailFilter,\n  policies,\n  ansibleSupportFilter,\n}) => {\n  const config = [...BASE_FILTER_CONFIGURATION];\n\n  if (showPassFailFilter) {\n    config.push(PASS_FILTER_CONFIG);\n  }\n\n  if (policies && policies.length > 1) {\n    config.push(policiesFilterConfig(policies));\n  }\n\n  if (ansibleSupportFilter) {\n    config.push(ANSIBLE_SUPPORT_FILTER_CONFIG);\n  }\n\n  return config;\n};\n\nexport default buildFilterConfig;\n","import React, { useState } from 'react';\nimport propTypes from 'prop-types';\nimport { COMPLIANCE_TABLE_DEFAULTS } from '@/constants';\n// eslint-disable-next-line\nimport ComplianceRemediationButton from 'PresentationalComponents/ComplianceRemediationButton';\nimport { TableToolsTable } from 'Utilities/hooks/useTableTools';\nimport useFeature from 'Utilities/hooks/useFeature';\nimport { toRulesArrayWithProfile } from 'Utilities/ruleHelpers';\nimport RuleDetailsRow from './RuleDetailsRow';\nimport emptyRows from './EmptyRows';\nimport buildFilterConfig from './Filters';\nimport defaultColumns from './Columns';\n\nconst RulesTable = ({\n  system,\n  profileRules,\n  columns = defaultColumns,\n  remediationsEnabled = true,\n  ansibleSupportFilter = false,\n  selectedFilter = false,\n  handleSelect,\n  selectedRules: selectedRulesProp = [],\n  hidePassed = false,\n  options,\n  activeFilters,\n  ...rulesTableProps\n}) => {\n  const manageColumnsEnabled = useFeature('manageColumns');\n  const [selectedRules, setSelectedRules] = handleSelect\n    ? [selectedRulesProp, handleSelect]\n    : useState([]);\n  const rules = toRulesArrayWithProfile(profileRules);\n  const selectedRulesWithRemediations = (selectedRules) =>\n    (selectedRules || []).filter((rule) => rule.remediationAvailable);\n  const showPassFailFilter =\n    columns.filter((c) => c.title === 'Passed').length > 0;\n  const policies = profileRules\n    .filter(({ profile }) => !!profile)\n    .map(({ profile }) => ({\n      id: profile.id,\n      name: profile.name,\n    }));\n\n  const remediationAction = ({ selected }) => (\n    <ComplianceRemediationButton\n      allSystems={[\n        {\n          id: system.id,\n          profiles: system.testResultProfiles,\n          ruleObjectsFailed: [],\n          supported: system.supported,\n        },\n      ]}\n      selectedRules={selectedRulesWithRemediations(selected)}\n    />\n  );\n\n  return (\n    <TableToolsTable\n      aria-label=\"Rules Table\"\n      items={rules}\n      columns={columns}\n      isStickyHeader\n      filters={{\n        filterConfig: buildFilterConfig({\n          showPassFailFilter,\n          policies,\n          ansibleSupportFilter,\n        }),\n        ...(hidePassed && {\n          activeFilters: (currentActiveFilters) => ({\n            ...currentActiveFilters,\n            passed: currentActiveFilters.passed\n              ? currentActiveFilters.passed\n              : ['failed'],\n            ...activeFilters,\n          }),\n        }),\n      }}\n      options={{\n        ...COMPLIANCE_TABLE_DEFAULTS,\n        ...options,\n        identifier: (item) => `${item.profile.id}|${item.refId}`,\n        onSelect: (handleSelect || remediationsEnabled) && setSelectedRules,\n        preselected: selectedRules,\n        detailsComponent: RuleDetailsRow,\n        emptyRows: emptyRows(columns),\n        selectedFilter,\n        ...(remediationsEnabled ? { dedicatedAction: remediationAction } : {}),\n        manageColumns: manageColumnsEnabled,\n      }}\n      {...rulesTableProps}\n    />\n  );\n};\n\nRulesTable.propTypes = {\n  profileRules: propTypes.array,\n  loading: propTypes.bool,\n  hidePassed: propTypes.bool,\n  system: propTypes.object,\n  remediationsEnabled: propTypes.bool,\n  ansibleSupportFilter: propTypes.bool,\n  selectedRules: propTypes.array,\n  selectedFilter: propTypes.bool,\n  handleSelect: propTypes.func,\n  columns: propTypes.array,\n  options: propTypes.object,\n  activeFilters: propTypes.object,\n};\n\nexport default RulesTable;\n","const OsVersionText = ({ profile, newOsMinorVersion }) =>\n  `RHEL${'\\u00A0'}${profile.osMajorVersion}.${\n    profile.osMinorVersion || newOsMinorVersion\n  }`;\n\nexport default OsVersionText;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport {\n  Text,\n  TextVariants,\n  TextContent,\n  Grid,\n  Spinner,\n  Badge,\n  Popover,\n} from '@patternfly/react-core';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport {\n  StateViewWithError,\n  StateViewPart,\n  SupportedSSGVersionsLink,\n  RulesTable,\n} from 'PresentationalComponents';\nimport { pluralize } from 'Utilities/TextHelper';\nimport OsVersionText from './OsVersionText';\n\nconst ProfileSystemCount = ({ count = 0 }) => (\n  <Badge isRead>{`${count} ${pluralize(count, 'system')}`}</Badge>\n);\n\nProfileSystemCount.propTypes = {\n  profile: propTypes.object,\n  count: propTypes.number,\n};\n\nconst SSGVersionText = ({ profile, newOsMinorVersion }) => (\n  <Text component={TextVariants.p}>\n    SSG version: {profile.ssgVersion}{' '}\n    <Popover\n      position=\"right\"\n      bodyContent={<SSGPopoverBody {...{ profile, newOsMinorVersion }} />}\n      footerContent={<SupportedSSGVersionsLink />}\n    >\n      <span style={{ cursor: 'pointer' }}>\n        <OutlinedQuestionCircleIcon className=\"grey-icon\" />\n      </span>\n    </Popover>\n  </Text>\n);\n\nSSGVersionText.propTypes = {\n  profile: propTypes.object.isRequired,\n  newOsMinorVersion: propTypes.string,\n};\n\nconst SSGPopoverBody = ({ profile, newOsMinorVersion }) => (\n  <TextContent style={{ fontSize: 'var(--pf-c-popover--FontSize)' }}>\n    <Text>\n      This is the latest supported version of the SCAP Security Guide (SSG) for{' '}\n      <OsVersionText {...{ profile, newOsMinorVersion }} />\n    </Text>\n    <Text>\n      <OsVersionText {...{ profile, newOsMinorVersion }} /> systems assigned to\n      this policy will report using this rule list.\n    </Text>\n  </TextContent>\n);\n\nSSGPopoverBody.propTypes = {\n  profile: propTypes.object.isRequired,\n  newOsMinorVersion: propTypes.string,\n};\n\nconst BENCHMARK_QUERY = gql`\n  query benchmarkQuery($id: String!) {\n    benchmark(id: $id) {\n      id\n      osMajorVersion\n      rules {\n        id\n        title\n        severity\n        rationale\n        refId\n        description\n        remediationAvailable\n        identifier\n      }\n    }\n  }\n`;\n\nconst ProfileTabContent = ({\n  profile,\n  columns,\n  handleSelect,\n  systemCount,\n  selectedRuleRefIds,\n  rulesTableProps,\n  newOsMinorVersion,\n}) => {\n  const {\n    data: benchmark,\n    error,\n    loading,\n  } = useQuery(BENCHMARK_QUERY, {\n    variables: {\n      id: profile.benchmark.id,\n    },\n    skip: !handleSelect || !profile.benchmark?.id,\n  });\n  const rules = handleSelect ? benchmark?.benchmark?.rules : profile?.rules;\n\n  return (\n    <React.Fragment>\n      <Grid>\n        <TextContent className=\"pf-u-mt-md\">\n          <Text component={TextVariants.h3}>\n            <span className=\"pf-u-pr-sm\">\n              <OsVersionText {...{ profile, newOsMinorVersion }} />\n            </span>\n            <ProfileSystemCount count={systemCount} />\n          </Text>\n          <SSGVersionText {...{ profile, newOsMinorVersion }} />\n        </TextContent>\n      </Grid>\n      <StateViewWithError stateValues={{ error, loading, rules }}>\n        <StateViewPart stateKey=\"loading\">\n          <Spinner />\n        </StateViewPart>\n        <StateViewPart stateKey=\"rules\">\n          <RulesTable\n            ansibleSupportFilter\n            remediationsEnabled={false}\n            columns={columns}\n            profileRules={[{ profile, rules: rules || [] }]}\n            selectedRules={selectedRuleRefIds.map(\n              (refId) => `${profile.id}|${refId}`\n            )}\n            handleSelect={\n              handleSelect &&\n              ((selectedRuleRefIds) =>\n                handleSelect(\n                  profile,\n                  newOsMinorVersion,\n                  selectedRuleRefIds.map(\n                    (profileRuleRefId) => profileRuleRefId.split('|')[1]\n                  )\n                ))\n            }\n            {...rulesTableProps}\n          />\n        </StateViewPart>\n      </StateViewWithError>\n    </React.Fragment>\n  );\n};\n\nProfileTabContent.propTypes = {\n  profile: propTypes.object,\n  newOsMinorVersion: propTypes.string,\n  columns: propTypes.array,\n  handleSelect: propTypes.func,\n  systemCount: propTypes.object,\n  selectedRuleRefIds: propTypes.array,\n  rulesTableProps: propTypes.object,\n};\n\nexport default ProfileTabContent;\n","// Rule selection utilities\n\nexport const matchesSelectionItem = (\n  selectionItem,\n  profile,\n  newOsMinorVersion\n) =>\n  selectionItem.id === profile.id &&\n  selectionItem.osMinorVersion ===\n    (newOsMinorVersion || profile.osMinorVersion);\n\nexport const selectedRuleRefIdsForTab = (\n  selectedRuleRefIds,\n  profile,\n  newOsMinorVersion\n) => {\n  const tabSelection = (selectedRuleRefIds || []).find((selectionItem) =>\n    matchesSelectionItem(selectionItem, profile, newOsMinorVersion)\n  );\n  return tabSelection?.ruleRefIds || [];\n};\n\nexport const profilesWithRulesToSelection = (\n  profiles,\n  prevSelection = [],\n  options = {}\n) => {\n  const { only } = options;\n  const additionalSelection = profiles\n    .map((profile) => {\n      const foundSelection = prevSelection.find((selectionItem) =>\n        matchesSelectionItem(selectionItem, profile)\n      );\n      if (!foundSelection) {\n        if (!profile.rules) {\n          console.error(\n            `Profile ${profile.id} is missing rules for selection!`\n          );\n        }\n\n        if (!profile.osMinorVersion) {\n          console.error(\n            `Profile ${profile.id} is missing osMinorVersion for selection!`\n          );\n        }\n\n        return {\n          id: profile.id,\n          osMinorVersion: profile.osMinorVersion,\n          ruleRefIds: profile.rules?.map((rule) => rule.refId) || [],\n        };\n      } else if (only) {\n        return foundSelection;\n      }\n    })\n    .filter((v) => !!v);\n\n  return only\n    ? additionalSelection\n    : [...prevSelection, ...additionalSelection];\n};\n\nexport const tabsDataToOsMinorMap = (tabsData) => {\n  const osMinorMap = {};\n  tabsData.forEach(({ profile, newOsMinorVersion }) => {\n    if (profile?.id) {\n      const osMinorVersion = newOsMinorVersion || profile.osMinorVersion;\n      osMinorMap[profile.id] = [\n        ...(osMinorMap[profile.id] || []),\n        osMinorVersion,\n      ];\n    }\n  });\n  return osMinorMap;\n};\n\nexport const extendProfilesByOsMinor = (profiles, osMinorMap) =>\n  profiles.flatMap((profile) =>\n    (osMinorMap[profile.id] || [undefined]).map((osMinorVersion) => ({\n      ...profile,\n      osMinorVersion,\n    }))\n  );\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Tab, Badge } from '@patternfly/react-core';\nimport { RoutedTabs } from 'PresentationalComponents';\nimport ProfileTabContent from './ProfileTabContent';\nimport OsVersionText from './OsVersionText';\nimport {\n  selectedRuleRefIdsForTab,\n  matchesSelectionItem,\n} from './ruleSelection';\n\nconst eventKey = ({ id, osMinorVersion }, newOsMinorVersion) =>\n  `rules-${id}-${osMinorVersion || newOsMinorVersion}`;\n\nconst getDefaultTab = (tabsData, defaultTab) => {\n  if (!tabsData || tabsData.length === 0) {\n    return;\n  }\n\n  if (!defaultTab) {\n    const firstTab = tabsData[0];\n    defaultTab = {\n      id: firstTab.profile.id,\n      osMinorVersion:\n        firstTab.profile.osMinorVersion || firstTab.newOsMinorVersion,\n    };\n  }\n\n  return eventKey(defaultTab);\n};\n\nconst TabbedRules = ({\n  tabsData,\n  defaultTab,\n  selectedRuleRefIds,\n  setSelectedRuleRefIds,\n  columns,\n  level = 0,\n  ouiaId,\n  ...rulesTableProps\n}) => {\n  const handleSelect = (\n    profile,\n    newOsMinorVersion,\n    profileSelectedRuleRefIds\n  ) => {\n    const filteredSelection = (selectedRuleRefIds || []).filter(\n      (selectionItem) =>\n        !matchesSelectionItem(selectionItem, profile, newOsMinorVersion)\n    );\n\n    const newItem = {\n      id: profile.id,\n      osMinorVersion: newOsMinorVersion || profile.osMinorVersion,\n      ruleRefIds: profileSelectedRuleRefIds,\n    };\n    setSelectedRuleRefIds([newItem, ...filteredSelection]);\n  };\n\n  return (\n    <RoutedTabs\n      ouiaId={ouiaId}\n      level={level}\n      defaultTab={getDefaultTab(tabsData, defaultTab)}\n    >\n      {tabsData?.map(({ profile, newOsMinorVersion, systemCount }) => (\n        <Tab\n          key={eventKey(profile, newOsMinorVersion)}\n          eventKey={eventKey(profile, newOsMinorVersion)}\n          title={\n            <span>\n              <span className=\"pf-u-pr-sm\">\n                <OsVersionText\n                  profile={profile}\n                  newOsMinorVersion={newOsMinorVersion}\n                />\n              </span>\n              <Badge isRead>{systemCount}</Badge>\n            </span>\n          }\n          ouiaId={`RHEL ${profile.osMajorVersion}.${\n            profile.osMinorVersion || newOsMinorVersion\n          }`}\n        >\n          <ProfileTabContent\n            {...{\n              profile,\n              newOsMinorVersion,\n              columns,\n              rulesTableProps,\n              systemCount,\n              selectedRuleRefIds: selectedRuleRefIdsForTab(\n                selectedRuleRefIds,\n                profile,\n                newOsMinorVersion\n              ),\n              handleSelect: setSelectedRuleRefIds ? handleSelect : undefined,\n            }}\n          />\n        </Tab>\n      ))}\n    </RoutedTabs>\n  );\n};\n\nTabbedRules.propTypes = {\n  tabsData: propTypes.arrayOf(\n    propTypes.shape({\n      profile: propTypes.object.isRequired,\n      selectedRuleRefIds: propTypes.arrayOf(propTypes.string),\n      newOsMinorVersion: propTypes.string,\n      systemCount: propTypes.number,\n    })\n  ).isRequired,\n  selectedRuleRefIds: propTypes.arrayOf(\n    propTypes.shape({\n      id: propTypes.string,\n      ruleRefIds: propTypes.arrayOf(propTypes.string),\n    })\n  ),\n  setSelectedRuleRefIds: propTypes.func,\n  columns: propTypes.arrayOf(propTypes.object),\n  defaultTab: propTypes.shape({\n    id: propTypes.string,\n    osMinorVersion: propTypes.string,\n  }),\n  level: propTypes.number,\n  ouiaId: propTypes.string,\n};\n\nexport default TabbedRules;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { TextContent } from '@patternfly/react-core';\nimport { fitContent } from '@patternfly/react-table';\nimport { Link } from 'react-router-dom';\nimport { GreySmallText, SystemsCountWarning } from 'PresentationalComponents';\nimport { renderComponent } from 'Utilities/helpers';\n\nconst PolicyNameCell = ({ id, policy, policyType }) => (\n  <TextContent>\n    <Link to={'/scappolicies/' + id}>{policy.name}</Link>\n    <GreySmallText>{policyType}</GreySmallText>\n  </TextContent>\n);\n\nPolicyNameCell.propTypes = {\n  id: propTypes.string,\n  policy: propTypes.object,\n  policyType: propTypes.string,\n};\n\nexport const Name = {\n  title: 'Name',\n  props: {\n    width: 45,\n  },\n  sortByProp: 'name',\n  renderExport: (policy) => policy.name,\n  renderFunc: renderComponent(PolicyNameCell),\n};\n\nconst PolicyType = {\n  title: 'Policy Type',\n  renderExport: (policy) => policy.policyType,\n};\n\nconst osString = (policy) => `RHEL ${policy.osMajorVersion}`;\n\nexport const OperatingSystem = {\n  title: 'Operating system',\n  transforms: [fitContent],\n  props: {\n    width: 15,\n  },\n  sortByProp: 'osMajorVersion',\n  renderExport: osString,\n  renderFunc: (_data, _id, policy) => osString(policy),\n};\n\nexport const Systems = {\n  title: 'Systems',\n  props: {\n    width: 15,\n  },\n  sortByProp: 'totalHostCount',\n  renderExport: (policy) => policy.totalHostCount,\n  // eslint-disable-next-line react/display-name\n  renderFunc: (_data, _id, policy) =>\n    policy.totalHostCount > 0 ? (\n      policy.totalHostCount\n    ) : (\n      <SystemsCountWarning count={policy.totalHostCount} variant=\"count\" />\n    ),\n};\n\nconst businessObjectiveString = (policy) =>\n  (policy.businessObjective && policy.businessObjective.title) || '--';\n\nexport const BusinessObjective = {\n  title: 'Business objective',\n  sortByFunction: (policy) => policy?.businessObjective?.title,\n  renderExport: businessObjectiveString,\n  renderFunc: (_data, _id, policy) => businessObjectiveString(policy),\n};\n\nconst complianceThresholdString = (policy) => `${policy.complianceThreshold}%`;\n\nexport const ComplianceThreshold = {\n  title: 'Compliance threshold',\n  sortByProp: 'complianceThreshold',\n  renderExport: complianceThresholdString,\n  renderFunc: (_data, _id, policy) => complianceThresholdString(policy),\n};\n\nexport const exportableColumns = [\n  Name,\n  PolicyType,\n  OperatingSystem,\n  Systems,\n  BusinessObjective,\n  ComplianceThreshold,\n];\n\nexport default [\n  Name,\n  OperatingSystem,\n  Systems,\n  BusinessObjective,\n  ComplianceThreshold,\n];\n","import React from 'react';\nimport { Table, TableHeader, TableBody } from '@patternfly/react-table';\nimport RowLoader from '@redhat-cloud-services/frontend-components-utilities/RowLoader';\nimport columns from '../PoliciesTable/Columns';\n\nconst LoadingPoliciesTable = () => (\n  <Table\n    aria-label=\"policies-table\"\n    ouiaId=\"PoliciesTable\"\n    cells={columns}\n    rows={[...Array(5)].map(() => ({\n      cells: [\n        {\n          title: <RowLoader />,\n          colSpan: 5,\n        },\n      ],\n    }))}\n  >\n    <TableHeader />\n    <TableBody />\n  </Table>\n);\n\nexport default LoadingPoliciesTable;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Title, Button, Text } from '@patternfly/react-core';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport InvalidObject from '@redhat-cloud-services/frontend-components/InvalidObject';\nimport NotAuthorized from '@redhat-cloud-services/frontend-components/NotAuthorized';\n\nconst ErrorPage = ({ error, ...props }) => {\n  if (error.networkError && error.networkError.statusCode === 401) {\n    window.insights.chrome.auth.logout(true);\n    return false;\n  }\n\n  if (error.networkError && error.networkError.statusCode === 403) {\n    return <NotAuthorized serviceName=\"Compliance\" />;\n  }\n\n  if (error.networkError && error.networkError.statusCode === 404) {\n    return <InvalidObject />;\n  }\n\n  return (\n    <section\n      {...props}\n      className=\"pf-l-page__main-section pf-c-page__main-section ins-c-component_invalid-componet\"\n    >\n      <ExclamationCircleIcon\n        size=\"xl\"\n        style={{ color: 'var(--pf-global--danger-color--100)' }}\n      />\n      <Title headingLevel=\"h1\">There was an error</Title>\n      <Text>\n        If you need to contact Red Hat Support about this, this is the exact\n        error:\n        <Text>{error.message}</Text>\n      </Text>\n      <Button\n        variant=\"link\"\n        ouiaId=\"ErrorPageGoBackButton\"\n        onClick={history.goBack}\n      >\n        Go back\n      </Button>\n    </section>\n  );\n};\n\nErrorPage.propTypes = {\n  error: propTypes.object,\n};\n\nexport default ErrorPage;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Card, CardHeader, CardBody } from '@patternfly/react-core';\nimport { NotEqualIcon } from '@patternfly/react-icons';\n\nconst ErrorCard = ({ errorMsg }) => (\n  <Card className=\"ins-error-card\">\n    <CardHeader>\n      <NotEqualIcon />\n    </CardHeader>\n    <CardBody>\n      <div>{errorMsg}</div>\n    </CardBody>\n  </Card>\n);\n\nErrorCard.propTypes = {\n  errorMsg: propTypes.string,\n};\n\nexport default ErrorCard;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Text, TextVariants } from '@patternfly/react-core';\n\nexport const GreySmallText = ({ children }) => (\n  <Text\n    style={{ color: 'var(--pf-global--Color--200)' }}\n    component={TextVariants.small}\n  >\n    {children}\n  </Text>\n);\n\nGreySmallText.propTypes = {\n  children: propTypes.node,\n};\n\nexport default GreySmallText;\n","import React from 'react';\nimport { Field } from 'redux-form';\nimport propTypes from 'prop-types';\nimport { Checkbox } from '@patternfly/react-core';\n\nconst CheckboxFieldArray = ({ input, options }) => {\n  const { name, onChange } = input;\n  const inputValue = input.value;\n\n  const handleChange = (checked, value) => {\n    const arr = [...new Set(inputValue)];\n    if (checked) {\n      arr.push(value);\n    } else {\n      arr.splice(arr.indexOf(value), 1);\n    }\n\n    return onChange(arr);\n  };\n\n  return (\n    <React.Fragment>\n      {options.map(({ label, value, defaultChecked }, index) => (\n        <Checkbox\n          key={value}\n          id={value}\n          label={label}\n          name={`${name}[${index}]`}\n          value={value}\n          isChecked={\n            inputValue === '' ? defaultChecked : inputValue.includes(value)\n          }\n          onChange={(checked) => handleChange(checked, value)}\n        />\n      ))}\n    </React.Fragment>\n  );\n};\n\nCheckboxFieldArray.propTypes = {\n  input: propTypes.shape({\n    name: propTypes.string.isRequired,\n    onChange: propTypes.func,\n    value: propTypes.string,\n  }),\n  options: propTypes.arrayOf(\n    propTypes.shape({\n      label: propTypes.string.isRequired,\n      value: propTypes.string.isRequired,\n      defaultChecked: propTypes.bool,\n    })\n  ).isRequired,\n};\n\nconst CheckboxGroup = (props) => (\n  <Field {...props} type=\"checkbox\" component={CheckboxFieldArray} />\n);\n\nCheckboxGroup.propTypes = {\n  options: propTypes.arrayOf(\n    propTypes.shape({\n      label: propTypes.string.isRequired,\n      value: propTypes.string.isRequired,\n      defaultChecked: propTypes.bool,\n    })\n  ).isRequired,\n};\n\nexport { CheckboxFieldArray };\nexport default CheckboxGroup;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport Truncate from '@redhat-cloud-services/frontend-components/Truncate';\nimport {\n  Grid,\n  GridItem,\n  TextContent,\n  Text,\n  Radio,\n} from '@patternfly/react-core';\nimport { InUseProfileLabel } from 'PresentationalComponents';\n\nconst ProfileTypeSelect = ({ profiles, onChange, selectedProfile }) => (\n  <React.Fragment>\n    {profiles?.length === 0 && (\n      <TextContent style={{ color: 'var(--pf-c-content--blockquote--Color)' }}>\n        <Text>Select an operating system to view policy types.</Text>\n      </TextContent>\n    )}\n\n    <Grid hasGutter>\n      {profiles.map((profile) => {\n        const { description, name, id, disabled } = profile;\n        return (\n          <React.Fragment key={`profile-select-${id}`}>\n            <GridItem span={8} rowSpan={2}>\n              <Radio\n                id={`profile-select-text-${id}`}\n                label={\n                  <>\n                    {` ${name} `}\n                    {disabled && <InUseProfileLabel />}\n                  </>\n                }\n                isDisabled={disabled}\n                description={\n                  <Truncate\n                    inline\n                    key={`profile-select-text-${id}`}\n                    length={190}\n                    text={description}\n                  />\n                }\n                isChecked={selectedProfile === JSON.stringify(profile)}\n                onChange={(_, event) => onChange(event.currentTarget?.value)}\n                value={JSON.stringify(profile)}\n              />\n            </GridItem>\n          </React.Fragment>\n        );\n      })}\n    </Grid>\n  </React.Fragment>\n);\n\nProfileTypeSelect.propTypes = {\n  profiles: propTypes.array,\n  onChange: propTypes.func,\n  selectedProfile: propTypes.object,\n};\n\nProfileTypeSelect.defaultProps = {\n  profiles: [],\n  onClick: () => ({}),\n};\n\nexport default ProfileTypeSelect;\n","import React from 'react';\nimport {\n  QuestionCircleIcon,\n  CheckCircleIcon,\n  ExclamationCircleIcon,\n} from '@patternfly/react-icons';\nimport { Text, Tooltip } from '@patternfly/react-core';\nimport { fixedPercentage } from 'Utilities/TextHelper';\n\nconst CompliantIcon = (system) => {\n  if (system.rulesPassed + system.rulesFailed === 0) {\n    return <QuestionCircleIcon color=\"var(--pf-global--disabled-color--100)\" />;\n  } else {\n    return system.compliant ? (\n      <CheckCircleIcon color=\"var(--pf-global--success-color--200)\" />\n    ) : (\n      <ExclamationCircleIcon color=\"var(--pf-global--danger-color--100)\" />\n    );\n  }\n};\n\nexport const complianceScoreString = (system) => {\n  if (system.supported === false) {\n    return ' Unsupported';\n  } else if (system.rulesPassed + system.rulesFailed === 0) {\n    return ' N/A';\n  }\n\n  return ' ' + fixedPercentage(system.score);\n};\n\nconst ComplianceScore = (system) => (\n  <Text>\n    {system.supported ? (\n      <Tooltip\n        content={\n          'The system compliance score is calculated by OpenSCAP and ' +\n          'is a normalized weighted sum of rules selected for this policy.'\n        }\n      >\n        <CompliantIcon\n          key={`system-compliance-icon-${system.id}`}\n          {...system}\n        />\n        {complianceScoreString(system)}\n      </Tooltip>\n    ) : (\n      complianceScoreString(system)\n    )}\n  </Text>\n);\n\nexport default ComplianceScore;\n","import React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nconst PolicyDetailsContentLoader = () => (\n  <ContentLoader\n    speed={2}\n    width={1000}\n    height={400}\n    viewBox=\"0 0 1000 400\"\n    backgroundcolor=\"#f3f3f3\"\n    foregroundcolor=\"#ecebeb\"\n  >\n    <rect x=\"-3\" y=\"7\" rx=\"3\" ry=\"3\" width=\"760\" height=\"19\" />\n    <rect x=\"823\" y=\"3\" rx=\"3\" ry=\"3\" width=\"67\" height=\"29\" />\n    <rect x=\"910\" y=\"3\" rx=\"3\" ry=\"3\" width=\"67\" height=\"29\" />\n    <rect x=\"6\" y=\"54\" rx=\"0\" ry=\"0\" width=\"46\" height=\"19\" />\n    <rect x=\"68\" y=\"54\" rx=\"0\" ry=\"0\" width=\"46\" height=\"19\" />\n    <rect x=\"133\" y=\"54\" rx=\"0\" ry=\"0\" width=\"46\" height=\"19\" />\n    <rect x=\"3\" y=\"110\" rx=\"0\" ry=\"0\" width=\"255\" height=\"17\" />\n    <rect x=\"1\" y=\"149\" rx=\"0\" ry=\"0\" width=\"47\" height=\"16\" />\n    <rect x=\"1\" y=\"185\" rx=\"0\" ry=\"0\" width=\"255\" height=\"17\" />\n    <rect x=\"-1\" y=\"224\" rx=\"0\" ry=\"0\" width=\"187\" height=\"16\" />\n    <rect x=\"-4\" y=\"267\" rx=\"0\" ry=\"0\" width=\"255\" height=\"17\" />\n    <rect x=\"-6\" y=\"306\" rx=\"0\" ry=\"0\" width=\"47\" height=\"16\" />\n    <rect x=\"-6\" y=\"342\" rx=\"0\" ry=\"0\" width=\"255\" height=\"17\" />\n    <rect x=\"-8\" y=\"381\" rx=\"0\" ry=\"0\" width=\"187\" height=\"16\" />\n  </ContentLoader>\n);\n\nexport default PolicyDetailsContentLoader;\n","import React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nconst ReportDetailsContentLoader = () => (\n  <ContentLoader\n    height={320}\n    width={1550}\n    speed={2}\n    primaryColor=\"#f3f3f3\"\n    secondaryColor=\"#ecebeb\"\n  >\n    <rect x=\"18\" y=\"50\" rx=\"4\" ry=\"4\" width=\"478\" height=\"15\" />\n    <rect x=\"19\" y=\"18\" rx=\"3\" ry=\"3\" width=\"220\" height=\"9\" />\n    <circle cx=\"118\" cy=\"156\" r=\"73\" />\n    <rect x=\"1002\" y=\"40\" rx=\"0\" ry=\"0\" width=\"69\" height=\"23\" />\n    <rect x=\"47\" y=\"77\" rx=\"0\" ry=\"0\" width=\"0\" height=\"0\" />\n    <rect x=\"36\" y=\"77\" rx=\"0\" ry=\"0\" width=\"16\" height=\"0\" />\n    <rect x=\"409\" y=\"149\" rx=\"0\" ry=\"0\" width=\"0\" height=\"0\" />\n    <rect x=\"214\" y=\"145\" rx=\"0\" ry=\"0\" width=\"205\" height=\"9\" />\n    <rect x=\"216\" y=\"119\" rx=\"0\" ry=\"0\" width=\"205\" height=\"9\" />\n    <rect x=\"526\" y=\"100\" rx=\"0\" ry=\"0\" width=\"431\" height=\"8\" />\n    <rect x=\"526\" y=\"122\" rx=\"0\" ry=\"0\" width=\"431\" height=\"8\" />\n    <rect x=\"526\" y=\"146\" rx=\"0\" ry=\"0\" width=\"431\" height=\"8\" />\n    <rect x=\"527\" y=\"170\" rx=\"0\" ry=\"0\" width=\"431\" height=\"8\" />\n    <rect x=\"527\" y=\"194\" rx=\"0\" ry=\"0\" width=\"431\" height=\"8\" />\n    <rect x=\"527\" y=\"218\" rx=\"0\" ry=\"0\" width=\"431\" height=\"8\" />\n    <rect x=\"529\" y=\"275\" rx=\"0\" ry=\"0\" width=\"231\" height=\"7\" />\n  </ContentLoader>\n);\n\nexport default ReportDetailsContentLoader;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { fixedPercentage } from 'Utilities/TextHelper';\nimport {\n  PolicyBusinessObjectiveTooltip,\n  PolicyThresholdTooltip,\n} from 'PresentationalComponents';\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  TextContent,\n  TextVariants,\n  Text,\n} from '@patternfly/react-core';\nimport Truncate from '@redhat-cloud-services/frontend-components/Truncate';\nimport linkifyHtml from 'linkifyjs/html';\n\nconst PolicyDetailsDescription = ({ policy }) => (\n  <Card ouiaId=\"PolicyDetailsCard\">\n    <CardHeader>\n      <Text style={{ fontSize: 20 }}>\n        <b>Policy details</b>\n      </Text>\n    </CardHeader>\n    <CardBody>\n      <TextContent>\n        <Text component={TextVariants.h5}>\n          Compliance threshold\n          <PolicyThresholdTooltip />\n        </Text>\n        <Text className=\"threshold-tooltip\" component={TextVariants.p}>\n          {fixedPercentage(policy.complianceThreshold, 1)}\n        </Text>\n        <Text component={TextVariants.h5}>\n          Business objective\n          <PolicyBusinessObjectiveTooltip />\n        </Text>\n        <Text component={TextVariants.p}>\n          {(policy.businessObjective && policy.businessObjective.title) || '-'}\n        </Text>\n        <Text component={TextVariants.h5}>Policy description</Text>\n        <Text component={TextVariants.p}>\n          <Truncate\n            text={linkifyHtml(policy.description || '')}\n            length={380}\n            inline={true}\n          />\n        </Text>\n        <Text component={TextVariants.h5}>Operating system</Text>\n        <Text component={TextVariants.p}>RHEL {policy.osMajorVersion}</Text>\n        <Text component={TextVariants.h5}>Policy type </Text>\n        <Text component={TextVariants.p}>{policy.policyType}</Text>\n        <Text component={TextVariants.h5}>Reference ID</Text>\n        <Text component={TextVariants.p}>{policy.refId}</Text>\n      </TextContent>\n    </CardBody>\n  </Card>\n);\n\nPolicyDetailsDescription.propTypes = {\n  policy: propTypes.object,\n};\n\nexport default PolicyDetailsDescription;\n","import React from 'react';\nimport { fixedPercentage } from 'Utilities/TextHelper';\nimport propTypes from 'prop-types';\nimport {\n  Text,\n  TextContent,\n  TextList,\n  TextListVariants,\n  TextListItem,\n  TextListItemVariants,\n} from '@patternfly/react-core';\nimport { Link } from 'react-router-dom';\n\nconst PropTypes = {\n  children: propTypes.node,\n};\n\nconst Dt = ({ children, ...props }) => (\n  <TextListItem {...props} component={TextListItemVariants.dt}>\n    {children}\n  </TextListItem>\n);\nDt.propTypes = PropTypes;\n\nconst Dd = ({ children, ...props }) => (\n  <TextListItem {...props} component={TextListItemVariants.dd}>\n    {children}\n  </TextListItem>\n);\nDd.propTypes = PropTypes;\n\nconst PolicyDescription = ({ profile }) => (\n  <React.Fragment>\n    <TextList component={TextListVariants.dl}>\n      <Dt>\n        <Text className=\"ins-c-non-bold-h2\">Policy details</Text>\n      </Dt>\n      <Dt>Operating system</Dt>\n      <Dd>RHEL {profile.osMajorVersion}</Dd>\n      <Dt>Compliance threshold</Dt>\n      <Dd>{fixedPercentage(profile.complianceThreshold, 1)}</Dd>\n      <Dt>Business objective</Dt>\n      <Dd>\n        {profile.businessObjective ? profile.businessObjective.title : '--'}\n      </Dd>\n    </TextList>\n    <Link to={'/scappolicies/' + profile.policy.id}>View policy</Link>\n  </React.Fragment>\n);\n\nPolicyDescription.propTypes = {\n  profile: propTypes.shape({\n    id: propTypes.string,\n    complianceThreshold: propTypes.number,\n    businessObjective: propTypes.object,\n    osMajorVersion: propTypes.string,\n    policy: propTypes.shape({\n      id: propTypes.string,\n    }),\n    benchmark: propTypes.shape({\n      version: propTypes.string,\n    }),\n  }),\n};\n\nconst ReportDetailsDescription = ({ profile }) => (\n  <TextContent className=\"policy-details\">\n    <PolicyDescription {...{ profile }} />\n  </TextContent>\n);\n\nReportDetailsDescription.propTypes = {\n  profile: propTypes.object,\n};\n\nexport default ReportDetailsDescription;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport {\n  Progress,\n  ProgressVariant,\n} from '@patternfly/react-core/dist/js/components/Progress';\n\nconst ProgressBar = ({ percent, failed }) => {\n  let variant;\n  let title;\n\n  if (percent === 100) {\n    title = 'Success';\n    variant = ProgressVariant.success;\n  } else if (failed) {\n    title = 'Error';\n    variant = ProgressVariant.danger;\n  } else {\n    title = 'Progress';\n    variant = ProgressVariant.info;\n  }\n\n  return (\n    <Progress\n      id={'finished-create-policy'}\n      value={percent}\n      title={title}\n      variant={variant}\n      className=\"wizard-progress-bar\"\n    />\n  );\n};\n\nProgressBar.propTypes = {\n  percent: propTypes.number,\n  failed: propTypes.bool,\n};\n\nexport default ProgressBar;\n","import React from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport propTypes from 'prop-types';\nimport { Tabs } from '@patternfly/react-core';\nimport { useAnchor } from 'Utilities/Router';\n\n// Plain tab component without any styling\nexport const ContentTab = ({ children }) => children;\n\nconst findTab = (tabs, key) => tabs.find((tab) => tab.props.eventKey === key);\n\nconst useAnchorLevels = (defaultAnchor, level) => {\n  const anchor = useAnchor(defaultAnchor);\n  const levels = anchor.split('|');\n  const currentAnchor = levels[level] || defaultAnchor;\n\n  return {\n    levels,\n    currentAnchor,\n  };\n};\n\n// Shows always only one tab, either the current or if not available the default\nconst TabSwitcher = ({ children, activeKey: currentAnchor, defaultTab }) => {\n  const getDefaultTab = () =>\n    defaultTab ? findTab(children, defaultTab) : children[0];\n  const currentTab = findTab(children, currentAnchor);\n\n  return currentTab ? [currentTab] : [getDefaultTab()];\n};\n\nTabSwitcher.propTypes = {\n  activeTab: propTypes.number,\n  children: propTypes.node,\n};\n\n// Routed Plain switcher that can be used with PatternFly tabs\nexport const RoutedTabSwitcher = ({ children, defaultTab, level }) => {\n  const { currentAnchor } = useAnchorLevels(defaultTab, level);\n\n  return <TabSwitcher activeKey={currentAnchor}>{children}</TabSwitcher>;\n};\n\nRoutedTabSwitcher.propTypes = {\n  children: propTypes.node,\n  defaultTab: propTypes.string,\n  level: propTypes.number,\n};\n\nRoutedTabSwitcher.defaultProps = {\n  level: 0,\n};\n\n// Allows to use full PatternFly tabs and switch them using the URL hash\n// It can be used with filled tabs (EditPolicyForm) or just tab \"buttons\" (PolicyDetails)\nexport const RoutedTabs = ({\n  children,\n  defaultTab,\n  level,\n  ouiaId,\n  ...props\n}) => {\n  const { push } = useHistory();\n  const { pathname, state } = useLocation();\n  const { currentAnchor, levels } = useAnchorLevels(defaultTab, level);\n  const handleTabSelect = (e, eventKey) => {\n    e.preventDefault();\n    const tabToActivate = eventKey.replace('#', '');\n    let tabAnchor = levels;\n    tabAnchor[level] = tabToActivate;\n\n    push({\n      state,\n      to: pathname,\n      hash: tabAnchor.slice(0, level + 1).join('|'),\n    });\n  };\n  const tabAvailable = children\n    .map(({ props: { eventKey } }) => eventKey)\n    .find((tabAnchor) => tabAnchor === currentAnchor);\n\n  return (\n    <Tabs\n      {...props}\n      ouiaId={ouiaId}\n      onSelect={handleTabSelect}\n      activeKey={tabAvailable ? currentAnchor : defaultTab}\n    >\n      {children}\n    </Tabs>\n  );\n};\n\nRoutedTabs.defaultProps = {\n  level: 0,\n};\n\nRoutedTabs.propTypes = {\n  children: propTypes.node,\n  defaultTab: propTypes.string,\n  level: propTypes.number,\n  ouiaId: propTypes.string,\n};\n\nexport default TabSwitcher;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { ErrorPage } from 'PresentationalComponents';\n\nexport const StateViewPart = ({ children }) => children;\n\nconst props = {\n  stateValues: propTypes.object,\n  children: propTypes.node,\n};\n\nexport const StateView = ({ stateValues, children }) =>\n  children\n    .flatMap((c) => c)\n    .filter((child) => stateValues[child.props.stateKey]);\n\nStateView.propTypes = props;\n\nexport const StateViewWithError = ({ stateValues, children }) => (\n  <StateView stateValues={stateValues}>\n    <StateViewPart key=\"error-state\" stateKey=\"error\">\n      <ErrorPage error={stateValues.error} />\n    </StateViewPart>\n    {children}\n  </StateView>\n);\n\nStateViewWithError.propTypes = props;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Tooltip, TooltipPosition } from '@patternfly/react-core';\nimport { WarningText } from 'PresentationalComponents';\n\nconst WARNING_TEXT = 'Policies without systems will not have reports.';\n\nconst WithOptionalToolTip = ({ showTooltip, children }) =>\n  showTooltip ? (\n    <Tooltip position={TooltipPosition.bottom} content={WARNING_TEXT}>\n      {children}\n    </Tooltip>\n  ) : (\n    children\n  );\n\nWithOptionalToolTip.propTypes = {\n  showTooltip: propTypes.bool,\n  children: propTypes.node,\n};\n\nconst SystemsCountWarning = ({ count, variant }) => {\n  let text;\n\n  switch (variant) {\n    case 'count':\n      text = count;\n      break;\n    case 'compact':\n      text = 'No Systems';\n      break;\n    case 'full':\n      text = WARNING_TEXT;\n      break;\n    default:\n      text = count;\n  }\n\n  return (\n    <WithOptionalToolTip\n      showTooltip={variant === 'count' || variant === 'compact'}\n    >\n      <WarningText>{text}</WarningText>\n    </WithOptionalToolTip>\n  );\n};\n\nSystemsCountWarning.defaultProps = {\n  variant: 'compact',\n};\n\nSystemsCountWarning.propTypes = {\n  count: propTypes.number.isRequired,\n  variant: propTypes.string,\n};\n\nexport { WARNING_TEXT };\nexport default SystemsCountWarning;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Text } from '@patternfly/react-core';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\n\nconst WarningText = ({ children }) => (\n  <React.Fragment>\n    <ExclamationTriangleIcon className=\"ins-u-warning\" />\n    <Text component=\"span\" className=\"ins-c-warning-text\">\n      &nbsp;{children}\n    </Text>\n  </React.Fragment>\n);\n\nWarningText.propTypes = {\n  children: propTypes.node,\n};\n\nexport default WarningText;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst BackgroundLink = ({\n  to,\n  hash,\n  children,\n  state: desiredState,\n  backgroundLocation,\n  ...props\n}) => {\n  const currentLocation = useLocation();\n  const background = { ...currentLocation, ...backgroundLocation };\n  const state = { ...desiredState, background };\n\n  return (\n    <Link to={{ pathname: to, state, hash }} {...props}>\n      {children}\n    </Link>\n  );\n};\n\nBackgroundLink.propTypes = {\n  backgroundLocation: propTypes.object,\n  children: propTypes.node,\n  hash: propTypes.string,\n  state: propTypes.object,\n  to: propTypes.string.isRequired,\n};\n\nexport default BackgroundLink;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Link as ReactRouterLink } from 'react-router-dom';\nimport { BreadcrumbItem } from '@patternfly/react-core';\n\nconst RouterLink = ({ href, ...props }) => (\n  <ReactRouterLink {...props} to={href} />\n);\n\nRouterLink.propTypes = {\n  href: propTypes.string,\n};\n\nconst BreadcrumbLinkItem = ({ children, ...props }) => (\n  <BreadcrumbItem {...props} component={RouterLink}>\n    {children}\n  </BreadcrumbItem>\n);\n\nBreadcrumbLinkItem.propTypes = {\n  children: propTypes.node,\n};\n\nexport default BreadcrumbLinkItem;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Button, TextContent, Text, Progress } from '@patternfly/react-core';\nimport { DownloadIcon } from '@patternfly/react-icons';\nimport { Link } from 'react-router-dom';\nimport {\n  BackgroundLink,\n  PolicyPopover,\n  GreySmallText,\n  UnsupportedSSGVersion,\n} from 'PresentationalComponents';\n\nexport const Name = (profile) => (\n  <TextContent>\n    <Link to={'/reports/' + profile.id} style={{ marginRight: '.5rem' }}>\n      {profile.policy?.name}\n    </Link>\n    <React.Fragment>\n      <PolicyPopover {...{ profile, position: 'right' }} />\n      <GreySmallText>{profile.policyType}</GreySmallText>\n    </React.Fragment>\n  </TextContent>\n);\n\nName.propTypes = {\n  profile: propTypes.object,\n};\n\nexport const OperatingSystem = ({\n  osMajorVersion,\n  ssgVersion,\n  unsupportedHostCount,\n  policy,\n}) => {\n  const supported = unsupportedHostCount === 0;\n  ssgVersion = 'SSG: ' + ssgVersion;\n\n  return (\n    <React.Fragment>\n      RHEL {osMajorVersion}\n      {policy === null && ssgVersion && (\n        <Text>\n          <GreySmallText>\n            {supported ? (\n              ssgVersion\n            ) : (\n              <UnsupportedSSGVersion>{ssgVersion}</UnsupportedSSGVersion>\n            )}\n          </GreySmallText>\n        </Text>\n      )}\n    </React.Fragment>\n  );\n};\n\nOperatingSystem.propTypes = {\n  osMajorVersion: propTypes.string,\n  ssgVersion: propTypes.string,\n  unsupportedHostCount: propTypes.number,\n  policy: propTypes.object,\n};\n\nexport const CompliantSystems = ({\n  testResultHostCount = 0,\n  compliantHostCount = 0,\n  unsupportedHostCount = 0,\n}) => {\n  const tooltipText =\n    'Insights cannot provide a compliance score for systems running an unsupported ' +\n    'version of the SSG at the time this report was created, as the SSG version was not supported by RHEL.';\n  return (\n    <React.Fragment>\n      <Progress\n        aria-label=\"Compliant systems\"\n        measureLocation={'outside'}\n        value={\n          testResultHostCount\n            ? (100 / testResultHostCount) * compliantHostCount\n            : 0\n        }\n      />\n      <GreySmallText>\n        {`${compliantHostCount} of ${testResultHostCount} systems `}\n\n        {unsupportedHostCount > 0 && (\n          <UnsupportedSSGVersion\n            {...{ tooltipText }}\n            style={{ marginLeft: '.5em' }}\n          >\n            <strong className=\"ins-c-warning-text\">\n              {unsupportedHostCount} unsupported\n            </strong>\n          </UnsupportedSSGVersion>\n        )}\n      </GreySmallText>\n    </React.Fragment>\n  );\n};\n\nCompliantSystems.propTypes = {\n  testResultHostCount: propTypes.number,\n  compliantHostCount: propTypes.number,\n  unsupportedHostCount: propTypes.number,\n};\n\nexport const PDFExportDownload = (profile) => {\n  return (\n    <BackgroundLink to={`/reports/${profile.id}/pdf`}>\n      <Button\n        ouiaId=\"ReportsDownloadReportPDFLink\"\n        variant=\"plain\"\n        className=\"pf-u-mr-md\"\n      >\n        <DownloadIcon />\n      </Button>\n    </BackgroundLink>\n  );\n};\n","import { fitContent } from '@patternfly/react-table';\nimport { renderComponent } from 'Utilities/helpers';\nimport {\n  Name as NameCell,\n  OperatingSystem as OperatingSystemCell,\n  CompliantSystems as CompliantSystemsCell,\n  PDFExportDownload as PDFExportDownloadCell,\n} from './Cells';\n\nexport const Name = {\n  title: 'Policy',\n  sortByProp: 'name',\n  props: {\n    width: 60,\n  },\n  exportKey: 'name',\n  renderFunc: renderComponent(NameCell),\n};\n\nexport const OperatingSystem = {\n  title: 'Operating system',\n  transforms: [fitContent],\n  sortByProp: 'osMajorVersion',\n  props: {\n    width: 20,\n  },\n  renderExport: ({ osMajorVersion }) => `RHEL ${osMajorVersion} `,\n  renderFunc: renderComponent(OperatingSystemCell),\n};\n\nexport const CompliantSystems = {\n  title: 'Systems meeting compliance',\n  transforms: [fitContent],\n  sortByFunction: ({ testResultHostCount, compliantHostCount }) =>\n    (100 / testResultHostCount) * compliantHostCount,\n  props: {\n    width: 20,\n  },\n  renderExport: ({\n    testResultHostCount = 0,\n    compliantHostCount = 0,\n    unsupportedHostCount = 0,\n  }) =>\n    `${compliantHostCount} of ${testResultHostCount} systems${\n      unsupportedHostCount > 0 ? ` | ${unsupportedHostCount} unsupported` : ''\n    }`,\n  renderFunc: renderComponent(CompliantSystemsCell),\n};\n\nexport const PDFExportDownload = {\n  title: '',\n  renderFunc: renderComponent(PDFExportDownloadCell),\n  managable: false,\n};\n\nconst PolicyType = {\n  title: 'Policy Type',\n  renderExport: (profile) => profile.policyType,\n};\n\nexport const exportableColumns = [\n  Name,\n  PolicyType,\n  OperatingSystem,\n  CompliantSystems,\n];\n\nexport default [Name, OperatingSystem, CompliantSystems];\n","import { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\n\nexport const policyNameFilter = [\n  {\n    type: conditionalFilterType.text,\n    label: 'Policy name',\n    filter: (profiles, value) => {\n      const lowerCaseValue = value.toLowerCase();\n      return profiles.filter((profile) =>\n        [profile.name, profile.policy.name]\n          .join()\n          .toLowerCase()\n          .includes(lowerCaseValue)\n      );\n    },\n  },\n];\n\nexport const policyTypeFilter = (policyTypes) => [\n  {\n    type: conditionalFilterType.checkbox,\n    label: 'Policy type',\n    filter: (profiles, values) =>\n      profiles.filter(({ policyType }) => values.includes(policyType)),\n    items: policyTypes.map((policyType) => ({\n      label: policyType,\n      value: policyType,\n    })),\n  },\n];\n\nexport const operatingSystemFilter = (operatingSystems) => [\n  {\n    type: conditionalFilterType.checkbox,\n    label: 'Operating system',\n    filter: (profiles, values) =>\n      profiles.filter(({ osMajorVersion }) => values.includes(osMajorVersion)),\n    items: operatingSystems.map((operatingSystem) => ({\n      label: `RHEL ${operatingSystem}`,\n      value: operatingSystem,\n    })),\n  },\n];\n\nexport const policyComplianceFilter = [\n  {\n    type: conditionalFilterType.checkbox,\n    label: 'Systems meeting compliance',\n    filter: (profiles, values) =>\n      profiles.filter(({ testResultHostCount, compliantHostCount }) => {\n        const compliantHostsPercent = Math.round(\n          (100 / testResultHostCount) * compliantHostCount\n        );\n        const matching = values\n          .map((value) => {\n            const [min, max] = value.split('-');\n            return compliantHostsPercent >= min && compliantHostsPercent <= max;\n          })\n          .filter((i) => !!i);\n        return matching.length > 0;\n      }),\n    items: [\n      { label: '90 - 100%', value: '90-100' },\n      { label: '70 - 89%', value: '70-89' },\n      { label: '50 - 69%', value: '50-69' },\n      { label: 'Less than 50%', value: '0-49' },\n    ],\n  },\n];\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { COMPLIANCE_TABLE_DEFAULTS } from '@/constants';\nimport { emptyRows } from 'PresentationalComponents';\nimport { TableToolsTable } from 'Utilities/hooks/useTableTools';\nimport { uniq } from 'Utilities/helpers';\nimport useFeature from 'Utilities/hooks/useFeature';\nimport columns, { exportableColumns, PDFExportDownload } from './Columns';\nimport {\n  policyNameFilter,\n  policyTypeFilter,\n  operatingSystemFilter,\n  policyComplianceFilter,\n} from './Filters';\n\nconst ReportsTable = ({ profiles }) => {\n  const manageColumnsEnabled = useFeature('manageColumns');\n  const pdfReportEnabled = useFeature('pdfReport');\n  const policyTypes = uniq(\n    profiles.map(({ policyType }) => policyType).filter((i) => !!i)\n  );\n  const operatingSystems = uniq(\n    profiles.map(({ osMajorVersion }) => osMajorVersion).filter((i) => !!i)\n  );\n\n  return (\n    <TableToolsTable\n      aria-label=\"Reports\"\n      ouiaId=\"ReportsTable\"\n      columns={[\n        ...columns,\n        ...((pdfReportEnabled && [PDFExportDownload]) || []),\n      ]}\n      items={profiles}\n      emptyRows={emptyRows}\n      isStickyHeader\n      filters={{\n        filterConfig: [\n          ...policyNameFilter,\n          ...((policyTypes.length > 0 && policyTypeFilter(policyTypes)) || []),\n          ...((operatingSystems.length > 0 &&\n            operatingSystemFilter(operatingSystems)) ||\n            []),\n          ...policyComplianceFilter,\n        ],\n      }}\n      options={{\n        ...COMPLIANCE_TABLE_DEFAULTS,\n        exportable: {\n          ...COMPLIANCE_TABLE_DEFAULTS.exportable,\n          columns: exportableColumns,\n        },\n        manageColumns: manageColumnsEnabled,\n      }}\n    />\n  );\n};\n\nReportsTable.propTypes = {\n  profiles: propTypes.array,\n};\n\nexport default ReportsTable;\n","import React from 'react';\nimport { Button } from '@patternfly/react-core';\nimport ComplianceEmptyState from '../ComplianceEmptyState';\nimport { BackgroundLink } from 'PresentationalComponents';\n\nconst ReportsEmptyState = () => (\n  <ComplianceEmptyState\n    title={'No policies are reporting'}\n    mainButton={\n      <BackgroundLink to=\"/scappolicies/new\">\n        <Button variant=\"primary\" ouiaId=\"CreateNewPolicyButton\">\n          Create new policy\n        </Button>\n      </BackgroundLink>\n    }\n  />\n);\n\nexport default ReportsEmptyState;\n","import React from 'react';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport {\n  Button,\n  Popover,\n  Text,\n  TextList,\n  TextListVariants,\n  TextListItem,\n  TextListItemVariants,\n  TextContent,\n  TextVariants,\n} from '@patternfly/react-core';\nimport { fixedPercentage } from 'Utilities/TextHelper';\nimport { Link } from 'react-router-dom';\nimport propTypes from 'prop-types';\n\nconst PolicyPopover = ({ profile, position = 'top' }) => {\n  const {\n    policy,\n    policyType,\n    complianceThreshold,\n    osMajorVersion,\n    businessObjective,\n  } = profile;\n  return (\n    <Popover\n      {...{ position }}\n      headerContent={\n        <TextContent>\n          {policy?.name}\n          <Text component={TextVariants.small}>{policyType}</Text>\n        </TextContent>\n      }\n      footerContent={\n        <Link to={'/scappolicies/' + policy?.id} className=\"pf-u-font-size-md\">\n          View policy\n        </Link>\n      }\n      bodyContent={\n        <TextContent className=\"policy-details\">\n          <TextList component={TextListVariants.dl}>\n            <TextListItem component={TextListItemVariants.dt}>\n              Operating system\n            </TextListItem>\n            <TextListItem component={TextListItemVariants.dd}>\n              RHEL {osMajorVersion}\n            </TextListItem>\n            <TextListItem component={TextListItemVariants.dt}>\n              Compliance threshold\n            </TextListItem>\n            <TextListItem component={TextListItemVariants.dd}>\n              {fixedPercentage(complianceThreshold, 1)}\n            </TextListItem>\n            {businessObjective && (\n              <React.Fragment>\n                <TextListItem component={TextListItemVariants.dt}>\n                  Business objective\n                </TextListItem>\n                <TextListItem component={TextListItemVariants.dd}>\n                  {businessObjective.title}\n                </TextListItem>\n              </React.Fragment>\n            )}\n          </TextList>\n        </TextContent>\n      }\n    >\n      <Button variant=\"link\" ouiaId=\"PopoverViewPolicyLink\" isInline>\n        <OutlinedQuestionCircleIcon className=\"grey-icon\" />\n      </Button>\n    </Popover>\n  );\n};\n\nPolicyPopover.propTypes = {\n  profile: propTypes.object,\n  position: propTypes.string,\n};\n\nexport default PolicyPopover;\n","import React, { Fragment } from 'react';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport { Tooltip } from '@patternfly/react-core';\n\nconst PolicyThresholdTooltip = () => (\n  <Tooltip\n    position=\"right\"\n    content={\n      <Fragment>\n        The compliance threshold defines what percentage of rules must be met in\n        order for a system to be determined &quot;compliant&quot;.\n      </Fragment>\n    }\n  >\n    <span>\n      &nbsp;\n      <OutlinedQuestionCircleIcon className=\"grey-icon\" />\n    </span>\n  </Tooltip>\n);\n\nexport default PolicyThresholdTooltip;\n","import React, { Fragment } from 'react';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport { Tooltip } from '@patternfly/react-core';\n\nconst PolicyBusinessObjectiveTooltip = () => (\n  <Tooltip\n    position=\"right\"\n    content={\n      <Fragment>\n        This is an optional field that can be used to label policies that are\n        related to specific business objectives.\n      </Fragment>\n    }\n  >\n    <span>\n      &nbsp;\n      <OutlinedQuestionCircleIcon className=\"grey-icon\" />\n    </span>\n  </Tooltip>\n);\n\nexport default PolicyBusinessObjectiveTooltip;\n","import React from 'react';\nimport {\n  Bullseye,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateVariant,\n  Title,\n} from '@patternfly/react-core';\nimport EmptyTable from '@redhat-cloud-services/frontend-components/EmptyTable';\n\nconst NoResultsTable = () => (\n  <EmptyTable>\n    <Bullseye>\n      <EmptyState variant={EmptyStateVariant.full}>\n        <Title headingLevel=\"h5\" size=\"lg\">\n          No matching policies found\n        </Title>\n        <EmptyStateBody>\n          This filter criteria matches no policies. <br /> Try changing your\n          filter settings.\n        </EmptyStateBody>\n      </EmptyState>\n    </Bullseye>\n  </EmptyTable>\n);\n\nexport const emptyRows = [\n  {\n    cells: [\n      {\n        title: () => <NoResultsTable />, // eslint-disable-line\n        props: {\n          colSpan: 3,\n        },\n      },\n    ],\n  },\n];\n\nexport default NoResultsTable;\n","import { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\n\nexport const nameFilter = {\n  type: conditionalFilterType.text,\n  label: 'Name',\n  filter: (policies, value) =>\n    policies.filter((policy) =>\n      policy.name.toLowerCase().includes(value.toLowerCase())\n    ),\n};\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { Button } from '@patternfly/react-core';\nimport { COMPLIANCE_TABLE_DEFAULTS } from '@/constants';\nimport { BackgroundLink, emptyRows } from 'PresentationalComponents';\nimport { TableToolsTable } from 'Utilities/hooks/useTableTools';\nimport useFeature from 'Utilities/hooks/useFeature';\nimport columns, { exportableColumns } from './Columns';\nimport * as Filters from './Filters';\n\nconst DedicatedAction = () => (\n  <div>\n    <BackgroundLink to=\"/scappolicies/new\">\n      <Button variant=\"primary\" ouiaId=\"CreateNewPolicyButton\">\n        Create new policy\n      </Button>\n    </BackgroundLink>\n  </div>\n);\n\nexport const PoliciesTable = ({ policies, location, history }) => {\n  const manageColumnsEnabled = useFeature('manageColumns');\n  const filters = Object.values(Filters);\n\n  const actionResolver = () => [\n    {\n      title: 'Delete policy',\n      onClick: (_event, _index, { itemId: policyId }) => {\n        const policy = policies.find((policy) => policy.id === policyId);\n        history.push(`/scappolicies/${policyId}/delete`, {\n          policy,\n          background: location,\n        });\n      },\n    },\n    {\n      title: 'Edit policy',\n      onClick: (_event, _index, { itemId: policyId }) => {\n        const policy = policies.find((policy) => policy.id === policyId);\n        history.push(`/scappolicies/${policyId}/edit`, {\n          policy,\n          background: location,\n          state: { policy },\n        });\n      },\n    },\n  ];\n\n  return (\n    <TableToolsTable\n      aria-label=\"Policies\"\n      ouiaId=\"PoliciesTable\"\n      className=\"compliance-policies-table\"\n      columns={columns}\n      items={policies}\n      emptyRows={emptyRows}\n      isStickyHeader\n      filters={{\n        filterConfig: filters,\n      }}\n      options={{\n        ...COMPLIANCE_TABLE_DEFAULTS,\n        actionResolver,\n        dedicatedAction: DedicatedAction,\n        exportable: {\n          ...COMPLIANCE_TABLE_DEFAULTS.exportable,\n          columns: exportableColumns,\n        },\n        manageColumns: manageColumnsEnabled,\n      }}\n    />\n  );\n};\n\nPoliciesTable.propTypes = {\n  policies: propTypes.array.isRequired,\n  history: propTypes.object.isRequired,\n  location: propTypes.object.isRequired,\n};\n\nPoliciesTable.defaultProps = {\n  policies: [],\n};\n\nexport default withRouter(PoliciesTable);\n","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { FormGroup } from '@patternfly/react-core';\nimport { ReduxFormTextInput } from 'PresentationalComponents/ReduxFormWrappers/ReduxFormWrappers';\nimport propTypes from 'prop-types';\nimport { thresholdValid } from '../../SmartComponents/CreatePolicy/validate';\nimport {\n  PolicyThresholdTooltip,\n  ComplianceThresholdHelperText,\n} from 'PresentationalComponents';\n\nexport class ProfileThresholdField extends React.Component {\n  state = {\n    validThreshold: thresholdValid(this.props.previousThreshold),\n    threshold: this.props.previousThreshold,\n  };\n\n  handleThresholdChange = (threshold) => {\n    this.setState({\n      validThreshold: thresholdValid(threshold),\n      threshold: threshold,\n    });\n  };\n\n  render() {\n    const { threshold, validThreshold } = this.state;\n\n    return (\n      <React.Fragment>\n        <FormGroup\n          fieldId=\"policy-threshold\"\n          validated={validThreshold ? 'default' : 'error'}\n          helperTextInvalid={\n            <ComplianceThresholdHelperText threshold={threshold} />\n          }\n          helperText=\"A value of 95% or higher is recommended\"\n          labelIcon={<PolicyThresholdTooltip />}\n          label=\"Compliance threshold (%)\"\n        >\n          <Field\n            name=\"complianceThreshold\"\n            id=\"complianceThreshold\"\n            isRequired={true}\n            onChange={this.handleThresholdChange}\n            validated={validThreshold ? 'default' : 'error'}\n            defaultValue={threshold}\n            aria-label=\"compliance threshold\"\n            component={ReduxFormTextInput}\n            type=\"number\"\n            style={{ width: '60%', display: 'block' }}\n          />\n        </FormGroup>\n      </React.Fragment>\n    );\n  }\n}\n\nProfileThresholdField.propTypes = {\n  previousThreshold: propTypes.number,\n};\n\nexport default reduxForm({\n  form: 'policyForm',\n  destroyOnUnmount: false,\n  forceUnregisterOnUnmount: true,\n})(ProfileThresholdField);\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { HelperText, HelperTextItem } from '@patternfly/react-core';\nimport { hasMaxDecimals } from '../../SmartComponents/CreatePolicy/validate';\n\nconst ComplianceThresholdHelperText = ({ threshold }) => {\n  const parsedThreshold = parseFloat(threshold);\n\n  return (\n    <React.Fragment>\n      <HelperText>\n        {(parsedThreshold < 0 ||\n          parsedThreshold > 100 ||\n          isNaN(parsedThreshold)) && (\n          <HelperTextItem variant=\"error\">\n            Threshold has to be a number between 0 and 100\n          </HelperTextItem>\n        )}\n        {!hasMaxDecimals(parsedThreshold, 1) && (\n          <HelperTextItem variant=\"error\">\n            Threshold values can have a maximum of one decimal place\n          </HelperTextItem>\n        )}\n      </HelperText>\n    </React.Fragment>\n  );\n};\n\nComplianceThresholdHelperText.propTypes = {\n  threshold: propTypes.string,\n};\n\nexport default ComplianceThresholdHelperText;\n","import React from 'react';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\nimport { supportedConfigsLink } from '@/constants';\n\nconst SupportedSSGVersionsLink = () => (\n  <a target=\"_blank\" rel=\"noopener noreferrer\" href={supportedConfigsLink}>\n    Supported SSG versions <ExternalLinkAltIcon />\n  </a>\n);\n\nexport default SupportedSSGVersionsLink;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Popover, Tooltip, Text } from '@patternfly/react-core';\nimport {\n  ExclamationTriangleIcon,\n  OutlinedQuestionCircleIcon,\n} from '@patternfly/react-icons';\nimport { SupportedSSGVersionsLink } from 'PresentationalComponents';\n\nconst UNSUPPORTED_SINGULAR_MESSAGE =\n  'This system was using an incompatible version of the SSG at the time this report was generated. ' +\n  'Assessment of rules failed/passed on this system is a best-guess effort and may not be accurate.';\n\nconst UNSUPPORTED_PLURAL_MESSAGE = (\n  <React.Fragment>\n    <Text variant=\"p\" style={{ marginBottom: '1rem' }}>\n      These systems are running unsupported versions of the SCAP Security Guide\n      (SSG) for the version of RHEL installed on them. Assessment of rules\n      failed/passed on these systems is a best-guess effort and may not be\n      accurate.\n    </Text>\n    <Text variant=\"p\">\n      The policy&apos;s compliance score excludes these systems.\n    </Text>\n  </React.Fragment>\n);\n\nconst WarningWithPopover = ({ children, variant = 'plural' }) => (\n  <Popover\n    id=\"unsupported-popover\"\n    maxWidth=\"25rem\"\n    headerContent=\"Unsupported SSG versions\"\n    bodyContent={\n      variant === 'plural'\n        ? UNSUPPORTED_PLURAL_MESSAGE\n        : UNSUPPORTED_SINGULAR_MESSAGE\n    }\n    footerContent={<SupportedSSGVersionsLink />}\n  >\n    {children}\n  </Popover>\n);\n\nWarningWithPopover.propTypes = {\n  children: propTypes.node,\n  variant: propTypes.oneOf(['singular', 'plural']),\n};\n\nconst WarningWithTooltip = ({ children, content }) => (\n  <Tooltip content={content} position=\"bottom\">\n    {children}\n  </Tooltip>\n);\n\nWarningWithTooltip.propTypes = {\n  content: propTypes.string,\n  children: propTypes.node,\n};\n\nconst TooltipOrPopover = ({ variant, children, tooltipProps }) => {\n  const { Component, componentProps } = {\n    tooltip: {\n      Component: WarningWithTooltip,\n      componentProps: tooltipProps,\n    },\n    popover: {\n      Component: WarningWithPopover,\n      componentProps: {\n        showHeader: tooltipProps.showPopupHeader,\n        variant: tooltipProps.messageVariant,\n      },\n    },\n  }[variant];\n\n  return <Component {...componentProps}>{children}</Component>;\n};\n\nTooltipOrPopover.propTypes = {\n  children: propTypes.node,\n  variant: propTypes.oneOf(['tooltip', 'popover']),\n  tooltipProps: propTypes.object,\n};\n\nconst UnsupportedSSGVersion = ({\n  children,\n  showWarningIcon = true,\n  showHelpIcon = false,\n  style,\n  tooltipText,\n  messageVariant,\n}) => {\n  const tooltipProps = {\n    ...(tooltipText && { content: <div>{tooltipText}</div> }),\n    messageVariant,\n  };\n  const variant = tooltipText ? 'tooltip' : 'popover';\n  const iconProps = {\n    variant,\n    tooltipProps,\n  };\n  const defaultStyle = !tooltipText ? { cursor: 'pointer' } : {};\n\n  return (\n    <span style={{ ...style, display: 'inline-block' }}>\n      {showWarningIcon && (\n        <TooltipOrPopover {...iconProps}>\n          <span style={defaultStyle} className=\"pf-u-mr-xs\">\n            <ExclamationTriangleIcon color=\"var(--pf-global--warning-color--100)\" />\n          </span>\n        </TooltipOrPopover>\n      )}\n\n      {children}\n\n      {showHelpIcon && (\n        <TooltipOrPopover {...iconProps}>\n          <span style={defaultStyle} className=\"pf-u-ml-xs\">\n            <OutlinedQuestionCircleIcon className=\"grey-icon\" />\n          </span>\n        </TooltipOrPopover>\n      )}\n    </span>\n  );\n};\n\nUnsupportedSSGVersion.propTypes = {\n  showWarningIcon: propTypes.bool,\n  showHelpIcon: propTypes.bool,\n  style: propTypes.object,\n  tooltipText: propTypes.string,\n  children: propTypes.node,\n  variant: propTypes.string,\n  messageVariant: propTypes.string,\n  showPopupHeader: propTypes.bool,\n};\n\nexport default UnsupportedSSGVersion;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Text } from '@patternfly/react-core';\n\nconst SubPageTitle = ({ children }) => (\n  <Text\n    component=\"h2\"\n    style={{\n      color: 'var(--pf-global--Color--200)',\n      lineHeight: '2rem',\n    }}\n  >\n    {children}\n  </Text>\n);\n\nSubPageTitle.propTypes = {\n  children: propTypes.node,\n};\n\nexport default SubPageTitle;\n","import React from 'react';\nimport {\n  EmptyStateBody,\n  EmptyState,\n  EmptyStateVariant,\n  Text,\n  TextContent,\n  TextVariants,\n  Title,\n  Bullseye,\n} from '@patternfly/react-core';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\nimport { WARNING_TEXT } from 'PresentationalComponents';\n\nconst NoSystemsTableWithWarning = () => (\n  <Bullseye>\n    <EmptyState variant={EmptyStateVariant.full}>\n      <Title headingLevel=\"h2\" size=\"lg\" style={{ fontWeight: 'bold' }}>\n        No systems on this policy\n      </Title>\n      <EmptyStateBody>\n        <TextContent>\n          <Text component={TextVariants.p}>\n            Add systems to this policy from the systems page\n          </Text>\n          <Text style={{ color: 'var(--pf-global--warning-color--100)' }}>\n            <ExclamationTriangleIcon /> {WARNING_TEXT}\n          </Text>\n        </TextContent>\n      </EmptyStateBody>\n    </EmptyState>\n  </Bullseye>\n);\n\nexport default NoSystemsTableWithWarning;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ConditionalLink = ({ children, href, ...additionalProps }) =>\n  (href && (\n    <a href={href} {...additionalProps}>\n      {children}\n    </a>\n  )) ||\n  children ||\n  '';\n\nConditionalLink.propTypes = {\n  children: PropTypes.node,\n  href: PropTypes.string,\n};\n\nexport default ConditionalLink;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Modal } from '@patternfly/react-core';\n\n// Provides a modal with defaults used in compliance\nconst ComplianceModal = ({ children, className = '', ...props }) => {\n  return (\n    <Modal\n      className={`compliance${className ? ` ${className}` : ''}`}\n      {...props}\n    >\n      {children}\n    </Modal>\n  );\n};\n\nComplianceModal.propTypes = {\n  children: propTypes.node,\n  className: propTypes.string,\n};\n\nexport default ComplianceModal;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Label, Tooltip } from '@patternfly/react-core';\n\nconst InUseProfileLabel = ({ compact }) => (\n  <Tooltip\n    position=\"right\"\n    content=\"A policy of this type is already in use.\n        Only one policy per policy type can be created for a major release of RHEL.\"\n  >\n    <Label color=\"orange\" style={{ lineHeight: '1.5em' }} compact={compact}>\n      In use\n    </Label>\n  </Tooltip>\n);\n\nInUseProfileLabel.propTypes = {\n  compact: propTypes.boolean,\n};\n\nexport default InUseProfileLabel;\n","export const validateBenchmarkPage = (benchmark, osMajorVersion, profile) => {\n  if (benchmark && osMajorVersion && profile) {\n    return true;\n  } else {\n    return false;\n  }\n};\n\nexport const hasMaxDecimals = (num, dec) =>\n  new RegExp(`^[-]?\\\\d+(\\\\.\\\\d{1${dec > 1 ? ',' + dec : ''}})?$`, 'g').test(\n    num.toString()\n  );\n\nexport const thresholdValid = (threshold) => {\n  const parsedThreshold = parseFloat(threshold);\n  return (\n    parsedThreshold <= 100 &&\n    parsedThreshold >= 0 &&\n    hasMaxDecimals(parsedThreshold, 1)\n  );\n};\n\nexport const validateDetailsPage = (name, refId, complianceThreshold) =>\n  !name ||\n  !refId ||\n  !complianceThreshold ||\n  !thresholdValid(complianceThreshold)\n    ? false\n    : true;\n\nexport const validateRulesPage = (selectedRuleRefIds) =>\n  selectedRuleRefIds?.length > 0;\n\nexport const validateSystemsPage = (systemIds) => {\n  if (systemIds) {\n    return systemIds.length > 0;\n  } else {\n    return false;\n  }\n};\n","export const isNumberRange = (value) => value && !!value.match(/\\d\\d*-\\d\\d*/);\n\nexport const fixedPercentage = (value, fixed = 0, withPercent = true) => {\n  const fixedValue = value ? parseFloat(value).toFixed(fixed) : undefined;\n  return fixedValue ? fixedValue + (withPercent ? '%' : '') : 'N/A';\n};\n\nexport const pluralize = (value, singular, plural) => {\n  if (!plural) {\n    plural = singular + 's';\n  }\n\n  return value > 1 || value === 0 ? plural : singular;\n};\n\nexport const stringToId = (string) => string.replace(' ', '').toLowerCase();\n","import React from 'react';\nimport natsort from 'natsort';\n\nexport const uniq = (collection) => [...new Set(collection)];\n\nexport const sortingByProp =\n  (propName, order = 'asc') =>\n  (objA, objB) => {\n    const descending = order != 'asc';\n    const propA = (objA && objA[propName]) || '';\n    const propB = (objB && objB[propName]) || '';\n\n    const sorter = natsort({ desc: descending });\n    return sorter(propA, propB);\n  };\n\n// eslint-disable-next-line react/display-name\nexport const renderComponent = (Component, props) => (_data, _id, entity) =>\n  <Component {...entity} {...props} />;\n\nconst getSortable = (property, item) => {\n  if (typeof property === 'function') {\n    return property(item);\n  } else {\n    return item[property];\n  }\n};\n\nexport const stringToId = (string) => string.split(' ').join('').toLowerCase();\n\nexport const orderArrayByProp = (property, objects, direction) =>\n  objects.sort((a, b) => {\n    if (direction === 'asc') {\n      return String(getSortable(property, a)).localeCompare(\n        String(getSortable(property, b))\n      );\n    } else {\n      return -String(getSortable(property, a)).localeCompare(\n        String(getSortable(property, b))\n      );\n    }\n  });\n\nexport const orderByArray = (objectArray, orderProp, orderArray, direction) => {\n  const sortedObjectArray = orderArray.flatMap((orderKey) =>\n    objectArray.filter((item) => item[orderProp] === orderKey)\n  );\n  return direction !== 'asc' ? sortedObjectArray.reverse() : sortedObjectArray;\n};\n\nexport const getProperty = (obj, path, fallback) => {\n  const parts = path.split('.');\n  const key = parts.shift();\n  if (typeof obj[key] !== 'undefined') {\n    return parts.length > 0\n      ? getProperty(obj[key], parts.join('.'), fallback)\n      : obj[key];\n  }\n\n  return fallback;\n};\n\nexport const camelCase = (string) =>\n  string\n    .split(/[-_\\W]+/g)\n    .map((string) => string.trim())\n    .map((string) => string[0].toUpperCase() + string.substring(1))\n    .join('');\n","import { useState } from 'react';\nimport { sortable } from '@patternfly/react-table';\nimport { orderArrayByProp, orderByArray, uniq } from 'Utilities/helpers';\n\nconst isSortable = (column) => column.sortByProp || column.sortByFunction;\n\nconst addSortableTransform = (columns) =>\n  columns.map((column) => ({\n    ...column,\n    ...(isSortable(column)\n      ? {\n          transforms: uniq([...(column?.transforms || []), sortable]),\n        }\n      : {}),\n  }));\n\nconst columnOffset = (options = {}) =>\n  (typeof options.onSelect === 'function' || options.hasRadioSelect ? 1 : 0) +\n  (typeof options.detailsComponent !== 'undefined');\n\nconst useTableSort = (columns, options = {}) => {\n  const [sortBy, setSortBy] = useState(\n    options.sortBy || {\n      index: 0,\n      direction: 'asc',\n    }\n  );\n  const onSort = (_, index, direction) => {\n    setSortBy({\n      index,\n      direction,\n    });\n  };\n  const currentSortableColumn = columns[sortBy.index - columnOffset(options)];\n  const sorter = (items) =>\n    currentSortableColumn?.sortByArray\n      ? orderByArray(\n          items,\n          currentSortableColumn?.sortByProp,\n          currentSortableColumn?.sortByArray,\n          sortBy.direction\n        )\n      : orderArrayByProp(\n          currentSortableColumn?.sortByProp ||\n            currentSortableColumn?.sortByFunction,\n          items,\n          sortBy.direction\n        );\n  return {\n    sorter,\n    tableProps: {\n      onSort,\n      sortBy,\n      cells: addSortableTransform(columns),\n    },\n  };\n};\n\nexport const useTableSortWithItems = (items, columns, options) => {\n  const { tableProps, sorter } = useTableSort(columns, options);\n\n  return {\n    tableProps: {\n      ...tableProps,\n      sortBy: items.length > 0 ? tableProps.sortBy : undefined,\n    },\n    sorter,\n  };\n};\n\nexport default useTableSort;\n","import { useState } from 'react';\n\nconst usePaginate = (options = {}) => {\n  const { perPage = 10 } = options;\n  const enablePagination = options?.pagination !== false;\n\n  const [paginationState, setPaginationState] = useState({\n    perPage,\n    page: 1,\n  });\n  const setPagination = (newState) =>\n    setPaginationState({\n      ...paginationState,\n      ...newState,\n    });\n\n  const onSetPage = (_, page) => setPagination({ ...paginationState, page });\n\n  const onPerPageSelect = (_, perPage) => setPagination({ page: 1, perPage });\n\n  const paginator = (items) => {\n    const { page, perPage } = paginationState;\n    const start = (page - 1) * perPage;\n    const end = start + perPage;\n\n    return items.slice(start, end);\n  };\n\n  const setPage = (page) => {\n    const nextPage = page < 0 ? paginationState.page + page : page;\n    setPagination({\n      page: nextPage > 0 ? nextPage : 1,\n    });\n  };\n\n  return enablePagination\n    ? {\n        paginator,\n        setPage,\n        toolbarProps: {\n          pagination: {\n            ...paginationState,\n            onSetPage,\n            onPerPageSelect,\n          },\n        },\n      }\n    : {};\n};\n\nexport default usePaginate;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport {\n  Bullseye,\n  EmptyState,\n  EmptyStateBody,\n  EmptyStateVariant,\n  Title,\n} from '@patternfly/react-core';\nimport EmptyTable from '@redhat-cloud-services/frontend-components/EmptyTable';\n\nexport const NoResultsTable = ({ kind = 'results' }) => (\n  <EmptyTable>\n    <Bullseye>\n      <EmptyState variant={EmptyStateVariant.full}>\n        <Title headingLevel=\"h5\" size=\"lg\">\n          No matching {kind} found\n        </Title>\n        <EmptyStateBody>\n          This filter criteria matches no {kind}.<br />\n          Try changing your filter settings.\n        </EmptyStateBody>\n      </EmptyState>\n    </Bullseye>\n  </EmptyTable>\n);\n\nNoResultsTable.propTypes = {\n  kind: propTypes.string,\n};\n\nexport const emptyRows = [\n  {\n    cells: [\n      {\n        title: () => <NoResultsTable />, // eslint-disable-line react/display-name\n        props: {\n          colSpan: 6,\n        },\n      },\n    ],\n  },\n];\n\nexport default NoResultsTable;\n","import React from 'react';\nimport { NoResultsTable } from './Components/NoResultsTable';\n\nconst emptyRows = [\n  {\n    cells: [\n      {\n        title: () => <NoResultsTable kind=\"reports\" />, // eslint-disable-line react/display-name\n        props: {\n          colSpan: 6,\n        },\n      },\n    ],\n  },\n];\n\nconst columnProp = (column) =>\n  column.key || column.original?.toLowerCase() || column.title?.toLowerCase();\n\nconst itemRow = (item, columns) => ({\n  ...item.rowProps,\n  itemId: item.itemId,\n  cells: columns.map((column) => ({\n    title: column.renderFunc\n      ? column.renderFunc(undefined, undefined, item)\n      : item[columnProp(column)],\n  })),\n});\n\nconst primeItem = (item, transformers) => {\n  let newItem = item;\n\n  transformers.forEach((transformer) => {\n    if (transformer) {\n      newItem = transformer(newItem);\n    }\n  });\n\n  return newItem;\n};\n\nconst applyTransformers = (items, transformers = []) =>\n  items.map((item) => primeItem(item, transformers));\n\nconst buildRow = (item, columns, rowTransformer, idx) =>\n  rowTransformer.flatMap((transformer) => {\n    const row = itemRow(item, columns);\n    return transformer ? transformer(row, item, columns, idx) : row;\n  });\n\nconst useRowsBuilder = (items, columns, options = {}) => {\n  const { transformer = [], rowTransformer = [] } = options;\n  const EmptyRowsComponent = options.emptyRows || emptyRows;\n  const transformedItems = transformer\n    ? applyTransformers(items, transformer)\n    : items;\n\n  const filteredItems = options?.filter\n    ? options.filter(transformedItems)\n    : transformedItems;\n\n  const sortedItems = options?.sorter\n    ? options.sorter(filteredItems)\n    : filteredItems;\n\n  const paginatedItems = options?.paginator\n    ? options?.paginator(sortedItems)\n    : sortedItems;\n\n  const rows =\n    paginatedItems.length > 0\n      ? paginatedItems\n          .flatMap((item, idx) => buildRow(item, columns, rowTransformer, idx))\n          .filter((v) => !!v)\n      : EmptyRowsComponent;\n\n  const pagination = options?.pagination\n    ? {\n        ...options.pagination,\n        itemCount: filteredItems.length,\n      }\n    : undefined;\n\n  return {\n    tableProps: {\n      rows,\n    },\n    toolbarProps: {\n      pagination,\n    },\n  };\n};\n\nexport default useRowsBuilder;\n","const getIdProp = (item, idProp = 'id') => item[idProp];\n\nconst identify = (item, identifier) => {\n  if (typeof identifier === 'string') {\n    return {\n      ...item,\n      itemId: getIdProp(item, identifier),\n    };\n  } else {\n    return {\n      ...item,\n      itemId: identifier(item),\n    };\n  }\n};\n\nexport const useItemIdentify = (items, options = {}) => {\n  const identifier = options?.identifier || getIdProp;\n\n  return items.map((item) => identify(item, identifier));\n};\n\nexport default useItemIdentify;\n","import React, { useState } from 'react';\n\nconst calculateColSpan = (columns, options) => {\n  let colSpan = columns.length + 1;\n  if (options.selectable || options.hasRadioSelect) {\n    colSpan++;\n  }\n  return colSpan;\n};\n\nconst childRowForRule = (item, idx, DetailsComponent, colSpan) => ({\n  parent: idx * 2,\n  fullWidth: true,\n  cells: [\n    {\n      title: <DetailsComponent item={item} key={'item-' + item.rowId} />,\n      props: { colSpan },\n    },\n  ],\n});\n\nconst itemDetailsRow = (item, idx, options, columns) =>\n  typeof options?.detailsComponent !== 'undefined' &&\n  childRowForRule(\n    item,\n    idx,\n    options.detailsComponent,\n    calculateColSpan(columns, options)\n  );\n\nconst useExpandable = (options) => {\n  const enableExpanbale = !!options.detailsComponent;\n  const [openItems, setOpenItems] = useState([]);\n  const onCollapse = (_event, _index, _isOpen, row) => {\n    if (openItems.includes(row.itemId)) {\n      setOpenItems(openItems.filter((itemId) => itemId !== row.itemId));\n    } else {\n      setOpenItems([...openItems, row.itemId]);\n    }\n  };\n\n  const openItem = (row, item, columns, rowIndex) => {\n    const isOpen = openItems.includes(item.itemId);\n    const newRow = {\n      ...row,\n      isOpen,\n    };\n    const expandableRow = itemDetailsRow(item, rowIndex, options, columns);\n\n    return [newRow, expandableRow];\n  };\n\n  return enableExpanbale\n    ? {\n        transformer: openItem,\n        tableProps: {\n          onCollapse,\n        },\n      }\n    : {};\n};\n\nexport default useExpandable;\n","import React from 'react';\n\nconst useDedicatedAction = (options) => {\n  const enableDedicatedAction = !!options.dedicatedAction;\n  const {\n    dedicatedAction: DedicatedActionOption,\n    AdditionalDedicatedActions,\n    selected,\n  } = options;\n\n  return enableDedicatedAction\n    ? {\n        toolbarProps: {\n          dedicatedAction: (\n            <div>\n              {DedicatedActionOption && (\n                <DedicatedActionOption {...(selected && { selected })} />\n              )}\n              {AdditionalDedicatedActions && (\n                <AdditionalDedicatedActions {...(selected && { selected })} />\n              )}\n            </div>\n          ),\n        },\n      }\n    : {};\n};\n\nexport default useDedicatedAction;\n","const prependEmptyFirstAction = (actions) => [undefined, ...actions];\n\nconst useToolbarActions = ({ actions: actionsOption = [] }) => {\n  const actions = prependEmptyFirstAction(actionsOption);\n\n  return {\n    toolbarProps: {\n      actionsConfig: {\n        actions,\n      },\n    },\n  };\n};\n\nexport default useToolbarActions;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport {\n  DataListCheck,\n  DataListControl,\n  DataListItem,\n  DataListItemRow,\n  DataListCell,\n  DataListItemCells,\n} from '@patternfly/react-core';\n\nconst ColumnManagerListItem = ({\n  column,\n  onChange,\n  isSelected,\n  isDisabled,\n  id,\n}) => (\n  <DataListItem>\n    <DataListItemRow>\n      <DataListControl>\n        <DataListCheck\n          checked={isSelected}\n          onChange={onChange}\n          otherControls\n          isDisabled={isDisabled}\n          id={`${id}-id`}\n          name={`${id}-id`}\n        />\n      </DataListControl>\n      <DataListItemCells\n        dataListCells={[\n          <DataListCell key={`${id}-cell`}>\n            <label htmlFor={`${id}-id`}>{column.title}</label>\n          </DataListCell>,\n        ]}\n      />\n    </DataListItemRow>\n  </DataListItem>\n);\n\nColumnManagerListItem.propTypes = {\n  id: propTypes.string,\n  column: propTypes.object,\n  onChange: propTypes.func,\n  isSelected: propTypes.bool,\n  isDisabled: propTypes.bool,\n};\n\nexport default ColumnManagerListItem;\n","import React, { useState } from 'react';\nimport propTypes from 'prop-types';\nimport {\n  Button,\n  DataList,\n  Modal,\n  Text,\n  TextContent,\n  TextVariants,\n} from '@patternfly/react-core';\nimport ColumnManagerListItem from './ColumnManagerListItem';\n\nconst ColumnManager = ({\n  isOpen,\n  columns,\n  onSave: onSaveArgument,\n  onClose: onCloseProp,\n  selectedColumns: selectedColumnsProp = [],\n}) => {\n  const [selectedColumns, setSelectedColumns] = useState(selectedColumnsProp);\n  const isSelectedColumn = ({ title }) => selectedColumns.includes(title);\n  const selectAllColumns = () => {\n    setSelectedColumns(columns.map(({ title }) => title));\n  };\n  const toggleColumn = (column) => {\n    if (isSelectedColumn(column)) {\n      setSelectedColumns(\n        selectedColumns.filter((title) => title !== column.title)\n      );\n    } else {\n      setSelectedColumns([...selectedColumns, column.title]);\n    }\n  };\n  const onSave = () => {\n    onSaveArgument && onSaveArgument(selectedColumns);\n  };\n  const onClose = () => {\n    setSelectedColumns(selectedColumnsProp);\n    onCloseProp && onCloseProp();\n  };\n\n  const description = (\n    <TextContent>\n      <Text component={TextVariants.p}>\n        Selected categories will be displayed in the table.\n      </Text>\n      <Button isInline onClick={selectAllColumns} variant=\"link\">\n        Select all\n      </Button>\n    </TextContent>\n  );\n\n  return (\n    <Modal\n      title=\"Manage columns\"\n      isOpen={isOpen}\n      variant=\"small\"\n      onClose={onClose}\n      ouiaId=\"ManageColumns\"\n      description={description}\n      actions={[\n        <Button key=\"save\" variant=\"primary\" ouiaId=\"Save\" onClick={onSave}>\n          Save\n        </Button>,\n        <Button\n          key=\"cancel\"\n          variant=\"secondary\"\n          ouiaId=\"Cancel\"\n          onClick={onClose}\n        >\n          Cancel\n        </Button>,\n      ]}\n    >\n      <DataList\n        aria-label=\"Table column management\"\n        id=\"table-column-management\"\n        isCompact\n      >\n        {columns.map((column, idx) => (\n          <ColumnManagerListItem\n            key={`column-${idx}`}\n            id={`column-${idx}`}\n            column={column}\n            isSelected={isSelectedColumn(column)}\n            onChange={() => {\n              toggleColumn(column);\n            }}\n            isDisabled={idx === 0}\n          />\n        ))}\n      </DataList>\n    </Modal>\n  );\n};\n\nColumnManager.propTypes = {\n  columns: propTypes.array,\n  selectedColumns: propTypes.array,\n  isOpen: propTypes.bool,\n  onSave: propTypes.func,\n  onClose: propTypes.func,\n};\n\nexport default ColumnManager;\n","import React, { useState } from 'react';\nimport ColumnManager from './Components/ColumnManager';\n\nconst filterColumnsBySelected = (columns, selected) =>\n  columns.filter((column) => selected.includes(column.title));\n\nconst useColumnManager = (columns = [], options = {}) => {\n  const managableColumns = columns\n    .map((column) =>\n      column?.managable === undefined ? { ...column, managable: true } : column\n    )\n    .filter((column) => column.managable === true);\n  const [selectedColumns, setSelectedColumns] = useState(\n    columns.map(({ title }) => title)\n  );\n  const [isManagerOpen, setIsManagerOpen] = useState(false);\n  const { manageColumns: enableColumnManager } = options;\n  const onClick = () => {\n    setIsManagerOpen(true);\n  };\n\n  const onSave = (newSelectedColumns) => {\n    setSelectedColumns(newSelectedColumns);\n    setIsManagerOpen(false);\n  };\n\n  return enableColumnManager\n    ? {\n        columns: filterColumnsBySelected(columns, selectedColumns),\n        columnManagerAction: {\n          label: 'Manage columns',\n          onClick,\n        },\n        ColumnManager: () => (\n          <ColumnManager\n            columns={managableColumns}\n            isOpen={isManagerOpen}\n            onClose={() => setIsManagerOpen(false)}\n            selectedColumns={selectedColumns}\n            onSave={onSave}\n          />\n        ),\n      }\n    : { columns };\n};\n\nexport default useColumnManager;\n","const useRadioSelect = ({ onRadioSelect, total }) => {\n  const isRadioSelectEnabled = !!onRadioSelect;\n  return isRadioSelectEnabled && total > 0\n    ? {\n        tableProps: {\n          onSelect: onRadioSelect,\n          selectVariant: 'radio',\n        },\n      }\n    : {};\n};\n\nexport const useRadioSelectWithItems = ({ items, ...options }) => {\n  const radioSelect = useRadioSelect({\n    items,\n    total: items.length,\n    ...options,\n  });\n  return radioSelect;\n};\n","const useActionResolver = ({ actionResolver }) => {\n  const isActionResolverEnabled = !!actionResolver;\n  return isActionResolverEnabled\n    ? {\n        tableProps: {\n          actionResolver,\n        },\n      }\n    : {};\n};\n\nexport const useActionResolverWithItems = ({ items, ...optionsAndProps }) => {\n  const actionResolver =\n    items.length > 0\n      ? useActionResolver({\n          items,\n          ...optionsAndProps,\n        })\n      : {};\n  return actionResolver;\n};\n","import useFilterConfig from './useFilterConfig';\nimport { useTableSortWithItems } from './useTableSort';\nimport usePaginate from './usePaginate';\nimport useRowsBuilder from './useRowsBuilder';\nimport { useBulkSelectWithItems } from './useBulkSelect';\nimport useItemIdentify from './useItemIdentify';\nimport useExpandable from './useExpandable';\nimport useDedicatedAction from './useDedicatedAction';\nimport useToolbarActions from './useToolbarActions';\nimport useColumnManager from './useColumnManager';\nimport { useRadioSelectWithItems } from './useRadioSelect';\nimport { useActionResolverWithItems } from './useActionResolver';\nimport { useExportWithItems } from './useExport';\n\nconst filteredAndSortedItems = (items, filter, sorter) => {\n  const filtered = filter ? filter(items) : items;\n  return sorter ? sorter(filtered) : filtered;\n};\n\nconst useTableTools = (items = [], columns = [], options = {}) => {\n  const { toolbarProps: toolbarPropsOption, tableProps: tablePropsOption } =\n    options;\n\n  const identifiedItems = useItemIdentify(items, options);\n\n  const {\n    columnManagerAction,\n    ColumnManager,\n    columns: managedColumns,\n  } = useColumnManager(columns, options);\n\n  const { toolbarProps: toolbarActionsProps } = useToolbarActions({\n    ...options,\n    actions: [\n      ...(options?.actions || []),\n      ...((columnManagerAction && [columnManagerAction]) || []),\n    ],\n  });\n\n  const {\n    toolbarProps: pagintionToolbarProps,\n    setPage,\n    paginator,\n  } = usePaginate(options);\n\n  const {\n    toolbarProps: conditionalFilterProps,\n    filter,\n    selectedFilterToolbarProps,\n  } = useFilterConfig({\n    ...options,\n    setPage,\n  });\n\n  const { transformer: openItem, tableProps: expandableProps } =\n    useExpandable(options);\n\n  const { tableProps: sortableTableProps, sorter } = useTableSortWithItems(\n    items,\n    managedColumns,\n    options\n  );\n\n  const {\n    transformer: selectItem,\n    toolbarProps: bulkSelectToolbarProps,\n    tableProps: bulkSelectTableProps,\n    selectedItems,\n  } = useBulkSelectWithItems({\n    ...options,\n    items: sorter(identifiedItems),\n    filter,\n    paginator,\n    setPage,\n  });\n\n  const { tableProps: radioSelectTableProps } = useRadioSelectWithItems({\n    items: filteredAndSortedItems(identifiedItems, filter, sorter),\n    ...options,\n  });\n\n  const { tableProps: actionResolverTableProps } = useActionResolverWithItems({\n    items: filteredAndSortedItems(identifiedItems, filter, sorter),\n    ...options,\n    ...tablePropsOption,\n  });\n\n  const { toolbarProps: dedicatedActionToolbarProps } = useDedicatedAction({\n    ...options,\n    selected: selectedItems,\n    additionalDedicatedActions: selectedFilterToolbarProps?.dedicatedAction,\n  });\n\n  const { toolbarProps: exportToolbarProps } = useExportWithItems(\n    filteredAndSortedItems(\n      selectedItems?.length > 0 ? selectedItems : items,\n      filter,\n      sorter\n    ),\n    managedColumns,\n    options\n  );\n\n  const {\n    toolbarProps: rowBuilderToolbarProps,\n    tableProps: rowBuilderTableProps,\n  } = useRowsBuilder(identifiedItems, sortableTableProps.cells, {\n    emptyRows: options.emptyRows,\n    transformer: [selectItem],\n    rowTransformer: [openItem],\n    pagination: pagintionToolbarProps?.pagination,\n    paginator,\n    filter,\n    sorter,\n  });\n\n  const toolbarProps = {\n    ...pagintionToolbarProps,\n    ...bulkSelectToolbarProps,\n    ...conditionalFilterProps,\n    ...selectedFilterToolbarProps,\n    ...dedicatedActionToolbarProps,\n    ...rowBuilderToolbarProps,\n    ...toolbarPropsOption,\n    ...exportToolbarProps,\n    ...toolbarActionsProps,\n  };\n\n  const tableProps = {\n    cells: managedColumns,\n    ...rowBuilderTableProps,\n    ...sortableTableProps,\n    ...bulkSelectTableProps,\n    ...expandableProps,\n    ...radioSelectTableProps,\n    ...actionResolverTableProps,\n    ...tablePropsOption,\n  };\n\n  return {\n    toolbarProps,\n    tableProps,\n    ColumnManager,\n  };\n};\n\nexport default useTableTools;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Pagination, PaginationVariant } from '@patternfly/react-core';\nimport { Table, TableBody, TableHeader } from '@patternfly/react-table';\nimport PrimaryToolbar from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport TableToolbar from '@redhat-cloud-services/frontend-components/TableToolbar';\nimport useTableTools from '../useTableTools';\n\nconst TableToolsTable = ({\n  items = [],\n  columns = [],\n  filters = [],\n  options = {},\n  toolbarProps: toolbarPropsProp,\n  ...tablePropsRest\n}) => {\n  const { toolbarProps, tableProps, ColumnManager } = useTableTools(\n    items,\n    columns,\n    {\n      filters,\n      toolbarProps: toolbarPropsProp,\n      tableProps: tablePropsRest,\n      ...options,\n    }\n  );\n\n  return (\n    <React.Fragment>\n      <PrimaryToolbar {...toolbarProps} />\n\n      <Table {...tableProps}>\n        <TableHeader />\n        <TableBody />\n      </Table>\n\n      {/* The -1 are to combat a bug currently in the TableToolbar component */}\n      <TableToolbar isFooter results={-1} selected={-1}>\n        <Pagination\n          variant={PaginationVariant.bottom}\n          {...toolbarProps.pagination}\n        />\n      </TableToolbar>\n\n      {ColumnManager && <ColumnManager />}\n    </React.Fragment>\n  );\n};\n\nTableToolsTable.propTypes = {\n  items: propTypes.array.isRequired,\n  columns: propTypes.arrayOf(\n    propTypes.shape({\n      title: propTypes.node,\n      transforms: propTypes.array,\n      sortByProperty: propTypes.string,\n      sortByArray: propTypes.array,\n      sortByFunction: propTypes.func,\n      renderFunc: propTypes.func,\n    })\n  ).isRequired,\n  filters: propTypes.object,\n  options: propTypes.object,\n  toolbarProps: propTypes.object,\n};\n\nexport default TableToolsTable;\n","import { uniq } from '@/Utilities/helpers';\n\nexport const filterSelected = (items, selectedIds = []) =>\n  items.filter((item) => selectedIds.includes(item.itemId));\n\nexport const filteredAndSortedItems = (items, filter, sorter) => {\n  const filtered = filter ? filter(items) : items;\n  return sorter ? sorter(filtered) : filtered;\n};\n\nconst mergeIfArray = (firstValue, secondValue) => {\n  if (firstValue?.constructor.toString().indexOf('Array') > -1) {\n    return uniq([...firstValue, ...(secondValue || [])]);\n  } else {\n    return secondValue;\n  }\n};\n\nexport const mergeFilters = (currentFilters, additionalFilters) =>\n  Object.keys(currentFilters).reduce((acc, filter) => {\n    acc[filter] = mergeIfArray(\n      currentFilters[filter],\n      additionalFilters[filter]\n    );\n    return acc;\n  }, {});\n","import { useEffect, useMemo, useState } from 'react';\nimport { filterSelected } from './helper';\n\nconst compileTitle = (itemsTotal, titleOption) => {\n  if (typeof titleOption === 'string') {\n    return titleOption;\n  } else if (typeof titleOption === 'function') {\n    return titleOption(itemsTotal);\n  } else {\n    return `${itemsTotal} selected`;\n  }\n};\n\nconst checkboxState = (selectedItemsTotal, itemsTotal) => {\n  if (selectedItemsTotal === 0) {\n    return false;\n  } else if (selectedItemsTotal === itemsTotal) {\n    return true;\n  } else {\n    return null;\n  }\n};\n\nconst allItemsIncluded = (items, selection = []) =>\n  items.filter((item) => selection.includes(item)).length === items.length;\n\nconst selectOrUnselect = (selected) => (selected ? 'Unselect' : 'Select');\n\nconst checkCurrentPageSelected = (items, selectedItems) => {\n  if (selectedItems.length === 0) {\n    return false;\n  } else {\n    return allItemsIncluded(items, selectedItems);\n  }\n};\n\nconst itemIds = (items) => items.map((item) => item.itemId);\nconst mergeArraysUniqly = (arrayA, arrayB) =>\n  Array.from(new Set([...arrayA, ...arrayB]));\n\nexport const useBulkSelect = ({\n  total,\n  onSelect,\n  preselected,\n  itemIdsInTable,\n  itemIdsOnPage,\n  identifier = 'id',\n}) => {\n  const enableBulkSelect = !!onSelect;\n  const [selectedIds, setSelectedItemIds] = useState(preselected);\n  const selectedIdsTotal = (selectedIds || []).length;\n  const paginatedTotal = itemIdsOnPage().length;\n  const allSelected = selectedIdsTotal === total;\n  const noneSelected = selectedIdsTotal === 0;\n  const currentPageSelected = checkCurrentPageSelected(\n    itemIdsOnPage(),\n    selectedIds || []\n  );\n\n  const isDisabled = total === 0;\n  const checked = checkboxState(selectedIdsTotal, total);\n  const title = compileTitle(selectedIdsTotal);\n\n  const onSelectCallback = async (func) => {\n    const newSelectedItemsIds = await func();\n    setSelectedItemIds(newSelectedItemsIds);\n    onSelect && onSelect(newSelectedItemsIds);\n  };\n\n  const selectItems = (itemIds) => mergeArraysUniqly(selectedIds, itemIds);\n\n  const unselectItems = (itemIds) =>\n    selectedIds.filter((itemId) => !itemIds.includes(itemId));\n\n  const unselectAll = () => [];\n  const selectNone = () => onSelectCallback(unselectAll);\n  const selectOne = (_, selected, key, row) =>\n    onSelectCallback(() =>\n      selected\n        ? selectItems([row[identifier]])\n        : unselectItems([row[identifier]])\n    );\n\n  const selectPage = () =>\n    onSelectCallback(() => {\n      const currentPageIds = itemIdsOnPage();\n      const currentPageSelected =\n        mergeArraysUniqly(selectedIds, currentPageIds).length ===\n        selectedIds.length;\n\n      return currentPageSelected\n        ? unselectItems(currentPageIds)\n        : selectItems(currentPageIds);\n    });\n\n  const selectAll = () =>\n    onSelectCallback(async () =>\n      allSelected ? unselectAll() : selectItems(await itemIdsInTable())\n    );\n\n  useEffect(() => {\n    setSelectedItemIds(preselected);\n  }, [preselected]);\n\n  return enableBulkSelect\n    ? {\n        selectedIds,\n        selectNone,\n        tableProps: {\n          onSelect: total > 0 ? selectOne : undefined,\n          canSelectAll: false,\n        },\n        toolbarProps: {\n          bulkSelect: {\n            toggleProps: { children: [title] },\n            isDisabled,\n            items: [\n              {\n                title: 'Select none',\n                onClick: selectNone,\n                props: {\n                  isDisabled: noneSelected,\n                },\n              },\n              {\n                title: `${selectOrUnselect(\n                  currentPageSelected\n                )} page (${paginatedTotal} items)`,\n                onClick: selectPage,\n              },\n              {\n                title: `${selectOrUnselect(allSelected)} all (${total} items)`,\n                onClick: selectAll,\n              },\n            ],\n            checked,\n            onSelect: !isDisabled ? selectPage : undefined,\n          },\n        },\n      }\n    : {};\n};\n\nconst selectItemTransformer = (item, selectedIds) => ({\n  ...item,\n  rowProps: {\n    selected: (selectedIds || []).includes(item.itemId),\n  },\n});\n\nexport const useBulkSelectWithItems = ({\n  onSelect,\n  items: propItems,\n  filter,\n  paginator,\n  preselected,\n  setPage,\n}) => {\n  const enableBulkSelect = !!onSelect;\n  const items = propItems.map((item) =>\n    selectItemTransformer(item, preselected)\n  );\n  const total = items.length;\n\n  const filteredItems = filter ? filter(items) : items;\n  const filteredTotal = filteredItems.length;\n  const filtered = filteredTotal !== total;\n\n  const paginatedItems = paginator ? paginator(filteredItems) : filteredItems;\n  const paginatedTotal = paginatedItems.length;\n\n  const allCount = filtered ? filteredTotal : total;\n\n  const setPageMemo = useMemo(() => setPage, []);\n\n  useEffect(() => {\n    if (paginatedTotal === 0) {\n      setPageMemo(-1);\n    }\n  }, [paginatedTotal, setPageMemo]);\n\n  const { selectNone, selectedIds, ...bulkSelect } = useBulkSelect({\n    total: allCount,\n    onSelect,\n    preselected,\n    itemIdsInTable: () => (filtered ? itemIds(filteredItems) : itemIds(items)),\n    itemIdsOnPage: () => itemIds(paginatedItems),\n    identifier: 'itemId',\n  });\n\n  return enableBulkSelect\n    ? {\n        transformer: (item) => selectItemTransformer(item, selectedIds),\n        selectedItems: filterSelected(items, selectedIds),\n        selected: selectedIds,\n        clearSelection: selectNone,\n        ...bulkSelect,\n      }\n    : {};\n};\n","import { camelCase, getProperty } from 'Utilities/helpers';\n\nconst CSV_FILE_PREFIX = 'compliance-export';\nconst CSV_DELIMITER = ',';\nconst ENCODINGS = {\n  csv: 'text/csv',\n  json: 'application/json',\n};\n\nconst filename = (format) =>\n  CSV_FILE_PREFIX + '-' + new Date().toISOString() + '.' + format;\n\nconst encoding = (format) => `data:${ENCODINGS[format]};charset=utf-8`;\n\nexport const linkAndDownload = (data, filename) => {\n  const link = document.createElement('a');\n  link.href = data;\n  link.download = filename;\n  link.click();\n};\n\nconst textForCell = (row, column) => {\n  const { exportKey, renderExport } = column;\n  let cell = exportKey ? getProperty(row, exportKey) : row;\n  if (renderExport) {\n    return renderExport(cell);\n  } else {\n    return cell;\n  }\n};\n\nexport const csvForItems = ({ items, columns }) => {\n  const header = columns\n    .map((column) => column.original || column.title)\n    .join(CSV_DELIMITER);\n  const csvRows = [\n    header,\n    ...items.map((row) =>\n      columns\n        .map((column) => `\"${textForCell(row, column)}\"`)\n        .join(CSV_DELIMITER)\n    ),\n  ];\n\n  return encodeURI(`${encoding('csv')},${csvRows.join('\\n')}`);\n};\n\nexport const jsonForItems = ({ items, columns }) => {\n  const result = items.map((row) =>\n    columns.reduce((object, column) => {\n      const key = camelCase(column.original || column.title);\n      const value = textForCell(row, column);\n\n      object[key] = value;\n      return object;\n    }, {})\n  );\n\n  return encodeURI(`${encoding('json')},${JSON.stringify(result)}`);\n};\n\nconst callCallback = (callback, ...args) => callback && callback(...args);\n\nconst useExport = ({\n  exporter,\n  columns = [],\n  isDisabled = false,\n  onStart,\n  onComplete,\n  onError,\n}) => {\n  const exportableColumns = columns.filter(\n    (column) =>\n      column.export !== false && (column.exportKey || column.renderExport)\n  );\n  const exportWithFormat = async (format) => {\n    callCallback(onStart);\n    const items = await exporter()\n      .then((items) => {\n        callCallback(onComplete, items);\n        return items;\n      })\n      .catch((error) => callCallback(onError, error));\n\n    const formater = format === 'csv' ? csvForItems : jsonForItems;\n\n    if (items) {\n      return linkAndDownload(\n        formater({\n          items,\n          columns: exportableColumns,\n        }),\n        filename(format)\n      );\n    } else {\n      console.info('No items returned for export');\n      return;\n    }\n  };\n\n  return {\n    toolbarProps: {\n      exportConfig: {\n        isDisabled,\n        onSelect: (_, format) => exportWithFormat(format),\n      },\n    },\n  };\n};\n\nexport const useExportWithItems = (items, columns, options = {}) => {\n  const exportEnabled = options?.exportable;\n  const {\n    columns: exportableColumns,\n    onStart,\n    onComplete,\n  } = typeof options.exportable === 'object' ? options.exportable : {};\n  const exportableSelectedColumns = (exportableColumns || columns).filter(\n    (column) => columns.includes(column)\n  );\n\n  const exportProps = useExport({\n    exporter: () => Promise.resolve(items),\n    columns: exportableSelectedColumns,\n    isDisabled: items.length === 0,\n    onStart,\n    onComplete,\n  });\n\n  return exportEnabled ? exportProps : {};\n};\n\nexport default useExport;\n","export const stringToId = (string) => string.split(' ').join('').toLowerCase();\n","import { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\nimport { stringToId } from './Helpers';\n\nclass FilterBuilder {\n  constructor(filterConfig) {\n    this.filterConfig = filterConfig;\n    this.config = this.filterConfig.config;\n  }\n\n  buildFilterFilterString = (configItem, value) => {\n    const { type, filterString } = configItem;\n\n    if (type !== 'hidden' && !value) {\n      return [];\n    }\n\n    switch (type) {\n      case conditionalFilterType.text:\n        return [filterString(value)];\n      case conditionalFilterType.checkbox:\n        return value.map((filter) => filterString(filter));\n\n      case conditionalFilterType.group:\n        return filterString(value);\n\n      case 'hidden':\n        return filterString();\n\n      default:\n        return [];\n    }\n  };\n\n  combineFilterStrings = (filterStringArray) => {\n    const moreThanTwo =\n      filterStringArray.map((f) => f.length).filter((fl) => fl > 0).length >= 2;\n    return filterStringArray\n      .map((fs) => fs.join(' or '))\n      .join(moreThanTwo ? ' and ' : '');\n  };\n\n  buildFilterString = (filters) => {\n    const filterStringArray = this.config\n      .map((configItem) =>\n        this.buildFilterFilterString(\n          configItem,\n          filters[stringToId(configItem.label)]\n        )\n      )\n      .filter((f) => f.length > 0);\n    return this.combineFilterStrings(filterStringArray);\n  };\n}\n\nexport default FilterBuilder;\n","import { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\n\nconst findWithString = (value) => (item) =>\n  String(item.value) === String(value);\n\nclass ChipBuilder {\n  constructor(filterConfig) {\n    this.filterConfig = filterConfig;\n    this.config = this.filterConfig.config;\n  }\n\n  textFilterChip = (category, currentValue) =>\n    currentValue && currentValue !== ''\n      ? {\n          category,\n          chips: [{ name: currentValue }],\n        }\n      : null;\n\n  checkboxFilterChip = (category, currentValue) =>\n    currentValue && currentValue.length > 0\n      ? {\n          category,\n          chips: currentValue.map((value) => ({\n            name: this.filterConfig.labelForValue(value, category),\n          })),\n        }\n      : null;\n\n  radioFilterChip = (category, currentValue) =>\n    currentValue && currentValue !== ''\n      ? {\n          category,\n          chips: [\n            { name: this.filterConfig.labelForValue(currentValue, category) },\n          ],\n        }\n      : null;\n\n  groupFilterChip = (category, currentValue = {}, categoryConfig) => {\n    const items = Object.keys(currentValue)\n      .flatMap((groupValue) => {\n        const group = categoryConfig.items.find(findWithString(groupValue));\n\n        return Object.keys(currentValue[groupValue]).map((itemValue) =>\n          currentValue[groupValue][itemValue]\n            ? [\n                ...(group.groupSelectable\n                  ? [\n                      {\n                        label: group.label,\n                        value: group.value,\n                      },\n                    ]\n                  : []),\n                ...(group?.items || []),\n              ].find(findWithString(itemValue))\n            : null\n        );\n      })\n      .filter((v) => !!v);\n\n    return currentValue && items.length > 0\n      ? {\n          category,\n          chips: items.map((item) => ({ name: item.label })),\n        }\n      : null;\n  };\n\n  chipFor = (filter, currentValue) => {\n    const categoryConfig = this.filterConfig.getCategoryForLabel(filter);\n    const { label, type } = categoryConfig\n      ? categoryConfig\n      : { label: filter, type: null };\n\n    switch (type) {\n      case conditionalFilterType.text:\n        return this.textFilterChip(label, currentValue);\n\n      case conditionalFilterType.checkbox:\n        return this.checkboxFilterChip(label, currentValue);\n\n      case conditionalFilterType.radio:\n        return this.radioFilterChip(label, currentValue);\n\n      case conditionalFilterType.group:\n        return this.groupFilterChip(label, currentValue, categoryConfig);\n\n      default:\n        return null;\n    }\n  };\n\n  chipsFor = (filters) =>\n    Object.keys(filters)\n      .map((filter) => this.chipFor(filter, filters[filter]))\n      .filter((f) => !!f);\n}\n\nexport default ChipBuilder;\n","import { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\nimport FilterBuilder from './FilterBuilder';\nimport ChipBuilder from './ChipBuilder';\nimport { stringToId } from './Helpers';\n\nconst defaultPlaceholder = (label) => `Filter by ${label.toLowerCase()}`;\n\nclass FilterConfigBuilder {\n  chipBuilder = null;\n  filterBuilder = null;\n\n  constructor(config) {\n    this.config = config;\n  }\n\n  addConfigItem = (item) =>\n    (this.config = this.config\n      .filter((i) => i.label !== item.label)\n      .concat(item));\n\n  getChipBuilder = (config) => {\n    if (config) {\n      this.config = config;\n    }\n\n    return (this.chipBuilder = this.chipBuilder\n      ? this.chipBuilder\n      : new ChipBuilder(this));\n  };\n\n  getFilterBuilder = (config) => {\n    if (config) {\n      this.config = config;\n    }\n\n    return (this.filterBuilder = this.filterBuilder\n      ? this.filterBuilder\n      : new FilterBuilder(this));\n  };\n\n  toTextFilterConfig = (item, handler, value) => ({\n    type: conditionalFilterType.text,\n    label: item.label,\n    placeholder: defaultPlaceholder(item.label),\n    id: stringToId(item.label),\n    filterValues: {\n      value,\n      [item.event || 'onChange']: (_event, selectedValues) => {\n        handler(stringToId(item.label), selectedValues);\n      },\n    },\n  });\n\n  toCheckboxFilterConfig = (item, handler, value) => ({\n    type: conditionalFilterType.checkbox,\n    label: item.label,\n    placeholder: defaultPlaceholder(item.label),\n    id: stringToId(item.label),\n    filterValues: {\n      value,\n      items: item.items,\n      onChange: (_event, selectedValues) => {\n        handler(stringToId(item.label), selectedValues);\n      },\n    },\n  });\n\n  toRadioFilterConfig = (item, handler, value) => ({\n    type: conditionalFilterType.radio,\n    label: item.label,\n    placeholder: defaultPlaceholder(item.label),\n    id: stringToId(item.label),\n    filterValues: {\n      value,\n      items: item.items,\n      onChange: (_event, selectedValues) => {\n        handler(stringToId(item.label), selectedValues);\n      },\n    },\n  });\n\n  toGroupedFilterConfig = (item, handler, value) => ({\n    type: conditionalFilterType.group,\n    label: item.label,\n    id: stringToId(item.label),\n    className: item.className,\n    filterValues: {\n      selected: value,\n      onChange: (_event, selectedValues) => {\n        handler(stringToId(item.label), selectedValues);\n      },\n      groups: item.items.map((item) => ({\n        ...item,\n        type: 'checkbox',\n        items: item.items.map((subItem) => ({\n          ...subItem,\n          type: 'checkbox',\n        })),\n      })),\n    },\n  });\n\n  toFilterConfigItem = (item, handler, value) => {\n    switch (item.type) {\n      case conditionalFilterType.text:\n        return this.toTextFilterConfig(item, handler, value);\n\n      case conditionalFilterType.checkbox:\n        return this.toCheckboxFilterConfig(item, handler, value);\n\n      case conditionalFilterType.radio:\n        return this.toRadioFilterConfig(item, handler, value);\n\n      case conditionalFilterType.group:\n        return this.toGroupedFilterConfig(item, handler, value);\n\n      default:\n        return null;\n    }\n  };\n\n  buildConfiguration = (handler, states, props = {}, initConfig) => ({\n    ...props,\n    items: (initConfig || this.config)\n      .map((item) =>\n        this.toFilterConfigItem(item, handler, states[stringToId(item.label)])\n      )\n      .filter((v) => !!v),\n  });\n\n  defaultValueForFilter = (filter) => {\n    switch (filter.type) {\n      case conditionalFilterType.text:\n        return '';\n      case conditionalFilterType.checkbox:\n        return [];\n      case 'hidden':\n        return filter.default || false;\n      default:\n        return;\n    }\n  };\n\n  initialDefaultState = (defaultStates = {}, initConfig) =>\n    (initConfig || this.config).reduce((acc, filter) => {\n      const filterStateName = stringToId(filter.key || filter.label);\n      const state =\n        defaultStates[filterStateName] || this.defaultValueForFilter(filter);\n      acc[filterStateName] = state ? state : undefined;\n\n      return acc;\n    }, {});\n\n  categoryLabelForValue = (value) => {\n    const category = this.config.filter((category) =>\n      category.items\n        ? category.items.map((item) => item.value).includes(value)\n        : false\n    )[0];\n\n    return category ? category.label : value;\n  };\n\n  getCategoryForLabel = (query) =>\n    this.config.filter(\n      (item) => stringToId(item.key || item.label) === stringToId(query)\n    )[0] || {};\n\n  getItemByLabelOrValue = (query, category) => {\n    const categoryConfig = this.getCategoryForLabel(category);\n    const items =\n      categoryConfig.type !== conditionalFilterType.group\n        ? categoryConfig.items\n        : categoryConfig.items.flatMap((item) =>\n            item.items.map((subItem) => ({\n              ...subItem,\n              parentValue: item.value,\n            }))\n          );\n    const results = (items || []).filter(\n      (item) => item.value === query || item.label === query\n    );\n\n    if (results.length === 1) {\n      return results[0];\n    } else if (results.length > 1) {\n      // eslint-disable-next-line no-console\n      console.info(\n        `Multiple items found for ${query} in ${category}! Returning first one.`\n      );\n      return results[0];\n    } else {\n      // eslint-disable-next-line no-console\n      console.info('No item found for ' + query + ' in ', category);\n    }\n  };\n\n  labelForValue = (value, category) => {\n    const item = this.getItemByLabelOrValue(value, category);\n    return item ? item.label : value;\n  };\n\n  valueForLabel = (label, category) => {\n    const item = this.getItemByLabelOrValue(label, category);\n    return item ? item.value : label;\n  };\n\n  applyFilterToObjectArray = (objects, activeFilters) => {\n    let filteredObjects = [...objects];\n\n    Object.keys(activeFilters).forEach((filter) => {\n      const category = this.getCategoryForLabel(filter);\n      const value = activeFilters[filter];\n      if (!category || !value) {\n        return;\n      }\n\n      if (\n        value.length > 0 ||\n        (category.type === 'hidden' && typeof value === 'boolean')\n      ) {\n        filteredObjects = category.filter(filteredObjects, value);\n      }\n    });\n\n    return filteredObjects;\n  };\n\n  removeFilterFromFilterState = (currentState, filter) =>\n    typeof currentState === 'string'\n      ? ''\n      : currentState.filter((value) => value !== filter);\n\n  removeFilterFromGroupFilterState = (currentState, filter, chipItem) => {\n    // eslint-disable-next-line\n        const { [chipItem.value]: _remove, ...newGroupState } = currentState[chipItem.parentValue];\n    return {\n      ...currentState,\n      [chipItem.parentValue]: newGroupState,\n    };\n  };\n\n  removeFilterWithChip = (chips, activeFilters) => {\n    const chipCategory = chips.category;\n    const chipLabel = chips.chips[0].name;\n    const chipItem = this.getItemByLabelOrValue(chipLabel, chipCategory);\n    const chipValue = chipItem ? chipItem.value : chipLabel;\n    const stateProp = stringToId(chipCategory);\n    const currentState = activeFilters[stateProp];\n    const categoryConfig = this.getCategoryForLabel(chipCategory);\n    const isGroup = categoryConfig.type === conditionalFilterType.group;\n    const newFilterState = (\n      isGroup\n        ? this.removeFilterFromGroupFilterState\n        : this.removeFilterFromFilterState\n    )(currentState, chipValue, chipItem);\n\n    return {\n      ...activeFilters,\n      [stateProp]: newFilterState,\n    };\n  };\n}\n\nexport default FilterConfigBuilder;\n","import React from 'react';\nimport { Switch } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\n\nconst SelectedFilterSwitch = ({ isChecked, setActiveFilter }) => (\n  <Switch\n    label=\"Selected only\"\n    isChecked={isChecked}\n    onChange={() => setActiveFilter('selected', !isChecked)}\n  />\n);\n\nSelectedFilterSwitch.propTypes = {\n  isChecked: propTypes.bool,\n  setActiveFilter: propTypes.func,\n};\n\nexport default SelectedFilterSwitch;\n","import React from 'react';\nimport SelectedFilterSwitch from './Components/SelectedFilterSwitch';\n\nconst useSelectedFilter = ({\n  setActiveFilter,\n  activeFilters,\n  selectedFilter,\n}) => {\n  const enableSelectedFilter = !!selectedFilter;\n  const filterKey = 'selected';\n  const filterItem = {\n    type: 'hidden',\n    label: 'selectFilter',\n    key: filterKey,\n    default: true,\n    filter: (items, value) => {\n      return items.filter((item) => item?.rowProps?.selected === value);\n    },\n  };\n  const isChecked = activeFilters[filterKey] === true;\n  const selectedToggle = (\n    <SelectedFilterSwitch\n      {...{\n        setActiveFilter,\n        isChecked,\n      }}\n    />\n  );\n\n  return enableSelectedFilter\n    ? {\n        filterItem,\n        toolbarProps: {\n          dedicatedAction: selectedToggle,\n        },\n      }\n    : {};\n};\n\nexport default useSelectedFilter;\n","import { useState, useEffect, useMemo } from 'react';\nimport FilterConfigBuilder from './FilterConfigBuilder/FilterConfigBuilder';\nimport useSelectedFilter from './useSelectedFilter';\n\nconst filterValues = (activeFilters) =>\n  Object.values(activeFilters).filter((value) => {\n    if (typeof value === Object) {\n      return Object.values(value).length > 0;\n    }\n\n    if (typeof value === Array) {\n      return value.length > 0;\n    }\n\n    return !!value;\n  });\n\nconst filterConfigBuilder = new FilterConfigBuilder([]);\n\nconst perpareInitialActiveFilters = (\n  initialActiveFiltersRaw,\n  activeFilters\n) => {\n  if (typeof initialActiveFiltersRaw === 'function') {\n    return initialActiveFiltersRaw(activeFilters);\n  } else {\n    return initialActiveFiltersRaw;\n  }\n};\n\nconst useFilterConfig = (options = {}) => {\n  const { filters, setPage, selectedFilter, onDeleteFilter } = options;\n  const enableFilters = !!filters;\n  const { filterConfig = [], activeFilters: initialActiveFiltersRaw } =\n    filters || {};\n\n  const [activeFilters, setActiveFilters] = useState({});\n  const initialActiveFilters = perpareInitialActiveFilters(\n    initialActiveFiltersRaw,\n    activeFilters\n  );\n  const onFilterUpdate = (filter, value) => {\n    setActiveFilters((prevFilters) => ({\n      ...prevFilters,\n      [filter]: value,\n    }));\n\n    setPage && setPage(1);\n  };\n\n  const addConfigItem = (item) => {\n    filterConfigBuilder.addConfigItem(item);\n    setActiveFilters(filterConfigBuilder.initialDefaultState(activeFilters));\n  };\n\n  const clearAllFilter = () =>\n    setActiveFilters(filterConfigBuilder.initialDefaultState());\n\n  const deleteFilter = (chips) =>\n    setActiveFilters(\n      filterConfigBuilder.removeFilterWithChip(chips, activeFilters)\n    );\n  const onFilterDelete = async (_event, chips, clearAll = false) => {\n    (await clearAll) ? clearAllFilter() : deleteFilter(chips[0]);\n    onDeleteFilter && onDeleteFilter(chips, clearAll);\n  };\n\n  const filter = (items) =>\n    filterConfigBuilder.applyFilterToObjectArray(items, activeFilters);\n\n  const {\n    toolbarProps: selectedFilterToolbarProps,\n    filterItem: selectFilterItem,\n  } = useSelectedFilter({\n    activeFilters,\n    setActiveFilter: onFilterUpdate,\n    selectedFilter,\n  });\n\n  const activeFilterValues = useMemo(\n    () => filterValues(activeFilters),\n    [activeFilters]\n  );\n\n  const filterConfigWithSelected = [\n    ...filterConfig,\n    ...(selectFilterItem ? [selectFilterItem] : []),\n  ];\n\n  useEffect(() => {\n    filterConfigBuilder.config = [];\n    filterConfigWithSelected.filter((v) => !!v).forEach(addConfigItem);\n    setActiveFilters(\n      filterConfigBuilder.initialDefaultState(initialActiveFilters || []),\n      filterConfig\n    );\n\n    return () => {\n      filterConfigBuilder.config = [];\n    };\n  }, [JSON.stringify(initialActiveFilters)]);\n\n  return enableFilters\n    ? {\n        filter,\n        selectedFilterToolbarProps,\n        toolbarProps: {\n          filterConfig: filterConfigBuilder.buildConfiguration(\n            onFilterUpdate,\n            activeFilters,\n            {},\n            filterConfigWithSelected\n          ),\n          activeFiltersConfig: {\n            filters: filterConfigBuilder\n              .getChipBuilder(filterConfigWithSelected)\n              .chipsFor(activeFilters),\n            onDelete: onFilterDelete,\n          },\n        },\n        setActiveFilter: onFilterUpdate,\n        activeFilters,\n        activeFilterValues,\n        addConfigItem,\n        filterConfigBuilder,\n        filterString: () =>\n          filterConfigBuilder\n            .getFilterBuilder(filterConfigWithSelected)\n            .buildFilterString(activeFilters),\n      }\n    : {};\n};\n\nexport default useFilterConfig;\n","export const NEVER = 'Never';\n\nexport const profilesRulesFailed = (profiles) =>\n  profiles.flatMap(\n    (profile) =>\n      profile.rules && profile.rules.filter((rule) => !rule.compliant)\n  );\n\nexport const profilesRulesPassed = (profiles) =>\n  profiles.flatMap(\n    (profile) => profile.rules && profile.rules.filter((rule) => rule.compliant)\n  );\n\nexport const systemRulesPassed = (system) =>\n  system.testResultProfiles\n    ? profilesRulesPassed(system.testResultProfiles)\n    : [];\n\nexport const systemRulesFailed = (system) =>\n  system.testResultProfiles\n    ? profilesRulesFailed(system.testResultProfiles)\n    : [];\n\nexport const systemSupportedByProfiles = (profiles = []) =>\n  profiles.reduce((acc, profile) => acc && !!profile.supported, true);\n\nexport const systemsWithRuleObjectsFailed = (systems) =>\n  systems.map((system) => ({\n    ...system,\n    ruleObjectsFailed: systemRulesFailed(system),\n    supported: systemSupportedByProfiles(system.testResultProfiles),\n    profiles: system.testResultProfiles,\n  }));\n\nexport const toRulesArrayWithProfile = (profilesWithRules) =>\n  profilesWithRules.flatMap((profileWithRules) =>\n    profileWithRules.rules.map((rule) => {\n      const identifier = rule.identifier && JSON.parse(rule.identifier);\n      return {\n        ...rule,\n        references: rule.references ? JSON.parse(rule.references) : [],\n        identifier: identifier && identifier.label ? identifier : null,\n        profile: profileWithRules.profile,\n      };\n    })\n  );\n\nexport const complianceScoreData = (profiles) => {\n  const scoreTotal = profiles.reduce((acc, profile) => acc + profile.score, 0);\n  const rulesPassed = profilesRulesPassed(profiles).length;\n  const rulesFailed = profilesRulesFailed(profiles).length;\n  const numScored = profiles.reduce((acc, profile) => {\n    if (\n      profilesRulesPassed([profile]).length +\n        profilesRulesFailed([profile]).length >\n      0\n    ) {\n      return acc + 1;\n    }\n\n    return acc;\n  }, 0);\n  const score = numScored ? scoreTotal / numScored : 0;\n  const compliant = profiles.every(\n    (profile) => profile.lastScanned === NEVER || profile.compliant === true\n  );\n\n  return {\n    score,\n    rulesPassed,\n    rulesFailed,\n    compliant,\n    supported: systemSupportedByProfiles(profiles),\n  };\n};\n"],"names":["QUERY","gql","ComplianceEmptyState","title","mainButton","client","useQuery","fetchPolicy","data","error","loading","Spinner","errorMsg","message","policiesCount","profiles","totalCount","policyWord","haveWord","Bullseye","EmptyState","EmptyStateIcon","style","fontWeight","color","size","icon","CloudSecurityIcon","Title","headingLevel","EmptyStateBody","TextContent","href","EmptyStatePrimary","EmptyStateSecondaryActions","Button","variant","component","target","rel","propTypes","defaultProps","ApolloClient","link","HttpLink","uri","COMPLIANCE_API_ROOT","credentials","cache","InMemoryCache","FallbackButton","isDisabled","ComplianceRemediationButton","profile","system","osMajorVersion","refId","id","split","description","systems","issues","issueIds","map","issue","filter","index","originalIssueIndex","indexOf","Array","from","Set","concat","rule","find","rules","profileRule","console","log","remediationAvailable","ruleProfile","supported","compliant","formatRule","sortBy","props","allSystems","selectedRules","result","forEach","push","length","rulesWithRemediations","ruleObjectsFailed","Promise","all","then","sortByPrecedence","uniqIssuesBySystem","flatten","dataProvider","flatMap","some","addNotification","this","RemediationButton","notEmptyData","onRemediationCreated","getNotification","buttonProps","ouiaId","fallback","React","name","severity","rationale","identifier","references","connect","dispatch","notification","ReduxFormTextInput","field","TextInput","value","input","defaultValue","onChange","ReduxFormTextArea","TextArea","RemediationCell","hasPlaybook","ruleProps","Rule","Text","TextVariants","label","Policy","HighSeverity","className","MediumSeverity","LowSeverityIcon","width","height","viewBox","role","verticalAlign","xmlns","d","fill","fillRule","LowSeverity","UnknownSeverity","Severity","high","medium","low","toLowerCase","Passed","RemediationColumnCell","Name","sortByProp","renderExport","renderFunc","renderComponent","sortByFunction","PolicyCell","exportKey","sortByArray","SeverityCell","PassedCell","Remediation","transforms","nowrap","RuleDetailsRow","item","key","marginTop","Stack","StackItem","marginBottom","isFilled","Grid","GridItem","span","ident","idx","reduce","prev","next","ref","columns","cells","EmptyTable","EmptyStateVariant","colSpan","HIGH_SEVERITY","MEDIUM_SEVERITY","LOW_SEVERITY","UNKNOWN_SEVERITY","filterRulesWithAllValues","values","valueCheck","v","anyFilterApply","filteredRules","BASE_FILTER_CONFIGURATION","type","conditionalFilterType","includes","reference","items","PASS_FILTER_CONFIG","ANSIBLE_SUPPORT_FILTER_CONFIG","showPassFailFilter","policies","ansibleSupportFilter","config","policy","policiesFilterConfig","RulesTable","profileRules","defaultColumns","remediationsEnabled","selectedFilter","handleSelect","selectedRulesProp","hidePassed","options","activeFilters","rulesTableProps","manageColumnsEnabled","useFeature","useState","setSelectedRules","toRulesArrayWithProfile","selectedRulesWithRemediations","c","isStickyHeader","filters","filterConfig","buildFilterConfig","currentActiveFilters","passed","COMPLIANCE_TABLE_DEFAULTS","onSelect","preselected","detailsComponent","emptyRows","dedicatedAction","selected","testResultProfiles","manageColumns","newOsMinorVersion","osMinorVersion","ProfileSystemCount","count","Badge","isRead","pluralize","SSGVersionText","ssgVersion","Popover","position","bodyContent","SSGPopoverBody","footerContent","cursor","fontSize","BENCHMARK_QUERY","ProfileTabContent","systemCount","selectedRuleRefIds","variables","benchmark","skip","stateValues","stateKey","profileRuleRefId","matchesSelectionItem","selectionItem","selectedRuleRefIdsForTab","tabSelection","ruleRefIds","profilesWithRulesToSelection","prevSelection","only","additionalSelection","foundSelection","tabsDataToOsMinorMap","tabsData","osMinorMap","extendProfilesByOsMinor","undefined","eventKey","getDefaultTab","defaultTab","firstTab","TabbedRules","setSelectedRuleRefIds","level","profileSelectedRuleRefIds","filteredSelection","newItem","Tab","isRequired","PolicyNameCell","policyType","Link","to","osString","OperatingSystem","fitContent","_data","_id","Systems","totalHostCount","businessObjectiveString","businessObjective","BusinessObjective","complianceThresholdString","complianceThreshold","ComplianceThreshold","exportableColumns","Table","rows","RowLoader","TableHeader","TableBody","ErrorPage","networkError","statusCode","window","insights","chrome","auth","logout","NotAuthorized","serviceName","InvalidObject","onClick","history","goBack","ErrorCard","Card","CardHeader","CardBody","GreySmallText","children","CheckboxFieldArray","inputValue","defaultChecked","Checkbox","isChecked","checked","arr","splice","handleChange","ProfileTypeSelect","selectedProfile","hasGutter","disabled","rowSpan","Radio","Truncate","inline","text","JSON","stringify","_","event","currentTarget","CompliantIcon","rulesPassed","rulesFailed","complianceScoreString","fixedPercentage","score","Tooltip","content","speed","backgroundcolor","foregroundcolor","x","y","rx","ry","primaryColor","secondaryColor","cx","cy","r","PolicyDetailsDescription","linkifyHtml","PropTypes","Dt","TextListItem","TextListItemVariants","Dd","PolicyDescription","TextList","TextListVariants","version","ReportDetailsDescription","ProgressBar","percent","failed","ProgressVariant","Progress","ContentTab","findTab","tabs","tab","useAnchorLevels","defaultAnchor","levels","useAnchor","currentAnchor","TabSwitcher","activeKey","currentTab","activeTab","RoutedTabSwitcher","RoutedTabs","useHistory","useLocation","pathname","state","tabAvailable","tabAnchor","Tabs","e","preventDefault","tabToActivate","replace","hash","slice","join","StateViewPart","StateView","child","StateViewWithError","WARNING_TEXT","WithOptionalToolTip","showTooltip","TooltipPosition","SystemsCountWarning","WarningText","BackgroundLink","desiredState","backgroundLocation","background","RouterLink","BreadcrumbLinkItem","BreadcrumbItem","marginRight","unsupportedHostCount","CompliantSystems","testResultHostCount","compliantHostCount","measureLocation","tooltipText","marginLeft","NameCell","OperatingSystemCell","CompliantSystemsCell","PDFExportDownload","managable","policyNameFilter","lowerCaseValue","policyTypeFilter","policyTypes","operatingSystemFilter","operatingSystems","operatingSystem","policyComplianceFilter","compliantHostsPercent","Math","round","min","max","i","ReportsTable","pdfReportEnabled","uniq","exportable","PolicyPopover","headerContent","isInline","Fragment","NoResultsTable","nameFilter","DedicatedAction","PoliciesTable","location","Object","Filters","actionResolver","_event","_index","policyId","itemId","withRouter","ProfileThresholdField","validThreshold","thresholdValid","previousThreshold","threshold","setState","FormGroup","fieldId","validated","helperTextInvalid","helperText","labelIcon","Field","handleThresholdChange","display","reduxForm","form","destroyOnUnmount","forceUnregisterOnUnmount","ComplianceThresholdHelperText","parsedThreshold","parseFloat","HelperText","isNaN","HelperTextItem","hasMaxDecimals","supportedConfigsLink","UNSUPPORTED_PLURAL_MESSAGE","WarningWithPopover","maxWidth","WarningWithTooltip","TooltipOrPopover","tooltipProps","tooltip","Component","componentProps","popover","showHeader","showPopupHeader","messageVariant","UnsupportedSSGVersion","showWarningIcon","showHelpIcon","iconProps","defaultStyle","SubPageTitle","lineHeight","ConditionalLink","additionalProps","ComplianceModal","Modal","InUseProfileLabel","compact","Label","validateBenchmarkPage","num","dec","RegExp","test","toString","validateDetailsPage","validateRulesPage","validateSystemsPage","systemIds","fixed","withPercent","fixedValue","toFixed","singular","plural","collection","sortingByProp","propName","order","objA","objB","descending","propA","propB","natsort","desc","sorter","entity","getSortable","property","orderArrayByProp","objects","direction","sort","a","b","String","localeCompare","orderByArray","objectArray","orderProp","orderArray","sortedObjectArray","orderKey","reverse","getProperty","obj","path","parts","shift","camelCase","string","trim","toUpperCase","substring","addSortableTransform","column","isSortable","sortable","columnOffset","hasRadioSelect","useTableSortWithItems","setSortBy","onSort","currentSortableColumn","tableProps","useTableSort","perPage","enablePagination","pagination","page","paginationState","setPaginationState","setPagination","newState","onSetPage","onPerPageSelect","paginator","start","end","setPage","nextPage","toolbarProps","kind","columnProp","original","primeItem","transformers","transformer","applyTransformers","buildRow","rowTransformer","row","rowProps","itemRow","EmptyRowsComponent","transformedItems","filteredItems","sortedItems","paginatedItems","itemCount","getIdProp","idProp","identify","itemDetailsRow","DetailsComponent","parent","fullWidth","rowId","childRowForRule","selectable","calculateColSpan","enableExpanbale","openItems","setOpenItems","rowIndex","isOpen","onCollapse","_isOpen","enableDedicatedAction","DedicatedActionOption","AdditionalDedicatedActions","actions","actionsConfig","ColumnManagerListItem","isSelected","DataListItem","DataListItemRow","DataListControl","DataListCheck","otherControls","DataListItemCells","dataListCells","DataListCell","htmlFor","ColumnManager","onSaveArgument","onSave","onCloseProp","onClose","selectedColumns","selectedColumnsProp","setSelectedColumns","isSelectedColumn","DataList","isCompact","toggleColumn","filterColumnsBySelected","managableColumns","isManagerOpen","setIsManagerOpen","enableColumnManager","newSelectedColumns","columnManagerAction","useRadioSelectWithItems","onRadioSelect","total","radioSelect","selectVariant","useActionResolverWithItems","optionsAndProps","useActionResolver","filteredAndSortedItems","filtered","TableToolsTable","toolbarPropsOption","tablePropsOption","identifiedItems","useItemIdentify","useColumnManager","managedColumns","toolbarActionsProps","useToolbarActions","usePaginate","pagintionToolbarProps","useFilterConfig","conditionalFilterProps","selectedFilterToolbarProps","useExpandable","openItem","expandableProps","sortableTableProps","useBulkSelectWithItems","selectItem","bulkSelectToolbarProps","bulkSelectTableProps","selectedItems","radioSelectTableProps","actionResolverTableProps","dedicatedActionToolbarProps","useDedicatedAction","additionalDedicatedActions","exportToolbarProps","useExportWithItems","useRowsBuilder","rowBuilderToolbarProps","rowBuilderTableProps","useTableTools","PrimaryToolbar","TableToolbar","isFooter","results","Pagination","PaginationVariant","sortByProperty","filterSelected","selectedIds","selectOrUnselect","itemIds","mergeArraysUniqly","arrayA","arrayB","useBulkSelect","selectedItemsTotal","itemIdsInTable","itemIdsOnPage","enableBulkSelect","setSelectedItemIds","selectedIdsTotal","paginatedTotal","allSelected","noneSelected","currentPageSelected","selection","allItemsIncluded","itemsTotal","titleOption","compileTitle","onSelectCallback","func","newSelectedItemsIds","selectItems","unselectItems","unselectAll","selectNone","selectPage","currentPageIds","useEffect","canSelectAll","bulkSelect","toggleProps","selectItemTransformer","propItems","filteredTotal","allCount","setPageMemo","useMemo","clearSelection","ENCODINGS","csv","json","filename","format","CSV_FILE_PREFIX","Date","toISOString","encoding","linkAndDownload","document","createElement","download","click","textForCell","cell","csvForItems","csvRows","encodeURI","jsonForItems","object","callCallback","callback","args","useExport","exporter","onStart","onComplete","onError","export","exportWithFormat","catch","formater","info","exportConfig","exportEnabled","exportableSelectedColumns","exportProps","resolve","stringToId","configItem","filterString","filterStringArray","moreThanTwo","f","fl","fs","buildFilterFilterString","combineFilterStrings","findWithString","category","currentValue","chips","labelForValue","categoryConfig","keys","groupValue","group","itemValue","groupSelectable","getCategoryForLabel","textFilterChip","checkboxFilterChip","radioFilterChip","groupFilterChip","chipFor","defaultPlaceholder","SelectedFilterSwitch","setActiveFilter","Switch","enableSelectedFilter","filterItem","default","filterValues","filterConfigBuilder","chipBuilder","ChipBuilder","filterBuilder","FilterBuilder","handler","placeholder","selectedValues","groups","subItem","toTextFilterConfig","toCheckboxFilterConfig","toRadioFilterConfig","toGroupedFilterConfig","states","initConfig","toFilterConfigItem","defaultStates","acc","filterStateName","defaultValueForFilter","query","parentValue","getItemByLabelOrValue","filteredObjects","currentState","chipItem","newGroupState","chipCategory","chipLabel","chipValue","stateProp","newFilterState","removeFilterFromGroupFilterState","removeFilterFromFilterState","perpareInitialActiveFilters","initialActiveFiltersRaw","onDeleteFilter","enableFilters","setActiveFilters","initialActiveFilters","onFilterUpdate","prevFilters","addConfigItem","initialDefaultState","clearAllFilter","deleteFilter","removeFilterWithChip","onFilterDelete","clearAll","applyFilterToObjectArray","useSelectedFilter","selectFilterItem","activeFilterValues","filterConfigWithSelected","buildConfiguration","activeFiltersConfig","getChipBuilder","chipsFor","onDelete","getFilterBuilder","buildFilterString","NEVER","profilesRulesFailed","profilesRulesPassed","systemRulesFailed","systemSupportedByProfiles","systemsWithRuleObjectsFailed","profilesWithRules","profileWithRules","parse","complianceScoreData","scoreTotal","numScored","every","lastScanned"],"sourceRoot":""}