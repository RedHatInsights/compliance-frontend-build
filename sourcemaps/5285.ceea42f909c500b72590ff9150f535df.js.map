{"version":3,"file":"js/5285.1651066850016.d1967521b426c106503a.js","mappings":"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","sources":["webpack:///./src/Routes.js","webpack:///./src/App.js","webpack:///./src/AppEntry.js","webpack:///./src/bootstrap.js"],"sourcesContent":["import React, { lazy } from 'react';\nimport Router from './Utilities/Router';\n\nconst defaultReportTitle = 'Reports';\nconst reportsRoutes = [\n  {\n    path: '/reports',\n    title: defaultReportTitle,\n    component: lazy(() =>\n      import(\n        /* webpackChunkName: \"Reports\" */ './SmartComponents/Reports/Reports'\n      )\n    ),\n  },\n  {\n    path: '/reports/:report_id',\n    title: `Report: $entityTitle - ${defaultReportTitle}`,\n    defaultTitle: defaultReportTitle,\n    component: lazy(() =>\n      import(\n        /* webpackChunkName: \"ReportDetails\" */ 'SmartComponents/ReportDetails/ReportDetails'\n      )\n    ),\n  },\n  {\n    path: '/reports/:report_id/delete',\n    title: `Delete report - ${defaultReportTitle}`,\n    component: lazy(() =>\n      import(\n        /* webpackChunkName: \"DeleteReport\" */ 'SmartComponents/DeleteReport/DeleteReport'\n      )\n    ),\n    modal: true,\n  },\n\n  {\n    path: '/reports/:report_id/pdf',\n    title: `Export report - ${defaultReportTitle}`,\n    defaultTitle: defaultReportTitle,\n    modal: true,\n    component: lazy(() =>\n      import(\n        /* webpackChunkName: \"ReportDetails\" */ 'SmartComponents/ReportDownload/ReportDownload'\n      )\n    ),\n  },\n];\n\nconst defaultPoliciesTitle = 'SCAP policies';\nconst policiesRoutes = [\n  {\n    path: '/scappolicies',\n    title: defaultPoliciesTitle,\n    component: lazy(() =>\n      import(\n        /* webpackChunkName: \"CompliancePolicies\" */ 'SmartComponents/CompliancePolicies/CompliancePolicies'\n      )\n    ),\n  },\n  {\n    path: '/scappolicies/new',\n    title: defaultPoliciesTitle,\n    component: lazy(() =>\n      import(\n        /* webpackChunkName: \"CreatePolicy\" */ 'SmartComponents/CreatePolicy/CreatePolicy'\n      )\n    ),\n    modal: true,\n  },\n  {\n    path: '/scappolicies/:policy_id',\n    title: `$entityTitle - ${defaultPoliciesTitle}`,\n    defaultTitle: defaultPoliciesTitle,\n    component: lazy(() =>\n      import(\n        /* webpackChunkName: \"PolicyDetails\" */ 'SmartComponents/PolicyDetails/PolicyDetails'\n      )\n    ),\n  },\n  {\n    path: '/scappolicies/:policy_id/edit',\n    title: `$entityTitle - ${defaultPoliciesTitle}`,\n    defaultTitle: defaultPoliciesTitle,\n    component: lazy(() =>\n      import(\n        /* webpackChunkName: \"EditPolicy\" */ 'SmartComponents/EditPolicy/EditPolicy'\n      )\n    ),\n    modal: true,\n  },\n  {\n    path: '/scappolicies/:policy_id/delete',\n    title: `Delete policy - ${defaultPoliciesTitle}`,\n    component: lazy(() =>\n      import(\n        /* webpackChunkName: \"DeletePolicy\" */ 'SmartComponents/DeletePolicy/DeletePolicy'\n      )\n    ),\n    modal: true,\n  },\n];\n\nconst defaultSystemsTitle = 'Compliance systems';\nconst systemsRoutes = [\n  {\n    path: '/systems',\n    title: defaultSystemsTitle,\n    component: lazy(() =>\n      import(\n        /* webpackChunkName: \"ComplianceSystems\" */ 'SmartComponents/ComplianceSystems/ComplianceSystems'\n      )\n    ),\n  },\n  {\n    path: '/systems/:inventoryId',\n    title: `$entityTitle - ${defaultSystemsTitle}`,\n    defaultTitle: defaultSystemsTitle,\n    component: lazy(() =>\n      import(\n        /* webpackChunkName: \"SystemDetails\" */ 'SmartComponents/SystemDetails/SystemDetails'\n      )\n    ),\n  },\n];\n\nexport const routes = [...policiesRoutes, ...reportsRoutes, ...systemsRoutes];\n\nexport const Routes = (...props) => <Router {...props} routes={routes} />;\n","import PropTypes from 'prop-types';\nimport React, { useEffect } from 'react';\nimport routerParams from '@redhat-cloud-services/frontend-components-utilities/RouterParams';\nimport { Routes } from './Routes';\nimport NotificationsPortal from '@redhat-cloud-services/frontend-components-notifications/NotificationPortal';\nimport './App.scss';\nimport { useSetFlagsFromUrl } from 'Utilities/hooks/useFeature';\n\nconst appNavClick = {\n  reports(redirect) {\n    insights.chrome.appNavClick({ id: 'reports', redirect });\n  },\n  scappolicies(redirect) {\n    insights.chrome.appNavClick({ id: 'scappolicies', redirect });\n  },\n  systems(redirect) {\n    insights.chrome.appNavClick({ id: 'systems', redirect });\n  },\n};\n\nconst App = (props) => {\n  useSetFlagsFromUrl();\n  useEffect(() => {\n    insights.chrome.init();\n    insights.chrome?.hideGlobalFilter?.();\n    insights.chrome.identifyApp('compliance');\n    const baseComponentUrl = props.location.pathname.split('/')[1] || 'reports';\n    const unregister = insights.chrome.on('APP_NAVIGATION', (event) => {\n      if (event.domEvent) {\n        props.history.push(`/${event.navId}`);\n        appNavClick[baseComponentUrl](true);\n      }\n    });\n\n    return () => unregister();\n  }, []);\n\n  return (\n    <React.Fragment>\n      <NotificationsPortal />\n      <Routes childProps={props} />\n    </React.Fragment>\n  );\n};\n\nApp.propTypes = {\n  location: PropTypes.object,\n  history: PropTypes.object,\n};\n\nexport default routerParams(App);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { IntlProvider } from 'react-intl';\nimport { ApolloProvider } from '@apollo/client';\nimport { ApolloClient, HttpLink, InMemoryCache } from 'apollo-boost';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { getBaseName } from '@redhat-cloud-services/frontend-components-utilities/helpers';\nimport { init } from 'Store';\nimport App from './App';\n\nimport { COMPLIANCE_API_ROOT } from '@/constants';\n\nconst client = new ApolloClient({\n  link: new HttpLink({\n    credentials: 'include',\n    uri: COMPLIANCE_API_ROOT + '/graphql',\n  }),\n  cache: new InMemoryCache(),\n});\n\nconst AppEntry = ({ logger }) => (\n  <Provider store={init(logger).getStore()}>\n    <IntlProvider locale={navigator.language}>\n      <Router basename={getBaseName(window.location.pathname)}>\n        <ApolloProvider client={client}>\n          <App />\n        </ApolloProvider>\n      </Router>\n    </IntlProvider>\n  </Provider>\n);\n\nAppEntry.propTypes = {\n  logger: PropTypes.any,\n};\n\nexport default AppEntry;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AppEntry from './AppEntry';\n\nReactDOM.render(<AppEntry />, document.getElementById('root'));\n"],"names":["defaultReportTitle","reportsRoutes","path","title","component","lazy","defaultTitle","modal","defaultPoliciesTitle","policiesRoutes","defaultSystemsTitle","systemsRoutes","routes","Routes","props","Router","appNavClick","reports","redirect","insights","chrome","id","scappolicies","systems","App","useSetFlagsFromUrl","useEffect","init","hideGlobalFilter","identifyApp","baseComponentUrl","location","pathname","split","unregister","on","event","domEvent","history","push","navId","childProps","propTypes","PropTypes","routerParams","client","ApolloClient","link","HttpLink","credentials","uri","COMPLIANCE_API_ROOT","cache","InMemoryCache","AppEntry","logger","store","getStore","locale","navigator","language","basename","getBaseName","window","ApolloProvider","ReactDOM","document","getElementById"],"sourceRoot":""}