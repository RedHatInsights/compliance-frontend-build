{"version":3,"sources":["webpack:///./src/PresentationalComponents/ReduxFormWrappers/ReduxFormWrappers.js","webpack:///./src/PresentationalComponents/TabbedRules/OsVersionText.js","webpack:///./src/PresentationalComponents/TabbedRules/ProfileTabContent.js","webpack:///./src/PresentationalComponents/TabbedRules/ruleSelection.js","webpack:///./src/PresentationalComponents/TabbedRules/TabbedRules.js","webpack:///./src/PresentationalComponents/LoadingPoliciesTable/LoadingPoliciesTable.js","webpack:///./src/PresentationalComponents/ErrorPage/ErrorPage.js","webpack:///./src/PresentationalComponents/GreySmallText/GreySmallText.js","webpack:///./src/PresentationalComponents/CheckboxGroup/CheckboxGroup.js","webpack:///./src/PresentationalComponents/ProfileTypeSelect/ProfileTypeSelect.js","webpack:///./src/PresentationalComponents/ComplianceScore/ComplianceScore.js","webpack:///./src/PresentationalComponents/PolicyDetailsContentLoader/PolicyDetailsContentLoader.js","webpack:///./src/PresentationalComponents/ReportDetailsContentLoader/ReportDetailsContentLoader.js","webpack:///./src/PresentationalComponents/PolicyDetailsDescription/PolicyDetailsDescription.js","webpack:///./src/PresentationalComponents/ReportDetailsDescription/ReportDetailsDescription.js","webpack:///./src/PresentationalComponents/ProgressBar/ProgressBar.js","webpack:///./src/PresentationalComponents/TabSwitcher/TabSwitcher.js","webpack:///./src/PresentationalComponents/StateView/StateView.js","webpack:///./src/PresentationalComponents/SystemsCountWarning/SystemsCountWarning.js","webpack:///./src/PresentationalComponents/WarningText/WarningText.js","webpack:///./src/PresentationalComponents/BackgroundLink/BackgroundLink.js","webpack:///./src/PresentationalComponents/BreadcrumbLinkItem/BreadcrumbLinkItem.js","webpack:///./src/Utilities/hooks/useTableSort.js","webpack:///./src/PresentationalComponents/ReportsTable/Cells.js","webpack:///./src/PresentationalComponents/ReportsTable/Filters.js","webpack:///./src/PresentationalComponents/ReportsTable/ReportsTable.js","webpack:///./src/PresentationalComponents/ReportsEmptyState/ReportsEmptyState.js","webpack:///./src/PresentationalComponents/PolicyPopover/PolicyPopover.js","webpack:///./src/PresentationalComponents/PolicyThresholdTooltip/PolicyThresholdTooltip.js","webpack:///./src/PresentationalComponents/PolicyBusinessObjectiveTooltip/PolicyBusinessObjectiveTooltip.js","webpack:///./src/PresentationalComponents/NoResultsTable/NoResultsTable.js","webpack:///./src/PresentationalComponents/PoliciesTable/PoliciesTable.js","webpack:///./src/PresentationalComponents/ProfileThresholdField/ProfileThresholdField.js","webpack:///./src/PresentationalComponents/SupportedSSGVersionsLink/SupportedSSGVersionsLink.js","webpack:///./src/PresentationalComponents/UnsupportedSSGVersion/UnsupportedSSGVersion.js","webpack:///./src/PresentationalComponents/SubPageTitle/SubPageTitle.js","webpack:///./src/PresentationalComponents/OperatingSystemBadge/OperatingSystemBadge.js","webpack:///./src/PresentationalComponents/NoSystemsTableWithWarning/NoSystemsTableWithWarning.js","webpack:///./src/SmartComponents/CreatePolicy/validate.js","webpack:///./src/Utilities/TextHelper.js","webpack:///./src/Utilities/helpers.js","webpack:///./src/Utilities/hooks/useFilterConfig.js"],"names":["ReduxFormTextInput","field","TextInput","value","input","defaultValue","onChange","ReduxFormTextArea","TextArea","profile","newOsMinorVersion","osMajorVersion","osMinorVersion","ProfileSystemCount","count","Badge","isRead","pluralize","propTypes","SSGVersionText","Text","component","TextVariants","ssgVersion","Popover","position","bodyContent","SSGPopoverBody","footerContent","style","cursor","TextContent","fontSize","BENCHMARK_QUERY","gql","ProfileTabContent","columns","handleSelect","systemCount","selectedRuleRefIds","rulesTableProps","useQuery","variables","id","benchmark","skip","data","error","loading","rules","Grid","className","stateValues","stateKey","Spinner","SystemRulesTable","remediationAvailableFilter","remediationsEnabled","profileRules","selectedRefIds","matchesSelectionItem","selectionItem","selectedRuleRefIdsForTab","tabSelection","find","ruleRefIds","profilesWithRulesToSelection","profiles","prevSelection","options","only","additionalSelection","map","foundSelection","console","rule","refId","filter","v","tabsDataToOsMinorMap","tabsData","osMinorMap","forEach","extendProfilesByOsMinor","flatMap","undefined","eventKey","getDefaultTab","defaultTab","length","firstTab","TabbedRules","setSelectedRuleRefIds","level","profileSelectedRuleRefIds","filteredSelection","newItem","Tab","key","title","isRequired","defaultProps","selectRulesTableColumns","Table","aria-label","cells","rows","Array","RowLoader","colSpan","TableHeader","TableBody","ErrorPage","props","networkError","statusCode","window","insights","chrome","auth","logout","NotAuthorized","serviceName","InvalidObject","size","color","Title","headingLevel","message","Button","variant","onClick","history","goBack","GreySmallText","children","CheckboxFieldArray","name","inputValue","index","label","defaultChecked","Checkbox","isChecked","includes","checked","arr","Set","push","splice","indexOf","handleChange","InUseProfileLabel","Tooltip","content","Label","lineHeight","ProfileTypeSelect","hasGutter","description","disabled","GridItem","span","rowSpan","Field","type","JSON","stringify","Truncate","lines","CompliantIcon","system","rulesPassed","rulesFailed","compliant","complianceScoreString","supported","fixedPercentage","score","speed","width","height","viewBox","backgroundcolor","foregroundcolor","x","y","rx","ry","primaryColor","secondaryColor","cx","cy","r","PolicyDetailsDescription","policy","Card","CardHeader","CardBody","complianceThreshold","businessObjective","text","linkifyHtml","inline","majorOsVersion","policyType","PropTypes","Dt","TextListItem","TextListItemVariants","Dd","PolicyDescription","TextList","TextListVariants","Link","to","version","ReportDetailsDescription","ProgressBar","percent","failed","ProgressVariant","Progress","ContentTab","useAnchorLevels","defaultAnchor","levels","useAnchor","split","currentAnchor","RoutedTabSwitcher","tab","c","RoutedTabs","useHistory","useLocation","pathname","state","Tabs","onSelect","e","preventDefault","tabToActivate","replace","tabAnchor","hash","slice","join","activeKey","StateViewPart","StateView","child","StateViewWithError","WARNING_TEXT","WithOptionalToolTip","showTooltip","TooltipPosition","SystemsCountWarning","WarningText","BackgroundLink","desiredState","backgroundLocation","background","RouterLink","href","BreadcrumbLinkItem","BreadcrumbItem","getSortable","property","item","Name","marginRight","OperatingSystem","unsupportedHostCount","CompliantSystems","testResultHostCount","compliantHostCount","measureLocation","tooltipText","marginLeft","policyNameFilter","conditionalFilterType","lowerCaseValue","toLowerCase","policyComplianceFilter","values","compliantHostsPercent","Math","round","min","max","i","items","ReportsTable","transforms","sortable","sortByProperty","fitContent","sortByFunction","policyTypes","uniq","operatingSystems","useFilterConfig","policyTypeFilter","operatingSystem","operatingSystemFilter","conditionalFilter","array","objects","direction","useState","sortBy","setSortBy","column","tableSort","onSort","_","sorted","sort","a","b","String","localeCompare","useTableSort","filtered","sortedProfiles","emptyRows","PrimaryToolbar","ComplianceEmptyState","mainButton","PolicyPopover","headerContent","isInline","Fragment","NoResultsTable","EmptyTable","Bullseye","EmptyState","EmptyStateVariant","EmptyStateBody","PolicyNameCell","FILTER_CONFIGURATION","policies","PoliciesTable","FilterConfigBuilder","filterConfigBuilder","getChipBuilder","getFilterBuilder","page","itemsPerPage","activeFilters","_event","changePage","setState","applyFilterToObjectArray","chips","removeFilterWithChip","initialDefaultState","clearAll","clearAllFilter","deleteFilter","_index","policyId","location","this","filteredPolicies","filterChips","chipBuilder","chipsFor","totalHostCount","policiesToRows","paginatedPolicies","filterConfig","buildConfiguration","onFilterUpdate","hideLabel","pagination","itemCount","dropDirection","onSetPage","setPage","onPerPageSelect","setPerPage","perPage","activeFiltersConfig","filters","onDelete","onFilterDelete","ToolbarItem","actionResolver","TableToolbar","isFooter","Pagination","PaginationVariant","React","withRouter","ProfileThresholdField","validThreshold","thresholdValid","previousThreshold","threshold","FormGroup","fieldId","validated","helperTextInvalid","helperText","labelIcon","handleThresholdChange","display","reduxForm","form","destroyOnUnmount","forceUnregisterOnUnmount","target","rel","supportedConfigsLink","UNSUPPORTED_PLURAL_MESSAGE","marginBottom","WarningWithPopover","maxWidth","WarningWithTooltip","TooltipOrPopover","tooltipProps","tooltip","Component","componentProps","popover","showHeader","showPopupHeader","messageVariant","UnsupportedSSGVersion","showWarningIcon","showHelpIcon","iconProps","defaultStyle","SubPageTitle","OperatingSystemBadge","colorMap","default","7","8","fontWeight","validateBenchmarkPage","validateDetailsPage","validateRulesPage","validateSystemsPage","systemIds","fixed","withPercent","fixedValue","toFixed","singular","plural","collection","sortingByProp","propName","order","objA","objB","propA","propB","filterValues","Object","initialConfig","arrayToFilter","setActiveFilters","activeFilterValues","setActiveFilterValues","newActiveFilters","buildFilterString"],"mappings":"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","file":"js/466.cc956563ea90bf61f0c3.js","sourcesContent":["import React from 'react';\nimport { rawComponents } from '@data-driven-forms/pf4-component-mapper';\nimport { TextInput, TextArea } from '@patternfly/react-core';\n\nexport const ReduxFormTextInput = field => (\n    <TextInput\n        value={field.input.value || field.defaultValue}\n        onChange={field.input.onChange}\n        {...field} />\n);\n\nexport const ReduxFormTextArea = field => (\n    <TextArea\n        value={field.input.value || field.defaultValue}\n        onChange={field.input.onChange}\n        {...field} />\n);\n\nexport const ReduxFormCreatableSelectInput = field => (\n    <rawComponents.RawSelect selectVariant=\"createable\"\n        value={field.selected}\n        onChange={field.input.onChange}\n        {...field} />\n);\n","const OsVersionText = ({ profile, newOsMinorVersion }) => (\n    `RHEL${'\\u00A0'}${ profile.osMajorVersion }.${ (profile.osMinorVersion || newOsMinorVersion) }`\n);\n\nexport default OsVersionText;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport {\n    Text, TextVariants, TextContent, Grid, Spinner, Badge, Popover\n} from '@patternfly/react-core';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport SystemRulesTable from '@redhat-cloud-services/frontend-components-inventory-compliance/SystemRulesTable';\nimport { StateViewWithError, StateViewPart, SupportedSSGVersionsLink } from 'PresentationalComponents';\nimport { pluralize } from 'Utilities/TextHelper';\nimport OsVersionText from './OsVersionText';\n\nconst ProfileSystemCount = ({ count = 0 }) => (\n    <Badge isRead>\n        { `${count} ${ pluralize(count, 'system')}` }\n    </Badge>\n);\n\nProfileSystemCount.propTypes = {\n    profile: propTypes.object,\n    count: propTypes.number\n};\n\nconst SSGVersionText = ({ profile, newOsMinorVersion }) => (\n    <Text component={ TextVariants.p }>\n        SSG version: { profile.ssgVersion }\n        {' '}\n        <Popover\n            position='right'\n            bodyContent={ <SSGPopoverBody { ...{ profile, newOsMinorVersion } } /> }\n            footerContent={ <SupportedSSGVersionsLink /> }>\n            <OutlinedQuestionCircleIcon style={ { cursor: 'pointer' } } />\n        </Popover>\n    </Text>\n);\n\nSSGVersionText.propTypes = {\n    profile: propTypes.object.isRequired,\n    newOsMinorVersion: propTypes.string\n};\n\nconst SSGPopoverBody = ({ profile, newOsMinorVersion }) => (\n    <TextContent style={ { fontSize: 'var(--pf-c-popover--FontSize)' } }>\n        <Text>\n            This is the latest supported version of the SCAP Security Guide (SSG) for\n            {' '}\n            <OsVersionText { ...{ profile, newOsMinorVersion } } />\n        </Text>\n        <Text>\n            <OsVersionText { ...{ profile, newOsMinorVersion } } /> systems assigned to this\n            policy will report using this rule list.\n        </Text>\n    </TextContent>\n);\n\nSSGPopoverBody.propTypes = {\n    profile: propTypes.object.isRequired,\n    newOsMinorVersion: propTypes.string\n};\n\nconst BENCHMARK_QUERY = gql`\nquery benchmarkQuery($id: String!) {\n    benchmark(id: $id) {\n        id\n        osMajorVersion\n        rules {\n            id\n            title\n            severity\n            rationale\n            refId\n            description\n            remediationAvailable\n            identifier\n        }\n    }\n}\n`;\n\nconst ProfileTabContent = ({\n    profile, columns, handleSelect, systemCount, selectedRuleRefIds, rulesTableProps, newOsMinorVersion\n}) => {\n    const { data: benchmark, error, loading } = useQuery(BENCHMARK_QUERY, {\n        variables: {\n            id: profile.benchmark.id\n        },\n        skip: !handleSelect || !profile.benchmark?.id\n    });\n    const rules = handleSelect ? benchmark?.benchmark?.rules : profile?.rules;\n\n    return <React.Fragment>\n        <Grid>\n            <TextContent className=\"pf-u-mt-md\">\n                <Text component={ TextVariants.h3 } >\n                    <span className='pf-u-pr-sm'>\n                        <OsVersionText { ...{ profile, newOsMinorVersion } } />\n                    </span>\n                    <ProfileSystemCount count={ systemCount } />\n                </Text>\n                <SSGVersionText { ...{ profile, newOsMinorVersion } } />\n            </TextContent>\n        </Grid>\n        <StateViewWithError stateValues={ { error, loading, rules } }>\n            <StateViewPart stateKey=\"loading\">\n                <Spinner />\n            </StateViewPart>\n            <StateViewPart stateKey=\"rules\">\n\n                <SystemRulesTable\n                    remediationAvailableFilter\n                    remediationsEnabled={false}\n                    columns={ columns }\n                    profileRules={ [{ profile, rules: (rules || []) }] }\n                    selectedRefIds={ selectedRuleRefIds }\n                    handleSelect={\n                        handleSelect && ((selectedRuleRefIds) =>\n                            handleSelect(profile, newOsMinorVersion, selectedRuleRefIds)\n                        )\n                    }\n                    { ...rulesTableProps } />\n\n            </StateViewPart>\n        </StateViewWithError>\n    </React.Fragment>;\n};\n\nProfileTabContent.propTypes = {\n    profile: propTypes.object,\n    newOsMinorVersion: propTypes.string,\n    columns: propTypes.array,\n    handleSelect: propTypes.func,\n    systemCount: propTypes.object,\n    selectedRuleRefIds: propTypes.array,\n    rulesTableProps: propTypes.object\n};\n\nexport default ProfileTabContent;\n","// Rule selection utilities\n\nexport const matchesSelectionItem = (selectionItem, profile, newOsMinorVersion) => (\n    selectionItem.id === profile.id\n    && selectionItem.osMinorVersion === (newOsMinorVersion || profile.osMinorVersion)\n);\n\nexport const selectedRuleRefIdsForTab = (selectedRuleRefIds, profile, newOsMinorVersion) => {\n    const tabSelection = (selectedRuleRefIds || []).find((selectionItem) =>\n        matchesSelectionItem(selectionItem, profile, newOsMinorVersion)\n    );\n    return tabSelection?.ruleRefIds || [];\n};\n\nexport const profilesWithRulesToSelection = (profiles, prevSelection = [], options = {}) => {\n    const { only } = options;\n    const additionalSelection = profiles.map((profile) => {\n        const foundSelection = prevSelection.find((selectionItem) =>\n            matchesSelectionItem(selectionItem, profile)\n        );\n        if (!foundSelection) {\n            if (!profile.rules) {\n                console.error(`Profile ${profile.id} is missing rules for selection!`);\n            }\n\n            if (!profile.osMinorVersion) {\n                console.error(`Profile ${profile.id} is missing osMinorVersion for selection!`);\n            }\n\n            return {\n                id: profile.id,\n                osMinorVersion: profile.osMinorVersion,\n                ruleRefIds: profile.rules?.map((rule) => (rule.refId)) || []\n            };\n        } else if (only) {\n            return foundSelection;\n        }\n    }).filter((v) => !!v);\n\n    return only ? additionalSelection : [...prevSelection, ...additionalSelection];\n};\n\nexport const tabsDataToOsMinorMap = (tabsData) => {\n    const osMinorMap = {};\n    tabsData.forEach(({ profile, newOsMinorVersion }) => {\n        if (profile?.id) {\n            const osMinorVersion = newOsMinorVersion || profile.osMinorVersion;\n            osMinorMap[profile.id] = [\n                ...(osMinorMap[profile.id] || []),\n                osMinorVersion\n            ];\n        }\n    });\n    return osMinorMap;\n};\n\nexport const extendProfilesByOsMinor = (profiles, osMinorMap) => (\n    profiles.flatMap((profile) => (\n        (osMinorMap[profile.id] || [undefined]).map((osMinorVersion) => (\n            { ...profile, osMinorVersion }\n        ))\n    ))\n);\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Tab, Badge } from '@patternfly/react-core';\nimport {\n    selectColumns as selectRulesTableColumns\n} from '@redhat-cloud-services/frontend-components-inventory-compliance/SystemRulesTable';\nimport { RoutedTabs } from 'PresentationalComponents';\nimport ProfileTabContent from './ProfileTabContent';\nimport OsVersionText from './OsVersionText';\nimport { selectedRuleRefIdsForTab, matchesSelectionItem } from './ruleSelection';\n\nconst eventKey = ({ id, osMinorVersion }, newOsMinorVersion) => (\n    `rules-${id}-${osMinorVersion || newOsMinorVersion}`\n);\n\nconst getDefaultTab = (tabsData, defaultTab) => {\n    if (!tabsData || tabsData.length === 0) {\n        return;\n    }\n\n    if (!defaultTab) {\n        const firstTab = tabsData[0];\n        defaultTab = {\n            id: firstTab.profile.id,\n            osMinorVersion: firstTab.profile.osMinorVersion || firstTab.newOsMinorVersion\n        };\n    }\n\n    return eventKey(defaultTab);\n};\n\nconst TabbedRules = ({\n    tabsData, defaultTab, selectedRuleRefIds, setSelectedRuleRefIds, columns, level, ...rulesTableProps\n}) => {\n    const handleSelect = (profile, newOsMinorVersion, profileSelectedRuleRefIds) => {\n        const filteredSelection = (selectedRuleRefIds || []).filter((selectionItem) =>\n            !matchesSelectionItem(selectionItem, profile, newOsMinorVersion)\n        );\n\n        const newItem = {\n            id: profile.id,\n            osMinorVersion: newOsMinorVersion || profile.osMinorVersion,\n            ruleRefIds: profileSelectedRuleRefIds\n        };\n        setSelectedRuleRefIds([newItem, ...filteredSelection]);\n    };\n\n    return <RoutedTabs level={ level } defaultTab={ getDefaultTab(tabsData, defaultTab) }>\n        {\n            tabsData?.map(({ profile, newOsMinorVersion, systemCount }) => (\n                <Tab\n                    key={ eventKey(profile, newOsMinorVersion) }\n                    eventKey={ eventKey(profile, newOsMinorVersion) }\n                    title={\n                        <span>\n                            <span className='pf-u-pr-sm'>\n                                <OsVersionText profile={ profile } newOsMinorVersion={newOsMinorVersion} />\n                            </span>\n                            <Badge isRead>{ systemCount }</Badge>\n                        </span>\n                    }>\n                    <ProfileTabContent\n                        { ...{\n                            profile,\n                            newOsMinorVersion,\n                            columns,\n                            rulesTableProps,\n                            systemCount,\n                            selectedRuleRefIds: selectedRuleRefIdsForTab(\n                                selectedRuleRefIds, profile, newOsMinorVersion\n                            ),\n                            handleSelect: setSelectedRuleRefIds ? handleSelect : undefined\n                        } } />\n                </Tab>\n            ))\n        }\n    </RoutedTabs>;\n};\n\nTabbedRules.propTypes = {\n    tabsData: propTypes.arrayOf(\n        propTypes.shape({\n            profile: propTypes.object.isRequired,\n            selectedRuleRefIds: propTypes.arrayOf(propTypes.string),\n            newOsMinorVersion: propTypes.string,\n            systemCount: propTypes.number\n        })\n    ).isRequired,\n    selectedRuleRefIds: propTypes.arrayOf(\n        propTypes.shape({\n            id: propTypes.string,\n            ruleRefIds: propTypes.arrayOf(propTypes.string)\n        })\n    ),\n    setSelectedRuleRefIds: propTypes.func,\n    columns: propTypes.arrayOf(propTypes.object),\n    defaultTab: propTypes.shape({\n        id: propTypes.string,\n        osMinorVersion: propTypes.string\n    }),\n    level: propTypes.number\n};\n\nTabbedRules.defaultProps = {\n    columns: selectRulesTableColumns(['Name', 'Severity', 'Ansible']),\n    level: 0\n};\n\nexport default TabbedRules;\n","import React from 'react';\nimport { Table, TableHeader, TableBody } from '@patternfly/react-table';\nimport RowLoader from '@redhat-cloud-services/frontend-components-utilities/RowLoader';\n\nconst LoadingPoliciesTable = () => (\n    <Table\n        aria-label='policies-table'\n        cells={ [\n            { title: 'Policy name' },\n            { title: 'Operating system' },\n            { title: 'Systems' },\n            { title: 'Business initiative' },\n            { title: 'Compliance threshold' }\n        ] }\n        rows={ [...Array(5)].map(() => ({\n            cells: [{\n                title: <RowLoader />,\n                colSpan: 5\n            }]\n        })) }>\n        <TableHeader />\n        <TableBody />\n    </Table>\n);\n\nexport default LoadingPoliciesTable;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport {\n    Title,\n    Button,\n    Text\n} from '@patternfly/react-core';\nimport {\n    ExclamationCircleIcon\n} from '@patternfly/react-icons';\nimport InvalidObject from '@redhat-cloud-services/frontend-components/InvalidObject';\nimport NotAuthorized from '@redhat-cloud-services/frontend-components/NotAuthorized';\n\nconst ErrorPage = ({ error, ...props }) => {\n    if (error.networkError && error.networkError.statusCode === 401) {\n        window.insights.chrome.auth.logout(true);\n        return false;\n    }\n\n    if (error.networkError && error.networkError.statusCode === 403) {\n        return <NotAuthorized serviceName='Compliance' />;\n    }\n\n    if (error.networkError && error.networkError.statusCode === 404) {\n        return <InvalidObject />;\n    }\n\n    return <section {...props} className=\"pf-l-page__main-section pf-c-page__main-section ins-c-component_invalid-componet\">\n        <ExclamationCircleIcon size=\"xl\" style={ { color: 'var(--pf-global--danger-color--100)' } } />\n        <Title headingLevel='h1'>There was an error</Title>\n        <Text>\n            If you need to contact Red Hat Support about this, this is the exact error:\n            <Text>\n                { error.message }\n            </Text>\n        </Text>\n        <Button\n            variant=\"link\"\n            onClick={ history.goBack }>\n                Go back\n        </Button>\n    </section>;\n};\n\nErrorPage.propTypes = {\n    error: propTypes.object\n};\n\nexport default ErrorPage;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Text, TextVariants } from '@patternfly/react-core';\n\nexport const GreySmallText = ({ children }) => (\n    <Text\n        style={{ color: 'var(--pf-global--Color--200)' }}\n        component={ TextVariants.small }>{ children }</Text>\n);\n\nGreySmallText.propTypes = {\n    children: propTypes.node\n};\n\nexport default GreySmallText;\n","import React from 'react';\nimport { Field } from 'redux-form';\nimport propTypes from 'prop-types';\nimport { Checkbox } from '@patternfly/react-core';\n\nconst CheckboxFieldArray = ({ input, options }) => {\n    const { name, onChange } = input;\n    const inputValue = input.value;\n\n    const handleChange = (checked, value) => {\n        const arr = [...new Set(inputValue)];\n        if (checked) {\n            arr.push(value);\n        } else {\n            arr.splice(arr.indexOf(value), 1);\n        }\n\n        return onChange(arr);\n    };\n\n    return (\n        <React.Fragment>\n            {\n                options.map(({ label, value, defaultChecked }, index) => (\n                    <Checkbox key={value} id={value} label={label}\n                        name={`${name}[${index}]`} value={value}\n                        isChecked={inputValue === '' ? defaultChecked : inputValue.includes(value)}\n                        onChange={(checked) => handleChange(checked, value)}\n                    />\n                ))\n            }\n        </React.Fragment>\n    );\n};\n\nCheckboxFieldArray.propTypes = {\n    input: propTypes.shape({\n        name: propTypes.string.isRequired,\n        onChange: propTypes.func,\n        value: propTypes.string\n    }),\n    options: propTypes.arrayOf(propTypes.shape({\n        label: propTypes.string.isRequired,\n        value: propTypes.string.isRequired,\n        defaultChecked: propTypes.bool\n    })).isRequired\n};\n\nconst CheckboxGroup = (props) => (\n    <Field {...props} type=\"checkbox\" component={CheckboxFieldArray} />\n);\n\nCheckboxGroup.propTypes = {\n    options: propTypes.arrayOf(propTypes.shape({\n        label: propTypes.string.isRequired,\n        value: propTypes.string.isRequired,\n        defaultChecked: propTypes.bool\n    })).isRequired\n};\n\nexport { CheckboxFieldArray };\nexport default CheckboxGroup;\n","import React from 'react';\nimport { Field } from 'redux-form';\nimport propTypes from 'prop-types';\nimport Truncate from 'react-truncate';\nimport {\n    Grid,\n    GridItem,\n    Label,\n    TextContent,\n    TextVariants,\n    Text,\n    Tooltip\n} from '@patternfly/react-core';\n\nconst InUseProfileLabel = () => (\n    <Tooltip\n        position=\"right\"\n        content=\"A policy of this type is already in use.\n        Only one policy per policy type can be created for a major release of RHEL.\"\n    >\n        <Label style={ { lineHeight: '1.5em' } }>In use</Label>\n    </Tooltip>\n);\n\nconst ProfileTypeSelect  = ({ profiles, onClick }) => (\n    <React.Fragment>\n        { profiles?.length === 0 && (\n            <TextContent style={{ color: 'var(--pf-c-content--blockquote--Color)' }}>\n                <Text>\n                    Select an operating system to view policy types.\n                </Text>\n            </TextContent>\n        )}\n\n        <Grid hasGutter>\n            { profiles.map((profile) => {\n                const { description, name, id, disabled } = profile;\n                return (\n                    <React.Fragment key={`profile-select-${id}`}>\n                        <GridItem span={8} rowSpan={2}>\n                            <TextContent\n                                style={ {\n                                    lineHeight: '2em',\n                                    color: disabled ? 'var(--pf-c-content--blockquote--Color)' : ''\n                                } }>\n                                <Text >\n                                    <Field component='input'\n                                        type='radio'\n                                        name='profile'\n                                        value={JSON.stringify(profile)}\n                                        onClick={ () => onClick(JSON.stringify(profile)) }\n                                        disabled={ disabled }\n                                    />\n                                    { ` ${name} ` }\n                                    { disabled && <InUseProfileLabel /> }\n                                </Text>\n                            </TextContent>\n                            <TextContent style={ { color: 'var(--pf-c-content--blockquote--Color)' } }>\n                                <Text component={ TextVariants.p }>\n                                    <Truncate\n                                        key={`profile-select-text-${id}`}\n                                        lines={3}>\n                                        { description }\n                                    </Truncate>\n                                </Text>\n                            </TextContent>\n                        </GridItem>\n                    </React.Fragment>);\n            })}\n        </Grid>\n    </React.Fragment>\n);\n\nProfileTypeSelect.propTypes = {\n    profiles: propTypes.array,\n    onClick: propTypes.func\n};\n\nProfileTypeSelect.defaultProps = {\n    profiles: [],\n    onClick: () => ({})\n};\n\nexport default ProfileTypeSelect;\n","import React from 'react';\nimport {\n    QuestionCircleIcon,\n    CheckCircleIcon,\n    ExclamationCircleIcon\n} from '@patternfly/react-icons';\nimport { Tooltip } from '@patternfly/react-core';\nimport { fixedPercentage } from 'Utilities/TextHelper';\n\nconst CompliantIcon = (system) => {\n    if ((system.rulesPassed + system.rulesFailed) === 0) {\n        return <QuestionCircleIcon style={{ color: 'var(--pf-global--disabled-color--100)' }}/>;\n    } else {\n        return system.compliant ?\n            <CheckCircleIcon style={{ color: 'var(--pf-global--success-color--200)' }}/> :\n            <ExclamationCircleIcon style={{ color: 'var(--pf-global--danger-color--100)' }}/>;\n    }\n};\n\nexport const complianceScoreString = (system) => {\n    if (system.supported === false) {\n        return ' Unsupported';\n    } else if ((system.rulesPassed + system.rulesFailed) === 0) {\n        return ' N/A';\n    }\n\n    return ' ' + fixedPercentage(system.score);\n};\n\nconst ComplianceScore = (system) => (\n    <React.Fragment>\n        { system.supported ?\n            <Tooltip content={\n                'The system compliance score is calculated by OpenSCAP and ' +\n                'is a normalized weighted sum of rules selected for this policy.'\n            }>\n                <CompliantIcon key={ `system-compliance-icon-${system.id}` } { ...system } />\n                { complianceScoreString(system) }\n            </Tooltip>\n            :\n            complianceScoreString(system) }\n    </React.Fragment>\n);\n\nexport default ComplianceScore;\n","import React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nconst PolicyDetailsContentLoader = () => (\n    <ContentLoader\n        speed={2}\n        width={1000}\n        height={400}\n        viewBox='0 0 1000 400'\n        backgroundcolor='#f3f3f3'\n        foregroundcolor='#ecebeb'\n    >\n        <rect x='-3' y='7' rx='3' ry='3' width='760' height='19' />\n        <rect x='823' y='3' rx='3' ry='3' width='67' height='29' />\n        <rect x='910' y='3' rx='3' ry='3' width='67' height='29' />\n        <rect x='6' y='54' rx='0' ry='0' width='46' height='19' />\n        <rect x='68' y='54' rx='0' ry='0' width='46' height='19' />\n        <rect x='133' y='54' rx='0' ry='0' width='46' height='19' />\n        <rect x='3' y='110' rx='0' ry='0' width='255' height='17' />\n        <rect x='1' y='149' rx='0' ry='0' width='47' height='16' />\n        <rect x='1' y='185' rx='0' ry='0' width='255' height='17' />\n        <rect x='-1' y='224' rx='0' ry='0' width='187' height='16' />\n        <rect x='-4' y='267' rx='0' ry='0' width='255' height='17' />\n        <rect x='-6' y='306' rx='0' ry='0' width='47' height='16' />\n        <rect x='-6' y='342' rx='0' ry='0' width='255' height='17' />\n        <rect x='-8' y='381' rx='0' ry='0' width='187' height='16' />\n    </ContentLoader>\n);\n\nexport default PolicyDetailsContentLoader;\n","import React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nconst ReportDetailsContentLoader = () => (\n    <ContentLoader\n        height={320}\n        width={1550}\n        speed={2}\n        primaryColor=\"#f3f3f3\"\n        secondaryColor=\"#ecebeb\">\n        <rect x=\"18\" y=\"50\" rx=\"4\" ry=\"4\" width=\"478\" height=\"15\" />\n        <rect x=\"19\" y=\"18\" rx=\"3\" ry=\"3\" width=\"220\" height=\"9\" />\n        <circle cx=\"118\" cy=\"156\" r=\"73\" />\n        <rect x=\"1002\" y=\"40\" rx=\"0\" ry=\"0\" width=\"69\" height=\"23\" />\n        <rect x=\"47\" y=\"77\" rx=\"0\" ry=\"0\" width=\"0\" height=\"0\" />\n        <rect x=\"36\" y=\"77\" rx=\"0\" ry=\"0\" width=\"16\" height=\"0\" />\n        <rect x=\"409\" y=\"149\" rx=\"0\" ry=\"0\" width=\"0\" height=\"0\" />\n        <rect x=\"214\" y=\"145\" rx=\"0\" ry=\"0\" width=\"205\" height=\"9\" />\n        <rect x=\"216\" y=\"119\" rx=\"0\" ry=\"0\" width=\"205\" height=\"9\" />\n        <rect x=\"526\" y=\"100\" rx=\"0\" ry=\"0\" width=\"431\" height=\"8\" />\n        <rect x=\"526\" y=\"122\" rx=\"0\" ry=\"0\" width=\"431\" height=\"8\" />\n        <rect x=\"526\" y=\"146\" rx=\"0\" ry=\"0\" width=\"431\" height=\"8\" />\n        <rect x=\"527\" y=\"170\" rx=\"0\" ry=\"0\" width=\"431\" height=\"8\" />\n        <rect x=\"527\" y=\"194\" rx=\"0\" ry=\"0\" width=\"431\" height=\"8\" />\n        <rect x=\"527\" y=\"218\" rx=\"0\" ry=\"0\" width=\"431\" height=\"8\" />\n        <rect x=\"529\" y=\"275\" rx=\"0\" ry=\"0\" width=\"231\" height=\"7\" />\n    </ContentLoader>\n);\n\nexport default ReportDetailsContentLoader;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { fixedPercentage } from 'Utilities/TextHelper';\nimport {\n    PolicyBusinessObjectiveTooltip,\n    PolicyThresholdTooltip\n} from 'PresentationalComponents';\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n    TextContent,\n    TextVariants,\n    Text\n} from '@patternfly/react-core';\nimport Truncate from '@redhat-cloud-services/frontend-components/Truncate';\nimport linkifyHtml from 'linkifyjs/html';\n\nconst PolicyDetailsDescription = ({ policy }) => (\n    <Card>\n        <CardHeader>\n            <Text style={ { fontSize: 20 } }>\n                <b>Policy details</b>\n            </Text>\n        </CardHeader>\n        <CardBody>\n            <TextContent>\n                <Text component={TextVariants.h5}>\n                    Compliance threshold\n                    <PolicyThresholdTooltip />\n                </Text>\n                <Text className='threshold-tooltip' component={TextVariants.p}>\n                    { fixedPercentage(policy.complianceThreshold, 1) }\n                </Text>\n                <Text component={TextVariants.h5}>\n                    Business objective\n                    <PolicyBusinessObjectiveTooltip />\n                </Text>\n                <Text component={TextVariants.p}>\n                    { policy.businessObjective && policy.businessObjective.title || '-' }\n                </Text>\n                <Text component={TextVariants.h5}>Policy description</Text>\n                <Text component={TextVariants.p}>\n                    <Truncate text={linkifyHtml(policy.description || '')} length={380} inline={true} />\n                </Text>\n                <Text component={TextVariants.h5}>\n                    Operating system\n                </Text>\n                <Text component={TextVariants.p}>\n                    RHEL { policy.majorOsVersion }\n                </Text>\n                <Text component={TextVariants.h5}>Policy type </Text>\n                <Text component={TextVariants.p}>{ policy.policyType }</Text>\n                <Text component={TextVariants.h5}>Reference ID</Text>\n                <Text component={TextVariants.p}>{ policy.refId }</Text>\n            </TextContent>\n        </CardBody>\n    </Card>\n);\n\nPolicyDetailsDescription.propTypes = {\n    policy: propTypes.object\n};\n\nexport default PolicyDetailsDescription;\n","import React from 'react';\nimport { fixedPercentage } from 'Utilities/TextHelper';\nimport propTypes from 'prop-types';\nimport {\n    Text,\n    TextContent,\n    TextList,\n    TextListVariants,\n    TextListItem,\n    TextListItemVariants\n} from '@patternfly/react-core';\nimport {\n    Link\n} from 'react-router-dom';\n\nconst PropTypes = {\n    children: propTypes.node\n};\n\nconst Dt = ({ children, ...props }) => (\n    <TextListItem { ...props } component={ TextListItemVariants.dt }>\n        { children }\n    </TextListItem>\n);\nDt.propTypes = PropTypes;\n\nconst Dd = ({ children, ...props }) => (\n    <TextListItem { ...props } component={ TextListItemVariants.dd }>\n        { children }\n    </TextListItem>\n);\nDd.propTypes = PropTypes;\n\nconst PolicyDescription = ({ profile }) => (\n    <React.Fragment>\n        <TextList component={TextListVariants.dl}>\n            <Dt>\n                <Text className='ins-c-non-bold-h2'>\n                    Policy details\n                </Text>\n            </Dt>\n            <Dt>\n                Operating system\n            </Dt>\n            <Dd>\n                RHEL { profile.majorOsVersion }\n            </Dd>\n            <Dt>\n                Compliance threshold\n            </Dt>\n            <Dd>\n                { fixedPercentage(profile.complianceThreshold, 1) }\n            </Dd>\n            <Dt>\n                Business objective\n            </Dt>\n            <Dd>\n                { profile.businessObjective ? profile.businessObjective.title : '--' }\n            </Dd>\n        </TextList>\n        <Link to={'/scappolicies/' + profile.policy.id} >\n            View policy\n        </Link>\n    </React.Fragment>\n);\n\nPolicyDescription.propTypes = {\n    profile: propTypes.shape({\n        id: propTypes.string,\n        complianceThreshold: propTypes.number,\n        businessObjective: propTypes.object,\n        majorOsVersion: propTypes.string,\n        policy: propTypes.shape({\n            id: propTypes.string\n        }),\n        benchmark: propTypes.shape({\n            version: propTypes.string\n        })\n    })\n};\n\nconst ReportDetailsDescription = ({ profile }) => (\n    <TextContent className='policy-details'>\n        <PolicyDescription { ...{ profile }} />\n    </TextContent>\n);\n\nReportDetailsDescription.propTypes = {\n    profile: propTypes.object\n};\n\nexport default ReportDetailsDescription;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport {\n    Progress, ProgressVariant\n} from '@patternfly/react-core/dist/js/components/Progress';\n\nconst ProgressBar = ({ percent, failed }) => {\n    let variant;\n    let title;\n\n    if (percent === 100) {\n        title = 'Success';\n        variant = ProgressVariant.success;\n    } else if (failed) {\n        title = 'Error';\n        variant = ProgressVariant.danger;\n    } else {\n        title = 'Progress';\n        variant = ProgressVariant.info;\n    }\n\n    return <Progress\n        id={'finished-create-policy'}\n        value={percent}\n        title={title}\n        variant={variant}\n        className='wizard-progress-bar'\n    />;\n};\n\nProgressBar.propTypes = {\n    percent: propTypes.number,\n    failed: propTypes.bool\n};\n\nexport default ProgressBar;\n","import React from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport propTypes from 'prop-types';\nimport { Tabs } from '@patternfly/react-core';\nimport { useAnchor } from 'Utilities/Router';\n\nexport const ContentTab = ({ children }) => (children);\n\nconst useAnchorLevels = (defaultAnchor, level) => {\n    const anchor = useAnchor(defaultAnchor);\n    const levels = anchor.split('|');\n    const currentAnchor = levels[level] || defaultAnchor;\n\n    return {\n        levels,\n        currentAnchor\n    };\n};\n\nconst TabSwitcher = (props) => (\n    props.children.map((tab) => (\n        tab.props.eventKey === props.activeKey ? tab : undefined\n    )).filter((c) => (!!c))\n);\n\nTabSwitcher.propTypes = {\n    activeTab: propTypes.number,\n    children: propTypes.node\n};\n\nexport const RoutedTabSwitcher = ({ children, defaultTab, level }) => {\n    const { currentAnchor } = useAnchorLevels(defaultTab, level);\n\n    return children.map((tab) => (\n        tab.props.eventKey === currentAnchor ? tab : undefined\n    )).filter((c) => (!!c));\n};\n\nRoutedTabSwitcher.propTypes = {\n    children: propTypes.node,\n    defaultTab: propTypes.string,\n    level: propTypes.number\n};\n\nRoutedTabSwitcher.defaultProps = {\n    level: 0\n};\n\nexport const RoutedTabs = ({ children, defaultTab, level, ...props }) => {\n    const { push } = useHistory();\n    const { pathname, state } = useLocation();\n    const { currentAnchor, levels } = useAnchorLevels(defaultTab, level);\n    const handleTabSelect = (e, eventKey) => {\n        e.preventDefault();\n        const tabToActivate = eventKey.replace('#', '');\n        let tabAnchor = levels;\n        tabAnchor[level] = tabToActivate;\n\n        push({\n            state,\n            to: pathname,\n            hash: tabAnchor.slice(0, (level + 1)).join('|')\n        });\n    };\n\n    return <Tabs\n        { ...props }\n        onSelect={ handleTabSelect }\n        activeKey={ currentAnchor }>\n        { children }\n    </Tabs>;\n};\n\nRoutedTabs.defaultProps = {\n    level: 0\n};\n\nRoutedTabs.propTypes = {\n    children: propTypes.node,\n    defaultTab: propTypes.string,\n    level: propTypes.number\n};\n\nexport default TabSwitcher;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport {\n    ErrorPage\n} from 'PresentationalComponents';\n\nexport const StateViewPart = ({ children }) => (children);\n\nconst props = {\n    stateValues: propTypes.object,\n    children: propTypes.node\n};\n\nexport const StateView = ({ stateValues, children }) => (\n    children.flatMap((c) => (c)).filter((child) => (\n        stateValues[child.props.stateKey]\n    ))\n);\n\nStateView.propTypes = props;\n\nexport const StateViewWithError = ({ stateValues, children }) => (\n    <StateView stateValues={ stateValues }>\n        <StateViewPart key='error-state' stateKey='error'>\n            <ErrorPage error={ stateValues.error } />\n        </StateViewPart>\n        { children }\n    </StateView>\n);\n\nStateViewWithError.propTypes = props;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport {\n    Tooltip,\n    TooltipPosition\n} from '@patternfly/react-core';\nimport {\n    WarningText\n} from 'PresentationalComponents';\n\nconst WARNING_TEXT = 'Policies without systems will not have reports.';\n\nconst WithOptionalToolTip = ({ showTooltip, children }) => (\n    showTooltip ? <Tooltip\n        position={ TooltipPosition.bottom }\n        content={ WARNING_TEXT }>\n        { children }\n    </Tooltip> : children\n);\n\nWithOptionalToolTip.propTypes = {\n    showTooltip: propTypes.bool,\n    children: propTypes.node\n};\n\nconst SystemsCountWarning = ({ count, variant }) => {\n    let text;\n\n    switch (variant) {\n        case 'count':\n            text = count;\n            break;\n        case 'compact':\n            text = 'No Systems';\n            break;\n        case 'full':\n            text = WARNING_TEXT;\n            break;\n        default:\n            text = count;\n    }\n\n    return <WithOptionalToolTip showTooltip={ variant === 'count' || variant === 'compact' }>\n        <WarningText>\n            { text }\n        </WarningText>\n    </WithOptionalToolTip>;\n};\n\nSystemsCountWarning.defaultProps = {\n    variant: 'compact'\n};\n\nSystemsCountWarning.propTypes = {\n    count: propTypes.number.isRequired,\n    variant: propTypes.string\n};\n\nexport { WARNING_TEXT };\nexport default SystemsCountWarning;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport {\n    Text\n} from '@patternfly/react-core';\nimport {\n    ExclamationTriangleIcon\n} from '@patternfly/react-icons';\n\nconst WarningText = ({ children }) => (\n    <React.Fragment>\n        <ExclamationTriangleIcon className='ins-u-warning'/>\n        <Text component=\"span\" className='ins-c-warning-text'>\n            &nbsp;{ children }\n        </Text>\n    </React.Fragment>\n);\n\nWarningText.propTypes = {\n    children: propTypes.node\n};\n\nexport default WarningText;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst BackgroundLink = ({\n    to, hash, children, state: desiredState, backgroundLocation, ...props\n}) => {\n    const currentLocation = useLocation();\n    const background = { ...currentLocation, ...backgroundLocation };\n    const state = { ...desiredState, background };\n\n    return <Link\n        to={{ pathname: to, state, hash }}\n        { ...props }>\n        { children }\n    </Link>;\n};\n\nBackgroundLink.propTypes = {\n    backgroundLocation: propTypes.object,\n    children: propTypes.node,\n    hash: propTypes.string,\n    state: propTypes.object,\n    to: propTypes.string.isRequired\n};\n\nexport default BackgroundLink;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Link as ReactRouterLink } from 'react-router-dom';\nimport { BreadcrumbItem } from '@patternfly/react-core';\n\nconst RouterLink = ({ href, ...props }) => (\n    <ReactRouterLink { ...props } to={ href } />\n);\n\nRouterLink.propTypes = {\n    href: propTypes.string\n};\n\nconst BreadcrumbLinkItem = ({ children, ...props }) => (\n    <BreadcrumbItem { ...props } component={ RouterLink }>\n        { children}\n    </BreadcrumbItem>\n);\n\nBreadcrumbLinkItem.propTypes = {\n    children: propTypes.node\n};\n\nexport default BreadcrumbLinkItem;\n","import { useState } from 'react';\n\nconst getSortable = (property, item) => {\n    if (typeof(property) === 'function') {\n        return property(item);\n    } else {\n        return item[property];\n    }\n};\n\nexport const orderArrayByProp = (property, objects, direction) => (\n    objects.sort((a, b) => {\n        if (direction === 'asc') {\n            return String(getSortable(property, a)).localeCompare(String(getSortable(property, b)));\n        } else {\n            return -String(getSortable(property, a)).localeCompare(String(getSortable(property, b)));\n        }\n    })\n);\n\nexport const orderByArray = (objectArray, orderProp, orderArray, direction) => (\n    (direction !== 'asc' ? orderArray.reverse() : orderArray).flatMap((orderKey) => (\n        objectArray.filter((item) => (item[orderProp] === orderKey))\n    ))\n);\n\nconst useTableSort = (array, columns) => {\n    const [sortBy, setSortBy] = useState({\n        index: 0,\n        direction: 'desc'\n    });\n    const column = columns[sortBy.index];\n    const onSort = (_, index, direction) => (\n        setSortBy({\n            index,\n            direction\n        })\n    );\n\n    return {\n        tableSort: {\n            onSort,\n            sortBy\n        },\n        sorted: orderArrayByProp(\n            (column?.sortByProperty || column?.sortByFunction), array, sortBy.direction\n        )\n    };\n};\n\nexport default useTableSort;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { TextContent, Text, Progress } from '@patternfly/react-core';\nimport { Link } from 'react-router-dom';\nimport { PolicyPopover, GreySmallText, UnsupportedSSGVersion, OperatingSystemBadge } from 'PresentationalComponents';\n\nexport const Name = (profile) => (\n    <TextContent>\n        <Link to={'/reports/' + profile.id} style={ { marginRight: '.5rem' }}>\n            { profile.policy.name }\n        </Link>\n        <React.Fragment>\n            <PolicyPopover { ...{ profile, position: 'right' } } />\n            <GreySmallText>{ profile.policyType }</GreySmallText>\n        </React.Fragment>\n    </TextContent>\n);\n\nName.propTypes = {\n    profile: propTypes.object\n};\n\nexport const OperatingSystem = ({ majorOsVersion, ssgVersion, unsupportedHostCount, policy }) => {\n    const supported = unsupportedHostCount === 0;\n    ssgVersion = 'SSG: ' + ssgVersion;\n\n    return <React.Fragment>\n        <OperatingSystemBadge { ...{ majorOsVersion } } />\n        { policy === null && ssgVersion && <Text>\n            <GreySmallText>\n                { supported ? ssgVersion : <UnsupportedSSGVersion>{ ssgVersion }</UnsupportedSSGVersion> }\n            </GreySmallText>\n        </Text> }\n    </React.Fragment>;\n};\n\nOperatingSystem.propTypes = {\n    majorOsVersion: propTypes.string,\n    ssgVersion: propTypes.string,\n    unsupportedHostCount: propTypes.number,\n    policy: propTypes.object\n};\n\nexport const CompliantSystems = ({ testResultHostCount = 0, compliantHostCount = 0, unsupportedHostCount = 0 }) => {\n    const tooltipText = 'Insights cannot provide a compliance score for systems running an unsupported ' +\n        'version of the SSG at the time this report was created, as the SSG version was not supported by RHEL.';\n    return <React.Fragment>\n        <Progress\n            measureLocation={ 'outside' }\n            value={ testResultHostCount ? (100 / testResultHostCount) * compliantHostCount : 0 } />\n        <GreySmallText>\n            { `${ compliantHostCount } of ${ testResultHostCount } systems ` }\n\n            { unsupportedHostCount > 0 && <UnsupportedSSGVersion { ...{ tooltipText } } style={ { marginLeft: '.5em' } }>\n                <strong className='ins-c-warning-text'>{ unsupportedHostCount } unsupported</strong>\n            </UnsupportedSSGVersion> }\n        </GreySmallText>\n    </React.Fragment>;\n};\n\nCompliantSystems.propTypes = {\n    testResultHostCount: propTypes.number,\n    compliantHostCount: propTypes.number,\n    unsupportedHostCount: propTypes.number\n};\n","import { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\n\nexport const policyNameFilter = [{\n    type: conditionalFilterType.text,\n    label: 'Policy name',\n    filter: (profiles, value) => {\n        const lowerCaseValue = value.toLowerCase();\n        return profiles.filter((profile) => (\n            [\n                profile.name,\n                profile.policy.name\n            ].join().toLowerCase().includes(lowerCaseValue)\n        ));\n    }\n}];\n\nexport const policyTypeFilter = (policyTypes) => ([{\n    type: conditionalFilterType.checkbox,\n    label: 'Policy type',\n    filter: (profiles, values) => (\n        profiles.filter(({ policyType }) => values.includes(policyType))\n    ),\n    items: policyTypes.map((policyType) => ({\n        label: policyType,\n        value: policyType\n    }))\n}]);\n\nexport const operatingSystemFilter = (operatingSystems) => ([{\n    type: conditionalFilterType.checkbox,\n    label: 'Operating system',\n    filter: (profiles, values) => (\n        profiles.filter(({ majorOsVersion }) => (\n            values.includes(majorOsVersion)\n        ))\n    ),\n    items: operatingSystems.map((operatingSystem) => ({\n        label: `RHEL ${operatingSystem}`,\n        value: operatingSystem\n    }))\n}]);\n\nexport const policyComplianceFilter = [{\n    type: conditionalFilterType.checkbox,\n    label: 'Systems meeting compliance',\n    filter: (profiles, values) => (\n        profiles.filter(({ testResultHostCount, compliantHostCount }) => {\n            const compliantHostsPercent = Math.round((100 / testResultHostCount) * compliantHostCount);\n            const matching = values.map((value) => {\n                const [min, max] = value.split('-');\n                return compliantHostsPercent >= min && compliantHostsPercent <= max;\n            }).filter((i) => (!!i));\n            return matching.length > 0;\n        })\n    ),\n    items: [\n        { label: '90 - 100%', value: '90-100' },\n        { label: '70 - 89%', value: '70-89' },\n        { label: '50 - 69%', value: '50-69' },\n        { label: 'Less than 50%', value: '0-49' }\n    ]\n}];\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Table, TableBody, TableHeader, sortable, fitContent } from '@patternfly/react-table';\nimport PrimaryToolbar from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport { emptyRows } from 'PresentationalComponents';\nimport useFilterConfig from 'Utilities/hooks/useFilterConfig';\nimport useTableSort from 'Utilities/hooks/useTableSort';\nimport { Name, OperatingSystem, CompliantSystems } from './Cells';\nimport { uniq } from 'Utilities/helpers';\nimport {\n    policyNameFilter, policyTypeFilter, operatingSystemFilter, policyComplianceFilter\n} from './Filters';\n\nconst ReportsTable = ({ profiles }) => {\n    const columns = [\n        {\n            title: 'Policy',\n            transforms: [sortable],\n            sortByProperty: 'name',\n            props: {\n                width: 55\n            }\n        },\n        {\n            title: 'Operating system',\n            transforms: [sortable, fitContent],\n            sortByProperty: 'majorOsVersion',\n            props: {\n                width: 20\n            }\n        },\n        {\n            title: 'Systems meeting compliance',\n            transforms: [sortable, fitContent],\n            sortByFunction: ({ testResultHostCount, compliantHostCount }) => (\n                (100 / testResultHostCount) * compliantHostCount\n            ),\n            props: {\n                width: 25\n            }\n        }\n    ];\n    const policyTypes = uniq(profiles.map(({ policyType }) => (policyType)).filter((i) => (!!i)));\n    const operatingSystems = uniq(profiles.map(({ majorOsVersion }) => (majorOsVersion)).filter((i) => (!!i)));\n    const { conditionalFilter, filtered: filteredProfiles } = useFilterConfig([\n        ...policyNameFilter,\n        ...policyTypes.length > 0 && policyTypeFilter(policyTypes) || [],\n        ...operatingSystems.length > 0 && operatingSystemFilter(operatingSystems) || [],\n        ...policyComplianceFilter\n    ], profiles);\n    const { tableSort, sorted: sortedProfiles } = useTableSort(filteredProfiles, columns);\n    const rows = sortedProfiles.length > 0 ? sortedProfiles.map((profile) => ({\n        cells: [\n            { title: <Name { ...profile } /> },\n            { title: <OperatingSystem { ...profile } /> },\n            { title: <CompliantSystems { ...profile } /> }\n        ]\n    })) : emptyRows;\n\n    return <React.Fragment>\n        <PrimaryToolbar { ...conditionalFilter } />\n        <Table\n            aria-label='Reports'\n            cells={ columns }\n            rows={ rows }\n            { ...tableSort }>\n            <TableHeader />\n            <TableBody />\n        </Table>\n    </React.Fragment>;\n};\n\nReportsTable.propTypes = {\n    profiles: propTypes.array\n};\n\nexport default ReportsTable;\n","import React from 'react';\nimport { Button } from '@patternfly/react-core';\nimport ComplianceEmptyState from '@redhat-cloud-services/frontend-components-inventory-compliance/ComplianceEmptyState';\nimport { BackgroundLink } from 'PresentationalComponents';\n\nconst ReportsEmptyState = () => (\n    <ComplianceEmptyState\n        title={ 'No policies are reporting' }\n        mainButton={ <BackgroundLink to='/scappolicies/new'>\n            <Button variant='primary'>Create new policy</Button>\n        </BackgroundLink> }\n    />\n);\n\nexport default ReportsEmptyState;\n","import React from 'react';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport {\n    Button,\n    Popover,\n    Text,\n    TextList,\n    TextListVariants,\n    TextListItem,\n    TextListItemVariants,\n    TextContent,\n    TextVariants\n} from '@patternfly/react-core';\nimport { fixedPercentage } from 'Utilities/TextHelper';\nimport {\n    Link\n} from 'react-router-dom';\nimport propTypes from 'prop-types';\n\nconst PolicyPopover = ({ profile, position = 'top' }) => {\n    const { policy, policyType, complianceThreshold, majorOsVersion, businessObjective } = profile;\n    return (\n        <Popover\n            { ...{ position } }\n            headerContent={\n                <TextContent>\n                    { policy.name }\n                    <Text component={ TextVariants.small }>{ policyType }</Text>\n                </TextContent>\n            }\n            footerContent={\n                <Link to={'/scappolicies/' + policy.id} >\n                    View policy\n                </Link>\n            }\n            bodyContent={\n                <TextContent className='policy-details'>\n                    <TextList component={TextListVariants.dl}>\n                        <TextListItem component={TextListItemVariants.dt}>\n                            Operating system\n                        </TextListItem>\n                        <TextListItem component={TextListItemVariants.dd}>\n                            RHEL { majorOsVersion }\n                        </TextListItem>\n                        <TextListItem component={TextListItemVariants.dt}>\n                            Compliance threshold\n                        </TextListItem>\n                        <TextListItem component={TextListItemVariants.dd}>\n                            { fixedPercentage(complianceThreshold, 1) }\n                        </TextListItem>\n                        { businessObjective &&\n                        <React.Fragment>\n                            <TextListItem component={TextListItemVariants.dt}>\n                                Business objective\n                            </TextListItem>\n                            <TextListItem component={TextListItemVariants.dd}>\n                                { businessObjective.title }\n                            </TextListItem>\n                        </React.Fragment> }\n                    </TextList>\n                </TextContent>\n            }\n        >\n            <Button variant=\"link\" isInline>\n                <OutlinedQuestionCircleIcon className='grey-icon'/>\n            </Button>\n        </Popover>\n    );\n};\n\nPolicyPopover.propTypes = {\n    profile: propTypes.object,\n    position: propTypes.string\n};\n\nexport default PolicyPopover;\n","import React, { Fragment } from 'react';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport { Tooltip } from '@patternfly/react-core';\n\nconst PolicyThresholdTooltip = () => (\n    <Tooltip\n        position='right'\n        content={\n            <Fragment>\n                The compliance threshold defines what percentage of rules must be\n                met in order for a system to be determined &quot;compliant&quot;.\n            </Fragment>\n        }\n    >\n        <span>\n            &nbsp;<OutlinedQuestionCircleIcon className='grey-icon'/>\n        </span>\n    </Tooltip>\n);\n\nexport default PolicyThresholdTooltip;\n","import React, { Fragment } from 'react';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport { Tooltip } from '@patternfly/react-core';\n\nconst PolicyBusinessObjectiveTooltip = () => (\n    <Tooltip\n        position='right'\n        content={\n            <Fragment>\n                This is an optional field that can be used to label policies that\n                are related to specific business objectives.\n            </Fragment>\n        }\n    >\n        <span>\n            &nbsp;<OutlinedQuestionCircleIcon className='grey-icon'/>\n        </span>\n    </Tooltip>\n);\n\nexport default PolicyBusinessObjectiveTooltip;\n","import React from 'react';\nimport {\n    Bullseye, EmptyState, EmptyStateBody, EmptyStateVariant, Title\n} from '@patternfly/react-core';\nimport EmptyTable from '@redhat-cloud-services/frontend-components/EmptyTable';\n\nconst NoResultsTable = () => (\n    <EmptyTable>\n        <Bullseye>\n            <EmptyState variant={ EmptyStateVariant.full }>\n                <Title headingLevel=\"h5\" size=\"lg\">\n                    No matching policies found\n                </Title>\n                <EmptyStateBody>\n                    This filter criteria matches no policies. <br /> Try changing your filter settings.\n                </EmptyStateBody>\n            </EmptyState>\n        </Bullseye>\n    </EmptyTable>\n);\n\nexport const emptyRows = [{\n    cells: [\n        {\n            title: () => (<NoResultsTable />),  // eslint-disable-line\n            props: {\n                colSpan: 3\n            }\n        }\n    ]\n}];\n\nexport default NoResultsTable;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Table, TableHeader, TableBody, fitContent } from '@patternfly/react-table';\nimport { Button, Pagination, PaginationVariant, ToolbarItem, TextContent } from '@patternfly/react-core';\nimport PrimaryToolbar from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport TableToolbar from '@redhat-cloud-services/frontend-components/TableToolbar';\nimport { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\nimport { FilterConfigBuilder } from '@redhat-cloud-services/frontend-components-inventory-compliance/Utilities';\nimport {\n    BackgroundLink, GreySmallText, SystemsCountWarning, emptyRows, OperatingSystemBadge\n} from 'PresentationalComponents';\n\nexport const PolicyNameCell = ({ profile }) => (\n    <TextContent>\n        <Link to={'/scappolicies/' + profile.id}>{ profile.policy.name }</Link>\n        <GreySmallText>{ profile.policyType }</GreySmallText>\n    </TextContent>\n);\n\nPolicyNameCell.propTypes = {\n    profile: propTypes.object\n};\n\nconst policiesToRows = (policies) => (\n    policies.map((policy) => (\n        {\n            policyId: policy.id,\n            cells: [\n                { title: <PolicyNameCell profile={policy} /> },\n                { title: <OperatingSystemBadge majorOsVersion={ policy.majorOsVersion } /> },\n                { title: policy.totalHostCount > 0 ? policy.totalHostCount :\n                    <SystemsCountWarning count={ policy.totalHostCount } variant='count' /> },\n                policy.businessObjective && policy.businessObjective.title || '--',\n                `${policy.complianceThreshold}%`\n            ]\n        }\n    ))\n);\n\nconst FILTER_CONFIGURATION = [\n    {\n        type: conditionalFilterType.text,\n        label: 'Name',\n        filter: (policies, value) => (\n            policies.filter((policy) => policy.name.includes(value))\n        )\n    }\n];\n\nexport class PoliciesTable extends React.Component {\n    filterConfigBuilder = new FilterConfigBuilder(FILTER_CONFIGURATION);\n    chipBuilder = this.filterConfigBuilder.getChipBuilder();\n    filterBuilder = this.filterConfigBuilder.getFilterBuilder();\n    columns = [\n        { title: 'Name' },\n        { title: 'Operating system' },\n        { title: 'Systems' },\n        { title: 'Business objective', transforms: [fitContent] },\n        { title: 'Compliance threshold', transforms: [fitContent] }\n    ]\n    state = {\n        page: 1,\n        itemsPerPage: 10,\n        activeFilters: {}\n    }\n\n    setPage = (_event, page) => (\n        this.changePage(page, this.state.itemsPerPage)\n    )\n\n    setPerPage = (_event, itemsPerPage) => (\n        this.changePage(1, itemsPerPage)\n    )\n\n    changePage = (page, itemsPerPage) => (\n        this.setState({\n            page,\n            itemsPerPage\n        })\n    )\n\n    paginatedPolicies = (policies) => (\n        policies.slice(\n            (this.state.page - 1) * this.state.itemsPerPage,\n            this.state.page * this.state.itemsPerPage\n        )\n    )\n\n    filteredPolicies = () => (\n        this.filterConfigBuilder.applyFilterToObjectArray(\n            this.props.policies, this.state.activeFilters\n        )\n    )\n\n    onFilterUpdate = (filter, value) => {\n        this.setState({\n            page: 1,\n            activeFilters: {\n                ...this.state.activeFilters,\n                [filter]: value\n            }\n        });\n    }\n\n    deleteFilter = (chips) => {\n        const activeFilters =  this.filterConfigBuilder.removeFilterWithChip(\n            chips, this.state.activeFilters\n        );\n        this.setState({\n            activeFilters\n        });\n    }\n\n    clearAllFilter = () => (\n        this.setState({\n            activeFilters: this.filterConfigBuilder.initialDefaultState()\n        })\n    )\n\n    onFilterDelete = (_event, chips, clearAll = false) => (\n        clearAll ? this.clearAllFilter() : this.deleteFilter(chips[0])\n    )\n\n    actionResolver = () => ([\n        {\n            title: 'Delete policy',\n            onClick: (_event, _index, { policyId }) => {\n                const policy = this.props.policies.find((policy) => (\n                    policy.id === policyId\n                ));\n                this.props.history.push(`/scappolicies/${ policyId }/delete`, {\n                    policy,\n                    background: this.props.location\n                });\n            }\n        },\n        {\n            title: 'Edit policy',\n            onClick: (_event, _index, { policyId }) => {\n                const policy = this.props.policies.find((policy) => (\n                    policy.id === policyId\n                ));\n                this.props.history.push(`/scappolicies/${ policyId }/edit`, {\n                    policy,\n                    background: this.props.location,\n                    state: { policy }\n                });\n            }\n        }\n    ]);\n\n    render() {\n        const { page, itemsPerPage } = this.state;\n        const policies = this.filteredPolicies();\n        const filterChips = this.chipBuilder.chipsFor(this.state.activeFilters);\n        const rows = policiesToRows(this.paginatedPolicies(policies));\n        const filterConfig = this.filterConfigBuilder.buildConfiguration(\n            this.onFilterUpdate,\n            this.state.activeFilters,\n            { hideLabel: true }\n        );\n        const pagination = {\n            page,\n            itemCount: policies.length,\n            dropDirection: 'down',\n            onSetPage: this.setPage,\n            onPerPageSelect: this.setPerPage,\n            perPage: itemsPerPage\n        };\n\n        return <React.Fragment>\n            <PrimaryToolbar\n                filterConfig={ filterConfig }\n                activeFiltersConfig={{\n                    filters: filterChips,\n                    onDelete: this.onFilterDelete\n                }}\n                pagination={{\n                    ...pagination,\n                    dropDirection: 'down'\n                }}>\n                <ToolbarItem>\n                    <BackgroundLink to='/scappolicies/new'>\n                        <Button variant='primary'>Create new policy</Button>\n                    </BackgroundLink>\n                </ToolbarItem>\n                <ToolbarItem>\n                    { policies.length } results\n                </ToolbarItem>\n            </PrimaryToolbar>\n            <Table\n                aria-label='policies'\n                className='compliance-policies-table'\n                cells={ this.columns }\n                actionResolver={ rows.length > 0 && this.actionResolver }\n                rows={ (rows.length === 0) ? emptyRows : rows }>\n                <TableHeader />\n                <TableBody />\n            </Table>\n            <TableToolbar isFooter className=\"ins-c-inventory__table--toolbar\">\n                <Pagination\n                    { ...pagination }\n                    dropDirection='up'\n                    variant={ PaginationVariant.bottom }\n                />\n            </TableToolbar>\n        </React.Fragment>;\n    }\n}\n\nPoliciesTable.propTypes = {\n    policies: propTypes.array.isRequired,\n    history: propTypes.object.isRequired,\n    location: propTypes.object.isRequired\n};\n\nPoliciesTable.defaultProps = {\n    policies: []\n};\n\nexport { policiesToRows };\n\nexport default withRouter(PoliciesTable);\n","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { FormGroup } from '@patternfly/react-core';\nimport { ReduxFormTextInput } from 'PresentationalComponents/ReduxFormWrappers/ReduxFormWrappers';\nimport propTypes from 'prop-types';\nimport round from 'lodash/round';\nimport { thresholdValid } from '../../SmartComponents/CreatePolicy/validate';\nimport { PolicyThresholdTooltip } from 'PresentationalComponents';\n\nexport class ProfileThresholdField extends React.Component {\n    state = {\n        validThreshold: thresholdValid(this.props.previousThreshold),\n        threshold: round(this.props.previousThreshold || 100, 1)\n    };\n\n    handleThresholdChange = (threshold) => (\n        this.setState({\n            validThreshold: thresholdValid(threshold),\n            threshold: round(threshold, 1)\n        })\n    )\n\n    render() {\n        const { threshold, validThreshold } = this.state;\n\n        return (\n            <React.Fragment>\n                <FormGroup fieldId='policy-threshold'\n                    validated={ validThreshold ? 'default' : 'error' }\n                    helperTextInvalid='Threshold has to be a number between 0 and 100'\n                    helperText=\"A value of 95% or higher is recommended\"\n                    labelIcon={ <PolicyThresholdTooltip /> }\n                    label='Compliance threshold (%)'>\n                    <Field name='complianceThreshold' id='complianceThreshold' isRequired={true}\n                        onChange={this.handleThresholdChange}\n                        validated={ validThreshold ? 'default' : 'error' }\n                        defaultValue={threshold}\n                        aria-label=\"compliance threshold\"\n                        component={ReduxFormTextInput} type='number'\n                        style={ { width: '60%', display: 'block' } } />\n                </FormGroup>\n            </React.Fragment>\n        );\n    }\n}\n\nProfileThresholdField.propTypes = {\n    previousThreshold: propTypes.number\n};\n\nexport default reduxForm({\n    form: 'policyForm',\n    destroyOnUnmount: false,\n    forceUnregisterOnUnmount: true\n})(ProfileThresholdField);\n","import React from 'react';\nimport { supportedConfigsLink } from '@redhat-cloud-services/frontend-components-inventory-compliance';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\n\nconst SupportedSSGVersionsLink = () => (\n    <a target='_blank' rel='noopener noreferrer' href={ supportedConfigsLink }>\n        Supported SSG versions <ExternalLinkAltIcon />\n    </a>\n);\n\nexport default SupportedSSGVersionsLink;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Popover, Tooltip, Text } from '@patternfly/react-core';\nimport { ExclamationTriangleIcon, OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport { SupportedSSGVersionsLink } from 'PresentationalComponents';\n\nconst UNSUPPORTED_SINGULAR_MESSAGE =\n    'This system was using an incompatible version of the SSG at the time this report was generated. ' +\n    'Assessment of rules failed/passed on this system is a best-guess effort and may not be accurate.';\nconst UNSUPPORTED_PLURAL_MESSAGE = <React.Fragment>\n    <Text variant='p' style={ { marginBottom: '1rem' } }>\n        These systems are running unsupported versions of the SCAP Security Guide (SSG) for the version of RHEL installed on them.\n        Assessment of rules failed/passed on these systems is a best-guess effort and may not be accurate.\n    </Text>\n    <Text variant='p'>\n        The policy&apos;s compliance score excludes these systems.\n    </Text>\n</React.Fragment>;\n\nconst WarningWithPopover = ({ children, variant = 'plural' }) => (\n    <Popover\n        id='unsupported-popover'\n        maxWidth='25rem'\n        headerContent='Unsupported SSG versions'\n        bodyContent={ variant === 'plural' ? UNSUPPORTED_PLURAL_MESSAGE : UNSUPPORTED_SINGULAR_MESSAGE }\n        footerContent={ <SupportedSSGVersionsLink /> }>\n        { children }\n    </Popover>\n);\n\nWarningWithPopover.propTypes = {\n    children: propTypes.node,\n    variant: propTypes.oneOf(['singular', 'plural'])\n};\n\nconst WarningWithTooltip = ({ children, content }) => (\n    <Tooltip content={ content } position='bottom'>\n        { children }\n    </Tooltip>\n);\n\nWarningWithTooltip.propTypes = {\n    content: propTypes.string,\n    children: propTypes.node\n};;\n\nconst TooltipOrPopover = ({ variant, children, tooltipProps }) => {\n    const { Component, componentProps } = {\n        tooltip: {\n            Component: WarningWithTooltip,\n            componentProps: tooltipProps\n        },\n        popover: {\n            Component: WarningWithPopover,\n            componentProps: {\n                showHeader: tooltipProps.showPopupHeader,\n                variant: tooltipProps.messageVariant\n            }\n        }\n    }[variant];\n\n    return <Component { ...componentProps }>\n        { children }\n    </Component>;\n};\n\nTooltipOrPopover.propTypes = {\n    children: propTypes.node,\n    variant: propTypes.oneOf(['tooltip', 'popover']),\n    tooltipProps: propTypes.object\n};\n\nconst UnsupportedSSGVersion = ({\n    children, showWarningIcon = true, showHelpIcon = false, style, tooltipText, messageVariant\n}) => {\n    const tooltipProps = {\n        ...tooltipText && { content: <div>{ tooltipText }</div> },\n        messageVariant\n    };\n    const variant = tooltipText ? 'tooltip' : 'popover';\n    const iconProps = {\n        variant,\n        tooltipProps\n    };\n    const defaultStyle = !tooltipText ? { cursor: 'pointer' } : {};\n\n    return <span style={ { ...style, display: 'inline-block' } }>\n        { showWarningIcon && <TooltipOrPopover { ...iconProps }>\n            <ExclamationTriangleIcon\n                className='ins-u-warning'\n                style={ {\n                    ...defaultStyle,\n                    marginRight: '.25em'\n                } }\n            />\n        </TooltipOrPopover> }\n\n        { children }\n\n        { showHelpIcon &&  <TooltipOrPopover { ...iconProps }>\n            <OutlinedQuestionCircleIcon\n                style={ {\n                    ...defaultStyle,\n                    marginLeft: '.25em'\n                } }\n            />\n        </TooltipOrPopover> }\n    </span>;\n};\n\nUnsupportedSSGVersion.propTypes = {\n    showWarningIcon: propTypes.bool,\n    showHelpIcon: propTypes.bool,\n    style: propTypes.object,\n    tooltipText: propTypes.string,\n    children: propTypes.node,\n    variant: propTypes.string,\n    messageVariant: propTypes.string,\n    showPopupHeader: propTypes.bool\n};\n\nexport default UnsupportedSSGVersion;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Text } from '@patternfly/react-core';\n\nconst SubPageTitle = ({ children }) => (\n    <Text\n        component='h2'\n        style={ {\n            color: 'var(--pf-global--Color--200)',\n            lineHeight: '2rem'\n        } }>\n        { children }\n    </Text>\n);\n\nSubPageTitle.propTypes = {\n    children: propTypes.node\n};\n\nexport default SubPageTitle;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Label } from '@patternfly/react-core';\n\nconst OperatingSystemBadge = ({ majorOsVersion }) => {\n    const colorMap = {\n        default: 'var(--pf-global--disabled-color--200)',\n        7: 'cyan',\n        8: 'purple'\n    };\n    const color = colorMap[majorOsVersion] || colorMap.default;\n\n    return <Label { ...{ color } }>\n        RHEL { majorOsVersion }\n    </Label>;\n};\n\nOperatingSystemBadge.propTypes = {\n    majorOsVersion: propTypes.string\n};\n\nexport default OperatingSystemBadge;\n","import React from 'react';\nimport {\n    EmptyStateBody, EmptyState, EmptyStateVariant, Text, TextContent, TextVariants, Title, Bullseye\n} from '@patternfly/react-core';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\nimport { WARNING_TEXT } from 'PresentationalComponents';\n\nconst NoSystemsTableWithWarning = () => (\n    <Bullseye>\n        <EmptyState variant={ EmptyStateVariant.full }>\n            <Title headingLevel=\"h2\" size='lg' style={ { fontWeight: 'bold' }}>\n                No systems on this policy\n            </Title>\n            <EmptyStateBody>\n                <TextContent>\n                    <Text component={ TextVariants.p }>\n                        Add systems to this policy from the systems page\n                    </Text>\n                    <Text style={ { color: 'var(--pf-global--warning-color--100)' }}>\n                        <ExclamationTriangleIcon /> { WARNING_TEXT }\n                    </Text>\n                </TextContent>\n            </EmptyStateBody>\n        </EmptyState>\n    </Bullseye>\n);\n\nexport default NoSystemsTableWithWarning;\n","export const validateBenchmarkPage = (benchmark, osMajorVersion, profile) => {\n    if (benchmark && osMajorVersion && profile) {\n        return true;\n    } else {\n        return false;\n    }\n};\n\nexport const thresholdValid = (threshold) => (\n    threshold < 101 && threshold >= 0\n);\n\nexport const validateDetailsPage = (name, refId, complianceThreshold) => (\n    !name || !refId  || !complianceThreshold || !thresholdValid(complianceThreshold) ? false : true\n);\n\nexport const validateRulesPage = (selectedRuleRefIds) => (\n    selectedRuleRefIds?.length > 0\n);\n\nexport const validateSystemsPage = (systemIds) => {\n    if (systemIds) {\n        return systemIds.length > 0;\n    } else {\n        return false;\n    }\n};\n","export const isNumberRange = (value) => value && !!value.match(/\\d\\d*-\\d\\d*/);\n\nexport const fixedPercentage = (value, fixed = 0, withPercent = true) => {\n    const fixedValue = (value)?.toFixed(fixed);\n    return fixedValue ? (fixedValue + (withPercent ? '%' : '')) : 'N/A';\n};\n\nexport const pluralize = (value, singular, plural) => {\n    if (!plural) {\n        plural = singular + 's';\n    }\n\n    return (value > 1 || value === 0 ? plural : singular);\n};\n\nexport const stringToId = (string) => (\n    string.replace(' ', '').toLowerCase()\n);\n","export const uniq = (collection) => [...new Set(collection)];\n\nexport const sortingByProp = (propName, order = 'asc') => (\n    (objA, objB) => {\n        const propA = (objA && objA[propName]) || '';\n        const propB = (objB && objB[propName]) || '';\n        if (propA === propB) {\n            return 0;\n        } else if (order === 'asc') {\n            return propA < propB ? -1 : 1;\n        } else {\n            return propA < propB ? 1 : -1;\n        }\n    }\n);\n","import { useState } from 'react';\nimport { FilterConfigBuilder } from '@redhat-cloud-services/frontend-components-inventory-compliance/Utilities';\n\nconst filterValues = (activeFilters) => (\n    Object.values(activeFilters).filter((value) => {\n        if (typeof value === Object) {\n            return Object.values(value).length > 0;\n        }\n\n        if (typeof value === Array) {\n            return value?.length > 0;\n        }\n\n        return !!value;\n    })\n);\n\nconst useFilterConfig = (initialConfig, arrayToFilter) => {\n    const filterConfigBuilder = new FilterConfigBuilder(initialConfig);\n    const [activeFilters, setActiveFilters] = useState(filterConfigBuilder.initialDefaultState());\n    const [activeFilterValues, setActiveFilterValues] = useState([]);\n    const onFilterUpdate = (filter, value) => {\n        const newActiveFilters = {\n            ...activeFilters,\n            [filter]: value\n        };\n        setActiveFilters(newActiveFilters);\n        setActiveFilterValues(filterValues(newActiveFilters));\n    };\n\n    const clearAllFilter = () => (\n        setActiveFilters(filterConfigBuilder.initialDefaultState())\n    );\n\n    const deleteFilter = (chips) => {\n        const newActiveFilters = filterConfigBuilder.removeFilterWithChip(\n            chips, activeFilters\n        );\n        setActiveFilters(newActiveFilters);\n        setActiveFilterValues(filterValues(newActiveFilters));\n    };\n\n    const onFilterDelete = (_event, chips, clearAll = false) => (\n        clearAll ? clearAllFilter() : deleteFilter(chips[0])\n    );\n\n    const chipBuilder = filterConfigBuilder.getChipBuilder();\n    const filterConfig = filterConfigBuilder.buildConfiguration(\n        onFilterUpdate,\n        activeFilters\n    );\n    const filterChips = chipBuilder.chipsFor(activeFilters);\n    const filteredArray = arrayToFilter ? filterConfigBuilder.applyFilterToObjectArray(\n        arrayToFilter, activeFilters\n    ) : undefined;\n\n    return {\n        conditionalFilter: {\n            filterConfig,\n            activeFiltersConfig: {\n                filters: filterChips,\n                onDelete: onFilterDelete\n            }\n        },\n        filtered: filteredArray,\n        activeFilters,\n        activeFilterValues,\n        buildFilterString: () => filterConfigBuilder.getFilterBuilder().buildFilterString(activeFilters)\n    };\n};\n\nexport default useFilterConfig;\n"],"sourceRoot":""}