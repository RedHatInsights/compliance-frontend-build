{"version":3,"sources":["webpack:///./src/PresentationalComponents/ComplianceEmptyState/ComplianceEmptyState.js","webpack:///./src/PresentationalComponents/ComplianceRemediationButton/ComplianceRemediationButton.js","webpack:///./src/PresentationalComponents/ErrorCard/ErrorCard.js","webpack:///./src/PresentationalComponents/ReduxFormWrappers/ReduxFormWrappers.js","webpack:///./src/PresentationalComponents/RulesTable/Cells.js","webpack:///./src/PresentationalComponents/RulesTable/Columns.js","webpack:///./src/Utilities/hooks/useTableTools/useTableSort.js","webpack:///./src/Utilities/hooks/useTableTools/usePaginate.js","webpack:///./src/Utilities/hooks/useTableTools/Components/NoResultsTable.js","webpack:///./src/Utilities/hooks/useTableTools/useRowsBuilder.js","webpack:///./src/Utilities/hooks/useTableTools/useItemIdentify.js","webpack:///./src/Utilities/hooks/useTableTools/useExpandable.js","webpack:///./src/Utilities/hooks/useTableTools/useDedicatedAction.js","webpack:///./src/Utilities/hooks/useTableTools/Components/TableToolsTable.js","webpack:///./src/Utilities/hooks/useTableTools/useTableTools.js","webpack:///./src/PresentationalComponents/RulesTable/RuleDetailsRow.js","webpack:///./src/PresentationalComponents/RulesTable/EmptyRows.js","webpack:///./src/PresentationalComponents/RulesTable/Constants.js","webpack:///./src/PresentationalComponents/RulesTable/Filters.js","webpack:///./src/PresentationalComponents/RulesTable/RulesTable.js","webpack:///./src/PresentationalComponents/TabbedRules/OsVersionText.js","webpack:///./src/PresentationalComponents/TabbedRules/ProfileTabContent.js","webpack:///./src/PresentationalComponents/TabbedRules/ruleSelection.js","webpack:///./src/PresentationalComponents/TabbedRules/TabbedRules.js","webpack:///./src/PresentationalComponents/UnsupportedSSGVersion/UnsupportedSSGVersion.js","webpack:///./src/PresentationalComponents/LoadingPoliciesTable/LoadingPoliciesTable.js","webpack:///./src/PresentationalComponents/ErrorPage/ErrorPage.js","webpack:///./src/PresentationalComponents/GreySmallText/GreySmallText.js","webpack:///./src/PresentationalComponents/CheckboxGroup/CheckboxGroup.js","webpack:///./src/PresentationalComponents/ProfileTypeSelect/ProfileTypeSelect.js","webpack:///./src/PresentationalComponents/ComplianceScore/ComplianceScore.js","webpack:///./src/PresentationalComponents/PolicyDetailsContentLoader/PolicyDetailsContentLoader.js","webpack:///./src/PresentationalComponents/ReportDetailsContentLoader/ReportDetailsContentLoader.js","webpack:///./src/PresentationalComponents/PolicyDetailsDescription/PolicyDetailsDescription.js","webpack:///./src/PresentationalComponents/ReportDetailsDescription/ReportDetailsDescription.js","webpack:///./src/PresentationalComponents/ProgressBar/ProgressBar.js","webpack:///./src/PresentationalComponents/TabSwitcher/TabSwitcher.js","webpack:///./src/PresentationalComponents/StateView/StateView.js","webpack:///./src/PresentationalComponents/SystemsCountWarning/SystemsCountWarning.js","webpack:///./src/PresentationalComponents/WarningText/WarningText.js","webpack:///./src/PresentationalComponents/BackgroundLink/BackgroundLink.js","webpack:///./src/PresentationalComponents/BreadcrumbLinkItem/BreadcrumbLinkItem.js","webpack:///./src/PresentationalComponents/ReportsTable/Cells.js","webpack:///./src/PresentationalComponents/ReportsTable/Filters.js","webpack:///./src/PresentationalComponents/ReportsTable/ReportsTable.js","webpack:///./src/Utilities/hooks/useTableSort.js","webpack:///./src/PresentationalComponents/ReportsEmptyState/ReportsEmptyState.js","webpack:///./src/PresentationalComponents/PolicyPopover/PolicyPopover.js","webpack:///./src/PresentationalComponents/PolicyThresholdTooltip/PolicyThresholdTooltip.js","webpack:///./src/PresentationalComponents/PolicyBusinessObjectiveTooltip/PolicyBusinessObjectiveTooltip.js","webpack:///./src/PresentationalComponents/NoResultsTable/NoResultsTable.js","webpack:///./src/PresentationalComponents/PoliciesTable/PoliciesTable.js","webpack:///./src/PresentationalComponents/ProfileThresholdField/ProfileThresholdField.js","webpack:///./src/PresentationalComponents/SupportedSSGVersionsLink/SupportedSSGVersionsLink.js","webpack:///./src/PresentationalComponents/SubPageTitle/SubPageTitle.js","webpack:///./src/PresentationalComponents/NoSystemsTableWithWarning/NoSystemsTableWithWarning.js","webpack:///./src/PresentationalComponents/ConditionalLink/ConditionalLink.js","webpack:///./src/SmartComponents/CreatePolicy/validate.js","webpack:///./src/Utilities/TextHelper.js","webpack:///./src/Utilities/helpers.js","webpack:///./src/Utilities/hooks/useTableTools/FilterConfigBuilder/Helpers.js","webpack:///./src/Utilities/hooks/useTableTools/FilterConfigBuilder/FilterBuilder.js","webpack:///./src/Utilities/hooks/useTableTools/FilterConfigBuilder/ChipBuilder.js","webpack:///./src/Utilities/hooks/useTableTools/FilterConfigBuilder/FilterConfigBuilder.js","webpack:///./src/Utilities/hooks/useTableTools/helper.js","webpack:///./src/Utilities/hooks/useTableTools/useBulkSelect.js","webpack:///./src/Utilities/hooks/useTableTools/Components/SelectedFilterSwitch.js","webpack:///./src/Utilities/hooks/useTableTools/useSelectedFilter.js","webpack:///./src/Utilities/hooks/useTableTools/useFilterConfig.js","webpack:///./src/Utilities/ruleHelpers.js"],"names":["QUERY","gql","ComplianceEmptyState","title","mainButton","client","useQuery","fetchPolicy","data","error","loading","Spinner","errorMsg","ErrorCard","message","policiesCount","profiles","totalCount","policyWord","haveWord","Bullseye","EmptyState","EmptyStateIcon","style","fontWeight","color","size","icon","CloudSecurityIcon","Title","headingLevel","EmptyStateBody","TextContent","href","EmptyStatePrimary","EmptyStateSecondaryActions","Button","variant","component","target","rel","propTypes","defaultProps","ApolloClient","link","HttpLink","uri","COMPLIANCE_API_ROOT","credentials","cache","InMemoryCache","ComplianceRemediationButton","profile","system","majorOsVersion","refId","id","split","description","systems","issues","issueIds","map","issue","filter","index","originalIssueIndex","indexOf","Array","from","Set","concat","rule","find","rules","profileRule","remediationAvailable","ruleProfile","supported","compliant","formatRule","props","allSystems","selectedRules","result","forEach","push","length","rulesWithRemediations","ruleObjectsFailed","Promise","all","then","uniqIssuesBySystem","flatten","dataProvider","flatMap","some","addNotification","this","RemediationButton","isDisabled","notEmptyData","onRemediationCreated","getNotification","React","name","severity","rationale","identifier","references","connect","dispatch","notification","ReduxFormTextInput","field","TextInput","value","input","defaultValue","onChange","ReduxFormTextArea","TextArea","ruleProps","Rule","Text","TextVariants","label","Policy","HighSeverity","className","MediumSeverity","LowSeverityIcon","width","height","viewBox","role","verticalAlign","xmlns","d","fill","fillRule","LowSeverity","UnknownSeverity","Severity","high","medium","low","toLowerCase","Passed","Ansible","Name","sortByProp","renderFunc","renderComponent","sortByFunction","PolicyCell","transforms","fitContent","sortByArray","SeverityCell","PassedCell","original","tooltip","AnsibleCell","addSortableTransform","columns","column","isSortable","uniq","sortable","columnOffset","options","onSelect","detailsComponent","useState","direction","sortBy","setSortBy","onSort","_","sorter","items","orderByArray","orderArrayByProp","tableProps","cells","perPage","enablePagination","pagination","page","paginationState","setPaginationState","setPagination","newState","onSetPage","onPerPageSelect","paginator","start","end","slice","setPage","nextPage","toolbarProps","NoResultsTable","kind","EmptyTable","EmptyStateVariant","emptyRows","colSpan","columnProp","key","primeItem","item","transformers","newItem","transformer","applyTransformers","buildRow","rowTransformer","idx","row","rowProps","itemId","undefined","itemRow","EmptyRowsComponent","transformedItems","filteredItems","sortedItems","paginatedItems","rows","v","itemCount","getIdProp","idProp","identify","itemDetailsRow","DetailsComponent","parent","rowId","childRowForRule","enableExpanbale","openItems","setOpenItems","_columns","rowIndex","isOpen","includes","onCollapse","_event","_index","_isOpen","enableDedicatedAction","dedicatedAction","DedicatedActionOption","AdditionalDedicatedActions","selected","TableToolsTable","filters","toolbarPropsOption","tablePropsOption","identifiedItems","useItemIdentify","useTableSort","sortableTableProps","usePaginate","pagintionToolbarProps","useFilterConfig","conditionalFilterProps","selectedFilterToolbarProps","useExpandable","openItem","expandableProps","useBulkSelectWithItems","selectItem","bulkSelectToolbarProps","bulkSelectTableProps","selectedItems","dedicatedActionToolbarProps","useDedicatedAction","additionalDedicatedActions","useRowsBuilder","rowBuilderToolbarProps","rowBuilderTableProps","useTableTools","PrimaryToolbar","Table","TableHeader","TableBody","TableToolbar","isFooter","Pagination","PaginationVariant","sortByProperty","isRequired","RuleDetailsRow","marginTop","Stack","StackItem","marginBottom","isFilled","Grid","GridItem","span","ident","reduce","prev","next","ref","HIGH_SEVERITY","MEDIUM_SEVERITY","LOW_SEVERITY","UNKNOWN_SEVERITY","filterRulesWithAllValues","values","valueCheck","anyFilterApply","filteredRules","BASE_FILTER_CONFIGURATION","type","conditionalFilterType","reference","PASS_FILTER_CONFIG","REMEDIATION_AVAILABLE_FILTER_CONFIG","showPassFailFilter","policies","remediationAvailableFilter","config","policy","policiesFilterConfig","RulesTable","profileRules","Columns","remediationsEnabled","selectedFilter","handleSelect","selectedRefIds","hidePassed","rulesTableProps","toRulesArrayWithProfile","c","aria-label","filterConfig","buildFilterConfig","activeFilters","passed","selectable","preselected","testResultProfiles","newOsMinorVersion","osMajorVersion","osMinorVersion","ProfileSystemCount","count","Badge","isRead","pluralize","SSGVersionText","ssgVersion","Popover","position","bodyContent","SSGPopoverBody","footerContent","cursor","fontSize","BENCHMARK_QUERY","ProfileTabContent","systemCount","selectedRuleRefIds","variables","benchmark","skip","stateValues","stateKey","matchesSelectionItem","selectionItem","selectedRuleRefIdsForTab","tabSelection","ruleRefIds","profilesWithRulesToSelection","prevSelection","only","additionalSelection","foundSelection","console","tabsDataToOsMinorMap","tabsData","osMinorMap","extendProfilesByOsMinor","eventKey","getDefaultTab","defaultTab","firstTab","TabbedRules","setSelectedRuleRefIds","level","profileSelectedRuleRefIds","filteredSelection","Tab","supportedConfigsLink","UNSUPPORTED_PLURAL_MESSAGE","WarningWithPopover","children","maxWidth","headerContent","WarningWithTooltip","content","Tooltip","TooltipOrPopover","tooltipProps","Component","componentProps","popover","showHeader","showPopupHeader","messageVariant","UnsupportedSSGVersion","showWarningIcon","showHelpIcon","tooltipText","iconProps","defaultStyle","display","ouiaId","RowLoader","ErrorPage","networkError","statusCode","window","insights","chrome","auth","logout","NotAuthorized","serviceName","InvalidObject","onClick","history","goBack","GreySmallText","CheckboxFieldArray","inputValue","defaultChecked","Checkbox","isChecked","checked","arr","splice","handleChange","InUseProfileLabel","Label","lineHeight","ProfileTypeSelect","hasGutter","disabled","rowSpan","Field","JSON","stringify","Truncate","lines","CompliantIcon","rulesPassed","rulesFailed","complianceScoreString","fixedPercentage","score","speed","backgroundcolor","foregroundcolor","x","y","rx","ry","primaryColor","secondaryColor","cx","cy","r","PolicyDetailsDescription","Card","CardHeader","CardBody","complianceThreshold","businessObjective","text","linkifyHtml","inline","policyType","PropTypes","Dt","TextListItem","TextListItemVariants","Dd","PolicyDescription","TextList","TextListVariants","Link","to","version","ReportDetailsDescription","ProgressBar","percent","failed","ProgressVariant","Progress","ContentTab","useAnchorLevels","defaultAnchor","levels","useAnchor","currentAnchor","RoutedTabSwitcher","tab","RoutedTabs","useHistory","useLocation","pathname","state","Tabs","e","preventDefault","tabToActivate","replace","tabAnchor","hash","join","activeKey","StateViewPart","StateView","child","StateViewWithError","WARNING_TEXT","WithOptionalToolTip","showTooltip","TooltipPosition","SystemsCountWarning","WarningText","BackgroundLink","desiredState","backgroundLocation","background","RouterLink","BreadcrumbLinkItem","BreadcrumbItem","marginRight","OperatingSystem","unsupportedHostCount","CompliantSystems","testResultHostCount","compliantHostCount","measureLocation","marginLeft","policyNameFilter","lowerCaseValue","policyTypeFilter","policyTypes","operatingSystemFilter","operatingSystems","operatingSystem","policyComplianceFilter","compliantHostsPercent","Math","round","min","max","i","ReportsTable","conditionalFilter","array","tableSort","sorted","sortedProfiles","PolicyPopover","isInline","Fragment","PolicyNameCell","FILTER_CONFIGURATION","PoliciesTable","FilterConfigBuilder","filterConfigBuilder","getChipBuilder","getFilterBuilder","itemsPerPage","changePage","setState","applyFilterToObjectArray","chips","removeFilterWithChip","initialDefaultState","clearAll","clearAllFilter","deleteFilter","policyId","location","filteredPolicies","filterChips","chipBuilder","chipsFor","totalHostCount","policiesToRows","paginatedPolicies","buildConfiguration","onFilterUpdate","hideLabel","dropDirection","setPerPage","activeFiltersConfig","onDelete","onFilterDelete","ToolbarItem","actionResolver","withRouter","ProfileThresholdField","validThreshold","thresholdValid","previousThreshold","threshold","FormGroup","fieldId","validated","helperTextInvalid","helperText","labelIcon","handleThresholdChange","reduxForm","form","destroyOnUnmount","forceUnregisterOnUnmount","SubPageTitle","additionalProps","validateBenchmarkPage","validateDetailsPage","validateRulesPage","validateSystemsPage","systemIds","fixed","withPercent","fixedValue","toFixed","singular","plural","collection","sortingByProp","propName","order","objA","objB","propA","propB","_data","_id","entity","getSortable","property","objects","sort","a","b","String","localeCompare","objectArray","orderProp","orderArray","sortedObjectArray","orderKey","reverse","getProperty","obj","path","fallback","parts","shift","camelCase","string","trim","toUpperCase","substring","stringToId","configItem","filterString","filterStringArray","moreThanTwo","f","fl","fs","buildFilterFilterString","combineFilterStrings","findWithString","category","currentValue","labelForValue","categoryConfig","Object","keys","groupValue","group","itemValue","getCategoryForLabel","textFilterChip","checkboxFilterChip","radioFilterChip","groupFilterChip","chipFor","defaultPlaceholder","ChipBuilder","filterBuilder","FilterBuilder","handler","placeholder","filterValues","event","selectedValues","groups","subItem","toTextFilterConfig","toCheckboxFilterConfig","toRadioFilterConfig","toGroupedFilterConfig","states","initConfig","toFilterConfigItem","default","defaultStates","initialState","filterStateName","defaultValueForFilter","query","results","parentValue","info","getItemByLabelOrValue","filteredObjects","currentState","chipItem","newGroupState","chipCategory","chipLabel","chipValue","stateProp","newFilterState","removeFilterFromGroupFilterState","removeFilterFromFilterState","filterSelected","selectedIds","selectOrUnselect","itemIds","mergeArraysUniqly","arrayA","arrayB","useBulkSelect","selectedItemsTotal","total","itemIdsInTable","itemIdsOnPage","enableBulkSelect","setSelectedItemIds","selectedIdsTotal","paginatedTotal","allSelected","noneSelected","currentPageSelected","selection","allItemsIncluded","itemsTotal","titleOption","compileTitle","onSelectCallback","func","newSelectedItemsIds","selectItems","unselectItems","unselectAll","selectNone","selectPage","currentPageIds","useEffect","canSelectAll","bulkSelect","toggleProps","selectItemTransformer","propItems","filteredTotal","filtered","allCount","setPageMemo","useMemo","clearSelection","SelectedFilterSwitch","setActiveFilter","Switch","enableSelectedFilter","filterItem","enableFilters","initialActiveFilters","setActiveFilters","addConfigItem","useSelectedFilter","selectFilterItem","activeFilterValues","filterConfigWithSelected","buildFilterString","profilesRulesFailed","profilesRulesPassed","systemRulesFailed","systemSupportedByProfiles","acc","systemsWithRuleObjectsFailed","profilesWithRules","profileWithRules","parse"],"mappings":"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","file":"js/97.a4b4c7861e87879f5c36.js","sourcesContent":["import React from 'react';\nimport propTypes from 'prop-types';\nimport { ApolloClient, HttpLink, InMemoryCache } from 'apollo-boost';\nimport {\n    Title,\n    TextContent,\n    Button,\n    Bullseye,\n    EmptyState,\n    EmptyStateBody,\n    EmptyStatePrimary,\n    EmptyStateSecondaryActions,\n    EmptyStateIcon\n} from '@patternfly/react-core';\nimport { CloudSecurityIcon } from '@patternfly/react-icons';\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/client';\nimport { Spinner } from '@redhat-cloud-services/frontend-components/Spinner';\nimport { ErrorCard } from '../ErrorCard/ErrorCard';\nconst COMPLIANCE_API_ROOT = '/api/compliance';\n\nconst QUERY = gql`\n{\n    profiles(search: \"external = false and canonical = false\") {\n        totalCount\n    }\n}\n`;\n\nconst ComplianceEmptyState = ({ title, mainButton, client }) => {\n    let { data, error, loading } = useQuery(QUERY, { fetchPolicy: 'network-only', client });\n\n    if (loading) { return <Spinner/>; }\n\n    if (error) {\n        const errorMsg = `Oops! Error loading System data: ${error}`;\n        return <ErrorCard message={errorMsg} />;\n    }\n\n    const policiesCount = data.profiles.totalCount;\n\n    const policyWord = policiesCount > 1 ? 'policies' : 'policy';\n    const haveWord = policiesCount > 1 ? 'have' : 'has';\n\n    return <Bullseye>\n        <EmptyState>\n            <EmptyStateIcon style={{ fontWeight: '500', color: 'var(--pf-global--primary-color--100)' }}\n                size=\"xl\" title=\"Compliance\" icon={CloudSecurityIcon} />\n            <Title headingLevel=\"h1\" size=\"lg\">{ title }</Title>\n            <br/>\n            <EmptyStateBody>\n                { policiesCount > 0 &&\n                    <TextContent>\n                        <a\n                            href='insights/compliance/scappolicies'\n                        >\n                            {policiesCount} {policyWord}\n                        </a> {haveWord} been created but {haveWord} no reports.\n                    </TextContent> }\n                <TextContent>\n                    The Compliance service uses SCAP policies to track your organization&#39;s adherence to\n                    compliance requirements.\n                </TextContent>\n                <TextContent>\n                    Get started by adding a policy, or read documentation about how to connect OpenSCAP to the\n                    Compliance service.\n                </TextContent>\n            </EmptyStateBody>\n            <EmptyStatePrimary>\n                { mainButton }\n            </EmptyStatePrimary>\n            <EmptyStateSecondaryActions>\n                <Button variant='link' component='a' target='_blank' rel='noopener noreferrer'\n                    href={ `https://access.redhat.com/documentation/en-us/red_hat_insights/` +\n                           `2020-04/html/assessing_and_monitoring_security_policy_compliance_of_rhel_systems/index` } >\n                    Learn about OpenSCAP and Compliance\n                </Button>\n            </EmptyStateSecondaryActions>\n        </EmptyState>\n    </Bullseye>;\n};\n\nComplianceEmptyState.propTypes = {\n    title: propTypes.string,\n    mainButton: propTypes.object,\n    client: propTypes.object\n};\n\nComplianceEmptyState.defaultProps = {\n    title: 'No policies',\n    mainButton: <Button\n        variant=\"primary\"\n        component=\"a\"\n        href=\"/insights/compliance/scappolicies\">\n        Create new policy\n    </Button>,\n    client: new ApolloClient({\n        link: new HttpLink({\n            uri: COMPLIANCE_API_ROOT + '/graphql',\n            credentials: 'include'\n        }),\n        cache: new InMemoryCache()\n    })\n};\n\nexport default ComplianceEmptyState;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport RemediationButton from '@redhat-cloud-services/frontend-components-remediations/RemediationButton';\nimport flatten from 'lodash/flatten';\nimport { connect } from 'react-redux';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications/redux';\nimport { AnsibeTowerIcon } from '@patternfly/react-icons';\n\nclass ComplianceRemediationButton extends React.Component {\n    formatRule = ({ title, refId }, profile, system, majorOsVersion) => ({\n        id: `ssg:rhel${majorOsVersion}|${profile.split('xccdf_org.ssgproject.')[1]}|${refId}`,\n        description: title,\n        systems: [\n            system\n        ]\n    })\n\n    uniqIssuesBySystem = (issues) => {\n        const issueIds = issues.map((issue) => issue.id);\n        return issues.filter((issue, index) => {\n            const originalIssueIndex = issueIds.indexOf(issue.id);\n            return (originalIssueIndex === index) ? true :\n                (issues[originalIssueIndex].systems = Array.from(new Set(\n                    issues[originalIssueIndex].systems.concat(issue.systems)))) && false;\n        });\n    }\n\n    ruleProfile = (rule, system) => (\n        system.profiles.find(profile => profile.rules.find(profileRule => rule.refId === profileRule.refId))\n    )\n\n    rulesWithRemediations = (rules, system) => {\n        return rules.filter((rule) => (\n            rule.remediationAvailable &&\n            this.ruleProfile(rule, system).supported &&\n            rule.compliant === false\n        )).map((rule) => {\n            const profile = this.ruleProfile(rule, system);\n            return this.formatRule(\n                rule, profile.refId, system.id, profile.majorOsVersion\n            );\n        });\n    }\n\n    dataProvider = () => {\n        const { allSystems, selectedRules } = this.props;\n        const result = { systems: [], issues: [] };\n\n        allSystems.filter((system) => (system.supported)).forEach(async (system) => {\n            result.systems.push(system.id);\n\n            if (selectedRules.length !== 0) {\n                result.issues.push(this.rulesWithRemediations(selectedRules, system));\n            } else {\n                result.issues.push(this.rulesWithRemediations(system.ruleObjectsFailed, system));\n            }\n        });\n\n        return Promise.all(result.issues).then(issues => {\n            result.issues = this.uniqIssuesBySystem(flatten(issues));\n            return result;\n        });\n    }\n\n    notEmptyData = async () => {\n        const data = await this.dataProvider();\n        return data.issues.length > 0 && data.systems.length > 0;\n    }\n\n    remediationAvailable = () => {\n        const { allSystems, selectedRules } = this.props;\n        let rules = selectedRules.length ? selectedRules : allSystems.flatMap((system) => system.ruleObjectsFailed);\n\n        return rules.some((rule) => (\n            rule.remediationAvailable &&\n            (\n                rule.profiles?.some((profile) => profile.supported) ||\n                allSystems.some((system) => this.ruleProfile(rule, system).supported)\n            ) &&\n            rule.compliant === false\n        ));\n    }\n\n    render() {\n        const { addNotification } = this.props;\n\n        return (\n            <React.Fragment>\n                <RemediationButton\n                    isDisabled={ !(this.remediationAvailable() && this.notEmptyData()) }\n                    onRemediationCreated={ result => addNotification(result.getNotification()) }\n                    dataProvider={ this.dataProvider }>\n                    <AnsibeTowerIcon size='sm' color='var(--pf-c-button--m-primary--Color)' />\n                    &nbsp;Remediate\n                </RemediationButton>\n            </React.Fragment>\n        );\n    }\n}\n\nComplianceRemediationButton.propTypes = {\n    selectedRules: propTypes.array,\n    allSystems: propTypes.arrayOf(propTypes.shape({\n        id: propTypes.string,\n        name: propTypes.string,\n        supported: propTypes.bool.isRequired,\n        profiles: propTypes.arrayOf(propTypes.shape({\n            refId: propTypes.string,\n            name: propTypes.string,\n            rules: propTypes.arrayOf(propTypes.shape({\n                title: propTypes.string,\n                severity: propTypes.string,\n                rationale: propTypes.string,\n                refId: propTypes.string,\n                description: propTypes.string,\n                compliant: propTypes.bool,\n                identifier: propTypes.string,\n                references: propTypes.string\n            }))\n        }))\n    })),\n    addNotification: propTypes.func\n};\n\nComplianceRemediationButton.defaultProps = {\n    allSystems: []\n};\n\nexport default connect(\n    () => ({}),\n    dispatch => ({\n        addNotification: notification => dispatch(addNotification(notification))\n    })\n)(ComplianceRemediationButton);\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport {\n    Card,\n    CardHeader,\n    CardBody\n} from '@patternfly/react-core';\nimport { NotEqualIcon } from '@patternfly/react-icons';\n\nconst ErrorCard = ({ errorMsg }) => (\n    <Card className=\"ins-error-card\">\n        <CardHeader>\n            <NotEqualIcon />\n        </CardHeader>\n        <CardBody>\n            <div>{ errorMsg }</div>\n        </CardBody>\n    </Card>\n);\n\nErrorCard.propTypes = {\n    errorMsg: propTypes.string\n};\n\nexport default ErrorCard;\n","import React from 'react';\nimport { rawComponents } from '@data-driven-forms/pf4-component-mapper';\nimport { TextInput, TextArea } from '@patternfly/react-core';\n\nexport const ReduxFormTextInput = field => (\n    <TextInput\n        value={field.input.value || field.defaultValue}\n        onChange={field.input.onChange}\n        {...field} />\n);\n\nexport const ReduxFormTextArea = field => (\n    <TextArea\n        value={field.input.value || field.defaultValue}\n        onChange={field.input.onChange}\n        {...field} />\n);\n\nexport const ReduxFormCreatableSelectInput = field => (\n    <rawComponents.RawSelect selectVariant=\"createable\"\n        value={field.selected}\n        onChange={field.input.onChange}\n        {...field} />\n);\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Text, TextVariants, TextContent } from '@patternfly/react-core';\nimport {\n    CheckCircleIcon, ExclamationCircleIcon, ExclamationTriangleIcon, QuestionCircleIcon\n} from '@patternfly/react-icons';\n\nconst ruleProps = {\n    title: propTypes.string,\n    identifier: propTypes.object,\n    profile: propTypes.object,\n    compliant: propTypes.bool,\n    remediationAvailable: propTypes.bool,\n    severity: propTypes.string\n};\n\nexport const Rule = ({ title, identifier }) => (\n    <TextContent>\n        { title }\n        { identifier ?\n            <Text component={ TextVariants.small }>{ identifier.label }</Text> : '' }\n    </TextContent>\n);\nRule.propTypes = ruleProps;\n\nexport const Policy = ({ profile }) => (\n    profile.name\n);\nPolicy.propTypes = ruleProps;\n\nexport const HighSeverity = () => (\n    <span>\n        <ExclamationCircleIcon className='ins-u-failed'/> High\n    </span>\n);\n\nexport const MediumSeverity = () => (\n    <span>\n        <ExclamationTriangleIcon className='ins-u-warning'/> Medium\n    </span>\n);\n\nexport const LowSeverityIcon = () => (\n    <svg width=\"1em\" height=\"1em\" viewBox=\"0 0 18 18\" role=\"img\" style={ { verticalAlign: '-0.125em' } } xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M2 0h14a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2H2a2 2 0 0 1-2-2V2a2 2 0 0 1 2-2zm6.67 10.46a1.67 1.67 0 1 0 0 3.338 1.67 1.67 0 0 0 0-3.338zm-1.586-6l.27 4.935a.435.435 0 0 0 .434.411H9.55c.232 0 .422-.18.435-.411l.27-4.936A.435.435 0 0 0 9.818 4h-2.3c-.25 0-.448.21-.435.46z\" fill=\"#3A9CA6\" fillRule=\"evenodd\"/></svg> // eslint-disable-line\n);\n\nexport const LowSeverity = () => (\n    <span>\n        <LowSeverityIcon /> Low\n    </span>\n);\n\nexport const UnknownSeverity = () => (\n    <span>\n        <QuestionCircleIcon /> Unknown\n    </span>\n);\n\nexport const Severity = ({ severity }) => (\n    {\n        high: <HighSeverity />,\n        medium: <MediumSeverity />,\n        low: <LowSeverity />\n    }[severity?.toLowerCase()] || <UnknownSeverity />\n);\nSeverity.propTypes = ruleProps;\n\nexport const Passed = ({ compliant }) => (\n    compliant ?\n        <CheckCircleIcon className='ins-u-passed' /> :\n        <ExclamationCircleIcon className='ins-u-failed' />\n);\nPassed.propTypes = ruleProps;\n\nexport const Ansible = ({ remediationAvailable }) => (\n    remediationAvailable ? <CheckCircleIcon className='ins-u-passed' /> : 'No'\n);\nAnsible.propTypes = ruleProps;\n","import React from 'react';\nimport { fitContent } from '@patternfly/react-table';\nimport { AnsibeTowerIcon } from '@patternfly/react-icons';\nimport { renderComponent } from 'Utilities/helpers';\nimport {\n    Rule, Policy as PolicyCell, Severity as SeverityCell, Passed as PassedCell, Ansible as AnsibleCell\n} from './Cells';\n\nexport const Name = {\n    title: 'Name',\n    sortByProp: 'title',\n    renderFunc: renderComponent(Rule)\n};\n\nexport const Policy = {\n    title: 'Policy',\n    sortByFunction: (rule) => (rule?.profile?.name),\n    renderFunc: renderComponent(PolicyCell)\n};\n\nexport const Severity = {\n    title: 'Severity',\n    sortByProp: 'severity',\n    transforms: [fitContent],\n    sortByArray: ['high', 'medium', 'low', 'unknown'],\n    renderFunc: renderComponent(SeverityCell)\n};\n\nexport const Passed = {\n    title: 'Passed',\n    sortByProp: 'compliant',\n    renderFunc: renderComponent(PassedCell)\n};\n\nexport const Ansible = {\n    title: <span><AnsibeTowerIcon /> Ansible</span>,\n    original: 'Ansible',\n    props: {\n        tooltip: 'Ansible'\n    },\n    transforms: [fitContent],\n    sortByProp: 'remediationAvailable',\n    renderFunc: renderComponent(AnsibleCell)\n};\n","import { useState } from 'react';\nimport { sortable } from '@patternfly/react-table';\nimport { orderArrayByProp, orderByArray, uniq } from 'Utilities/helpers';\n\nconst isSortable = (column) => (\n    column.sortByProp || column.sortByFunction\n);\n\nconst addSortableTransform = (columns) => (\n    columns.map((column) => ({\n        ...column,\n        ...isSortable(column) ? {\n            transforms: uniq([\n                ...(column?.transforms || []),\n                sortable\n            ])\n        } : {}\n    }))\n);\n\nconst columnOffset = (options = {}) => (\n    (typeof options.onSelect === 'function') +\n    (typeof options.detailsComponent  !== 'undefined')\n);\n\nconst useTableSort = (columns, options = {}) => {\n    const [sortBy, setSortBy] = useState({\n        index: 0,\n        direction: 'desc'\n    });\n    const onSort = (_, index, direction) => (\n        setSortBy({\n            index,\n            direction\n        })\n    );\n\n    return {\n        sorter: (items) => {\n            const column = columns[sortBy.index - columnOffset(options)];\n            return column?.sortByArray ? orderByArray(\n                items, column?.sortByProp, column?.sortByArray, sortBy.direction\n            ) : orderArrayByProp(\n                (column?.sortByProp || column?.sortByFunction), items, sortBy.direction\n            );\n        },\n        tableProps: {\n            onSort,\n            sortBy,\n            cells: addSortableTransform(columns)\n        }\n    };\n};\n\nexport default useTableSort;\n","import { useState } from 'react';\n\nconst usePaginate = (options = {}) => {\n    const { perPage = 10 } = options;\n    const enablePagination = options?.pagination !== false;\n\n    const [paginationState, setPaginationState] = useState({\n        perPage,\n        page: 1\n    });\n    const setPagination = (newState) => (\n        setPaginationState({\n            ...paginationState,\n            ...newState\n        })\n    );\n\n    const onSetPage = (_, page) => (\n        setPagination({ ...paginationState, page })\n    );\n\n    const onPerPageSelect = (_, perPage) => (\n        setPagination({ page: 1, perPage })\n    );\n\n    const paginator = (items) => {\n        const { page, perPage } = paginationState;\n        const start = (page - 1) * perPage;\n        const end = start + perPage;\n\n        return items.slice(start, end);\n    };\n\n    const setPage = (page) => {\n        const nextPage = page < 0 ? paginationState.page + page : page;\n        setPagination({\n            page: nextPage > 0 ? nextPage : 1\n        });\n    };\n\n    return enablePagination ? {\n        paginator,\n        setPage,\n        toolbarProps: {\n            pagination: {\n                ...paginationState,\n                onSetPage,\n                onPerPageSelect\n            }\n        }\n    } : {};\n};\n\nexport default usePaginate;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport {\n    Bullseye, EmptyState, EmptyStateBody, EmptyStateVariant, Title\n} from '@patternfly/react-core';\nimport EmptyTable from '@redhat-cloud-services/frontend-components/EmptyTable';\n\nexport const NoResultsTable = ({ kind = 'results' }) => (\n    <EmptyTable>\n        <Bullseye>\n            <EmptyState variant={ EmptyStateVariant.full }>\n                <Title headingLevel=\"h5\" size=\"lg\">\n                    No matching { kind } found\n                </Title>\n                <EmptyStateBody>\n                    This filter criteria matches no { kind }.<br />\n                    Try changing your filter settings.\n                </EmptyStateBody>\n            </EmptyState>\n        </Bullseye>\n    </EmptyTable>\n);\n\nNoResultsTable.propTypes = {\n    kind: propTypes.string\n};\n\nexport const emptyRows = [{\n    cells: [\n        {\n            title: () => (<NoResultsTable />),  // eslint-disable-line\n            props: {\n                colSpan: 3\n            }\n        }\n    ]\n}];\n\nexport default NoResultsTable;\n","import { emptyRows } from './Components/NoResultsTable';\n\nconst columnProp = (column) => (\n    column.key || column.original?.toLowerCase() || column.title?.toLowerCase()\n);\n\nconst itemRow = (item, columns) => ({\n    ...item.rowProps,\n    itemId: item.itemId,\n    cells: columns.map((column) => ({\n        title: column.renderFunc ?\n            column.renderFunc(undefined, undefined, item) : item[columnProp(column)]\n    }))\n});\n\nconst primeItem = (item, transformers) => {\n    let newItem = item;\n\n    transformers.forEach((transformer) => {\n        if (transformer) {\n            newItem = transformer(newItem);\n        }\n    });\n\n    return newItem;\n};\n\nconst applyTransformers = (items, transformers = []) => (\n    items.map((item) => (\n        primeItem(item, transformers)\n    ))\n);\n\nconst buildRow = (item, columns, rowTransformer, idx) => (\n    rowTransformer.flatMap((transformer) => {\n        const row = itemRow(item, columns);\n        return transformer ? transformer(\n            row, item, columns, idx\n        ) : row;\n    })\n);\n\nconst useRowsBuilder = (items, columns, options = {}) => {\n    const { transformer = [], rowTransformer = [] } = options;\n    const EmptyRowsComponent = options.emptyRows || emptyRows;\n    const transformedItems = transformer ?\n        applyTransformers(items, transformer) : items;\n\n    const filteredItems = options?.filter ?\n        options.filter(transformedItems) : transformedItems;\n\n    const sortedItems = options?.sorter ?\n        options.sorter(filteredItems) : filteredItems;\n\n    const paginatedItems = options?.paginator ?\n        options?.paginator(sortedItems) : sortedItems;\n\n    const rows = paginatedItems.length > 0 ? paginatedItems.flatMap((item, idx) => (\n        buildRow(item, columns, rowTransformer, idx)\n    )).filter((v) => (!!v)) : EmptyRowsComponent;\n\n    const pagination = options?.pagination ? {\n        ...options.pagination,\n        itemCount: filteredItems.length\n    } : undefined ;\n\n    return {\n        tableProps: {\n            rows\n        },\n        toolbarProps: {\n            pagination\n        }\n    };\n};\n\nexport default useRowsBuilder;\n","const getIdProp = (item, idProp = 'id') => (item[idProp]);\n\nconst identify = (item, identifier) => {\n    if (typeof identifier === 'string') {\n        return {\n            ...item,\n            itemId: getIdProp(item, identifier)\n        };\n    } else {\n        return {\n            ...item,\n            itemId: identifier(item)\n        };\n    }\n};\n\nexport const useItemIdentify = (items, options = {}) => {\n    const identifier = options?.identifier || getIdProp;\n\n    return items.map((item) => identify(item, identifier));\n};\n\nexport default useItemIdentify;\n","import React, { useState } from 'react';\n\nconst childRowForRule = (item, idx, DetailsComponent) => ({\n    parent: idx * 2,\n    cells: [\n        { title: <DetailsComponent rule={ item } key={ 'item-' + item.rowId } /> }\n    ]\n});\n\nconst itemDetailsRow = (item, idx, options) => (\n    (typeof(options?.detailsComponent) !== 'undefined') && childRowForRule(item, idx, options.detailsComponent)\n);\n\nconst useExpandable = (options) => {\n    const enableExpanbale = !!options.detailsComponent;\n    const [openItems, setOpenItems] = useState([]);\n    const onCollapse = (_event, _index, _isOpen, row) => {\n        if (openItems.includes(row.itemId)) {\n            setOpenItems(openItems.filter((itemId) => (itemId !== row.itemId)));\n        } else {\n            setOpenItems([...openItems, row.itemId]);\n        }\n    };\n\n    const openItem = (row, item, _columns, rowIndex) => {\n        const isOpen = openItems.includes(item.itemId);\n        const newRow = {\n            ...row,\n            isOpen\n        };\n        const expandableRow = itemDetailsRow(item, rowIndex, options);\n\n        return [\n            newRow,\n            expandableRow\n        ];\n    };\n\n    return enableExpanbale ? {\n        transformer: openItem,\n        tableProps: {\n            onCollapse\n        }\n    } : {};\n};\n\nexport default useExpandable;\n","import React from 'react';\n\nconst useDedicatedAction = (options) => {\n    const enableDedicatedAction = !!options.dedicatedAction;\n    const {\n        dedicatedAction: DedicatedActionOption, AdditionalDedicatedActions,\n        selected\n    } = options;\n\n    return enableDedicatedAction ? {\n        toolbarProps: {\n            dedicatedAction: selected && <div>\n                {DedicatedActionOption && <DedicatedActionOption selected={selected} />}\n                {AdditionalDedicatedActions && <AdditionalDedicatedActions selected={ selected } />}\n            </div>\n        } } : {};\n};\n\nexport default useDedicatedAction;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Pagination, PaginationVariant } from '@patternfly/react-core';\nimport { Table, TableBody, TableHeader } from '@patternfly/react-table';\nimport PrimaryToolbar from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport TableToolbar from '@redhat-cloud-services/frontend-components/TableToolbar';\nimport useTableTools from '../useTableTools';\n\nconst TableToolsTable = ({\n    items = [], columns = [], filters = [], options = {},\n    toolbarProps: toolbarPropsProp, ...tablePropsRest\n}) => {\n    const { toolbarProps, tableProps } = useTableTools(items, columns, {\n        filters,\n        toolbarProps: toolbarPropsProp,\n        tableProps: tablePropsRest,\n        ...options\n    });\n\n    return <React.Fragment>\n\n        <PrimaryToolbar { ...toolbarProps } />\n\n        <Table { ...tableProps }>\n            <TableHeader />\n            <TableBody />\n        </Table>\n\n        <TableToolbar isFooter>\n            <Pagination\n                variant={ PaginationVariant.bottom }\n                { ...toolbarProps.pagination } />\n        </TableToolbar>\n\n    </React.Fragment>;\n};\n\nTableToolsTable.propTypes = {\n    items: propTypes.array.isRequired,\n    columns: propTypes.arrayOf(propTypes.shape({\n        title: propTypes.node,\n        transforms: propTypes.array,\n        sortByProperty: propTypes.string,\n        sortByArray: propTypes.array,\n        sortByFunction: propTypes.func,\n        renderFunc: propTypes.func\n    })).isRequired,\n    filters: propTypes.object,\n    options: propTypes.object,\n    toolbarProps: propTypes.object\n};\n\nexport default TableToolsTable;\n","import useFilterConfig from './useFilterConfig';\nimport useTableSort from './useTableSort';\nimport usePaginate from './usePaginate';\nimport useRowsBuilder from './useRowsBuilder';\nimport { useBulkSelectWithItems } from './useBulkSelect';\nimport useItemIdentify from './useItemIdentify';\nimport useExpandable from './useExpandable';\nimport useDedicatedAction from './useDedicatedAction';\n\nconst useTableTools = (items = [], columns = [], options = {}) => {\n    const {\n        toolbarProps: toolbarPropsOption, tableProps: tablePropsOption\n    } = options;\n\n    const identifiedItems = useItemIdentify(items, options);\n\n    const {\n        tableProps: sortableTableProps, sorter\n    } = useTableSort(columns, options);\n\n    const {\n        toolbarProps: pagintionToolbarProps, setPage, paginator\n    } = usePaginate(options);\n\n    const {\n        toolbarProps: conditionalFilterProps,\n        filter,\n        selectedFilterToolbarProps\n    } = useFilterConfig({\n        ...options,\n        setPage\n    });\n\n    const {\n        transformer: openItem, tableProps: expandableProps\n    } = useExpandable(options);\n\n    const {\n        transformer: selectItem,\n        toolbarProps: bulkSelectToolbarProps,\n        tableProps: bulkSelectTableProps,\n        selectedItems\n    } = useBulkSelectWithItems({\n        ...options,\n        items: sorter(identifiedItems),\n        filter,\n        paginator,\n        setPage\n    });\n\n    const {\n        toolbarProps: dedicatedActionToolbarProps\n    } = useDedicatedAction({\n        ...options,\n        selected: selectedItems,\n        additionalDedicatedActions: [\n            selectedFilterToolbarProps?.dedicatedAction\n        ]\n    });\n\n    const {\n        toolbarProps: rowBuilderToolbarProps, tableProps: rowBuilderTableProps\n    } = useRowsBuilder(identifiedItems, sortableTableProps.cells, {\n        emptyRows: options.emptyRows,\n        transformer: [selectItem],\n        rowTransformer: [openItem],\n        pagination: pagintionToolbarProps?.pagination,\n        paginator,\n        filter,\n        sorter\n    });\n\n    const toolbarProps = {\n        ...pagintionToolbarProps,\n        ...bulkSelectToolbarProps,\n        ...conditionalFilterProps,\n        ...selectedFilterToolbarProps,\n        ...dedicatedActionToolbarProps,\n        ...rowBuilderToolbarProps,\n        ...toolbarPropsOption\n    };\n\n    const tableProps = {\n        cells: columns,\n        ...rowBuilderTableProps,\n        ...sortableTableProps,\n        ...bulkSelectTableProps,\n        ...expandableProps,\n        ...tablePropsOption\n    };\n\n    return {\n        toolbarProps,\n        tableProps\n    };\n};\n\nexport default useTableTools;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Grid, GridItem, Stack, StackItem, Text, TextVariants } from '@patternfly/react-core';\nimport { ConditionalLink } from 'PresentationalComponents';\n\nconst RuleDetailsRow = ({ rule }) => {\n    const { refId, description, identifier, references, rationale } = rule;\n    const key = `rule-child-row-${refId}`;\n\n    return <div key={ key } style={ { marginTop: 'var(--pf-global--spacer--lg)' } }>\n        <Stack id={ `rule-description-${key}` } className='margin-bottom-lg'>\n            <StackItem style={ { marginBottom: 'var(--pf-global--spacer--sm)' } }>\n                <Text className='pf-c-form__label' component={ TextVariants.h5 }><b>Description</b></Text>\n            </StackItem>\n            <StackItem isFilled>{ description }</StackItem>\n        </Stack>\n        <Stack id={ `rule-identifiers-references-${key}` } className='margin-bottom-lg'>\n            <Grid>\n                { identifier && identifier.length > 0 && <GridItem span={ 2 }>\n                    <Text className='pf-c-form__label' component={ TextVariants.h5 }><b>Identifier</b></Text>\n                    <Text>\n                        {\n                            identifier.map((ident, idx) => (\n                                <ConditionalLink\n                                    href={ ident.system }\n                                    target='_blank'\n                                    key={ `${refId}-identifier-${idx}` }>\n                                    { ident.label }\n                                </ConditionalLink>)\n                            ).reduce((prev, next) => ([prev, ', ', next]))\n                        }\n                    </Text>\n                </GridItem> }\n\n                { (references && references.length > 0) && <GridItem span={ 10 }>\n                    <Text className='pf-c-form__label' component={ TextVariants.h5 }><b>References</b></Text>\n                    <Text>\n                        {\n                            references.map((ref, idx) => (\n                                <ConditionalLink\n                                    href={ ref.href }\n                                    target='_blank'\n                                    key={ `${refId}-reference-${idx}` }>\n                                    { ref.label }\n                                </ConditionalLink>)\n                            ).reduce((prev, next) => ([prev, ', ', next]))\n                        }\n                    </Text>\n                </GridItem> }\n            </Grid>\n        </Stack>\n\n        { rationale &&\n            <Stack id={ `rule-rationale-${key}` } style={ { marginBottom: 'var(--pf-global--spacer--lg)' } }>\n                <StackItem style={ { marginBottom: 'var(--pf-global--spacer--sm)' } }>\n                    <Text className='pf-c-form__label' component={ TextVariants.h5 }><b>Rationale</b></Text>\n                </StackItem>\n                <StackItem isFilled>{ rationale }</StackItem>\n            </Stack>\n        }\n\n    </div>;\n};\n\nRuleDetailsRow.propTypes = {\n    rule: propTypes.object\n};\n\nexport default RuleDetailsRow;\n","import React from 'react';\nimport { Bullseye, EmptyState, EmptyStateBody, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { EmptyTable } from '@redhat-cloud-services/frontend-components/EmptyTable';\n\nconst emptyRows = (columns) => ([{\n    cells: [{\n        title: (\n            <EmptyTable>\n                <Bullseye>\n                    <EmptyState variant={ EmptyStateVariant.full }>\n                        <Title headingLevel=\"h5\" size=\"lg\">\n                                No matching rules found\n                        </Title>\n                        <EmptyStateBody>\n                                This filter criteria matches no rules. <br /> Try changing your filter settings.\n                        </EmptyStateBody>\n                    </EmptyState>\n                </Bullseye>\n            </EmptyTable>\n        ),\n        props: {\n            colSpan: columns.length\n        }\n    }]\n}]);\n\nexport default emptyRows;\n","import React from 'react';\nimport {\n    ExclamationCircleIcon, ExclamationTriangleIcon, QuestionCircleIcon\n} from '@patternfly/react-icons';\nimport { LowSeverityIcon } from './Cells';\n\nexport const HIGH_SEVERITY = <span><ExclamationCircleIcon className='ins-u-failed'/> High</span>;\nexport const MEDIUM_SEVERITY = <span><ExclamationTriangleIcon className='ins-u-warning'/> Medium</span>;\nexport const LOW_SEVERITY = <span><LowSeverityIcon /> Low</span>;\nexport const UNKNOWN_SEVERITY = <span><QuestionCircleIcon /> Unknown</span>;\n","import { HIGH_SEVERITY, MEDIUM_SEVERITY, LOW_SEVERITY, UNKNOWN_SEVERITY } from './Constants';\nimport { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\n\nconst filterRulesWithAllValues = (rules, values, valueCheck) => rules.filter((rule) => (\n    values.map((value) => valueCheck(rule, value)).filter(v => !!v).length > 0\n));\n\nconst anyFilterApply = (rules, values, valueCheck) => {\n    let filteredRules = [];\n    rules.forEach((rule) => {\n        if (values.map((value) => valueCheck(rule, value)).filter(v => !!v).length > 0) {\n            filteredRules.push(rule);\n        }\n    });\n    return filteredRules;\n};\n\nconst BASE_FILTER_CONFIGURATION = [{\n    type: conditionalFilterType.text,\n    label: 'Name',\n    filter: (rules, value) => filterRulesWithAllValues(rules, [value], (rule, value) => (\n        rule.title.toLowerCase().includes(value.toLowerCase()) ||\n        (rule.identifier && rule.identifier.label.toLowerCase().includes(value.toLowerCase())) ||\n        rule.references.filter((reference) => reference.label.toLowerCase().includes(value.toLowerCase())).length > 0\n    ))\n}, {\n    type: conditionalFilterType.checkbox,\n    label: 'Severity',\n    items: [\n        { label: HIGH_SEVERITY, value: 'high' },\n        { label: MEDIUM_SEVERITY, value: 'medium' },\n        { label: LOW_SEVERITY, value: 'low' },\n        { label: UNKNOWN_SEVERITY, value: 'unknown' }\n    ],\n    filter: (rules, values) => anyFilterApply(rules, values, (rule, value) => (\n        rule.severity === value\n    ))\n}];\n\nconst PASS_FILTER_CONFIG = {\n    type: conditionalFilterType.checkbox,\n    label: 'Passed',\n    items: [\n        { label: 'Passed rules', value: 'passed' },\n        { label: 'Failed rules', value: 'failed' }\n    ],\n    filter: (rules, values) => anyFilterApply(rules, values, (rule, value) => (\n        rule.compliant === (value === 'passed')\n    ))\n};\n\nexport const policiesFilterConfig = (policies) => ({\n    type: conditionalFilterType.checkbox,\n    label: 'Policy',\n    items: policies.map(policy => (\n        { label: policy.name, value: policy.id }\n    )),\n    filter: (rules, values) => filterRulesWithAllValues(rules, values, (rule, value) => (\n        (rule.profile.policy ? rule.profile.policy.id : rule.profile.id) === value\n    ))\n});\n\nexport const REMEDIATION_AVAILABLE_FILTER_CONFIG = {\n    type: conditionalFilterType.checkbox,\n    label: 'Remediation available',\n    items: [\n        { label: 'Remediation available', value: 'true' }\n    ],\n    filter: (rules, value) => (rules.filter((rule) => (\n        value[0] === 'true' ? rule.remediationAvailable === true : true\n    )))\n};\n\nconst buildFilterConfig = ({ showPassFailFilter, policies, remediationAvailableFilter }) => {\n    const config = [...BASE_FILTER_CONFIGURATION];\n\n    if (showPassFailFilter) {\n        config.push(PASS_FILTER_CONFIG);\n    }\n\n    if (policies && policies.length > 1) {\n        config.push(policiesFilterConfig(policies));\n    }\n\n    if (remediationAvailableFilter) {\n        config.push(REMEDIATION_AVAILABLE_FILTER_CONFIG);\n    }\n\n    return config;\n};\n\nexport default buildFilterConfig;\n","import React from 'react';\nimport propTypes from 'prop-types';\n// eslint-disable-next-line\nimport ComplianceRemediationButton from 'PresentationalComponents/ComplianceRemediationButton';\nimport { TableToolsTable } from 'Utilities/hooks/useTableTools';\nimport { toRulesArrayWithProfile } from 'Utilities/ruleHelpers';\nimport RuleDetailsRow from './RuleDetailsRow';\nimport emptyRows from './EmptyRows';\nimport buildFilterConfig from './Filters';\nimport * as Columns from './Columns';\n\nconst RulesTable = ({\n    system,\n    profileRules,\n    columns = [\n        Columns.Name,\n        Columns.Policy,\n        Columns.Severity,\n        Columns.Passed,\n        Columns.Ansible\n    ],\n    remediationsEnabled = true,\n    remediationAvailableFilter = false,\n    selectedFilter = false,\n    handleSelect,\n    selectedRefIds = [],\n    hidePassed = false,\n    options,\n    ...rulesTableProps\n}) => {\n    const rules = toRulesArrayWithProfile(profileRules);\n    const showPassFailFilter = (columns.filter((c) => (c.title === 'Passed')).length > 0);\n    const policies = profileRules.filter(({ profile }) => !!profile).map(({ profile }) => (\n        {\n            id: profile.policy ? profile.policy.id : profile.id,\n            name: profile.name\n        }\n    ));\n\n    const remediationAction = ({ selected: selectedRules }) => (\n        <ComplianceRemediationButton\n            allSystems={ [{\n                id: system.id,\n                profiles: system.testResultProfiles,\n                ruleObjectsFailed: [],\n                supported: system.supported\n            }] }\n            selectedRules={\n                (selectedRules || []).filter((rule) => (rule.remediationAvailable))\n            } />\n    );\n\n    return <TableToolsTable\n        aria-label=\"Rules Table\"\n        items={ rules }\n        columns={ columns }\n        filters={{\n            filterConfig: buildFilterConfig({\n                showPassFailFilter,\n                policies,\n                remediationAvailableFilter\n            }),\n            ...hidePassed && { activeFilters: {\n                passed: ['failed']\n            } }\n        }}\n        options={{\n            ...options,\n            identifier: (item) => (item.refId),\n            selectable: !!handleSelect || remediationsEnabled,\n            onSelect: handleSelect,\n            preselected: selectedRefIds,\n            detailsComponent: RuleDetailsRow,\n            emptyRows: emptyRows(columns),\n            selectedFilter,\n            ...remediationsEnabled ? { dedicatedAction: remediationAction } : {}\n        }}\n        { ...rulesTableProps } />;\n};\n\nRulesTable.propTypes = {\n    profileRules: propTypes.array,\n    loading: propTypes.bool,\n    hidePassed: propTypes.bool,\n    system: propTypes.object,\n    remediationsEnabled: propTypes.bool,\n    remediationAvailableFilter: propTypes.bool,\n    selectedRefIds: propTypes.array,\n    selectedFilter: propTypes.bool,\n    handleSelect: propTypes.func,\n    columns: propTypes.array,\n    options: propTypes.object\n};\n\nexport default RulesTable;\n","const OsVersionText = ({ profile, newOsMinorVersion }) => (\n    `RHEL${'\\u00A0'}${ profile.osMajorVersion }.${ (profile.osMinorVersion || newOsMinorVersion) }`\n);\n\nexport default OsVersionText;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport {\n    Text, TextVariants, TextContent, Grid, Spinner, Badge, Popover\n} from '@patternfly/react-core';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport { StateViewWithError, StateViewPart, SupportedSSGVersionsLink, RulesTable } from 'PresentationalComponents';\nimport { pluralize } from 'Utilities/TextHelper';\nimport OsVersionText from './OsVersionText';\n\nconst ProfileSystemCount = ({ count = 0 }) => (\n    <Badge isRead>\n        { `${count} ${ pluralize(count, 'system')}` }\n    </Badge>\n);\n\nProfileSystemCount.propTypes = {\n    profile: propTypes.object,\n    count: propTypes.number\n};\n\nconst SSGVersionText = ({ profile, newOsMinorVersion }) => (\n    <Text component={ TextVariants.p }>\n        SSG version: { profile.ssgVersion }\n        {' '}\n        <Popover\n            position='right'\n            bodyContent={ <SSGPopoverBody { ...{ profile, newOsMinorVersion } } /> }\n            footerContent={ <SupportedSSGVersionsLink /> }>\n            <span style={ { cursor: 'pointer' } }>\n                <OutlinedQuestionCircleIcon className=\"grey-icon\" />\n            </span>\n        </Popover>\n    </Text>\n);\n\nSSGVersionText.propTypes = {\n    profile: propTypes.object.isRequired,\n    newOsMinorVersion: propTypes.string\n};\n\nconst SSGPopoverBody = ({ profile, newOsMinorVersion }) => (\n    <TextContent style={ { fontSize: 'var(--pf-c-popover--FontSize)' } }>\n        <Text>\n            This is the latest supported version of the SCAP Security Guide (SSG) for\n            {' '}\n            <OsVersionText { ...{ profile, newOsMinorVersion } } />\n        </Text>\n        <Text>\n            <OsVersionText { ...{ profile, newOsMinorVersion } } /> systems assigned to this\n            policy will report using this rule list.\n        </Text>\n    </TextContent>\n);\n\nSSGPopoverBody.propTypes = {\n    profile: propTypes.object.isRequired,\n    newOsMinorVersion: propTypes.string\n};\n\nconst BENCHMARK_QUERY = gql`\nquery benchmarkQuery($id: String!) {\n    benchmark(id: $id) {\n        id\n        osMajorVersion\n        rules {\n            id\n            title\n            severity\n            rationale\n            refId\n            description\n            remediationAvailable\n            identifier\n        }\n    }\n}\n`;\n\nconst ProfileTabContent = ({\n    profile, columns, handleSelect, systemCount, selectedRuleRefIds, rulesTableProps, newOsMinorVersion\n}) => {\n    const { data: benchmark, error, loading } = useQuery(BENCHMARK_QUERY, {\n        variables: {\n            id: profile.benchmark.id\n        },\n        skip: !handleSelect || !profile.benchmark?.id\n    });\n    const rules = handleSelect ? benchmark?.benchmark?.rules : profile?.rules;\n\n    return <React.Fragment>\n        <Grid>\n            <TextContent className=\"pf-u-mt-md\">\n                <Text component={ TextVariants.h3 } >\n                    <span className='pf-u-pr-sm'>\n                        <OsVersionText { ...{ profile, newOsMinorVersion } } />\n                    </span>\n                    <ProfileSystemCount count={ systemCount } />\n                </Text>\n                <SSGVersionText { ...{ profile, newOsMinorVersion } } />\n            </TextContent>\n        </Grid>\n        <StateViewWithError stateValues={ { error, loading, rules } }>\n            <StateViewPart stateKey=\"loading\">\n                <Spinner />\n            </StateViewPart>\n            <StateViewPart stateKey=\"rules\">\n\n                <RulesTable\n                    remediationAvailableFilter\n                    remediationsEnabled={false}\n                    columns={ columns }\n                    profileRules={ [{ profile, rules: (rules || []) }] }\n                    selectedRefIds={ selectedRuleRefIds }\n                    handleSelect={\n                        handleSelect && ((selectedRuleRefIds) =>\n                            handleSelect(profile, newOsMinorVersion, selectedRuleRefIds)\n                        )\n                    }\n                    { ...rulesTableProps } />\n\n            </StateViewPart>\n        </StateViewWithError>\n    </React.Fragment>;\n};\n\nProfileTabContent.propTypes = {\n    profile: propTypes.object,\n    newOsMinorVersion: propTypes.string,\n    columns: propTypes.array,\n    handleSelect: propTypes.func,\n    systemCount: propTypes.object,\n    selectedRuleRefIds: propTypes.array,\n    rulesTableProps: propTypes.object\n};\n\nexport default ProfileTabContent;\n","// Rule selection utilities\n\nexport const matchesSelectionItem = (selectionItem, profile, newOsMinorVersion) => (\n    selectionItem.id === profile.id\n    && selectionItem.osMinorVersion === (newOsMinorVersion || profile.osMinorVersion)\n);\n\nexport const selectedRuleRefIdsForTab = (selectedRuleRefIds, profile, newOsMinorVersion) => {\n    const tabSelection = (selectedRuleRefIds || []).find((selectionItem) =>\n        matchesSelectionItem(selectionItem, profile, newOsMinorVersion)\n    );\n    return tabSelection?.ruleRefIds || [];\n};\n\nexport const profilesWithRulesToSelection = (profiles, prevSelection = [], options = {}) => {\n    const { only } = options;\n    const additionalSelection = profiles.map((profile) => {\n        const foundSelection = prevSelection.find((selectionItem) =>\n            matchesSelectionItem(selectionItem, profile)\n        );\n        if (!foundSelection) {\n            if (!profile.rules) {\n                console.error(`Profile ${profile.id} is missing rules for selection!`);\n            }\n\n            if (!profile.osMinorVersion) {\n                console.error(`Profile ${profile.id} is missing osMinorVersion for selection!`);\n            }\n\n            return {\n                id: profile.id,\n                osMinorVersion: profile.osMinorVersion,\n                ruleRefIds: profile.rules?.map((rule) => (rule.refId)) || []\n            };\n        } else if (only) {\n            return foundSelection;\n        }\n    }).filter((v) => !!v);\n\n    return only ? additionalSelection : [...prevSelection, ...additionalSelection];\n};\n\nexport const tabsDataToOsMinorMap = (tabsData) => {\n    const osMinorMap = {};\n    tabsData.forEach(({ profile, newOsMinorVersion }) => {\n        if (profile?.id) {\n            const osMinorVersion = newOsMinorVersion || profile.osMinorVersion;\n            osMinorMap[profile.id] = [\n                ...(osMinorMap[profile.id] || []),\n                osMinorVersion\n            ];\n        }\n    });\n    return osMinorMap;\n};\n\nexport const extendProfilesByOsMinor = (profiles, osMinorMap) => (\n    profiles.flatMap((profile) => (\n        (osMinorMap[profile.id] || [undefined]).map((osMinorVersion) => (\n            { ...profile, osMinorVersion }\n        ))\n    ))\n);\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Tab, Badge } from '@patternfly/react-core';\nimport { RoutedTabs } from 'PresentationalComponents';\nimport ProfileTabContent from './ProfileTabContent';\nimport OsVersionText from './OsVersionText';\nimport { selectedRuleRefIdsForTab, matchesSelectionItem } from './ruleSelection';\n\nconst eventKey = ({ id, osMinorVersion }, newOsMinorVersion) => (\n    `rules-${id}-${osMinorVersion || newOsMinorVersion}`\n);\n\nconst getDefaultTab = (tabsData, defaultTab) => {\n    if (!tabsData || tabsData.length === 0) {\n        return;\n    }\n\n    if (!defaultTab) {\n        const firstTab = tabsData[0];\n        defaultTab = {\n            id: firstTab.profile.id,\n            osMinorVersion: firstTab.profile.osMinorVersion || firstTab.newOsMinorVersion\n        };\n    }\n\n    return eventKey(defaultTab);\n};\n\nconst TabbedRules = ({\n    tabsData, defaultTab, selectedRuleRefIds, setSelectedRuleRefIds, columns, level = 0, ...rulesTableProps\n}) => {\n    const handleSelect = (profile, newOsMinorVersion, profileSelectedRuleRefIds) => {\n        const filteredSelection = (selectedRuleRefIds || []).filter((selectionItem) =>\n            !matchesSelectionItem(selectionItem, profile, newOsMinorVersion)\n        );\n\n        const newItem = {\n            id: profile.id,\n            osMinorVersion: newOsMinorVersion || profile.osMinorVersion,\n            ruleRefIds: profileSelectedRuleRefIds\n        };\n        setSelectedRuleRefIds([newItem, ...filteredSelection]);\n    };\n\n    return <RoutedTabs level={ level } defaultTab={ getDefaultTab(tabsData, defaultTab) }>\n        {\n            tabsData?.map(({ profile, newOsMinorVersion, systemCount }) => (\n                <Tab\n                    key={ eventKey(profile, newOsMinorVersion) }\n                    eventKey={ eventKey(profile, newOsMinorVersion) }\n                    title={\n                        <span>\n                            <span className='pf-u-pr-sm'>\n                                <OsVersionText profile={ profile } newOsMinorVersion={newOsMinorVersion} />\n                            </span>\n                            <Badge isRead>{ systemCount }</Badge>\n                        </span>\n                    }>\n                    <ProfileTabContent\n                        { ...{\n                            profile,\n                            newOsMinorVersion,\n                            columns,\n                            rulesTableProps,\n                            systemCount,\n                            selectedRuleRefIds: selectedRuleRefIdsForTab(\n                                selectedRuleRefIds, profile, newOsMinorVersion\n                            ),\n                            handleSelect: setSelectedRuleRefIds ? handleSelect : undefined\n                        } } />\n                </Tab>\n            ))\n        }\n    </RoutedTabs>;\n};\n\nTabbedRules.propTypes = {\n    tabsData: propTypes.arrayOf(\n        propTypes.shape({\n            profile: propTypes.object.isRequired,\n            selectedRuleRefIds: propTypes.arrayOf(propTypes.string),\n            newOsMinorVersion: propTypes.string,\n            systemCount: propTypes.number\n        })\n    ).isRequired,\n    selectedRuleRefIds: propTypes.arrayOf(\n        propTypes.shape({\n            id: propTypes.string,\n            ruleRefIds: propTypes.arrayOf(propTypes.string)\n        })\n    ),\n    setSelectedRuleRefIds: propTypes.func,\n    columns: propTypes.arrayOf(propTypes.object),\n    defaultTab: propTypes.shape({\n        id: propTypes.string,\n        osMinorVersion: propTypes.string\n    }),\n    level: propTypes.number\n};\n\nexport default TabbedRules;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Popover, Tooltip, Text } from '@patternfly/react-core';\nimport { ExclamationTriangleIcon, OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport { SupportedSSGVersionsLink } from 'PresentationalComponents';\n\nexport const supportedConfigsLink = 'https://access.redhat.com/documentation/en-us/red_hat_insights/2020-10/' +\n    'html/assessing_and_monitoring_security_policy_compliance_of_rhel_systems/' +\n    'con-compl-assess-overview_compl-assess-overview#con-compl-assess-supported-configurations_compl-assess-overview';\n\nconst UNSUPPORTED_SINGULAR_MESSAGE =\n    'This system was using an incompatible version of the SSG at the time this report was generated. ' +\n    'Assessment of rules failed/passed on this system is a best-guess effort and may not be accurate.';\nconst UNSUPPORTED_PLURAL_MESSAGE = <React.Fragment>\n    <Text variant='p' style={ { marginBottom: '1rem' } }>\n        These systems are running unsupported versions of the SCAP Security Guide (SSG) for the version of RHEL installed on them.\n        Assessment of rules failed/passed on these systems is a best-guess effort and may not be accurate.\n    </Text>\n    <Text variant='p'>\n        The policy&apos;s compliance score excludes these systems.\n    </Text>\n</React.Fragment>;\n\nconst WarningWithPopover = ({ children, variant = 'plural' }) => (\n    <Popover\n        id='unsupported-popover'\n        maxWidth='25rem'\n        headerContent='Unsupported SSG versions'\n        bodyContent={ variant === 'plural' ? UNSUPPORTED_PLURAL_MESSAGE : UNSUPPORTED_SINGULAR_MESSAGE }\n        footerContent={ <SupportedSSGVersionsLink /> }>\n        { children }\n    </Popover>\n);\n\nWarningWithPopover.propTypes = {\n    children: propTypes.node,\n    variant: propTypes.oneOf(['singular', 'plural'])\n};\n\nconst WarningWithTooltip = ({ children, content }) => (\n    <Tooltip content={ content } position='bottom'>\n        { children }\n    </Tooltip>\n);\n\nWarningWithTooltip.propTypes = {\n    content: propTypes.string,\n    children: propTypes.node\n};;\n\nconst TooltipOrPopover = ({ variant, children, tooltipProps }) => {\n    const { Component, componentProps } = {\n        tooltip: {\n            Component: WarningWithTooltip,\n            componentProps: tooltipProps\n        },\n        popover: {\n            Component: WarningWithPopover,\n            componentProps: {\n                showHeader: tooltipProps.showPopupHeader,\n                variant: tooltipProps.messageVariant\n            }\n        }\n    }[variant];\n\n    return <Component { ...componentProps }>\n        { children }\n    </Component>;\n};\n\nTooltipOrPopover.propTypes = {\n    children: propTypes.node,\n    variant: propTypes.oneOf(['tooltip', 'popover']),\n    tooltipProps: propTypes.object\n};\n\nconst UnsupportedSSGVersion = ({\n    children, showWarningIcon = true, showHelpIcon = false, style, tooltipText, messageVariant\n}) => {\n    const tooltipProps = {\n        ...tooltipText && { content: <div>{ tooltipText }</div> },\n        messageVariant\n    };\n    const variant = tooltipText ? 'tooltip' : 'popover';\n    const iconProps = {\n        variant,\n        tooltipProps\n    };\n    const defaultStyle = !tooltipText ? { cursor: 'pointer' } : {};\n\n    return <span style={ { ...style, display: 'inline-block' } }>\n        { showWarningIcon && <TooltipOrPopover { ...iconProps }>\n            <span style={ defaultStyle } className='pf-u-mr-xs'>\n                <ExclamationTriangleIcon color='var(--pf-global--warning-color--100)' />\n            </span>\n        </TooltipOrPopover> }\n\n        { children }\n\n        { showHelpIcon &&  <TooltipOrPopover { ...iconProps }>\n            <span style={ defaultStyle } className='pf-u-ml-xs'>\n                <OutlinedQuestionCircleIcon />\n            </span>\n        </TooltipOrPopover> }\n    </span>;\n};\n\nUnsupportedSSGVersion.propTypes = {\n    showWarningIcon: propTypes.bool,\n    showHelpIcon: propTypes.bool,\n    style: propTypes.object,\n    tooltipText: propTypes.string,\n    children: propTypes.node,\n    variant: propTypes.string,\n    messageVariant: propTypes.string,\n    showPopupHeader: propTypes.bool\n};\n\nexport default UnsupportedSSGVersion;\n","import React from 'react';\nimport { Table, TableHeader, TableBody } from '@patternfly/react-table';\nimport RowLoader from '@redhat-cloud-services/frontend-components-utilities/RowLoader';\n\nconst LoadingPoliciesTable = () => (\n    <Table\n        aria-label='policies-table'\n        ouiaId=\"PoliciesTable\"\n        cells={ [\n            { title: 'Policy name' },\n            { title: 'Operating system' },\n            { title: 'Systems' },\n            { title: 'Business initiative' },\n            { title: 'Compliance threshold' }\n        ] }\n        rows={ [...Array(5)].map(() => ({\n            cells: [{\n                title: <RowLoader />,\n                colSpan: 5\n            }]\n        })) }>\n        <TableHeader />\n        <TableBody />\n    </Table>\n);\n\nexport default LoadingPoliciesTable;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport {\n    Title,\n    Button,\n    Text\n} from '@patternfly/react-core';\nimport {\n    ExclamationCircleIcon\n} from '@patternfly/react-icons';\nimport InvalidObject from '@redhat-cloud-services/frontend-components/InvalidObject';\nimport NotAuthorized from '@redhat-cloud-services/frontend-components/NotAuthorized';\n\nconst ErrorPage = ({ error, ...props }) => {\n    if (error.networkError && error.networkError.statusCode === 401) {\n        window.insights.chrome.auth.logout(true);\n        return false;\n    }\n\n    if (error.networkError && error.networkError.statusCode === 403) {\n        return <NotAuthorized serviceName='Compliance' />;\n    }\n\n    if (error.networkError && error.networkError.statusCode === 404) {\n        return <InvalidObject />;\n    }\n\n    return <section {...props} className=\"pf-l-page__main-section pf-c-page__main-section ins-c-component_invalid-componet\">\n        <ExclamationCircleIcon size=\"xl\" style={ { color: 'var(--pf-global--danger-color--100)' } } />\n        <Title headingLevel='h1'>There was an error</Title>\n        <Text>\n            If you need to contact Red Hat Support about this, this is the exact error:\n            <Text>\n                { error.message }\n            </Text>\n        </Text>\n        <Button\n            variant=\"link\"\n            ouiaId=\"ErrorPageGoBackButton\"\n            onClick={ history.goBack }>\n                Go back\n        </Button>\n    </section>;\n};\n\nErrorPage.propTypes = {\n    error: propTypes.object\n};\n\nexport default ErrorPage;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Text, TextVariants } from '@patternfly/react-core';\n\nexport const GreySmallText = ({ children }) => (\n    <Text\n        style={{ color: 'var(--pf-global--Color--200)' }}\n        component={ TextVariants.small }>{ children }</Text>\n);\n\nGreySmallText.propTypes = {\n    children: propTypes.node\n};\n\nexport default GreySmallText;\n","import React from 'react';\nimport { Field } from 'redux-form';\nimport propTypes from 'prop-types';\nimport { Checkbox } from '@patternfly/react-core';\n\nconst CheckboxFieldArray = ({ input, options }) => {\n    const { name, onChange } = input;\n    const inputValue = input.value;\n\n    const handleChange = (checked, value) => {\n        const arr = [...new Set(inputValue)];\n        if (checked) {\n            arr.push(value);\n        } else {\n            arr.splice(arr.indexOf(value), 1);\n        }\n\n        return onChange(arr);\n    };\n\n    return (\n        <React.Fragment>\n            {\n                options.map(({ label, value, defaultChecked }, index) => (\n                    <Checkbox key={value} id={value} label={label}\n                        name={`${name}[${index}]`} value={value}\n                        isChecked={inputValue === '' ? defaultChecked : inputValue.includes(value)}\n                        onChange={(checked) => handleChange(checked, value)}\n                    />\n                ))\n            }\n        </React.Fragment>\n    );\n};\n\nCheckboxFieldArray.propTypes = {\n    input: propTypes.shape({\n        name: propTypes.string.isRequired,\n        onChange: propTypes.func,\n        value: propTypes.string\n    }),\n    options: propTypes.arrayOf(propTypes.shape({\n        label: propTypes.string.isRequired,\n        value: propTypes.string.isRequired,\n        defaultChecked: propTypes.bool\n    })).isRequired\n};\n\nconst CheckboxGroup = (props) => (\n    <Field {...props} type=\"checkbox\" component={CheckboxFieldArray} />\n);\n\nCheckboxGroup.propTypes = {\n    options: propTypes.arrayOf(propTypes.shape({\n        label: propTypes.string.isRequired,\n        value: propTypes.string.isRequired,\n        defaultChecked: propTypes.bool\n    })).isRequired\n};\n\nexport { CheckboxFieldArray };\nexport default CheckboxGroup;\n","import React from 'react';\nimport { Field } from 'redux-form';\nimport propTypes from 'prop-types';\nimport Truncate from 'react-truncate';\nimport {\n    Grid,\n    GridItem,\n    Label,\n    TextContent,\n    TextVariants,\n    Text,\n    Tooltip\n} from '@patternfly/react-core';\n\nconst InUseProfileLabel = () => (\n    <Tooltip\n        position=\"right\"\n        content=\"A policy of this type is already in use.\n        Only one policy per policy type can be created for a major release of RHEL.\"\n    >\n        <Label color=\"orange\" style={ { lineHeight: '1.5em' } }>In use</Label>\n    </Tooltip>\n);\n\nconst ProfileTypeSelect  = ({ profiles, onClick }) => (\n    <React.Fragment>\n        { profiles?.length === 0 && (\n            <TextContent style={{ color: 'var(--pf-c-content--blockquote--Color)' }}>\n                <Text>\n                    Select an operating system to view policy types.\n                </Text>\n            </TextContent>\n        )}\n\n        <Grid hasGutter>\n            { profiles.map((profile) => {\n                const { description, name, id, disabled } = profile;\n                return (\n                    <React.Fragment key={`profile-select-${id}`}>\n                        <GridItem span={8} rowSpan={2}>\n                            <TextContent\n                                style={ {\n                                    lineHeight: '2em',\n                                    color: disabled ? 'var(--pf-c-content--blockquote--Color)' : ''\n                                } }>\n                                <Text >\n                                    <Field component='input'\n                                        type='radio'\n                                        name='profile'\n                                        value={JSON.stringify(profile)}\n                                        onClick={ () => onClick(JSON.stringify(profile)) }\n                                        disabled={ disabled }\n                                    />\n                                    { ` ${name} ` }\n                                    { disabled && <InUseProfileLabel /> }\n                                </Text>\n                            </TextContent>\n                            <TextContent style={ { color: 'var(--pf-c-content--blockquote--Color)' } }>\n                                <Text component={ TextVariants.p }>\n                                    <Truncate\n                                        key={`profile-select-text-${id}`}\n                                        lines={3}>\n                                        { description }\n                                    </Truncate>\n                                </Text>\n                            </TextContent>\n                        </GridItem>\n                    </React.Fragment>);\n            })}\n        </Grid>\n    </React.Fragment>\n);\n\nProfileTypeSelect.propTypes = {\n    profiles: propTypes.array,\n    onClick: propTypes.func\n};\n\nProfileTypeSelect.defaultProps = {\n    profiles: [],\n    onClick: () => ({})\n};\n\nexport default ProfileTypeSelect;\n","import React from 'react';\nimport {\n    QuestionCircleIcon,\n    CheckCircleIcon,\n    ExclamationCircleIcon\n} from '@patternfly/react-icons';\nimport { Text, Tooltip } from '@patternfly/react-core';\nimport { fixedPercentage } from 'Utilities/TextHelper';\n\nconst CompliantIcon = (system) => {\n    if ((system.rulesPassed + system.rulesFailed) === 0) {\n        return <QuestionCircleIcon color='var(--pf-global--disabled-color--100)' />;\n    } else {\n        return system.compliant ?\n            <CheckCircleIcon color='var(--pf-global--success-color--200)' /> :\n            <ExclamationCircleIcon color='var(--pf-global--danger-color--100)' />;\n    }\n};\n\nexport const complianceScoreString = (system) => {\n    if (system.supported === false) {\n        return ' Unsupported';\n    } else if ((system.rulesPassed + system.rulesFailed) === 0) {\n        return ' N/A';\n    }\n\n    return ' ' + fixedPercentage(system.score);\n};\n\nconst ComplianceScore = (system) => (\n    <Text>\n        { system.supported ?\n            <Tooltip content={\n                'The system compliance score is calculated by OpenSCAP and ' +\n                'is a normalized weighted sum of rules selected for this policy.'\n            }>\n                <CompliantIcon key={ `system-compliance-icon-${system.id}` } { ...system } />\n                { complianceScoreString(system) }\n            </Tooltip>\n            :\n            complianceScoreString(system) }\n    </Text>\n);\n\nexport default ComplianceScore;\n","import React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nconst PolicyDetailsContentLoader = () => (\n    <ContentLoader\n        speed={2}\n        width={1000}\n        height={400}\n        viewBox='0 0 1000 400'\n        backgroundcolor='#f3f3f3'\n        foregroundcolor='#ecebeb'\n    >\n        <rect x='-3' y='7' rx='3' ry='3' width='760' height='19' />\n        <rect x='823' y='3' rx='3' ry='3' width='67' height='29' />\n        <rect x='910' y='3' rx='3' ry='3' width='67' height='29' />\n        <rect x='6' y='54' rx='0' ry='0' width='46' height='19' />\n        <rect x='68' y='54' rx='0' ry='0' width='46' height='19' />\n        <rect x='133' y='54' rx='0' ry='0' width='46' height='19' />\n        <rect x='3' y='110' rx='0' ry='0' width='255' height='17' />\n        <rect x='1' y='149' rx='0' ry='0' width='47' height='16' />\n        <rect x='1' y='185' rx='0' ry='0' width='255' height='17' />\n        <rect x='-1' y='224' rx='0' ry='0' width='187' height='16' />\n        <rect x='-4' y='267' rx='0' ry='0' width='255' height='17' />\n        <rect x='-6' y='306' rx='0' ry='0' width='47' height='16' />\n        <rect x='-6' y='342' rx='0' ry='0' width='255' height='17' />\n        <rect x='-8' y='381' rx='0' ry='0' width='187' height='16' />\n    </ContentLoader>\n);\n\nexport default PolicyDetailsContentLoader;\n","import React from 'react';\nimport ContentLoader from 'react-content-loader';\n\nconst ReportDetailsContentLoader = () => (\n    <ContentLoader\n        height={320}\n        width={1550}\n        speed={2}\n        primaryColor=\"#f3f3f3\"\n        secondaryColor=\"#ecebeb\">\n        <rect x=\"18\" y=\"50\" rx=\"4\" ry=\"4\" width=\"478\" height=\"15\" />\n        <rect x=\"19\" y=\"18\" rx=\"3\" ry=\"3\" width=\"220\" height=\"9\" />\n        <circle cx=\"118\" cy=\"156\" r=\"73\" />\n        <rect x=\"1002\" y=\"40\" rx=\"0\" ry=\"0\" width=\"69\" height=\"23\" />\n        <rect x=\"47\" y=\"77\" rx=\"0\" ry=\"0\" width=\"0\" height=\"0\" />\n        <rect x=\"36\" y=\"77\" rx=\"0\" ry=\"0\" width=\"16\" height=\"0\" />\n        <rect x=\"409\" y=\"149\" rx=\"0\" ry=\"0\" width=\"0\" height=\"0\" />\n        <rect x=\"214\" y=\"145\" rx=\"0\" ry=\"0\" width=\"205\" height=\"9\" />\n        <rect x=\"216\" y=\"119\" rx=\"0\" ry=\"0\" width=\"205\" height=\"9\" />\n        <rect x=\"526\" y=\"100\" rx=\"0\" ry=\"0\" width=\"431\" height=\"8\" />\n        <rect x=\"526\" y=\"122\" rx=\"0\" ry=\"0\" width=\"431\" height=\"8\" />\n        <rect x=\"526\" y=\"146\" rx=\"0\" ry=\"0\" width=\"431\" height=\"8\" />\n        <rect x=\"527\" y=\"170\" rx=\"0\" ry=\"0\" width=\"431\" height=\"8\" />\n        <rect x=\"527\" y=\"194\" rx=\"0\" ry=\"0\" width=\"431\" height=\"8\" />\n        <rect x=\"527\" y=\"218\" rx=\"0\" ry=\"0\" width=\"431\" height=\"8\" />\n        <rect x=\"529\" y=\"275\" rx=\"0\" ry=\"0\" width=\"231\" height=\"7\" />\n    </ContentLoader>\n);\n\nexport default ReportDetailsContentLoader;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { fixedPercentage } from 'Utilities/TextHelper';\nimport {\n    PolicyBusinessObjectiveTooltip,\n    PolicyThresholdTooltip\n} from 'PresentationalComponents';\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n    TextContent,\n    TextVariants,\n    Text\n} from '@patternfly/react-core';\nimport Truncate from '@redhat-cloud-services/frontend-components/Truncate';\nimport linkifyHtml from 'linkifyjs/html';\n\nconst PolicyDetailsDescription = ({ policy }) => (\n    <Card ouiaId=\"PolicyDetailsCard\">\n        <CardHeader>\n            <Text style={ { fontSize: 20 } }>\n                <b>Policy details</b>\n            </Text>\n        </CardHeader>\n        <CardBody>\n            <TextContent>\n                <Text component={TextVariants.h5}>\n                    Compliance threshold\n                    <PolicyThresholdTooltip />\n                </Text>\n                <Text className='threshold-tooltip' component={TextVariants.p}>\n                    { fixedPercentage(policy.complianceThreshold, 1) }\n                </Text>\n                <Text component={TextVariants.h5}>\n                    Business objective\n                    <PolicyBusinessObjectiveTooltip />\n                </Text>\n                <Text component={TextVariants.p}>\n                    { policy.businessObjective && policy.businessObjective.title || '-' }\n                </Text>\n                <Text component={TextVariants.h5}>Policy description</Text>\n                <Text component={TextVariants.p}>\n                    <Truncate text={linkifyHtml(policy.description || '')} length={380} inline={true} />\n                </Text>\n                <Text component={TextVariants.h5}>\n                    Operating system\n                </Text>\n                <Text component={TextVariants.p}>\n                    RHEL { policy.majorOsVersion }\n                </Text>\n                <Text component={TextVariants.h5}>Policy type </Text>\n                <Text component={TextVariants.p}>{ policy.policyType }</Text>\n                <Text component={TextVariants.h5}>Reference ID</Text>\n                <Text component={TextVariants.p}>{ policy.refId }</Text>\n            </TextContent>\n        </CardBody>\n    </Card>\n);\n\nPolicyDetailsDescription.propTypes = {\n    policy: propTypes.object\n};\n\nexport default PolicyDetailsDescription;\n","import React from 'react';\nimport { fixedPercentage } from 'Utilities/TextHelper';\nimport propTypes from 'prop-types';\nimport {\n    Text,\n    TextContent,\n    TextList,\n    TextListVariants,\n    TextListItem,\n    TextListItemVariants\n} from '@patternfly/react-core';\nimport {\n    Link\n} from 'react-router-dom';\n\nconst PropTypes = {\n    children: propTypes.node\n};\n\nconst Dt = ({ children, ...props }) => (\n    <TextListItem { ...props } component={ TextListItemVariants.dt }>\n        { children }\n    </TextListItem>\n);\nDt.propTypes = PropTypes;\n\nconst Dd = ({ children, ...props }) => (\n    <TextListItem { ...props } component={ TextListItemVariants.dd }>\n        { children }\n    </TextListItem>\n);\nDd.propTypes = PropTypes;\n\nconst PolicyDescription = ({ profile }) => (\n    <React.Fragment>\n        <TextList component={TextListVariants.dl}>\n            <Dt>\n                <Text className='ins-c-non-bold-h2'>\n                    Policy details\n                </Text>\n            </Dt>\n            <Dt>\n                Operating system\n            </Dt>\n            <Dd>\n                RHEL { profile.majorOsVersion }\n            </Dd>\n            <Dt>\n                Compliance threshold\n            </Dt>\n            <Dd>\n                { fixedPercentage(profile.complianceThreshold, 1) }\n            </Dd>\n            <Dt>\n                Business objective\n            </Dt>\n            <Dd>\n                { profile.businessObjective ? profile.businessObjective.title : '--' }\n            </Dd>\n        </TextList>\n        <Link to={'/scappolicies/' + profile.policy.id} >\n            View policy\n        </Link>\n    </React.Fragment>\n);\n\nPolicyDescription.propTypes = {\n    profile: propTypes.shape({\n        id: propTypes.string,\n        complianceThreshold: propTypes.number,\n        businessObjective: propTypes.object,\n        majorOsVersion: propTypes.string,\n        policy: propTypes.shape({\n            id: propTypes.string\n        }),\n        benchmark: propTypes.shape({\n            version: propTypes.string\n        })\n    })\n};\n\nconst ReportDetailsDescription = ({ profile }) => (\n    <TextContent className='policy-details'>\n        <PolicyDescription { ...{ profile }} />\n    </TextContent>\n);\n\nReportDetailsDescription.propTypes = {\n    profile: propTypes.object\n};\n\nexport default ReportDetailsDescription;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport {\n    Progress, ProgressVariant\n} from '@patternfly/react-core/dist/js/components/Progress';\n\nconst ProgressBar = ({ percent, failed }) => {\n    let variant;\n    let title;\n\n    if (percent === 100) {\n        title = 'Success';\n        variant = ProgressVariant.success;\n    } else if (failed) {\n        title = 'Error';\n        variant = ProgressVariant.danger;\n    } else {\n        title = 'Progress';\n        variant = ProgressVariant.info;\n    }\n\n    return <Progress\n        id={'finished-create-policy'}\n        value={percent}\n        title={title}\n        variant={variant}\n        className='wizard-progress-bar'\n    />;\n};\n\nProgressBar.propTypes = {\n    percent: propTypes.number,\n    failed: propTypes.bool\n};\n\nexport default ProgressBar;\n","import React from 'react';\nimport { useLocation, useHistory } from 'react-router-dom';\nimport propTypes from 'prop-types';\nimport { Tabs } from '@patternfly/react-core';\nimport { useAnchor } from 'Utilities/Router';\n\nexport const ContentTab = ({ children }) => (children);\n\nconst useAnchorLevels = (defaultAnchor, level) => {\n    const anchor = useAnchor(defaultAnchor);\n    const levels = anchor.split('|');\n    const currentAnchor = levels[level] || defaultAnchor;\n\n    return {\n        levels,\n        currentAnchor\n    };\n};\n\nconst TabSwitcher = (props) => (\n    props.children.map((tab) => (\n        tab.props.eventKey === props.activeKey ? tab : undefined\n    )).filter((c) => (!!c))\n);\n\nTabSwitcher.propTypes = {\n    activeTab: propTypes.number,\n    children: propTypes.node\n};\n\nexport const RoutedTabSwitcher = ({ children, defaultTab, level }) => {\n    const { currentAnchor } = useAnchorLevels(defaultTab, level);\n\n    return children.map((tab) => (\n        tab.props.eventKey === currentAnchor ? tab : undefined\n    )).filter((c) => (!!c));\n};\n\nRoutedTabSwitcher.propTypes = {\n    children: propTypes.node,\n    defaultTab: propTypes.string,\n    level: propTypes.number\n};\n\nRoutedTabSwitcher.defaultProps = {\n    level: 0\n};\n\nexport const RoutedTabs = ({ children, defaultTab, level, ...props }) => {\n    const { push } = useHistory();\n    const { pathname, state } = useLocation();\n    const { currentAnchor, levels } = useAnchorLevels(defaultTab, level);\n    const handleTabSelect = (e, eventKey) => {\n        e.preventDefault();\n        const tabToActivate = eventKey.replace('#', '');\n        let tabAnchor = levels;\n        tabAnchor[level] = tabToActivate;\n\n        push({\n            state,\n            to: pathname,\n            hash: tabAnchor.slice(0, (level + 1)).join('|')\n        });\n    };\n\n    return <Tabs\n        { ...props }\n        onSelect={ handleTabSelect }\n        activeKey={ currentAnchor }>\n        { children }\n    </Tabs>;\n};\n\nRoutedTabs.defaultProps = {\n    level: 0\n};\n\nRoutedTabs.propTypes = {\n    children: propTypes.node,\n    defaultTab: propTypes.string,\n    level: propTypes.number\n};\n\nexport default TabSwitcher;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport {\n    ErrorPage\n} from 'PresentationalComponents';\n\nexport const StateViewPart = ({ children }) => (children);\n\nconst props = {\n    stateValues: propTypes.object,\n    children: propTypes.node\n};\n\nexport const StateView = ({ stateValues, children }) => (\n    children.flatMap((c) => (c)).filter((child) => (\n        stateValues[child.props.stateKey]\n    ))\n);\n\nStateView.propTypes = props;\n\nexport const StateViewWithError = ({ stateValues, children }) => (\n    <StateView stateValues={ stateValues }>\n        <StateViewPart key='error-state' stateKey='error'>\n            <ErrorPage error={ stateValues.error } />\n        </StateViewPart>\n        { children }\n    </StateView>\n);\n\nStateViewWithError.propTypes = props;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport {\n    Tooltip,\n    TooltipPosition\n} from '@patternfly/react-core';\nimport {\n    WarningText\n} from 'PresentationalComponents';\n\nconst WARNING_TEXT = 'Policies without systems will not have reports.';\n\nconst WithOptionalToolTip = ({ showTooltip, children }) => (\n    showTooltip ? <Tooltip\n        position={ TooltipPosition.bottom }\n        content={ WARNING_TEXT }>\n        { children }\n    </Tooltip> : children\n);\n\nWithOptionalToolTip.propTypes = {\n    showTooltip: propTypes.bool,\n    children: propTypes.node\n};\n\nconst SystemsCountWarning = ({ count, variant }) => {\n    let text;\n\n    switch (variant) {\n        case 'count':\n            text = count;\n            break;\n        case 'compact':\n            text = 'No Systems';\n            break;\n        case 'full':\n            text = WARNING_TEXT;\n            break;\n        default:\n            text = count;\n    }\n\n    return <WithOptionalToolTip showTooltip={ variant === 'count' || variant === 'compact' }>\n        <WarningText>\n            { text }\n        </WarningText>\n    </WithOptionalToolTip>;\n};\n\nSystemsCountWarning.defaultProps = {\n    variant: 'compact'\n};\n\nSystemsCountWarning.propTypes = {\n    count: propTypes.number.isRequired,\n    variant: propTypes.string\n};\n\nexport { WARNING_TEXT };\nexport default SystemsCountWarning;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport {\n    Text\n} from '@patternfly/react-core';\nimport {\n    ExclamationTriangleIcon\n} from '@patternfly/react-icons';\n\nconst WarningText = ({ children }) => (\n    <React.Fragment>\n        <ExclamationTriangleIcon className='ins-u-warning'/>\n        <Text component=\"span\" className='ins-c-warning-text'>\n            &nbsp;{ children }\n        </Text>\n    </React.Fragment>\n);\n\nWarningText.propTypes = {\n    children: propTypes.node\n};\n\nexport default WarningText;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst BackgroundLink = ({\n    to, hash, children, state: desiredState, backgroundLocation, ...props\n}) => {\n    const currentLocation = useLocation();\n    const background = { ...currentLocation, ...backgroundLocation };\n    const state = { ...desiredState, background };\n\n    return <Link\n        to={{ pathname: to, state, hash }}\n        { ...props }>\n        { children }\n    </Link>;\n};\n\nBackgroundLink.propTypes = {\n    backgroundLocation: propTypes.object,\n    children: propTypes.node,\n    hash: propTypes.string,\n    state: propTypes.object,\n    to: propTypes.string.isRequired\n};\n\nexport default BackgroundLink;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Link as ReactRouterLink } from 'react-router-dom';\nimport { BreadcrumbItem } from '@patternfly/react-core';\n\nconst RouterLink = ({ href, ...props }) => (\n    <ReactRouterLink { ...props } to={ href } />\n);\n\nRouterLink.propTypes = {\n    href: propTypes.string\n};\n\nconst BreadcrumbLinkItem = ({ children, ...props }) => (\n    <BreadcrumbItem { ...props } component={ RouterLink }>\n        { children}\n    </BreadcrumbItem>\n);\n\nBreadcrumbLinkItem.propTypes = {\n    children: propTypes.node\n};\n\nexport default BreadcrumbLinkItem;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { TextContent, Text, Progress } from '@patternfly/react-core';\nimport { Link } from 'react-router-dom';\nimport { PolicyPopover, GreySmallText, UnsupportedSSGVersion } from 'PresentationalComponents';\n\nexport const Name = (profile) => (\n    <TextContent>\n        <Link to={'/reports/' + profile.id} style={ { marginRight: '.5rem' }}>\n            { profile.policy?.name }\n        </Link>\n        <React.Fragment>\n            <PolicyPopover { ...{ profile, position: 'right' } } />\n            <GreySmallText>{ profile.policyType }</GreySmallText>\n        </React.Fragment>\n    </TextContent>\n);\n\nName.propTypes = {\n    profile: propTypes.object\n};\n\nexport const OperatingSystem = ({ majorOsVersion, ssgVersion, unsupportedHostCount, policy }) => {\n    const supported = unsupportedHostCount === 0;\n    ssgVersion = 'SSG: ' + ssgVersion;\n\n    return <React.Fragment>\n        RHEL { majorOsVersion }\n        { policy === null && ssgVersion && <Text>\n            <GreySmallText>\n                { supported ? ssgVersion : <UnsupportedSSGVersion>{ ssgVersion }</UnsupportedSSGVersion> }\n            </GreySmallText>\n        </Text> }\n    </React.Fragment>;\n};\n\nOperatingSystem.propTypes = {\n    majorOsVersion: propTypes.string,\n    ssgVersion: propTypes.string,\n    unsupportedHostCount: propTypes.number,\n    policy: propTypes.object\n};\n\nexport const CompliantSystems = ({ testResultHostCount = 0, compliantHostCount = 0, unsupportedHostCount = 0 }) => {\n    const tooltipText = 'Insights cannot provide a compliance score for systems running an unsupported ' +\n        'version of the SSG at the time this report was created, as the SSG version was not supported by RHEL.';\n    return <React.Fragment>\n        <Progress\n            measureLocation={ 'outside' }\n            value={ testResultHostCount ? (100 / testResultHostCount) * compliantHostCount : 0 } />\n        <GreySmallText>\n            { `${ compliantHostCount } of ${ testResultHostCount } systems ` }\n\n            { unsupportedHostCount > 0 && <UnsupportedSSGVersion { ...{ tooltipText } } style={ { marginLeft: '.5em' } }>\n                <strong className='ins-c-warning-text'>{ unsupportedHostCount } unsupported</strong>\n            </UnsupportedSSGVersion> }\n        </GreySmallText>\n    </React.Fragment>;\n};\n\nCompliantSystems.propTypes = {\n    testResultHostCount: propTypes.number,\n    compliantHostCount: propTypes.number,\n    unsupportedHostCount: propTypes.number\n};\n","import { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\n\nexport const policyNameFilter = [{\n    type: conditionalFilterType.text,\n    label: 'Policy name',\n    filter: (profiles, value) => {\n        const lowerCaseValue = value.toLowerCase();\n        return profiles.filter((profile) => (\n            [\n                profile.name,\n                profile.policy.name\n            ].join().toLowerCase().includes(lowerCaseValue)\n        ));\n    }\n}];\n\nexport const policyTypeFilter = (policyTypes) => ([{\n    type: conditionalFilterType.checkbox,\n    label: 'Policy type',\n    filter: (profiles, values) => (\n        profiles.filter(({ policyType }) => values.includes(policyType))\n    ),\n    items: policyTypes.map((policyType) => ({\n        label: policyType,\n        value: policyType\n    }))\n}]);\n\nexport const operatingSystemFilter = (operatingSystems) => ([{\n    type: conditionalFilterType.checkbox,\n    label: 'Operating system',\n    filter: (profiles, values) => (\n        profiles.filter(({ majorOsVersion }) => (\n            values.includes(majorOsVersion)\n        ))\n    ),\n    items: operatingSystems.map((operatingSystem) => ({\n        label: `RHEL ${operatingSystem}`,\n        value: operatingSystem\n    }))\n}]);\n\nexport const policyComplianceFilter = [{\n    type: conditionalFilterType.checkbox,\n    label: 'Systems meeting compliance',\n    filter: (profiles, values) => (\n        profiles.filter(({ testResultHostCount, compliantHostCount }) => {\n            const compliantHostsPercent = Math.round((100 / testResultHostCount) * compliantHostCount);\n            const matching = values.map((value) => {\n                const [min, max] = value.split('-');\n                return compliantHostsPercent >= min && compliantHostsPercent <= max;\n            }).filter((i) => (!!i));\n            return matching.length > 0;\n        })\n    ),\n    items: [\n        { label: '90 - 100%', value: '90-100' },\n        { label: '70 - 89%', value: '70-89' },\n        { label: '50 - 69%', value: '50-69' },\n        { label: 'Less than 50%', value: '0-49' }\n    ]\n}];\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Table, TableBody, TableHeader, sortable, fitContent } from '@patternfly/react-table';\nimport PrimaryToolbar from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport { emptyRows } from 'PresentationalComponents';\nimport useFilterConfig from 'Utilities/hooks/useTableTools/useFilterConfig';\nimport useTableSort from 'Utilities/hooks/useTableSort';\nimport { Name, OperatingSystem, CompliantSystems } from './Cells';\nimport { uniq } from 'Utilities/helpers';\nimport {\n    policyNameFilter, policyTypeFilter, operatingSystemFilter, policyComplianceFilter\n} from './Filters';\n\nconst ReportsTable = ({ profiles }) => {\n    const columns = [\n        {\n            title: 'Policy',\n            transforms: [sortable],\n            sortByProperty: 'name',\n            props: {\n                width: 55\n            }\n        },\n        {\n            title: 'Operating system',\n            transforms: [sortable, fitContent],\n            sortByProperty: 'majorOsVersion',\n            props: {\n                width: 20\n            }\n        },\n        {\n            title: 'Systems meeting compliance',\n            transforms: [sortable, fitContent],\n            sortByFunction: ({ testResultHostCount, compliantHostCount }) => (\n                (100 / testResultHostCount) * compliantHostCount\n            ),\n            props: {\n                width: 25\n            }\n        }\n    ];\n    const policyTypes = uniq(profiles.map(({ policyType }) => (policyType)).filter((i) => (!!i)));\n    const operatingSystems = uniq(profiles.map(({ majorOsVersion }) => (majorOsVersion)).filter((i) => (!!i)));\n    const { toolbarProps: conditionalFilter, filter } = useFilterConfig({ filters: { filterConfig: [\n        ...policyNameFilter,\n        ...policyTypes.length > 0 && policyTypeFilter(policyTypes) || [],\n        ...operatingSystems.length > 0 && operatingSystemFilter(operatingSystems) || [],\n        ...policyComplianceFilter\n    ] } });\n    const filteredProfiles = filter(profiles);\n\n    const { tableSort, sorted: sortedProfiles } = useTableSort(filteredProfiles, columns);\n    const rows = sortedProfiles.length > 0 ? sortedProfiles.map((profile) => ({\n        cells: [\n            { title: <Name { ...profile } /> },\n            { title: <OperatingSystem { ...profile } /> },\n            { title: <CompliantSystems { ...profile } /> }\n        ]\n    })) : emptyRows;\n\n    return <React.Fragment>\n        <PrimaryToolbar { ...conditionalFilter } />\n        <Table\n            aria-label='Reports'\n            ouiaId=\"ReportsTable\"\n            cells={ columns }\n            rows={ rows }\n            { ...tableSort }>\n            <TableHeader />\n            <TableBody />\n        </Table>\n    </React.Fragment>;\n};\n\nReportsTable.propTypes = {\n    profiles: propTypes.array\n};\n\nexport default ReportsTable;\n","import { useState } from 'react';\nimport { orderArrayByProp } from 'Utilities/helpers';\n\nconst useTableSort = (array, columns) => {\n    const [sortBy, setSortBy] = useState({\n        index: 0,\n        direction: 'desc'\n    });\n    const column = columns[sortBy.index];\n    const onSort = (_, index, direction) => (\n        setSortBy({\n            index,\n            direction\n        })\n    );\n\n    return {\n        tableSort: {\n            onSort,\n            sortBy\n        },\n        sorted: orderArrayByProp(\n            (column?.sortByProperty || column?.sortByFunction), array, sortBy.direction\n        )\n    };\n};\n\nexport default useTableSort;\n","import React from 'react';\nimport { Button } from '@patternfly/react-core';\nimport ComplianceEmptyState from '../ComplianceEmptyState';\nimport { BackgroundLink } from 'PresentationalComponents';\n\nconst ReportsEmptyState = () => (\n    <ComplianceEmptyState\n        title={ 'No policies are reporting' }\n        mainButton={ <BackgroundLink to='/scappolicies/new'>\n            <Button variant='primary' ouiaId=\"CreateNewPolicyButton\">Create new policy</Button>\n        </BackgroundLink> }\n    />\n);\n\nexport default ReportsEmptyState;\n","import React from 'react';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport {\n    Button,\n    Popover,\n    Text,\n    TextList,\n    TextListVariants,\n    TextListItem,\n    TextListItemVariants,\n    TextContent,\n    TextVariants\n} from '@patternfly/react-core';\nimport { fixedPercentage } from 'Utilities/TextHelper';\nimport {\n    Link\n} from 'react-router-dom';\nimport propTypes from 'prop-types';\n\nconst PolicyPopover = ({ profile, position = 'top' }) => {\n    const { policy, policyType, complianceThreshold, majorOsVersion, businessObjective } = profile;\n    return (\n        <Popover\n            { ...{ position } }\n            headerContent={\n                <TextContent>\n                    { policy?.name }\n                    <Text component={ TextVariants.small }>{ policyType }</Text>\n                </TextContent>\n            }\n            footerContent={\n                <Link to={'/scappolicies/' + policy?.id} >\n                    View policy\n                </Link>\n            }\n            bodyContent={\n                <TextContent className='policy-details'>\n                    <TextList component={TextListVariants.dl}>\n                        <TextListItem component={TextListItemVariants.dt}>\n                            Operating system\n                        </TextListItem>\n                        <TextListItem component={TextListItemVariants.dd}>\n                            RHEL { majorOsVersion }\n                        </TextListItem>\n                        <TextListItem component={TextListItemVariants.dt}>\n                            Compliance threshold\n                        </TextListItem>\n                        <TextListItem component={TextListItemVariants.dd}>\n                            { fixedPercentage(complianceThreshold, 1) }\n                        </TextListItem>\n                        { businessObjective &&\n                        <React.Fragment>\n                            <TextListItem component={TextListItemVariants.dt}>\n                                Business objective\n                            </TextListItem>\n                            <TextListItem component={TextListItemVariants.dd}>\n                                { businessObjective.title }\n                            </TextListItem>\n                        </React.Fragment> }\n                    </TextList>\n                </TextContent>\n            }\n        >\n            <Button variant=\"link\" ouiaId=\"PopoverViewPolicyLink\" isInline>\n                <OutlinedQuestionCircleIcon className='grey-icon'/>\n            </Button>\n        </Popover>\n    );\n};\n\nPolicyPopover.propTypes = {\n    profile: propTypes.object,\n    position: propTypes.string\n};\n\nexport default PolicyPopover;\n","import React, { Fragment } from 'react';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport { Tooltip } from '@patternfly/react-core';\n\nconst PolicyThresholdTooltip = () => (\n    <Tooltip\n        position='right'\n        content={\n            <Fragment>\n                The compliance threshold defines what percentage of rules must be\n                met in order for a system to be determined &quot;compliant&quot;.\n            </Fragment>\n        }\n    >\n        <span>\n            &nbsp;<OutlinedQuestionCircleIcon className='grey-icon'/>\n        </span>\n    </Tooltip>\n);\n\nexport default PolicyThresholdTooltip;\n","import React, { Fragment } from 'react';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport { Tooltip } from '@patternfly/react-core';\n\nconst PolicyBusinessObjectiveTooltip = () => (\n    <Tooltip\n        position='right'\n        content={\n            <Fragment>\n                This is an optional field that can be used to label policies that\n                are related to specific business objectives.\n            </Fragment>\n        }\n    >\n        <span>\n            &nbsp;<OutlinedQuestionCircleIcon className='grey-icon'/>\n        </span>\n    </Tooltip>\n);\n\nexport default PolicyBusinessObjectiveTooltip;\n","import React from 'react';\nimport {\n    Bullseye, EmptyState, EmptyStateBody, EmptyStateVariant, Title\n} from '@patternfly/react-core';\nimport EmptyTable from '@redhat-cloud-services/frontend-components/EmptyTable';\n\nconst NoResultsTable = () => (\n    <EmptyTable>\n        <Bullseye>\n            <EmptyState variant={ EmptyStateVariant.full }>\n                <Title headingLevel=\"h5\" size=\"lg\">\n                    No matching policies found\n                </Title>\n                <EmptyStateBody>\n                    This filter criteria matches no policies. <br /> Try changing your filter settings.\n                </EmptyStateBody>\n            </EmptyState>\n        </Bullseye>\n    </EmptyTable>\n);\n\nexport const emptyRows = [{\n    cells: [\n        {\n            title: () => (<NoResultsTable />),  // eslint-disable-line\n            props: {\n                colSpan: 3\n            }\n        }\n    ]\n}];\n\nexport default NoResultsTable;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Link, withRouter } from 'react-router-dom';\nimport { Table, TableHeader, TableBody, fitContent } from '@patternfly/react-table';\nimport { Button, Pagination, PaginationVariant, ToolbarItem, TextContent } from '@patternfly/react-core';\nimport PrimaryToolbar from '@redhat-cloud-services/frontend-components/PrimaryToolbar';\nimport TableToolbar from '@redhat-cloud-services/frontend-components/TableToolbar';\nimport { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\nimport FilterConfigBuilder from 'Utilities/hooks/useTableTools/FilterConfigBuilder/FilterConfigBuilder';\nimport {\n    BackgroundLink, GreySmallText, SystemsCountWarning, emptyRows\n} from 'PresentationalComponents';\n\nexport const PolicyNameCell = ({ profile }) => (\n    <TextContent>\n        <Link to={'/scappolicies/' + profile.id}>{ profile.policy.name }</Link>\n        <GreySmallText>{ profile.policyType }</GreySmallText>\n    </TextContent>\n);\n\nPolicyNameCell.propTypes = {\n    profile: propTypes.object\n};\n\nconst policiesToRows = (policies) => (\n    policies.map((policy) => (\n        {\n            policyId: policy.id,\n            cells: [\n                { title: <PolicyNameCell profile={policy} /> },\n                { title: `RHEL ${ policy.majorOsVersion }` },\n                { title: policy.totalHostCount > 0 ? policy.totalHostCount :\n                    <SystemsCountWarning count={ policy.totalHostCount } variant='count' /> },\n                policy.businessObjective && policy.businessObjective.title || '--',\n                `${policy.complianceThreshold}%`\n            ]\n        }\n    ))\n);\n\nexport const FILTER_CONFIGURATION = [\n    {\n        type: conditionalFilterType.text,\n        label: 'Name',\n        filter: (policies, value) => (\n            policies.filter((policy) => policy.name.includes(value))\n        )\n    }\n];\n\nexport class PoliciesTable extends React.Component {\n    filterConfigBuilder = new FilterConfigBuilder(FILTER_CONFIGURATION);\n    chipBuilder = this.filterConfigBuilder.getChipBuilder();\n    filterBuilder = this.filterConfigBuilder.getFilterBuilder();\n    columns = [\n        { title: 'Name' },\n        { title: 'Operating system' },\n        { title: 'Systems' },\n        { title: 'Business objective', transforms: [fitContent] },\n        { title: 'Compliance threshold', transforms: [fitContent] }\n    ]\n    state = {\n        page: 1,\n        itemsPerPage: 10,\n        activeFilters: {}\n    }\n\n    setPage = (_event, page) => (\n        this.changePage(page, this.state.itemsPerPage)\n    )\n\n    setPerPage = (_event, itemsPerPage) => (\n        this.changePage(1, itemsPerPage)\n    )\n\n    changePage = (page, itemsPerPage) => (\n        this.setState({\n            page,\n            itemsPerPage\n        })\n    )\n\n    paginatedPolicies = (policies) => (\n        policies.slice(\n            (this.state.page - 1) * this.state.itemsPerPage,\n            this.state.page * this.state.itemsPerPage\n        )\n    )\n\n    filteredPolicies = () => (\n        this.filterConfigBuilder.applyFilterToObjectArray(\n            this.props.policies, this.state.activeFilters\n        )\n    )\n\n    onFilterUpdate = (filter, value) => {\n        this.setState({\n            page: 1,\n            activeFilters: {\n                ...this.state.activeFilters,\n                [filter]: value\n            }\n        });\n    }\n\n    deleteFilter = (chips) => {\n        const activeFilters =  this.filterConfigBuilder.removeFilterWithChip(\n            chips, this.state.activeFilters\n        );\n        this.setState({\n            activeFilters\n        });\n    }\n\n    clearAllFilter = () => (\n        this.setState({\n            activeFilters: this.filterConfigBuilder.initialDefaultState()\n        })\n    )\n\n    onFilterDelete = (_event, chips, clearAll = false) => (\n        clearAll ? this.clearAllFilter() : this.deleteFilter(chips[0])\n    )\n\n    actionResolver = () => ([\n        {\n            title: 'Delete policy',\n            onClick: (_event, _index, { policyId }) => {\n                const policy = this.props.policies.find((policy) => (\n                    policy.id === policyId\n                ));\n                this.props.history.push(`/scappolicies/${ policyId }/delete`, {\n                    policy,\n                    background: this.props.location\n                });\n            }\n        },\n        {\n            title: 'Edit policy',\n            onClick: (_event, _index, { policyId }) => {\n                const policy = this.props.policies.find((policy) => (\n                    policy.id === policyId\n                ));\n                this.props.history.push(`/scappolicies/${ policyId }/edit`, {\n                    policy,\n                    background: this.props.location,\n                    state: { policy }\n                });\n            }\n        }\n    ]);\n\n    render() {\n        const { page, itemsPerPage } = this.state;\n        const policies = this.filteredPolicies();\n        const filterChips = this.chipBuilder.chipsFor(this.state.activeFilters);\n        const rows = policiesToRows(this.paginatedPolicies(policies));\n        const filterConfig = this.filterConfigBuilder.buildConfiguration(\n            this.onFilterUpdate,\n            this.state.activeFilters,\n            { hideLabel: true }\n        );\n        const pagination = {\n            page,\n            itemCount: policies.length,\n            dropDirection: 'down',\n            onSetPage: this.setPage,\n            onPerPageSelect: this.setPerPage,\n            perPage: itemsPerPage\n        };\n\n        return <React.Fragment>\n            <PrimaryToolbar\n                filterConfig={ filterConfig }\n                activeFiltersConfig={{\n                    filters: filterChips,\n                    onDelete: this.onFilterDelete\n                }}\n                pagination={{\n                    ...pagination,\n                    dropDirection: 'down',\n                    ouiaId: 'PoliciesCompactPagination'\n                }}>\n                <ToolbarItem>\n                    <BackgroundLink to='/scappolicies/new'>\n                        <Button variant='primary' ouiaId=\"CreateNewPolicyButton\">Create new policy</Button>\n                    </BackgroundLink>\n                </ToolbarItem>\n                <ToolbarItem>\n                    { policies.length } results\n                </ToolbarItem>\n            </PrimaryToolbar>\n            <Table\n                aria-label='policies'\n                ouiaId=\"PoliciesTable\"\n                className='compliance-policies-table'\n                cells={ this.columns }\n                actionResolver={ rows.length > 0 && this.actionResolver }\n                rows={ (rows.length === 0) ? emptyRows : rows }>\n                <TableHeader />\n                <TableBody />\n            </Table>\n            <TableToolbar isFooter className=\"ins-c-inventory__table--toolbar\">\n                <Pagination\n                    { ...pagination }\n                    dropDirection='up'\n                    ouiaId=\"PoliciesPagination\"\n                    variant={ PaginationVariant.bottom }\n                />\n            </TableToolbar>\n        </React.Fragment>;\n    }\n}\n\nPoliciesTable.propTypes = {\n    policies: propTypes.array.isRequired,\n    history: propTypes.object.isRequired,\n    location: propTypes.object.isRequired\n};\n\nPoliciesTable.defaultProps = {\n    policies: []\n};\n\nexport { policiesToRows };\n\nexport default withRouter(PoliciesTable);\n","import React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { FormGroup } from '@patternfly/react-core';\nimport { ReduxFormTextInput } from 'PresentationalComponents/ReduxFormWrappers/ReduxFormWrappers';\nimport propTypes from 'prop-types';\nimport round from 'lodash/round';\nimport { thresholdValid } from '../../SmartComponents/CreatePolicy/validate';\nimport { PolicyThresholdTooltip } from 'PresentationalComponents';\n\nexport class ProfileThresholdField extends React.Component {\n    state = {\n        validThreshold: thresholdValid(this.props.previousThreshold),\n        threshold: round(this.props.previousThreshold || 100, 1)\n    };\n\n    handleThresholdChange = (threshold) => (\n        this.setState({\n            validThreshold: thresholdValid(threshold),\n            threshold: round(threshold, 1)\n        })\n    )\n\n    render() {\n        const { threshold, validThreshold } = this.state;\n\n        return (\n            <React.Fragment>\n                <FormGroup fieldId='policy-threshold'\n                    validated={ validThreshold ? 'default' : 'error' }\n                    helperTextInvalid='Threshold has to be a number between 0 and 100'\n                    helperText=\"A value of 95% or higher is recommended\"\n                    labelIcon={ <PolicyThresholdTooltip /> }\n                    label='Compliance threshold (%)'>\n                    <Field name='complianceThreshold' id='complianceThreshold' isRequired={true}\n                        onChange={this.handleThresholdChange}\n                        validated={ validThreshold ? 'default' : 'error' }\n                        defaultValue={threshold}\n                        aria-label=\"compliance threshold\"\n                        component={ReduxFormTextInput} type='number'\n                        style={ { width: '60%', display: 'block' } } />\n                </FormGroup>\n            </React.Fragment>\n        );\n    }\n}\n\nProfileThresholdField.propTypes = {\n    previousThreshold: propTypes.number\n};\n\nexport default reduxForm({\n    form: 'policyForm',\n    destroyOnUnmount: false,\n    forceUnregisterOnUnmount: true\n})(ProfileThresholdField);\n","import React from 'react';\nimport { supportedConfigsLink } from '../UnsupportedSSGVersion/UnsupportedSSGVersion';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons';\n\nconst SupportedSSGVersionsLink = () => (\n    <a target='_blank' rel='noopener noreferrer' href={ supportedConfigsLink }>\n        Supported SSG versions <ExternalLinkAltIcon />\n    </a>\n);\n\nexport default SupportedSSGVersionsLink;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Text } from '@patternfly/react-core';\n\nconst SubPageTitle = ({ children }) => (\n    <Text\n        component='h2'\n        style={ {\n            color: 'var(--pf-global--Color--200)',\n            lineHeight: '2rem'\n        } }>\n        { children }\n    </Text>\n);\n\nSubPageTitle.propTypes = {\n    children: propTypes.node\n};\n\nexport default SubPageTitle;\n","import React from 'react';\nimport {\n    EmptyStateBody, EmptyState, EmptyStateVariant, Text, TextContent, TextVariants, Title, Bullseye\n} from '@patternfly/react-core';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons';\nimport { WARNING_TEXT } from 'PresentationalComponents';\n\nconst NoSystemsTableWithWarning = () => (\n    <Bullseye>\n        <EmptyState variant={ EmptyStateVariant.full }>\n            <Title headingLevel=\"h2\" size='lg' style={ { fontWeight: 'bold' }}>\n                No systems on this policy\n            </Title>\n            <EmptyStateBody>\n                <TextContent>\n                    <Text component={ TextVariants.p }>\n                        Add systems to this policy from the systems page\n                    </Text>\n                    <Text style={ { color: 'var(--pf-global--warning-color--100)' }}>\n                        <ExclamationTriangleIcon /> { WARNING_TEXT }\n                    </Text>\n                </TextContent>\n            </EmptyStateBody>\n        </EmptyState>\n    </Bullseye>\n);\n\nexport default NoSystemsTableWithWarning;\n","import React from 'react';\n\nconst ConditionalLink = ({ children, href, ...additionalProps }) => (\n    href && <a href={ href } { ...additionalProps }>{ children }</a> || children || ''\n);\n\nexport default ConditionalLink;\n","export const validateBenchmarkPage = (benchmark, osMajorVersion, profile) => {\n    if (benchmark && osMajorVersion && profile) {\n        return true;\n    } else {\n        return false;\n    }\n};\n\nexport const thresholdValid = (threshold) => (\n    threshold < 101 && threshold >= 0\n);\n\nexport const validateDetailsPage = (name, refId, complianceThreshold) => (\n    !name || !refId  || !complianceThreshold || !thresholdValid(complianceThreshold) ? false : true\n);\n\nexport const validateRulesPage = (selectedRuleRefIds) => (\n    selectedRuleRefIds?.length > 0\n);\n\nexport const validateSystemsPage = (systemIds) => {\n    if (systemIds) {\n        return systemIds.length > 0;\n    } else {\n        return false;\n    }\n};\n","export const isNumberRange = (value) => value && !!value.match(/\\d\\d*-\\d\\d*/);\n\nexport const fixedPercentage = (value, fixed = 0, withPercent = true) => {\n    const fixedValue = (value)?.toFixed(fixed);\n    return fixedValue ? (fixedValue + (withPercent ? '%' : '')) : 'N/A';\n};\n\nexport const pluralize = (value, singular, plural) => {\n    if (!plural) {\n        plural = singular + 's';\n    }\n\n    return (value > 1 || value === 0 ? plural : singular);\n};\n\nexport const stringToId = (string) => (\n    string.replace(' ', '').toLowerCase()\n);\n","import React from 'react';\n\nexport const uniq = (collection) => [...new Set(collection)];\n\nexport const sortingByProp = (propName, order = 'asc') => (\n    (objA, objB) => {\n        const propA = (objA && objA[propName]) || '';\n        const propB = (objB && objB[propName]) || '';\n        if (propA === propB) {\n            return 0;\n        } else if (order === 'asc') {\n            return propA < propB ? -1 : 1;\n        } else {\n            return propA < propB ? 1 : -1;\n        }\n    }\n);\n\nexport const renderComponent = (Component, props) => (\n    (_data, _id, entity) => ( // eslint-disable-line react/display-name\n        <Component { ...entity } { ...props } />\n    )\n);\n\nconst getSortable = (property, item) => {\n    if (typeof(property) === 'function') {\n        return property(item);\n    } else {\n        return item[property];\n    }\n};\n\nexport const stringToId = (string) => (\n    string.split(' ').join('').toLowerCase()\n);\n\nexport const orderArrayByProp = (property, objects, direction) => (\n    objects.sort((a, b) => {\n        if (direction === 'asc') {\n            return String(getSortable(property, a)).localeCompare(String(getSortable(property, b)));\n        } else {\n            return -String(getSortable(property, a)).localeCompare(String(getSortable(property, b)));\n        }\n    })\n);\n\nexport const orderByArray = (objectArray, orderProp, orderArray, direction) => {\n    const sortedObjectArray = orderArray.flatMap((orderKey) => (\n        objectArray.filter((item) => (item[orderProp] === orderKey))\n    ));\n    return (direction !== 'asc' ? sortedObjectArray.reverse() : sortedObjectArray);\n};\n\nexport const getProperty = (obj, path, fallback) => {\n    const parts = path.split('.');\n    const key = parts.shift();\n    if (typeof obj[key] !== 'undefined') {\n        return parts.length > 0 ?\n            getProperty(obj[key], parts.join('.'), fallback) :\n            obj[key];\n    }\n\n    return fallback;\n};\n\nexport const camelCase = (string) => (\n    string.split(/[-_\\W]+/g)\n    .map((string) => (string.trim()))\n    .map((string) => string[0].toUpperCase() + string.substring(1))\n    .join('')\n);\n","export const stringToId = (string) => (\n    string.split(' ').join('').toLowerCase()\n);\n","import { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\nimport { stringToId } from './Helpers';\n\nclass FilterBuilder {\n    constructor(filterConfig) {\n        this.filterConfig = filterConfig;\n        this.config = this.filterConfig.config;\n    }\n\n    buildFilterFilterString = (configItem, value) => {\n        const { type, filterString } = configItem;\n\n        if (type !== 'hidden' && !value) { return []; }\n\n        switch (type) {\n            case conditionalFilterType.text:\n                return [filterString(value)];\n            case conditionalFilterType.checkbox:\n                return value.map((filter) => (filterString(filter)));\n\n            case conditionalFilterType.group:\n                return filterString(value);\n\n            case 'hidden':\n                return filterString();\n\n            default:\n                return [];\n        }\n    }\n\n    combineFilterStrings = (filterStringArray) => {\n        const moreThanTwo = filterStringArray.map((f) => (f.length)).filter((fl) => (fl > 0)).length >= 2;\n        return filterStringArray.map((fs) => (fs.join(' or '))).join(moreThanTwo ? ' and ' : '');\n    }\n\n    buildFilterString = (filters) => {\n        const filterStringArray = this.config.map((configItem) => (\n            this.buildFilterFilterString(configItem, filters[stringToId(configItem.label)])\n        )).filter((f) => (f.length > 0));\n        return this.combineFilterStrings(filterStringArray);\n    }\n}\n\nexport default FilterBuilder;\n","import { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\n\nconst findWithString = (value) => (\n    (item) => (\n        String(item.value) === String(value)\n    )\n);\n\nclass ChipBuilder {\n    constructor(filterConfig) {\n        this.filterConfig = filterConfig;\n        this.config = this.filterConfig.config;\n    }\n\n    textFilterChip = (category, currentValue) => (currentValue && currentValue !== '' ? {\n        category,\n        chips: [{ name: currentValue }]\n    } : null)\n\n    checkboxFilterChip = (category, currentValue) => (currentValue && currentValue.length > 0 ? {\n        category,\n        chips: currentValue.map((value) => (\n            { name: this.filterConfig.labelForValue(value, category) }\n        ))\n    } : null)\n\n    radioFilterChip = (category, currentValue) => (currentValue && currentValue !== '' ? {\n        category,\n        chips: [{ name: this.filterConfig.labelForValue(currentValue, category) }]\n    } : null)\n\n    groupFilterChip = (category, currentValue = {}, categoryConfig) => {\n        const items = Object.keys(currentValue).flatMap((groupValue) => {\n            const group = categoryConfig.items.find(findWithString(groupValue));\n\n            return Object.keys(currentValue[groupValue]).map((itemValue) => (\n                currentValue[groupValue][itemValue] ? group?.items.find(findWithString(itemValue)) : null\n            ));\n        }).filter((v) => (!!v));\n\n        return currentValue && items.length > 0 ? {\n            category,\n            chips: items.map((item) => ({ name: item.label }))\n        } : null;\n    }\n\n    chipFor = (filter, currentValue) => {\n        const categoryConfig = this.filterConfig.getCategoryForLabel(filter);\n        const { label, type } = categoryConfig ? categoryConfig : { label: filter, type: null };\n\n        switch (type) {\n            case conditionalFilterType.text:\n                return this.textFilterChip(label, currentValue);\n\n            case conditionalFilterType.checkbox:\n                return this.checkboxFilterChip(label, currentValue);\n\n            case conditionalFilterType.radio:\n                return this.radioFilterChip(label, currentValue);\n\n            case conditionalFilterType.group:\n                return this.groupFilterChip(label, currentValue, categoryConfig);\n\n            default:\n                return null;\n        }\n    }\n\n    chipsFor = (filters) => (\n        Object.keys(filters).map((filter) => (\n            this.chipFor(filter, filters[filter])\n        )).filter((f) => (!!f))\n    )\n}\n\nexport default ChipBuilder;\n","import { conditionalFilterType } from '@redhat-cloud-services/frontend-components/ConditionalFilter';\nimport FilterBuilder from './FilterBuilder';\nimport ChipBuilder from './ChipBuilder';\nimport { stringToId } from './Helpers';\n\nconst defaultPlaceholder = (label) => (`Filter by ${ label.toLowerCase() }`);\n\nclass FilterConfigBuilder {\n    chipBuilder = null;\n    filterBuilder = null;\n\n    constructor(config) {\n        this.config = config;\n    }\n\n    addConfigItem = (item) => (\n        this.config = this.config.filter((i) => (\n            i.label !== item.label\n        )).concat(item)\n    )\n\n    getChipBuilder = (config) => {\n        if (config) {\n            this.config = config;\n        }\n\n        return this.chipBuilder = this.chipBuilder ? this.chipBuilder : new ChipBuilder(this);\n    }\n\n    getFilterBuilder = (config) => {\n        if (config) {\n            this.config = config;\n        }\n\n        return this.filterBuilder = this.filterBuilder ? this.filterBuilder : new FilterBuilder(this);\n    }\n\n    toTextFilterConfig = (item, handler, value) => ({\n        type: conditionalFilterType.text,\n        label: item.label,\n        placeholder: defaultPlaceholder(item.label),\n        id: stringToId(item.label),\n        filterValues: {\n            value,\n            [item.event || 'onChange']: (_event, selectedValues) => {\n                handler(stringToId(item.label), selectedValues);\n            }\n        }\n    });\n\n    toCheckboxFilterConfig = (item, handler, value) => ({\n        type: conditionalFilterType.checkbox,\n        label: item.label,\n        placeholder: defaultPlaceholder(item.label),\n        id: stringToId(item.label),\n        filterValues: {\n            value,\n            items: item.items,\n            onChange: (_event, selectedValues) => {\n                handler(stringToId(item.label), selectedValues);\n            }\n        }\n    });\n\n    toRadioFilterConfig = (item, handler, value) => ({\n        type: conditionalFilterType.radio,\n        label: item.label,\n        placeholder: defaultPlaceholder(item.label),\n        id: stringToId(item.label),\n        filterValues: {\n            value,\n            items: item.items,\n            onChange: (_event, selectedValues) => {\n                handler(stringToId(item.label), selectedValues);\n            }\n        }\n    });\n\n    toGroupedFilterConfig = (item, handler, value) => ({\n        type: conditionalFilterType.group,\n        label: item.label,\n        id: stringToId(item.label),\n        filterValues: {\n            selected: value,\n            onChange: (_event, selectedValues) => {\n                handler(stringToId(item.label), selectedValues);\n            },\n            groups: item.items.map((item) => ({\n                ...item,\n                type: 'checkbox',\n                items: item.items.map((subItem) => ({\n                    ...subItem,\n                    type: 'checkbox'\n                }))\n            }))\n        }\n    });\n\n    toFilterConfigItem = (item, handler, value) => {\n        switch (item.type) {\n            case conditionalFilterType.text:\n                return this.toTextFilterConfig(item, handler, value);\n\n            case conditionalFilterType.checkbox:\n                return this.toCheckboxFilterConfig(item, handler, value);\n\n            case conditionalFilterType.radio:\n                return this.toRadioFilterConfig(item, handler, value);\n\n            case conditionalFilterType.group:\n                return this.toGroupedFilterConfig(item, handler, value);\n\n            default:\n                return null;\n        }\n    };\n\n    buildConfiguration = (handler, states, props = {}, initConfig) => ({\n        ...props,\n        items: (initConfig || this.config).map((item) => (\n            this.toFilterConfigItem(item, handler, states[stringToId(item.label)])\n        )).filter((v) => (!!v))\n    });\n\n    defaultValueForFilter = (filter) => {\n        switch (filter.type) {\n            case conditionalFilterType.text:\n                return '';\n            case conditionalFilterType.checkbox:\n                return [];\n            case 'hidden':\n                return filter.default || false;\n            default:\n                return;\n        }\n    }\n\n    initialDefaultState = (defaultStates = {}, initConfig) => {\n        let initialState = {};\n        (initConfig || this.config).forEach((filter) => {\n            const filterStateName = stringToId(filter.key || filter.label);\n            initialState[filterStateName] =\n                defaultStates[filterStateName] || this.defaultValueForFilter(filter);\n        });\n\n        return initialState;\n    }\n\n    categoryLabelForValue = (value) => {\n        const category = this.config.filter((category) => (\n            category.items ? category.items.map((item) => item.value).includes(value) : false\n        ))[0];\n\n        return category ? category.label : value;\n    };\n\n    getCategoryForLabel = (query) => (\n        this.config.filter((item) => (stringToId(item.key || item.label) === stringToId(query)))[0] || {}\n    )\n\n    getItemByLabelOrValue = (query, category) => {\n        const categoryConfig = this.getCategoryForLabel(category);\n        const items = categoryConfig.type !== conditionalFilterType.group ?\n            categoryConfig.items : categoryConfig.items.flatMap((item) => (\n                item.items.map((subItem) => ({ ...subItem, parentValue: item.value }))\n            ));\n        const results = (items || []).filter((item) => (\n            item.value === query || item.label === query\n        ));\n\n        if (results.length === 1) {\n            return results[0];\n        } else if (results.length > 1) {\n            // eslint-disable-next-line no-console\n            console.info(`Multiple items found for ${query} in ${category}! Returning first one.`);\n            return results[0];\n        } else {\n            // eslint-disable-next-line no-console\n            console.info('No item found for ' + query + ' in ', category);\n        }\n    }\n\n    labelForValue = (value, category) => {\n        const item = this.getItemByLabelOrValue(value, category);\n        return item ? item.label : value;\n    };\n\n    valueForLabel = (label, category) => {\n        const item = this.getItemByLabelOrValue(label, category);\n        return item ? item.value : label;\n    };\n\n    applyFilterToObjectArray = (objects, activeFilters) => {\n        let filteredObjects = [...objects];\n\n        Object.keys(activeFilters).forEach((filter) => {\n            const category = this.getCategoryForLabel(filter);\n            const value = activeFilters[filter];\n            if ((!category || !value)) {\n                return;\n            }\n\n            if (value.length > 0 || (category.type === 'hidden' && typeof value === 'boolean')) {\n                filteredObjects = category.filter(filteredObjects, value);\n            }\n        });\n\n        return filteredObjects;\n    }\n\n    removeFilterFromFilterState = (currentState, filter) => (\n        (typeof(currentState) === 'string') ? '' :\n            currentState.filter((value) =>\n                value !== filter\n            )\n    )\n\n    removeFilterFromGroupFilterState = (currentState, filter, chipItem) => {\n        // eslint-disable-next-line\n        const { [chipItem.value]: _remove, ...newGroupState } = currentState[chipItem.parentValue];\n        return {\n            ...currentState,\n            [chipItem.parentValue]: newGroupState\n        };\n    }\n\n    removeFilterWithChip = (chips, activeFilters) => {\n        const chipCategory = chips.category;\n        const chipLabel = chips.chips[0].name;\n        const chipItem = this.getItemByLabelOrValue(chipLabel, chipCategory);\n        const chipValue = chipItem ? chipItem.value : chipLabel;\n        const stateProp = stringToId(chipCategory);\n        const currentState = activeFilters[stateProp];\n        const categoryConfig = this.getCategoryForLabel(chipCategory);\n        const isGroup = categoryConfig.type === conditionalFilterType.group;\n        const newFilterState = (isGroup ?\n            this.removeFilterFromGroupFilterState : this.removeFilterFromFilterState\n        )(currentState, chipValue, chipItem);\n\n        return {\n            ...activeFilters,\n            [stateProp]: newFilterState\n        };\n    }\n}\n\nexport default FilterConfigBuilder;\n","export const filterSelected = (items, selectedIds = []) => (\n    items.filter((item) => (\n        selectedIds.includes(item.itemId)\n    ))\n);\n","import { useEffect, useMemo, useState } from 'react';\nimport { filterSelected } from './helper';\n\nconst compileTitle = (itemsTotal, titleOption) => {\n    if (typeof titleOption === 'string') {\n        return titleOption;\n    } else if (typeof titleOption === 'function') {\n        return titleOption(itemsTotal);\n    } else {\n        return `${ itemsTotal } selected`;\n    }\n};\n\nconst checkboxState = (selectedItemsTotal, itemsTotal) => {\n    if (selectedItemsTotal === 0) {\n        return false;\n    } else if (selectedItemsTotal === itemsTotal) {\n        return true;\n    } else {\n        return null;\n    }\n};\n\nconst allItemsIncluded = (items, selection = []) => (\n    items.filter((item) => (\n        selection.includes(item)\n    )).length === items.length\n);\n\nconst selectOrUnselect = (selected) => (\n    selected ? 'Unselect' : 'Select'\n);\n\nconst checkCurrentPageSelected = (items, selectedItems) => {\n    if (selectedItems.length === 0) {\n        return false;\n    } else {\n        return allItemsIncluded(items, selectedItems);\n    }\n};\n\nconst itemIds = (items) => (items.map((item) => (item.itemId)));\nconst mergeArraysUniqly = (arrayA, arrayB) => (\n    Array.from(new Set([...arrayA, ...arrayB]))\n);\n\nexport const useBulkSelect = ({\n    total,\n    onSelect,\n    preselected,\n    itemIdsInTable,\n    itemIdsOnPage,\n    identifier = 'id'\n}) => {\n    const enableBulkSelect = !!onSelect;\n    const [selectedIds, setSelectedItemIds] = useState(preselected);\n    const selectedIdsTotal = (selectedIds || []).length;\n    const paginatedTotal = itemIdsOnPage().length;\n    const allSelected = selectedIdsTotal === total;\n    const noneSelected = selectedIdsTotal === 0;\n    const currentPageSelected = checkCurrentPageSelected(\n        itemIdsOnPage(), (selectedIds || [])\n    );\n\n    const isDisabled = total === 0;\n    const checked = checkboxState(selectedIdsTotal, total);\n    const title = compileTitle(selectedIdsTotal);\n\n    const onSelectCallback = async (func) => {\n        const newSelectedItemsIds = await func();\n        setSelectedItemIds(newSelectedItemsIds);\n        onSelect && onSelect(newSelectedItemsIds);\n    };\n\n    const selectItems = (itemIds) => (\n        mergeArraysUniqly(selectedIds, itemIds)\n    );\n\n    const unselectItems = (itemIds) => (\n        selectedIds.filter((itemId) => (\n            !itemIds.includes(itemId)\n        ))\n    );\n\n    const unselectAll = () => ([]);\n    const selectNone = () => onSelectCallback(unselectAll);\n    const selectOne = (_, selected, key, row) => onSelectCallback(() => (\n        selected ? selectItems([row[identifier]]) : unselectItems([row[identifier]])\n    ));\n\n    const selectPage = () => onSelectCallback(() => {\n        const currentPageIds = itemIdsOnPage();\n        const currentPageSelected = mergeArraysUniqly(selectedIds, currentPageIds).length === selectedIds.length;\n\n        return currentPageSelected ?\n            unselectItems(currentPageIds) : selectItems(currentPageIds);\n    });\n\n    const selectAll = () => onSelectCallback(async () => (\n        allSelected ? unselectAll() : selectItems(await itemIdsInTable())\n    ));\n\n    useEffect(() => {\n        setSelectedItemIds(preselected);\n    }, [preselected]);\n\n    return enableBulkSelect ? {\n        selectedIds,\n        selectNone,\n        tableProps: {\n            onSelect: total > 0 ? selectOne : undefined,\n            canSelectAll: false\n        },\n        toolbarProps: {\n            bulkSelect: {\n                toggleProps: { children: [title] },\n                isDisabled,\n                items: [{\n                    title: 'Select none',\n                    onClick: selectNone,\n                    props: {\n                        isDisabled: noneSelected\n                    }\n                }, {\n                    title: `${ selectOrUnselect(currentPageSelected) } page (${ paginatedTotal } items)`,\n                    onClick: selectPage\n                }, {\n                    title: `${ selectOrUnselect(allSelected) } all (${ total } items)`,\n                    onClick: selectAll\n                }],\n                checked,\n                onSelect: !isDisabled ? selectPage : undefined\n            }\n        }\n    } : {};\n};\n\nconst selectItemTransformer = (item, selectedIds) => ({\n    ...item,\n    rowProps: {\n        selected: (selectedIds || []).includes(item.itemId)\n    }\n});\n\nexport const useBulkSelectWithItems = ({\n    onSelect,\n    items: propItems,\n    filter,\n    paginator,\n    preselected,\n    setPage\n}) => {\n    const enableBulkSelect = !!onSelect;\n    const items = propItems.map((item) =>\n        selectItemTransformer(item, preselected)\n    );\n    const total = items.length;\n\n    const filteredItems = filter ? filter(items) : items;\n    const filteredTotal = filteredItems.length;\n    const filtered = filteredTotal !== total;\n\n    const paginatedItems = paginator ? paginator(filteredItems) : filteredItems;\n    const paginatedTotal = paginatedItems.length;\n\n    const allCount = filtered ? filteredTotal : total;\n\n    const setPageMemo = useMemo(() => (\n        setPage\n    ), []);\n\n    useEffect(() => {\n        if (paginatedTotal === 0) {\n            setPageMemo(-1);\n        }\n    }, [paginatedTotal, setPageMemo]);\n\n    const { selectNone, selectedIds, ...bulkSelect } = useBulkSelect({\n        total: allCount,\n        onSelect,\n        preselected,\n        itemIdsInTable: () => (filtered ? itemIds(filteredItems) : itemIds(items)),\n        itemIdsOnPage: () => (itemIds(paginatedItems)),\n        identifier: 'itemId'\n    });\n\n    return enableBulkSelect ? {\n        transformer: (item) => (selectItemTransformer(item, selectedIds)),\n        selectedItems: filterSelected(items, selectedIds),\n        selected: selectedIds,\n        clearSelection: selectNone,\n        ...bulkSelect\n    } : {};\n};\n","import React from 'react';\nimport { Switch } from '@patternfly/react-core';\nimport propTypes from 'prop-types';\n\nconst SelectedFilterSwitch = ({ isChecked, setActiveFilter }) => (\n    <Switch\n        label='Selected only'\n        isChecked={ isChecked }\n        onChange={ () => (\n            setActiveFilter('selected', !isChecked)\n        ) }\n    />\n);\n\nSelectedFilterSwitch.propTypes = {\n    isChecked: propTypes.bool,\n    setActiveFilter: propTypes.func\n};\n\nexport default SelectedFilterSwitch;\n","import React from 'react';\nimport SelectedFilterSwitch from './Components/SelectedFilterSwitch';\n\nconst useSelectedFilter = ({\n    setActiveFilter, activeFilters, selectedFilter\n}) => {\n    const enableSelectedFilter = !!selectedFilter;\n    const filterKey = 'selected';\n    const filterItem = {\n        type: 'hidden',\n        label: 'selectFilter',\n        key: filterKey,\n        default: true,\n        filter: (items, value) => {\n            return items.filter((item) => (item?.rowProps?.selected === value));\n        }\n    };\n    const isChecked = activeFilters[filterKey] === true;\n    const selectedToggle = <SelectedFilterSwitch { ...{\n        setActiveFilter,\n        isChecked\n    }  } />;\n\n    return enableSelectedFilter ? {\n        filterItem,\n        toolbarProps: {\n            dedicatedAction: selectedToggle\n        }\n    } : {};\n};\n\nexport default useSelectedFilter;\n","import { useState, useEffect, useMemo } from 'react';\nimport FilterConfigBuilder from './FilterConfigBuilder/FilterConfigBuilder';\nimport useSelectedFilter from './useSelectedFilter';\n\nconst filterValues = (activeFilters) => (\n    Object.values(activeFilters).filter((value) => {\n        if (typeof value === Object) {\n            return Object.values(value).length > 0;\n        }\n\n        if (typeof value === Array) {\n            return value.length > 0;\n        }\n\n        return !!value;\n    })\n);\n\nconst filterConfigBuilder = new FilterConfigBuilder([]);\n\nconst useFilterConfig = (options = {}) => {\n    const {\n        filters,\n        setPage,\n        selectedFilter\n    } = options;\n    const enableFilters = !!filters;\n    const { filterConfig = [], activeFilters: initialActiveFilters } = filters || {};\n    const [activeFilters, setActiveFilters] = useState(\n        filterConfigBuilder.initialDefaultState(initialActiveFilters, filterConfig)\n    );\n    const onFilterUpdate = (filter, value) => {\n        setActiveFilters({\n            ...activeFilters,\n            [filter]: value\n        });\n\n        setPage && setPage(1);\n    };\n\n    const addConfigItem = (item) => {\n        filterConfigBuilder.addConfigItem(item);\n        setActiveFilters(filterConfigBuilder.initialDefaultState(\n            activeFilters\n        ));\n    };\n\n    const clearAllFilter = () => (\n        setActiveFilters(filterConfigBuilder.initialDefaultState())\n    );\n\n    const deleteFilter = (chips) => (\n        setActiveFilters(filterConfigBuilder.removeFilterWithChip(\n            chips, activeFilters\n        ))\n    );\n    const onFilterDelete = (_event, chips, clearAll = false) => (\n        clearAll ? clearAllFilter() : deleteFilter(chips[0])\n    );\n\n    const filter = (items) => (\n        filterConfigBuilder.applyFilterToObjectArray(\n            items, activeFilters\n        )\n    );\n\n    const {\n        toolbarProps: selectedFilterToolbarProps, filterItem: selectFilterItem\n    } = useSelectedFilter({\n        activeFilters,\n        setActiveFilter: onFilterUpdate,\n        selectedFilter\n    });\n\n    const activeFilterValues = useMemo(() => (\n        filterValues(activeFilters)\n    ), [activeFilters]);\n\n    const filterConfigWithSelected = [...filterConfig, ...(selectFilterItem ? [selectFilterItem] : [])];\n\n    useEffect(() => {\n        filterConfigBuilder.config = [];\n        filterConfigWithSelected.filter((v) => (!!v)).forEach(addConfigItem);\n        setActiveFilters(filterConfigBuilder.initialDefaultState(\n            initialActiveFilters || []\n        ), filterConfig);\n\n        return () => {\n            filterConfigBuilder.config = [];\n        };\n    }, []);\n\n    return enableFilters ? {\n        filter,\n        selectedFilterToolbarProps,\n        toolbarProps: {\n            filterConfig: filterConfigBuilder.buildConfiguration(\n                onFilterUpdate,\n                activeFilters,\n                {},\n                filterConfigWithSelected\n            ),\n            activeFiltersConfig: {\n                filters: filterConfigBuilder.getChipBuilder(filterConfigWithSelected).chipsFor(activeFilters),\n                onDelete: onFilterDelete\n            }\n        },\n        setActiveFilter: onFilterUpdate,\n        activeFilters,\n        activeFilterValues,\n        addConfigItem,\n        filterConfigBuilder,\n        filterString: () => filterConfigBuilder.getFilterBuilder(filterConfigWithSelected).buildFilterString(activeFilters)\n    } : {};\n};\n\nexport default useFilterConfig;\n","export const profilesRulesFailed = (profiles) => (\n    profiles.flatMap(profile => profile.rules && profile.rules.filter(rule => !rule.compliant))\n);\n\nexport const profilesRulesPassed = (profiles) => (\n    profiles.flatMap(profile => profile.rules && profile.rules.filter(rule => rule.compliant))\n);\n\nexport const systemRulesPassed = (system) => (\n    system.testResultProfiles ? profilesRulesPassed(system.testResultProfiles) : []\n);\n\nexport const systemRulesFailed = (system) => (\n    system.testResultProfiles ? profilesRulesFailed(system.testResultProfiles) : []\n);\n\nexport const systemSupportedByProfiles = (profiles = []) => (\n    profiles.reduce((acc, profile) => acc && !!profile.supported, true)\n);\n\nexport const systemsWithRuleObjectsFailed = (systems) => (\n    systems.map(system => (\n        {\n            ...system,\n            ruleObjectsFailed: systemRulesFailed(system),\n            supported: systemSupportedByProfiles(system.testResultProfiles),\n            profiles: system.testResultProfiles\n        }\n    ))\n);\n\nexport const toRulesArrayWithProfile = (profilesWithRules) => (\n    profilesWithRules.flatMap((profileWithRules) => (\n        profileWithRules.rules.map((rule) => {\n            const identifier = rule.identifier && JSON.parse(rule.identifier);\n            return {\n                ...rule,\n                references: rule.references ? JSON.parse(rule.references) : [],\n                identifier: identifier && identifier.label ? identifier : null,\n                profile: profileWithRules.profile\n            };\n        })\n    ))\n);\n"],"sourceRoot":""}