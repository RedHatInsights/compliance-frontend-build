{"version":3,"sources":["webpack:///./src/SmartComponents/PolicyDetails/PolicyDetails.scss","webpack:///./src/SmartComponents/PolicyDetails/PolicyRulesTab.js","webpack:///./src/SmartComponents/PolicyDetails/PolicySystemsTab.js","webpack:///./src/SmartComponents/PolicyDetails/PolicyMultiversionRules.js","webpack:///./src/SmartComponents/PolicyDetails/PolicyDetails.scss?4376","webpack:///./src/SmartComponents/PolicyDetails/PolicyDetails.js","webpack:///./node_modules/@patternfly/react-core/dist/js/components/Breadcrumb/Breadcrumb.js","webpack:///./node_modules/@patternfly/react-core/dist/js/components/Page/PageSection.js"],"names":["exports","___CSS_LOADER_API_IMPORT___","push","module","i","PolicyRulesTab","loading","policy","Fragment","Alert","variant","isInline","title","PageSection","PageSectionVariants","light","Text","component","TextVariants","p","benchmark","version","remediationsEnabled","columns","selectRulesTableColumns","profileRules","profile","refId","name","rules","propTypes","bool","shape","string","array","object","PolicySystemsTab","systemTableProps","newInventory","useFeature","showSsgVersions","InvCmp","InventoryTable","SystemsTable","query","GET_SYSTEMS","policyId","id","defaultFilter","showActions","key","props","width","isStatic","renderFunc","to","pathname","_name","_id","SSGVersion","complianceThreshold","isRequired","number","PolicyMultiversionRules","profiles","level","defaultTab","ssgVersion","map","Tab","ssg_version","TabTitleText","Label","color","length","eventKey","options","locals","MULTIVERSION_QUERY","gql","QUERY","PolicyDetails","route","multiversionTabs","useParams","policy_id","location","useLocation","anchor","useAnchor","useQuery","variables","data","error","refetch","undefined","external","message","useEffect","useTitleEntity","stateValues","stateKey","PageHeader","Main","Spinner","className","Breadcrumb","BreadcrumbItem","isActive","Grid","gutter","GridItem","xl2","xl","lg","md","sm","state","hash","backgroundLocation","Button","aria-label","Object","defineProperty","value","tslib_1","React","__importStar","breadcrumb_1","__importDefault","react_styles_1","helpers_1","_a","children","ariaLabel","ouiaId","ouiaSafe","__rest","ouiaProps","useOUIAProps","displayName","createElement","assign","css","default","breadcrumb","breadcrumbList","Children","child","index","showDivider","isValidElement","cloneElement","PageSectionTypes","page_1","util_1","variantType","pageMainSection","nav","pageMainNav","variantStyle","modifiers","dark","dark_200","darker","dark_100","type","padding","isFilled","isWidthLimited","sticky","hasShadowTop","hasShadowBottom","hasOverflowScroll","formatBreakpointMods","noFill","fill","limitWidth","stickyTop","stickyBottom","shadowTop","shadowBottom","overflowScroll","pageMainBody"],"mappings":"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","file":"js/PolicyDetails-511c271b8a94f7043f97.js","sourcesContent":["// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".threshold-tooltip {\\n  margin-bottom: var(--pf-global--spacer--md); }\\n\\n.grey-icon {\\n  color: var(--pf-global--Color--200); }\\n\\n.policy-description {\\n  padding-top: 10px; }\\n\", \"\"]);\n// Exports\nmodule.exports = exports;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Alert, Text, TextVariants, PageSection, PageSectionVariants } from '@patternfly/react-core';\nimport { SystemRulesTable, selectRulesTableColumns } from '@redhat-cloud-services/frontend-components-inventory-compliance';\n\nconst PolicyRulesTab = ({ loading, policy }) => (\n    <React.Fragment>\n        <Alert variant=\"info\" isInline title=\"Rule editing coming soon\" />\n        <PageSection variant={PageSectionVariants.light}>\n            <Text component={TextVariants.p}>\n                <strong>What rules are shown on this list?&nbsp;</strong>\n                This view shows rules that are from the latest SSG version ({ policy.benchmark.version }).\n                If you are using a different version of SSG for systems in this policy,\n                those rules will be different and can be viewed on the systems details page.\n            </Text>\n        </PageSection>\n        <SystemRulesTable\n            remediationsEnabled={false}\n            columns={ selectRulesTableColumns(['Rule', 'Severity', 'Ansible']) }\n            loading={ loading }\n            profileRules={[{\n                profile: { refId: policy.refId, name: policy.name },\n                rules: policy.rules\n            }]}\n        />\n    </React.Fragment>\n);\n\nPolicyRulesTab.propTypes = {\n    loading: propTypes.bool,\n    policy: propTypes.shape({\n        name: propTypes.string,\n        refId: propTypes.string,\n        rules: propTypes.array,\n        benchmark: propTypes.object\n    })\n};\n\nexport default PolicyRulesTab;\n","/* eslint-disable react/display-name */\nimport React from 'react';\nimport propTypes from 'prop-types';\nimport { InventoryTable, SystemsTable } from 'SmartComponents';\nimport { GET_SYSTEMS } from '../SystemsTable/constants';\nimport { Link } from 'react-router-dom';\nimport { Cells } from '@/SmartComponents/SystemsTable/SystemsTable';\nimport useFeature from 'Utilities/hooks/useFeature';\n\nconst PolicySystemsTab = ({ policy, systemTableProps }) => {\n    const newInventory = useFeature('newInventory');\n    let showSsgVersions = useFeature('showSsgVersions');\n    const InvCmp = newInventory ? InventoryTable : SystemsTable;\n\n    return (\n        <InvCmp\n            query={GET_SYSTEMS}\n            policyId={ policy.id }\n            defaultFilter={`policy_id = ${policy.id}`}\n            showActions={ false }\n            remediationsEnabled={ false }\n            columns={[{\n                key: 'facts.compliance.display_name',\n                title: 'Name',\n                props: {\n                    width: 40, isStatic: true\n                },\n                ...newInventory && {\n                    key: 'display_name',\n                    renderFunc: (name, id) => <Link to={{ pathname: `/systems/${id}` }}> {name} </Link>\n                }\n            }, ...showSsgVersions ? [{\n                key: 'facts.compliance',\n                title: 'SSG version',\n                renderFunc: (_name, _id, profile) => (\n                    <Cells.SSGVersion { ...{ profile } } />\n                )\n            }] : []]}\n            complianceThreshold={ policy.complianceThreshold }\n            { ...systemTableProps }\n        />\n    );\n};\n\nPolicySystemsTab.propTypes = {\n    policy: propTypes.shape({\n        id: propTypes.string.isRequired,\n        complianceThreshold: propTypes.number.isRequired\n    }),\n    systemTableProps: propTypes.object\n};\n\nexport default PolicySystemsTab;\n","import React from 'react';\nimport propTypes from 'prop-types';\nimport { Alert, Label, Tab, TabTitleText, PageSection, PageSectionVariants } from '@patternfly/react-core';\nimport { SystemRulesTable, selectRulesTableColumns } from '@redhat-cloud-services/frontend-components-inventory-compliance';\nimport { RoutedTabs } from 'PresentationalComponents';\n\nconst PolicyMultiversionRules = ({ policy: { policy: { profiles } } }) => (\n    <React.Fragment>\n        <Alert variant=\"info\" isInline title=\"Rule editing coming soon\" />\n        <PageSection variant={ PageSectionVariants.light }>\n            <RoutedTabs level={ 1 } defaultTab={ profiles[0].ssgVersion }>\n                {\n                    profiles.map((profile) => (\n                        <Tab\n                            key={ profile.ssg_version }\n                            title={\n                                <TabTitleText>\n                                    <span>SSG { profile.ssgVersion + ' ' }</span>\n                                    <Label color=\"blue\">{ profile.rules.length }</Label>\n                                </TabTitleText>\n                            }\n                            eventKey={ profile.ssgVersion }>\n                            <SystemRulesTable\n                                remediationsEnabled={false}\n                                columns={ selectRulesTableColumns(['Rule', 'Severity', 'Ansible']) }\n                                profileRules={[{\n                                    profile: { ...profile },\n                                    rules: profile.rules\n                                }]} />\n                        </Tab>\n                    ))\n                }\n            </RoutedTabs>\n        </PageSection>\n    </React.Fragment>\n);\n\nPolicyMultiversionRules.propTypes = {\n    policy: propTypes.object.isRequired\n};\n\nexport default PolicyMultiversionRules;\n","import api from \"!../../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n            import content from \"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/lib/loader.js??ref--5-2!./PolicyDetails.scss\";\n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\n\nexport default content.locals || {};","import React, { Fragment, useEffect } from 'react';\nimport propTypes from 'prop-types';\nimport gql from 'graphql-tag';\nimport { useParams, useLocation } from 'react-router-dom';\nimport { useQuery } from '@apollo/react-hooks';\nimport { Breadcrumb, BreadcrumbItem, Button, Grid, GridItem, Tab } from '@patternfly/react-core';\nimport {\n    PageHeader, PageHeaderTitle, Main, Spinner\n} from '@redhat-cloud-services/frontend-components';\nimport {\n    PolicyDetailsDescription, PolicyDetailsContentLoader, RoutedTabSwitcher as TabSwitcher, ContentTab,\n    StateViewWithError, StateViewPart, RoutedTabs, BreadcrumbLinkItem, BackgroundLink\n} from 'PresentationalComponents';\nimport { useAnchor } from 'Utilities/Router';\nimport useFeature from 'Utilities/hooks/useFeature';\nimport { useTitleEntity } from 'Utilities/hooks/useDocumentTitle';\nimport '@/Charts.scss';\nimport PolicyRulesTab from './PolicyRulesTab';\nimport PolicySystemsTab from './PolicySystemsTab';\nimport PolicyMultiversionRules from './PolicyMultiversionRules';\nimport './PolicyDetails.scss';\n\nexport const MULTIVERSION_QUERY = gql`\nquery Profile($policyId: String!){\n    profile(id: $policyId) {\n        id\n        name\n        refId\n        external\n        description\n        totalHostCount\n        compliantHostCount\n        complianceThreshold\n        majorOsVersion\n        lastScanned\n        policyType\n        policy {\n            id\n            name\n            refId\n            profiles {\n                ssgVersion\n                name\n                refId\n                rules {\n                    title\n                    severity\n                    rationale\n                    refId\n                    description\n                    remediationAvailable\n                    identifier\n                }\n            }\n        }\n        businessObjective {\n            id\n            title\n        }\n        hosts {\n            id\n        }\n        benchmark {\n            id\n            title\n            version\n        }\n    }\n}\n`;\n\nexport const QUERY = gql`\nquery Profile($policyId: String!){\n    profile(id: $policyId) {\n        id\n        name\n        refId\n        external\n        description\n        totalHostCount\n        compliantHostCount\n        complianceThreshold\n        majorOsVersion\n        lastScanned\n        policyType\n        policy {\n            id\n            name\n        }\n        businessObjective {\n            id\n            title\n        }\n        hosts {\n            id\n        }\n        rules {\n            title\n            severity\n            rationale\n            refId\n            description\n            remediationAvailable\n            identifier\n        }\n        benchmark {\n            id\n            title\n            version\n        }\n    }\n}\n`;\n\nexport const PolicyDetails = ({ route }) => {\n    const defaultTab = 'details';\n    const multiversionTabs = useFeature('multiversionTabs');\n    const { policy_id: policyId } = useParams();\n    const location = useLocation();\n    const anchor = useAnchor();\n    let { data, error, loading, refetch } = useQuery((multiversionTabs ? MULTIVERSION_QUERY : QUERY), {\n        variables: { policyId }\n    });\n    let policy = data && !loading ? data.profile : undefined;\n\n    if (policy && policy.external) {\n        error = { message: 'This is an external SCAP policy.' };\n        data = undefined;\n        loading = undefined;\n    }\n\n    useEffect(() => {\n        refetch();\n    }, [location]);\n\n    useTitleEntity(route, policy?.name);\n\n    return <StateViewWithError stateValues={ { error, data, loading } }>\n        <StateViewPart stateKey='loading'>\n            <PageHeader><PolicyDetailsContentLoader/></PageHeader>\n            <Main><Spinner/></Main>\n        </StateViewPart>\n        <StateViewPart stateKey='data'>\n            { policy && <Fragment>\n                <PageHeader className='page-header-tabs'>\n                    <Breadcrumb>\n                        <BreadcrumbLinkItem to='/scappolicies'>\n                              Policies\n                        </BreadcrumbLinkItem>\n                        <BreadcrumbItem isActive>{policy.name}</BreadcrumbItem>\n                    </Breadcrumb>\n                    <Grid gutter='lg'>\n                        <GridItem xl2={11} xl={10} lg={12} md={12} sm={12}>\n                            <PageHeaderTitle title={policy.name} />\n                        </GridItem>\n                        <GridItem className='policy-details-button' xl2={1} xl={2} lg={2} md={3} sm={3}>\n                            <BackgroundLink\n                                to={ `/scappolicies/${ policy.id }/edit` }\n                                state={ { policy } }\n                                hash={ anchor }\n                                backgroundLocation={ { hash: 'details' } }>\n                                <Button variant='secondary'>Edit policy</Button>\n                            </BackgroundLink>\n                        </GridItem>\n                    </Grid>\n                    <RoutedTabs aria-label=\"Policy Tabs\" defaultTab={ defaultTab }>\n                        <Tab title='Details' id='policy-details' eventKey='details' />\n                        <Tab title='Rules' id='policy-rules' eventKey='rules' />\n                        <Tab title='Systems' id='policy-systems' eventKey='systems' />\n                    </RoutedTabs>\n                </PageHeader>\n                <Main>\n                    <TabSwitcher defaultTab={ defaultTab }>\n                        <ContentTab eventKey='details'>\n                            <PolicyDetailsDescription policy={ policy } />\n                        </ContentTab>\n                        <ContentTab eventKey='rules'>\n                            { multiversionTabs ?\n                                <PolicyMultiversionRules policy={ policy } /> :\n                                <PolicyRulesTab policy={ policy } /> }\n                        </ContentTab>\n                        <ContentTab eventKey='systems'>\n                            <PolicySystemsTab policy={ policy } />\n                        </ContentTab>\n                    </TabSwitcher>\n                </Main>\n            </Fragment> }\n        </StateViewPart>\n    </StateViewWithError>;\n};\n\nPolicyDetails.propTypes = {\n    route: propTypes.object\n};\n\nexport default PolicyDetails;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Breadcrumb = void 0;\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nconst breadcrumb_1 = tslib_1.__importDefault(require(\"@patternfly/react-styles/css/components/Breadcrumb/breadcrumb\"));\nconst react_styles_1 = require(\"@patternfly/react-styles\");\nconst helpers_1 = require(\"../../helpers\");\nexports.Breadcrumb = (_a) => {\n    var { children = null, className = '', 'aria-label': ariaLabel = 'Breadcrumb', ouiaId, ouiaSafe = true } = _a, props = tslib_1.__rest(_a, [\"children\", \"className\", 'aria-label', \"ouiaId\", \"ouiaSafe\"]);\n    const ouiaProps = helpers_1.useOUIAProps(exports.Breadcrumb.displayName, ouiaId, ouiaSafe);\n    return (React.createElement(\"nav\", Object.assign({}, props, { \"aria-label\": ariaLabel, className: react_styles_1.css(breadcrumb_1.default.breadcrumb, className) }, ouiaProps),\n        React.createElement(\"ol\", { className: breadcrumb_1.default.breadcrumbList }, React.Children.map(children, (child, index) => {\n            const showDivider = index > 0;\n            if (React.isValidElement(child)) {\n                return React.cloneElement(child, { showDivider });\n            }\n            return child;\n        }))));\n};\nexports.Breadcrumb.displayName = 'Breadcrumb';\n//# sourceMappingURL=Breadcrumb.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PageSection = exports.PageSectionTypes = exports.PageSectionVariants = void 0;\nconst tslib_1 = require(\"tslib\");\nconst React = tslib_1.__importStar(require(\"react\"));\nconst page_1 = tslib_1.__importDefault(require(\"@patternfly/react-styles/css/components/Page/page\"));\nconst react_styles_1 = require(\"@patternfly/react-styles\");\nconst util_1 = require(\"../../helpers/util\");\nvar PageSectionVariants;\n(function (PageSectionVariants) {\n    PageSectionVariants[\"default\"] = \"default\";\n    PageSectionVariants[\"light\"] = \"light\";\n    PageSectionVariants[\"dark\"] = \"dark\";\n    PageSectionVariants[\"darker\"] = \"darker\";\n})(PageSectionVariants = exports.PageSectionVariants || (exports.PageSectionVariants = {}));\nvar PageSectionTypes;\n(function (PageSectionTypes) {\n    PageSectionTypes[\"default\"] = \"default\";\n    PageSectionTypes[\"nav\"] = \"nav\";\n})(PageSectionTypes = exports.PageSectionTypes || (exports.PageSectionTypes = {}));\nconst variantType = {\n    [PageSectionTypes.default]: page_1.default.pageMainSection,\n    [PageSectionTypes.nav]: page_1.default.pageMainNav\n};\nconst variantStyle = {\n    [PageSectionVariants.default]: '',\n    [PageSectionVariants.light]: page_1.default.modifiers.light,\n    [PageSectionVariants.dark]: page_1.default.modifiers.dark_200,\n    [PageSectionVariants.darker]: page_1.default.modifiers.dark_100\n};\nexports.PageSection = (_a) => {\n    var { className = '', children, variant = 'default', type = 'default', padding, isFilled, isWidthLimited = false, sticky, hasShadowTop = false, hasShadowBottom = false, hasOverflowScroll = false } = _a, props = tslib_1.__rest(_a, [\"className\", \"children\", \"variant\", \"type\", \"padding\", \"isFilled\", \"isWidthLimited\", \"sticky\", \"hasShadowTop\", \"hasShadowBottom\", \"hasOverflowScroll\"]);\n    return (React.createElement(\"section\", Object.assign({}, props, { className: react_styles_1.css(variantType[type], util_1.formatBreakpointMods(padding, page_1.default), variantStyle[variant], isFilled === false && page_1.default.modifiers.noFill, isFilled === true && page_1.default.modifiers.fill, isWidthLimited && page_1.default.modifiers.limitWidth, sticky === 'top' && page_1.default.modifiers.stickyTop, sticky === 'bottom' && page_1.default.modifiers.stickyBottom, hasShadowTop && page_1.default.modifiers.shadowTop, hasShadowBottom && page_1.default.modifiers.shadowBottom, hasOverflowScroll && page_1.default.modifiers.overflowScroll, className) }),\n        isWidthLimited && React.createElement(\"div\", { className: react_styles_1.css(page_1.default.pageMainBody) }, children),\n        !isWidthLimited && children));\n};\nexports.PageSection.displayName = 'PageSection';\n//# sourceMappingURL=PageSection.js.map"],"sourceRoot":""}